import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';
export class PoUploadDragDropAreaOverlayComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.areaElement = new EventEmitter();
    }
    ngAfterViewInit() {
        if (this.target) {
            this.setPosition(this.target);
        }
        this.areaElement.emit(this.DragDropAreaFixed.nativeElement);
    }
    setPosition(targetElement) {
        const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();
        const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];
        clientRectKeys.forEach(clientRectKey => {
            const clientRectValue = boundingClientRect[clientRectKey];
            this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);
        });
    }
}
PoUploadDragDropAreaOverlayComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-upload-drag-drop-area-overlay',
                template: "<div class=\"po-overlay-fixed\">\r\n  <po-upload-drag-drop-area\r\n    #DragDropAreaFixed\r\n    class=\"po-upload-drag-drop-area-overlay\"\r\n    [p-directory-compatible]=\"directoryCompatible\"\r\n    [p-disabled]=\"disabled\"\r\n    [p-literals]=\"literals\"\r\n    [p-overlay]=\"true\"\r\n  >\r\n  </po-upload-drag-drop-area>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoUploadDragDropAreaOverlayComponent.ctorParameters = () => [
    { type: Renderer2 }
];
PoUploadDragDropAreaOverlayComponent.propDecorators = {
    DragDropAreaFixed: [{ type: ViewChild, args: ['DragDropAreaFixed', { read: ElementRef, static: true },] }],
    directoryCompatible: [{ type: Input, args: ['p-directory-compatible',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    target: [{ type: Input, args: ['p-target',] }],
    areaElement: [{ type: Output, args: ['p-area-element',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLW92ZXJsYXkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWZpZWxkL3BvLXVwbG9hZC9wby11cGxvYWQtZHJhZy1kcm9wL3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5L3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBRUwsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQVN2QixNQUFNLE9BQU8sb0NBQW9DO0lBYS9DLFlBQW9CLFFBQW1CO1FBQW5CLGFBQVEsR0FBUixRQUFRLENBQVc7UUFGYixnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRXpDLENBQUM7SUFFM0MsZUFBZTtRQUNiLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQy9CO1FBQ0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFTyxXQUFXLENBQUMsYUFBeUI7UUFDM0MsTUFBTSxrQkFBa0IsR0FBRyxhQUFhLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7UUFDL0UsTUFBTSxjQUFjLEdBQUcsQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRTdFLGNBQWMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLEVBQUU7WUFDckMsTUFBTSxlQUFlLEdBQUcsa0JBQWtCLENBQUMsYUFBYSxDQUFDLENBQUM7WUFFMUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxhQUFhLEVBQUUsR0FBRyxlQUFlLElBQUksQ0FBQyxDQUFDO1FBQ3RHLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBcENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0NBQWtDO2dCQUM1QyxtV0FBOEQ7Z0JBQzlELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7WUFWQyxTQUFTOzs7Z0NBWVIsU0FBUyxTQUFDLG1CQUFtQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO2tDQUVqRSxLQUFLLFNBQUMsd0JBQXdCO3VCQUU5QixLQUFLLFNBQUMsWUFBWTt1QkFFbEIsS0FBSyxTQUFDLFlBQVk7cUJBRWxCLEtBQUssU0FBQyxVQUFVOzBCQUVoQixNQUFNLFNBQUMsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBBZnRlclZpZXdJbml0LFxyXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxyXG4gIENvbXBvbmVudCxcclxuICBFbGVtZW50UmVmLFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBJbnB1dCxcclxuICBPdXRwdXQsXHJcbiAgUmVuZGVyZXIyLFxyXG4gIFZpZXdDaGlsZFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgUG9VcGxvYWRMaXRlcmFscyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvcG8tdXBsb2FkLWxpdGVyYWxzLmludGVyZmFjZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5JyxcclxuICB0ZW1wbGF0ZVVybDogJ3BvLXVwbG9hZC1kcmFnLWRyb3AtYXJlYS1vdmVybGF5LmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9VcGxvYWREcmFnRHJvcEFyZWFPdmVybGF5Q29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQFZpZXdDaGlsZCgnRHJhZ0Ryb3BBcmVhRml4ZWQnLCB7IHJlYWQ6IEVsZW1lbnRSZWYsIHN0YXRpYzogdHJ1ZSB9KSBEcmFnRHJvcEFyZWFGaXhlZDogRWxlbWVudFJlZjtcclxuXHJcbiAgQElucHV0KCdwLWRpcmVjdG9yeS1jb21wYXRpYmxlJykgZGlyZWN0b3J5Q29tcGF0aWJsZTogYm9vbGVhbjtcclxuXHJcbiAgQElucHV0KCdwLWRpc2FibGVkJykgZGlzYWJsZWQ6IGJvb2xlYW47XHJcblxyXG4gIEBJbnB1dCgncC1saXRlcmFscycpIGxpdGVyYWxzOiBQb1VwbG9hZExpdGVyYWxzO1xyXG5cclxuICBASW5wdXQoJ3AtdGFyZ2V0JykgdGFyZ2V0OiBFbGVtZW50UmVmO1xyXG5cclxuICBAT3V0cHV0KCdwLWFyZWEtZWxlbWVudCcpIGFyZWFFbGVtZW50OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIGlmICh0aGlzLnRhcmdldCkge1xyXG4gICAgICB0aGlzLnNldFBvc2l0aW9uKHRoaXMudGFyZ2V0KTtcclxuICAgIH1cclxuICAgIHRoaXMuYXJlYUVsZW1lbnQuZW1pdCh0aGlzLkRyYWdEcm9wQXJlYUZpeGVkLm5hdGl2ZUVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRQb3NpdGlvbih0YXJnZXRFbGVtZW50OiBFbGVtZW50UmVmKSB7XHJcbiAgICBjb25zdCBib3VuZGluZ0NsaWVudFJlY3QgPSB0YXJnZXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBjb25zdCBjbGllbnRSZWN0S2V5cyA9IFsnYm90dG9tJywgJ2xlZnQnLCAnaGVpZ2h0JywgJ3JpZ2h0JywgJ3RvcCcsICd3aWR0aCddO1xyXG5cclxuICAgIGNsaWVudFJlY3RLZXlzLmZvckVhY2goY2xpZW50UmVjdEtleSA9PiB7XHJcbiAgICAgIGNvbnN0IGNsaWVudFJlY3RWYWx1ZSA9IGJvdW5kaW5nQ2xpZW50UmVjdFtjbGllbnRSZWN0S2V5XTtcclxuXHJcbiAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5EcmFnRHJvcEFyZWFGaXhlZC5uYXRpdmVFbGVtZW50LCBjbGllbnRSZWN0S2V5LCBgJHtjbGllbnRSZWN0VmFsdWV9cHhgKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=