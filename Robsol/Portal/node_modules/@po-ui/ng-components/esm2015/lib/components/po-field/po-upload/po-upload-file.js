import { PoUploadStatus } from './po-upload-status.enum';
// Classe respons√°vel pelo arquivo do PO Upload
export class PoUploadFile {
    constructor(file) {
        if (file) {
            this.name = file.name;
            this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;
            this.extension = this.getExtension(file.name);
            this.size = file.size;
            this.rawFile = file;
            this.uid = this.generateUUID();
            this.status = PoUploadStatus.None;
        }
    }
    getExtension(value) {
        if (value) {
            const extension = value.substr(value.lastIndexOf('.'));
            return extension.toLowerCase();
        }
        return '';
    }
    generateUUID() {
        function s4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
    }
    // Retorna o tamanho do arquivo em KBytes.
    getFileSize(size) {
        let kbSize = 0;
        if (size) {
            kbSize = Math.ceil(size / 1024);
        }
        return `${kbSize} KB`;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1maWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUV6RCwrQ0FBK0M7QUFDL0MsTUFBTSxPQUFPLFlBQVk7SUFvQnZCLFlBQVksSUFBUztRQUNuQixJQUFJLElBQUksRUFBRTtZQUNSLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsSUFBSSxDQUFDLElBQUksTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDO1lBQ25FLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQztTQUNuQztJQUNILENBQUM7SUFFTyxZQUFZLENBQUMsS0FBYTtRQUNoQyxJQUFJLEtBQUssRUFBRTtZQUNULE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3ZELE9BQU8sU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ2hDO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDO0lBRU8sWUFBWTtRQUNsQixTQUFTLEVBQUU7WUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsT0FBTyxDQUFDO2lCQUM3QyxRQUFRLENBQUMsRUFBRSxDQUFDO2lCQUNaLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsQixDQUFDO1FBRUQsT0FBTyxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLEdBQUcsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUM7SUFDdkYsQ0FBQztJQUVELDBDQUEwQztJQUNsQyxXQUFXLENBQUMsSUFBWTtRQUM5QixJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFFZixJQUFJLElBQUksRUFBRTtZQUNSLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztTQUNqQztRQUVELE9BQU8sR0FBRyxNQUFNLEtBQUssQ0FBQztJQUN4QixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb1VwbG9hZFN0YXR1cyB9IGZyb20gJy4vcG8tdXBsb2FkLXN0YXR1cy5lbnVtJztcclxuXHJcbi8vIENsYXNzZSByZXNwb25zw6F2ZWwgcGVsbyBhcnF1aXZvIGRvIFBPIFVwbG9hZFxyXG5leHBvcnQgY2xhc3MgUG9VcGxvYWRGaWxlIHtcclxuICAvLyBOb21lIGRvIGFycXVpdm8uXHJcbiAgcHVibGljIG5hbWU6IHN0cmluZztcclxuICAvLyBBcnF1aXZvIGJydXRvLlxyXG4gIHB1YmxpYyByYXdGaWxlOiBGaWxlO1xyXG4gIC8vIFN0YXR1cyBkZSBlbnZpbyBkbyBhcnF1aXZvLlxyXG4gIHB1YmxpYyBzdGF0dXM/OiBQb1VwbG9hZFN0YXR1cztcclxuICAvLyBJZGVudGlmaWNhZG9yIGRvIGFycXVpdm8uXHJcbiAgcHVibGljIHVpZDogc3RyaW5nO1xyXG4gIC8vIEV4dGVuc8OjbyBkbyBhcnF1aXZvLlxyXG4gIHB1YmxpYyBleHRlbnNpb246IHN0cmluZztcclxuICAvLyBUYW1hbmhvIGRvIGFycXVpdm8gZW0gYnl0ZXM7XHJcbiAgcHVibGljIHNpemU6IG51bWJlcjtcclxuXHJcbiAgLy8gcHJvcHJpZWRhZGUgcGFyYSBhdXhpbGlhciBhIGV4aWJpw6fDo28gZG8gdGV4dG8gbm8gY29tcG9uZW50ZSBwcm9ncmVzc1xyXG4gIGRpc3BsYXlOYW1lPzogc3RyaW5nO1xyXG5cclxuICAvLyBwb3JjZW50YWdlbSB1dGlsaXphZGEgcGFyYSByZXBhc3NhciBhbyBjb21wb25lbnRlIHByb2dyZXNzXHJcbiAgcGVyY2VudD86IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoZmlsZTogYW55KSB7XHJcbiAgICBpZiAoZmlsZSkge1xyXG4gICAgICB0aGlzLm5hbWUgPSBmaWxlLm5hbWU7XHJcbiAgICAgIHRoaXMuZGlzcGxheU5hbWUgPSBgJHtmaWxlLm5hbWV9IC0gJHt0aGlzLmdldEZpbGVTaXplKGZpbGUuc2l6ZSl9YDtcclxuICAgICAgdGhpcy5leHRlbnNpb24gPSB0aGlzLmdldEV4dGVuc2lvbihmaWxlLm5hbWUpO1xyXG4gICAgICB0aGlzLnNpemUgPSBmaWxlLnNpemU7XHJcbiAgICAgIHRoaXMucmF3RmlsZSA9IGZpbGU7XHJcbiAgICAgIHRoaXMudWlkID0gdGhpcy5nZW5lcmF0ZVVVSUQoKTtcclxuICAgICAgdGhpcy5zdGF0dXMgPSBQb1VwbG9hZFN0YXR1cy5Ob25lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBnZXRFeHRlbnNpb24odmFsdWU6IHN0cmluZykge1xyXG4gICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgIGNvbnN0IGV4dGVuc2lvbiA9IHZhbHVlLnN1YnN0cih2YWx1ZS5sYXN0SW5kZXhPZignLicpKTtcclxuICAgICAgcmV0dXJuIGV4dGVuc2lvbi50b0xvd2VyQ2FzZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnJztcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZ2VuZXJhdGVVVUlEKCkge1xyXG4gICAgZnVuY3Rpb24gczQoKSB7XHJcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKVxyXG4gICAgICAgIC50b1N0cmluZygxNilcclxuICAgICAgICAuc3Vic3RyaW5nKDEpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzNCgpICsgczQoKSArICctJyArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArIHM0KCkgKyBzNCgpICsgczQoKTtcclxuICB9XHJcblxyXG4gIC8vIFJldG9ybmEgbyB0YW1hbmhvIGRvIGFycXVpdm8gZW0gS0J5dGVzLlxyXG4gIHByaXZhdGUgZ2V0RmlsZVNpemUoc2l6ZTogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgIGxldCBrYlNpemUgPSAwO1xyXG5cclxuICAgIGlmIChzaXplKSB7XHJcbiAgICAgIGtiU2l6ZSA9IE1hdGguY2VpbChzaXplIC8gMTAyNCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGAke2tiU2l6ZX0gS0JgO1xyXG4gIH1cclxufVxyXG4iXX0=