import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';
export class PoChartCircularPathComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.onClick = new EventEmitter();
        this.onHover = new EventEmitter();
    }
    applyCoordinates(coordinates) {
        this.renderer.setAttribute(this.svgPath.nativeElement, 'd', coordinates);
    }
    onMouseClick() {
        const { label, data } = this.serie;
        this.onClick.emit({ label, data });
    }
    onMouseEnter() {
        const { label, data } = this.serie;
        this.onHover.emit({ label, data });
    }
}
PoChartCircularPathComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-chart-circular-path]',
                template: "<svg:path #svgPath\r\n  class=\"po-path-item\"\r\n  [class]=\"serie?.color.includes('po-color') ? serie.color : ''\"\r\n  [p-chart-tooltip]=\"serie?.tooltipLabel\"\r\n  [attr.fill]=\"serie?.color\"\r\n  (click)=\"onMouseClick()\"\r\n  (mouseenter)=\"onMouseEnter()\"\r\n  >\r\n</svg:path> \r\n"
            },] }
];
PoChartCircularPathComponent.ctorParameters = () => [
    { type: Renderer2 }
];
PoChartCircularPathComponent.propDecorators = {
    serie: [{ type: Input, args: ['p-serie',] }],
    onClick: [{ type: Output, args: ['p-on-click',] }],
    onHover: [{ type: Output, args: ['p-on-hover',] }],
    svgPath: [{ type: ViewChild, args: ['svgPath', { read: ElementRef },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtY2lyY3VsYXItcGF0aC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tY2hhcnQvcG8tY2hhcnQtY29udGFpbmVyL3BvLWNoYXJ0LWNpcmN1bGFyL3BvLWNoYXJ0LWNpcmN1bGFyLXBhdGgvcG8tY2hhcnQtY2lyY3VsYXItcGF0aC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVF6RyxNQUFNLE9BQU8sNEJBQTRCO0lBU3ZDLFlBQW9CLFFBQW1CO1FBQW5CLGFBQVEsR0FBUixRQUFRLENBQVc7UUFOakIsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFbEMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFJZCxDQUFDO0lBRTNDLGdCQUFnQixDQUFDLFdBQW1CO1FBQ2xDLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsWUFBWTtRQUNWLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUVuQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxZQUFZO1FBQ1YsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBRW5DLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7SUFDckMsQ0FBQzs7O1lBN0JGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMEJBQTBCO2dCQUNwQyxpVEFBcUQ7YUFDdEQ7OztZQVA0RCxTQUFTOzs7b0JBU25FLEtBQUssU0FBQyxTQUFTO3NCQUVmLE1BQU0sU0FBQyxZQUFZO3NCQUVuQixNQUFNLFNBQUMsWUFBWTtzQkFFbkIsU0FBUyxTQUFDLFNBQVMsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFBvQ2hhcnRQYXRoQ29vcmRpbmF0ZXMgfSBmcm9tICcuLi8uLi8uLi9pbnRlcmZhY2VzL3BvLWNoYXJ0LXBhdGgtY29vcmRpbmF0ZXMuaW50ZXJmYWNlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnW3BvLWNoYXJ0LWNpcmN1bGFyLXBhdGhdJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcG8tY2hhcnQtY2lyY3VsYXItcGF0aC5jb21wb25lbnQuc3ZnJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9DaGFydENpcmN1bGFyUGF0aENvbXBvbmVudCB7XHJcbiAgQElucHV0KCdwLXNlcmllJykgc2VyaWU6IFBvQ2hhcnRQYXRoQ29vcmRpbmF0ZXM7XHJcblxyXG4gIEBPdXRwdXQoJ3Atb24tY2xpY2snKSBvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBPdXRwdXQoJ3Atb24taG92ZXInKSBvbkhvdmVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIEBWaWV3Q2hpbGQoJ3N2Z1BhdGgnLCB7IHJlYWQ6IEVsZW1lbnRSZWYgfSkgc3ZnUGF0aDogRWxlbWVudFJlZjtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxyXG5cclxuICBhcHBseUNvb3JkaW5hdGVzKGNvb3JkaW5hdGVzOiBzdHJpbmcpIHtcclxuICAgIHRoaXMucmVuZGVyZXIuc2V0QXR0cmlidXRlKHRoaXMuc3ZnUGF0aC5uYXRpdmVFbGVtZW50LCAnZCcsIGNvb3JkaW5hdGVzKTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VDbGljaygpIHtcclxuICAgIGNvbnN0IHsgbGFiZWwsIGRhdGEgfSA9IHRoaXMuc2VyaWU7XHJcblxyXG4gICAgdGhpcy5vbkNsaWNrLmVtaXQoeyBsYWJlbCwgZGF0YSB9KTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VFbnRlcigpIHtcclxuICAgIGNvbnN0IHsgbGFiZWwsIGRhdGEgfSA9IHRoaXMuc2VyaWU7XHJcblxyXG4gICAgdGhpcy5vbkhvdmVyLmVtaXQoeyBsYWJlbCwgZGF0YSB9KTtcclxuICB9XHJcbn1cclxuIl19