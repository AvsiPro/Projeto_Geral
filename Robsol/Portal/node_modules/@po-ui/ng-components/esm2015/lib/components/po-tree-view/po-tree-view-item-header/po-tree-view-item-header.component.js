import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
export class PoTreeViewItemHeaderComponent {
    constructor() {
        this.selectable = false;
        this.expanded = new EventEmitter();
        this.selected = new EventEmitter();
    }
    get hasSubItems() {
        return !!(this.item.subItems && this.item.subItems.length);
    }
}
PoTreeViewItemHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-tree-view-item-header',
                template: "<div class=\"po-tree-view-item-header\">\r\n  <button *ngIf=\"hasSubItems\" class=\"po-tree-view-item-header-button\" (click)=\"expanded.emit($event)\">\r\n    <span\r\n      class=\"po-icon po-icon-arrow-down po-tree-view-item-header-button-icon\"\r\n      [class.po-tree-view-item-header-button-icon-transform]=\"item.expanded\"\r\n    >\r\n    </span>\r\n  </button>\r\n\r\n  <ng-container *ngIf=\"selectable; then checkboxTemplate; else labelTemplate\"></ng-container>\r\n</div>\r\n\r\n<ng-template #labelTemplate>\r\n  <span class=\"po-tree-view-item-header-label\" [class.po-tree-view-item-header-padding]=\"!hasSubItems\">\r\n    {{ item.label }}\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #checkboxTemplate>\r\n  <po-checkbox\r\n    class=\"po-tree-view-item-header-checkbox\"\r\n    [class.po-tree-view-item-header-padding]=\"!hasSubItems\"\r\n    [p-label]=\"item.label\"\r\n    [(ngModel)]=\"item.selected\"\r\n    (p-change)=\"selected.emit(item)\"\r\n  >\r\n  </po-checkbox>\r\n</ng-template>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoTreeViewItemHeaderComponent.propDecorators = {
    inputCheckbox: [{ type: ViewChild, args: ['inputCheckbox',] }],
    item: [{ type: Input, args: ['p-item',] }],
    selectable: [{ type: Input, args: ['p-selectable',] }],
    expanded: [{ type: Output, args: ['p-expanded',] }],
    selected: [{ type: Output, args: ['p-selected',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10cmVlLXZpZXcvcG8tdHJlZS12aWV3LWl0ZW0taGVhZGVyL3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFTM0csTUFBTSxPQUFPLDZCQUE2QjtJQUwxQztRQVV5QixlQUFVLEdBQVksS0FBSyxDQUFDO1FBRTdCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRTFDLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBSzNELENBQUM7SUFIQyxJQUFJLFdBQVc7UUFDYixPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdELENBQUM7OztZQWxCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMscWdDQUF3RDtnQkFDeEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7Ozs0QkFFRSxTQUFTLFNBQUMsZUFBZTttQkFFekIsS0FBSyxTQUFDLFFBQVE7eUJBRWQsS0FBSyxTQUFDLGNBQWM7dUJBRXBCLE1BQU0sU0FBQyxZQUFZO3VCQUVuQixNQUFNLFNBQUMsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBQb1RyZWVWaWV3SXRlbSB9IGZyb20gJy4uL3BvLXRyZWUtdmlldy1pdGVtL3BvLXRyZWUtdmlldy1pdGVtLmludGVyZmFjZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRyZWUtdmlldy1pdGVtLWhlYWRlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFBvVHJlZVZpZXdJdGVtSGVhZGVyQ29tcG9uZW50IHtcclxuICBAVmlld0NoaWxkKCdpbnB1dENoZWNrYm94JykgaW5wdXRDaGVja2JveDtcclxuXHJcbiAgQElucHV0KCdwLWl0ZW0nKSBpdGVtOiBQb1RyZWVWaWV3SXRlbTtcclxuXHJcbiAgQElucHV0KCdwLXNlbGVjdGFibGUnKSBzZWxlY3RhYmxlOiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIEBPdXRwdXQoJ3AtZXhwYW5kZWQnKSBleHBhbmRlZCA9IG5ldyBFdmVudEVtaXR0ZXI8TW91c2VFdmVudD4oKTtcclxuXHJcbiAgQE91dHB1dCgncC1zZWxlY3RlZCcpIHNlbGVjdGVkID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGdldCBoYXNTdWJJdGVtcygpIHtcclxuICAgIHJldHVybiAhISh0aGlzLml0ZW0uc3ViSXRlbXMgJiYgdGhpcy5pdGVtLnN1Ykl0ZW1zLmxlbmd0aCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==