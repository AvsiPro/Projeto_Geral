import { Input, Directive } from '@angular/core';
import { convertToInt } from '../../utils/util';
/**
 * @description
 *
 * O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.
 */
export class PoToolbarBaseComponent {
    constructor() {
        /** Se falso, oculta o ícone de notificações. */
        this.showNotification = true;
    }
    /**
     * @optional
     *
     * @description
     *
     * Número de notificações.
     */
    set notificationNumber(value) {
        this._notificationNumber = convertToInt(value, 0);
    }
    get notificationNumber() {
        return this._notificationNumber;
    }
    get isShowProfile() {
        return !!(this.profile || this.profileActions);
    }
}
PoToolbarBaseComponent.decorators = [
    { type: Directive }
];
PoToolbarBaseComponent.propDecorators = {
    actions: [{ type: Input, args: ['p-actions',] }],
    actionsIcon: [{ type: Input, args: ['p-actions-icon',] }],
    profile: [{ type: Input, args: ['p-profile',] }],
    profileActions: [{ type: Input, args: ['p-profile-actions',] }],
    showNotification: [{ type: Input, args: ['p-show-notification',] }],
    title: [{ type: Input, args: ['p-title',] }],
    notificationActions: [{ type: Input, args: ['p-notification-actions',] }],
    notificationNumber: [{ type: Input, args: ['p-notification-number',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10b29sYmFyL3BvLXRvb2xiYXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQWUsTUFBTSxlQUFlLENBQUM7QUFFOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBS2hEOzs7O0dBSUc7QUFFSCxNQUFNLE9BQU8sc0JBQXNCO0lBRG5DO1FBZ0RFLGdEQUFnRDtRQUNsQixxQkFBZ0IsR0FBYSxJQUFJLENBQUM7SUFrQ2xFLENBQUM7SUFsQkM7Ozs7OztPQU1HO0lBQ0gsSUFBb0Msa0JBQWtCLENBQUMsS0FBYTtRQUNsRSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsSUFBSSxrQkFBa0I7UUFDcEIsT0FBTyxJQUFJLENBQUMsbUJBQW1CLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQUksYUFBYTtRQUNmLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7O1lBbEZGLFNBQVM7OztzQkFTUCxLQUFLLFNBQUMsV0FBVzswQkErQmpCLEtBQUssU0FBQyxnQkFBZ0I7c0JBR3RCLEtBQUssU0FBQyxXQUFXOzZCQUdqQixLQUFLLFNBQUMsbUJBQW1COytCQUd6QixLQUFLLFNBQUMscUJBQXFCO29CQUczQixLQUFLLFNBQUMsU0FBUztrQ0FTZixLQUFLLFNBQUMsd0JBQXdCO2lDQVc5QixLQUFLLFNBQUMsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IGNvbnZlcnRUb0ludCB9IGZyb20gJy4uLy4uL3V0aWxzL3V0aWwnO1xyXG5cclxuaW1wb3J0IHsgUG9Ub29sYmFyQWN0aW9uIH0gZnJvbSAnLi9wby10b29sYmFyLWFjdGlvbi5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBQb1Rvb2xiYXJQcm9maWxlIH0gZnJvbSAnLi9wby10b29sYmFyLXByb2ZpbGUvcG8tdG9vbGJhci1wcm9maWxlLmludGVyZmFjZSc7XHJcblxyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tdG9vbGJhcmAgw6kgdW0gY2FiZcOnYWxobyBwYXJhIG8gdMOtdHVsbyBkYSBhcGxpY2HDp8OjbyBlIGluZm9ybWHDp8O1ZXMgZGUgdXN1w6FyaW8gZSBub3RpZmljYcOnw7VlcyBxdWFuZG8gaG91dmVyIG5lY2Vzc2lkYWRlLlxyXG4gKi9cclxuQERpcmVjdGl2ZSgpXHJcbmV4cG9ydCBjbGFzcyBQb1Rvb2xiYXJCYXNlQ29tcG9uZW50IHtcclxuICAvKipcclxuICAgKiBAb3B0aW9uYWxcclxuICAgKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogRGVmaW5lIHVtYSBsaXN0YSBkZSBhw6fDtWVzIHF1ZSBzZXLDo28gZXhpYmlkYXMgYW8gY2xpY2FyIG5vIMOtY29uZSBkZWNsYXJhZG8gZW0gYHAtYWN0aW9ucy1pY29uYC5cclxuICAgKi9cclxuICBASW5wdXQoJ3AtYWN0aW9ucycpIGFjdGlvbnM/OiBBcnJheTxQb1Rvb2xiYXJBY3Rpb24+O1xyXG5cclxuICAvKipcclxuICAgKiBAb3B0aW9uYWxcclxuICAgKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogRGVmaW5lIHVtIFvDrWNvbmVdKC9ndWlkZXMvaWNvbnMpIHBhcmEgYSBwcm9wcmllZGFkZSBgcC1hY3Rpb25zYC5cclxuICAgKlxyXG4gICAqIMOJIHBvc3PDrXZlbCB1c2FyIHF1YWxxdWVyIHVtIGRvcyDDrWNvbmVzIGRhIFtCaWJsaW90ZWNhIGRlIMOtY29uZXNdKC9ndWlkZXMvaWNvbnMpLiBjb25mb3JtZSBleGVtcGxvIGFiYWl4bzpcclxuICAgKiBgYGBcclxuICAgKiA8cG8tdG9vbGJhciBwLWFjdGlvbnMtaWNvbj1cInBvLWljb24tdXNlclwiIFtwLWFjdGlvbnNdPVwiYWN0aW9uc1wiPjwvcG8tdG9vbGJhcj5cclxuICAgKiBgYGBcclxuICAgKiBUYW1iw6ltIMOpIHBvc3PDrXZlbCB1dGlsaXphciBvdXRyYXMgZm9udGVzIGRlIMOtY29uZXMsIHBvciBleGVtcGxvIGEgYmlibGlvdGVjYSAqRm9udCBBd2Vzb21lKiwgZGEgc2VndWludGUgZm9ybWE6XHJcbiAgICogYGBgXHJcbiAgICogPHBvLXRvb2xiYXIgcC1hY3Rpb25zLWljb249XCJmYXIgZmEtY29tbWVudC1hbHRcIiBbcC1hY3Rpb25zXT1cImFjdGlvbnNcIj48L3BvLXRvb2xiYXI+XHJcbiAgICogYGBgXHJcbiAgICogT3V0cmEgb3DDp8OjbyBzZXJpYSBhIGN1c3RvbWl6YcOnw6NvIGRvIMOtY29uZSBhdHJhdsOpcyBkbyBgVGVtcGxhdGVSZWZgLCBjb25mb3JtZSBleGVtcGxvIGFiYWl4bzpcclxuICAgKiBgYGBcclxuICAgKiA8cG8tdG9vbGJhciBbcC1hY3Rpb25zLWljb25dPVwidGVtcGxhdGVcIiBbcC1hY3Rpb25zXT1cImFjdGlvbnNcIj48L3BvLXRvb2xiYXI+XHJcbiAgICpcclxuICAgKiA8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxyXG4gICAqICA8aW9uLWljb24gc3R5bGU9XCJmb250LXNpemU6IGluaGVyaXRcIiBuYW1lPVwiaGVhcnRcIj48L2lvbi1pY29uPlxyXG4gICAqIDwvbmctdGVtcGxhdGU+XHJcbiAgICogYGBgXHJcbiAgICogPiBQYXJhIG8gw61jb25lIGVucXVhZHJhciBjb3JyZXRhbWVudGUsIGRldmUtc2UgdXRpbGl6YXIgYGZvbnQtc2l6ZTogaW5oZXJpdGAgY2FzbyBvIMOtY29uZSB1dGlsaXphZG8gbsOjbyBhcGxpcXVlLW8uXHJcbiAgICpcclxuICAgKiA+IENhc28gbsOjbyBoYWphIGHDp8O1ZXMgZGVmaW5pZGFzIGVtIGBwLWFjdGlvbnNgLCBvIMOtY29uZSBuw6NvIHNlcsOhIGV4aWJpZG8uXHJcbiAgICpcclxuICAgKiBAZGVmYXVsdCBgcG8taWNvbi1tb3JlYFxyXG4gICAqL1xyXG4gIEBJbnB1dCgncC1hY3Rpb25zLWljb24nKSBhY3Rpb25zSWNvbj86IHN0cmluZyB8IFRlbXBsYXRlUmVmPHZvaWQ+O1xyXG5cclxuICAvKiogRGVmaW5lIG8gb2JqZXRvIHF1ZSBzZXLDoSBvIGNhYmXDp2FsaG8gZGEgbGlzdGEgZGUgYcOnw7VlcyBjb20gYXMgaW5mb3JtYcOnw7VlcyBkbyBwZXJmaWwuICovXHJcbiAgQElucHV0KCdwLXByb2ZpbGUnKSBwcm9maWxlPzogUG9Ub29sYmFyUHJvZmlsZTtcclxuXHJcbiAgLyoqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7VlcyBxdWUgc2Vyw6NvIGV4aWJpZGFzIGFvIGNsaWNhciBubyDDrWNvbmUgZG8gcGVyZmlsLiAqL1xyXG4gIEBJbnB1dCgncC1wcm9maWxlLWFjdGlvbnMnKSBwcm9maWxlQWN0aW9ucz86IEFycmF5PFBvVG9vbGJhckFjdGlvbj47XHJcblxyXG4gIC8qKiBTZSBmYWxzbywgb2N1bHRhIG8gw61jb25lIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xyXG4gIEBJbnB1dCgncC1zaG93LW5vdGlmaWNhdGlvbicpIHNob3dOb3RpZmljYXRpb24/OiBib29sZWFuID0gdHJ1ZTtcclxuXHJcbiAgLyoqIFTDrXR1bG8gZG8gKnRvb2xiYXIqIGUgYXBsaWNhw6fDo28uICovXHJcbiAgQElucHV0KCdwLXRpdGxlJykgdGl0bGU6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogQG9wdGlvbmFsXHJcbiAgICpcclxuICAgKiBAZGVzY3JpcHRpb25cclxuICAgKlxyXG4gICAqIExpc3RhIGRlIGHDp8O1ZXMgZGEgbm90aWZpY2HDp8Ojby5cclxuICAgKi9cclxuICBASW5wdXQoJ3Atbm90aWZpY2F0aW9uLWFjdGlvbnMnKSBub3RpZmljYXRpb25BY3Rpb25zPzogQXJyYXk8UG9Ub29sYmFyQWN0aW9uPjtcclxuXHJcbiAgcHJpdmF0ZSBfbm90aWZpY2F0aW9uTnVtYmVyPzogbnVtYmVyO1xyXG5cclxuICAvKipcclxuICAgKiBAb3B0aW9uYWxcclxuICAgKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogTsO6bWVybyBkZSBub3RpZmljYcOnw7Vlcy5cclxuICAgKi9cclxuICBASW5wdXQoJ3Atbm90aWZpY2F0aW9uLW51bWJlcicpIHNldCBub3RpZmljYXRpb25OdW1iZXIodmFsdWU6IG51bWJlcikge1xyXG4gICAgdGhpcy5fbm90aWZpY2F0aW9uTnVtYmVyID0gY29udmVydFRvSW50KHZhbHVlLCAwKTtcclxuICB9XHJcblxyXG4gIGdldCBub3RpZmljYXRpb25OdW1iZXIoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLl9ub3RpZmljYXRpb25OdW1iZXI7XHJcbiAgfVxyXG5cclxuICBnZXQgaXNTaG93UHJvZmlsZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAhISh0aGlzLnByb2ZpbGUgfHwgdGhpcy5wcm9maWxlQWN0aW9ucyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==