import { Component, EventEmitter, Input, Output } from '@angular/core';
export class PoChartBarPathComponent {
    constructor() {
        this.barClick = new EventEmitter();
        this.barHover = new EventEmitter();
    }
    trackBy(index) {
        return index;
    }
    onClick(item) {
        const selectedItem = { label: item.label, data: item.data, category: item.category };
        this.barClick.emit(selectedItem);
    }
    onMouseEnter(item) {
        const selectedItem = { label: item.label, data: item.data, category: item.category };
        this.barHover.emit(selectedItem);
    }
}
PoChartBarPathComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-chart-bar-path]',
                template: "<svg:path *ngFor=\"let item of coordinates; trackBy: trackBy\"\r\n  [p-tooltip]=\"item.tooltipLabel\"\r\n  [p-tooltip-position]=\"tooltipPosition\"\r\n  [p-append-in-body]='true'\r\n  class=\"po-chart-bar-path\"\r\n  [class]=\"color?.includes('po-color') ? color : ''\"\r\n  [attr.fill]=\"color\"\r\n  [attr.d]=\"item.coordinates\"\r\n  (mouseenter)=\"onMouseEnter(item)\"\r\n  (click)=\"onClick(item)\">\r\n</svg:path> \r\n"
            },] }
];
PoChartBarPathComponent.ctorParameters = () => [];
PoChartBarPathComponent.propDecorators = {
    color: [{ type: Input, args: ['p-color',] }],
    coordinates: [{ type: Input, args: ['p-coordinates',] }],
    tooltipPosition: [{ type: Input, args: ['p-tooltip-position',] }],
    barClick: [{ type: Output, args: ['p-bar-click',] }],
    barHover: [{ type: Output, args: ['p-bar-hover',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtYmFyLXBhdGguY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNoYXJ0L3BvLWNoYXJ0LWNvbnRhaW5lci9wby1jaGFydC1iYXIvcG8tY2hhcnQtYmFyLXBhdGgvcG8tY2hhcnQtYmFyLXBhdGguY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFRdkUsTUFBTSxPQUFPLHVCQUF1QjtJQVdsQztRQUp1QixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUVuQyxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztJQUUzQyxDQUFDO0lBRWhCLE9BQU8sQ0FBQyxLQUFLO1FBQ1gsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsT0FBTyxDQUFDLElBQTJCO1FBQ2pDLE1BQU0sWUFBWSxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVyRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsWUFBWSxDQUFDLElBQTJCO1FBQ3RDLE1BQU0sWUFBWSxHQUFHLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVyRixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7WUEvQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLG9iQUFnRDthQUNqRDs7OztvQkFFRSxLQUFLLFNBQUMsU0FBUzswQkFFZixLQUFLLFNBQUMsZUFBZTs4QkFFckIsS0FBSyxTQUFDLG9CQUFvQjt1QkFFMUIsTUFBTSxTQUFDLGFBQWE7dUJBRXBCLE1BQU0sU0FBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFBvQ2hhcnRCYXJDb29yZGluYXRlcyB9IGZyb20gJy4uLy4uLy4uL2ludGVyZmFjZXMvcG8tY2hhcnQtYmFyLWNvb3JkaW5hdGVzLmludGVyZmFjZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ1twby1jaGFydC1iYXItcGF0aF0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1jaGFydC1iYXItcGF0aC5jb21wb25lbnQuc3ZnJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9DaGFydEJhclBhdGhDb21wb25lbnQge1xyXG4gIEBJbnB1dCgncC1jb2xvcicpIGNvbG9yPzogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ3AtY29vcmRpbmF0ZXMnKSBjb29yZGluYXRlczogQXJyYXk8UG9DaGFydEJhckNvb3JkaW5hdGVzPjtcclxuXHJcbiAgQElucHV0KCdwLXRvb2x0aXAtcG9zaXRpb24nKSB0b29sdGlwUG9zaXRpb246IHN0cmluZztcclxuXHJcbiAgQE91dHB1dCgncC1iYXItY2xpY2snKSBiYXJDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG5cclxuICBAT3V0cHV0KCdwLWJhci1ob3ZlcicpIGJhckhvdmVyID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgdHJhY2tCeShpbmRleCkge1xyXG4gICAgcmV0dXJuIGluZGV4O1xyXG4gIH1cclxuXHJcbiAgb25DbGljayhpdGVtOiBQb0NoYXJ0QmFyQ29vcmRpbmF0ZXMpIHtcclxuICAgIGNvbnN0IHNlbGVjdGVkSXRlbSA9IHsgbGFiZWw6IGl0ZW0ubGFiZWwsIGRhdGE6IGl0ZW0uZGF0YSwgY2F0ZWdvcnk6IGl0ZW0uY2F0ZWdvcnkgfTtcclxuXHJcbiAgICB0aGlzLmJhckNsaWNrLmVtaXQoc2VsZWN0ZWRJdGVtKTtcclxuICB9XHJcblxyXG4gIG9uTW91c2VFbnRlcihpdGVtOiBQb0NoYXJ0QmFyQ29vcmRpbmF0ZXMpIHtcclxuICAgIGNvbnN0IHNlbGVjdGVkSXRlbSA9IHsgbGFiZWw6IGl0ZW0ubGFiZWwsIGRhdGE6IGl0ZW0uZGF0YSwgY2F0ZWdvcnk6IGl0ZW0uY2F0ZWdvcnkgfTtcclxuXHJcbiAgICB0aGlzLmJhckhvdmVyLmVtaXQoc2VsZWN0ZWRJdGVtKTtcclxuICB9XHJcbn1cclxuIl19