import { ChangeDetectorRef, Component, NgZone } from '@angular/core';
import { PoChartCircularComponent } from '../po-chart-circular.component';
export class PoChartPieComponent extends PoChartCircularComponent {
    /* istanbul ignore next */
    constructor(ngZone, changeDetector) {
        super(ngZone, changeDetector);
    }
    ngOnChanges(changes) {
        if (changes.series || changes.containerSize) {
            this.drawSeries(this.series, this.containerSize.svgHeight);
        }
    }
    calculateCoordinates(height, startRadianAngle, endRadianAngle) {
        const radius = height / 2;
        const sinAlpha = Math.sin(startRadianAngle);
        const cosAlpha = Math.cos(startRadianAngle);
        const sinBeta = Math.sin(endRadianAngle);
        const cosBeta = Math.cos(endRadianAngle);
        const startX = radius + cosAlpha * radius;
        const startY = radius + sinAlpha * radius;
        const endX = radius + cosBeta * radius;
        const endY = radius + sinBeta * radius;
        const largeArc = endRadianAngle - startRadianAngle > Math.PI;
        return [
            'M',
            startX,
            startY,
            'A',
            radius,
            radius,
            0,
            largeArc ? '1,1' : '0,1',
            endX,
            endY,
            'L',
            radius,
            radius,
            'Z'
        ].join(' ');
    }
    getTooltipLabel(data, label, tooltipLabel) {
        const dataLabel = label ? `${label}: ` : '';
        const dataValue = data.toString();
        return tooltipLabel || `${dataLabel}${dataValue}`;
    }
}
PoChartPieComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-chart-pie]',
                template: "<svg:g>\r\n  <!-- SERIES PATHS -->\r\n  <svg:g *ngFor=\"let item of seriesList; let i = index\">\r\n    <svg:g #svgPaths po-chart-circular-path\r\n      [attr.key]=\"'po-chart-circular-path-' + i\"\r\n      [p-serie]=\"item\"\r\n      (p-on-click)=\"onSerieClick($event)\"\r\n      (p-on-hover)=\"onSerieHover($event)\">\r\n    </svg:g>\r\n  </svg:g>\r\n\r\n  <!-- SERIES LABELS -->\r\n  <svg:g *ngIf=\"canDisplayLabels\">\r\n    <svg:g *ngFor=\"let item of seriesLabels; let i = index\">\r\n      <svg:g #svgLabels po-chart-circular-label\r\n        [attr.key]=\"'po-chart-circular-label-' + i\"\r\n        [p-serie]=\"item\"\r\n        [p-show-label]=\"showLabels\">\r\n      </svg:g>\r\n    </svg:g>\r\n  </svg:g>\r\n</svg:g>\r\n\r\n"
            },] }
];
PoChartPieComponent.ctorParameters = () => [
    { type: NgZone },
    { type: ChangeDetectorRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtcGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1jaGFydC9wby1jaGFydC1jb250YWluZXIvcG8tY2hhcnQtY2lyY3VsYXIvcG8tY2hhcnQtcGllL3BvLWNoYXJ0LXBpZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBRS9GLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBTTFFLE1BQU0sT0FBTyxtQkFBb0IsU0FBUSx3QkFBd0I7SUFDL0QsMEJBQTBCO0lBQzFCLFlBQVksTUFBYyxFQUFFLGNBQWlDO1FBQzNELEtBQUssQ0FBQyxNQUFNLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLGFBQWEsRUFBRTtZQUMzQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7SUFFUyxvQkFBb0IsQ0FBQyxNQUFjLEVBQUUsZ0JBQXdCLEVBQUUsY0FBc0I7UUFDN0YsTUFBTSxNQUFNLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUUxQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDNUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBRTVDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDekMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUV6QyxNQUFNLE1BQU0sR0FBRyxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQztRQUMxQyxNQUFNLE1BQU0sR0FBRyxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBQztRQUUxQyxNQUFNLElBQUksR0FBRyxNQUFNLEdBQUcsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBRyxNQUFNLEdBQUcsT0FBTyxHQUFHLE1BQU0sQ0FBQztRQUV2QyxNQUFNLFFBQVEsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUU3RCxPQUFPO1lBQ0wsR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sQ0FBQztZQUNELFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLO1lBQ3hCLElBQUk7WUFDSixJQUFJO1lBQ0osR0FBRztZQUNILE1BQU07WUFDTixNQUFNO1lBQ04sR0FBRztTQUNKLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2QsQ0FBQztJQUVTLGVBQWUsQ0FBQyxJQUFZLEVBQUUsS0FBYyxFQUFFLFlBQXFCO1FBQzNFLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzVDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVsQyxPQUFPLFlBQVksSUFBSSxHQUFHLFNBQVMsR0FBRyxTQUFTLEVBQUUsQ0FBQztJQUNwRCxDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLDR1QkFBaUQ7YUFDbEQ7OztZQVBzQyxNQUFNO1lBQXBDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIE5nWm9uZSwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBQb0NoYXJ0Q2lyY3VsYXJDb21wb25lbnQgfSBmcm9tICcuLi9wby1jaGFydC1jaXJjdWxhci5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdbcG8tY2hhcnQtcGllXScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuLi9wby1jaGFydC1jaXJjdWxhci5jb21wb25lbnQuc3ZnJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9DaGFydFBpZUNvbXBvbmVudCBleHRlbmRzIFBvQ2hhcnRDaXJjdWxhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cclxuICBjb25zdHJ1Y3RvcihuZ1pvbmU6IE5nWm9uZSwgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKSB7XHJcbiAgICBzdXBlcihuZ1pvbmUsIGNoYW5nZURldGVjdG9yKTtcclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmIChjaGFuZ2VzLnNlcmllcyB8fCBjaGFuZ2VzLmNvbnRhaW5lclNpemUpIHtcclxuICAgICAgdGhpcy5kcmF3U2VyaWVzKHRoaXMuc2VyaWVzLCB0aGlzLmNvbnRhaW5lclNpemUuc3ZnSGVpZ2h0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBjYWxjdWxhdGVDb29yZGluYXRlcyhoZWlnaHQ6IG51bWJlciwgc3RhcnRSYWRpYW5BbmdsZTogbnVtYmVyLCBlbmRSYWRpYW5BbmdsZTogbnVtYmVyKSB7XHJcbiAgICBjb25zdCByYWRpdXMgPSBoZWlnaHQgLyAyO1xyXG5cclxuICAgIGNvbnN0IHNpbkFscGhhID0gTWF0aC5zaW4oc3RhcnRSYWRpYW5BbmdsZSk7XHJcbiAgICBjb25zdCBjb3NBbHBoYSA9IE1hdGguY29zKHN0YXJ0UmFkaWFuQW5nbGUpO1xyXG5cclxuICAgIGNvbnN0IHNpbkJldGEgPSBNYXRoLnNpbihlbmRSYWRpYW5BbmdsZSk7XHJcbiAgICBjb25zdCBjb3NCZXRhID0gTWF0aC5jb3MoZW5kUmFkaWFuQW5nbGUpO1xyXG5cclxuICAgIGNvbnN0IHN0YXJ0WCA9IHJhZGl1cyArIGNvc0FscGhhICogcmFkaXVzO1xyXG4gICAgY29uc3Qgc3RhcnRZID0gcmFkaXVzICsgc2luQWxwaGEgKiByYWRpdXM7XHJcblxyXG4gICAgY29uc3QgZW5kWCA9IHJhZGl1cyArIGNvc0JldGEgKiByYWRpdXM7XHJcbiAgICBjb25zdCBlbmRZID0gcmFkaXVzICsgc2luQmV0YSAqIHJhZGl1cztcclxuXHJcbiAgICBjb25zdCBsYXJnZUFyYyA9IGVuZFJhZGlhbkFuZ2xlIC0gc3RhcnRSYWRpYW5BbmdsZSA+IE1hdGguUEk7XHJcblxyXG4gICAgcmV0dXJuIFtcclxuICAgICAgJ00nLFxyXG4gICAgICBzdGFydFgsXHJcbiAgICAgIHN0YXJ0WSxcclxuICAgICAgJ0EnLFxyXG4gICAgICByYWRpdXMsXHJcbiAgICAgIHJhZGl1cyxcclxuICAgICAgMCxcclxuICAgICAgbGFyZ2VBcmMgPyAnMSwxJyA6ICcwLDEnLFxyXG4gICAgICBlbmRYLFxyXG4gICAgICBlbmRZLFxyXG4gICAgICAnTCcsXHJcbiAgICAgIHJhZGl1cyxcclxuICAgICAgcmFkaXVzLFxyXG4gICAgICAnWidcclxuICAgIF0uam9pbignICcpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldFRvb2x0aXBMYWJlbChkYXRhOiBudW1iZXIsIGxhYmVsPzogc3RyaW5nLCB0b29sdGlwTGFiZWw/OiBzdHJpbmcpIHtcclxuICAgIGNvbnN0IGRhdGFMYWJlbCA9IGxhYmVsID8gYCR7bGFiZWx9OiBgIDogJyc7XHJcbiAgICBjb25zdCBkYXRhVmFsdWUgPSBkYXRhLnRvU3RyaW5nKCk7XHJcblxyXG4gICAgcmV0dXJuIHRvb2x0aXBMYWJlbCB8fCBgJHtkYXRhTGFiZWx9JHtkYXRhVmFsdWV9YDtcclxuICB9XHJcbn1cclxuIl19