import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
export class PoCalendarHeaderComponent {
    constructor() {
        this.hidePrevious = false;
        this.hideNext = false;
        this.previous = new EventEmitter();
        this.next = new EventEmitter();
    }
}
PoCalendarHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-calendar-header',
                template: "<div class=\"po-calendar-header\">\r\n  <span\r\n    *ngIf=\"previous?.observers && !hidePrevious\"\r\n    class=\"po-calendar-header-left po-icon po-icon-arrow-left\"\r\n    (click)=\"previous.emit()\"\r\n  >\r\n  </span>\r\n\r\n  <div class=\"po-calendar-header-title\" attr-calendar>\r\n    <ng-content></ng-content>\r\n  </div>\r\n\r\n  <span\r\n    *ngIf=\"next?.observers.length && !hideNext\"\r\n    class=\"po-calendar-header-right po-icon po-icon-arrow-right\"\r\n    (click)=\"next.emit()\"\r\n  >\r\n  </span>\r\n</div>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoCalendarHeaderComponent.ctorParameters = () => [];
PoCalendarHeaderComponent.propDecorators = {
    hidePrevious: [{ type: Input, args: ['p-hide-previous',] }],
    hideNext: [{ type: Input, args: ['p-hide-next',] }],
    previous: [{ type: Output, args: ['p-previous',] }],
    next: [{ type: Output, args: ['p-next',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2FsZW5kYXItaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1jYWxlbmRhci9wby1jYWxlbmRhci1oZWFkZXIvcG8tY2FsZW5kYXItaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2hHLE1BQU0sT0FBTyx5QkFBeUI7SUFTcEM7UUFSMEIsaUJBQVksR0FBRyxLQUFLLENBQUM7UUFFekIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztRQUV4QyxTQUFJLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztJQUVuQyxDQUFDOzs7WUFkakIsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLGtpQkFBa0Q7Z0JBQ2xELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7OzJCQUVFLEtBQUssU0FBQyxpQkFBaUI7dUJBRXZCLEtBQUssU0FBQyxhQUFhO3VCQUVuQixNQUFNLFNBQUMsWUFBWTttQkFFbkIsTUFBTSxTQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncG8tY2FsZW5kYXItaGVhZGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcG8tY2FsZW5kYXItaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9DYWxlbmRhckhlYWRlckNvbXBvbmVudCB7XHJcbiAgQElucHV0KCdwLWhpZGUtcHJldmlvdXMnKSBoaWRlUHJldmlvdXMgPSBmYWxzZTtcclxuXHJcbiAgQElucHV0KCdwLWhpZGUtbmV4dCcpIGhpZGVOZXh0ID0gZmFsc2U7XHJcblxyXG4gIEBPdXRwdXQoJ3AtcHJldmlvdXMnKSBwcmV2aW91cyA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcclxuXHJcbiAgQE91dHB1dCgncC1uZXh0JykgbmV4dCA9IG5ldyBFdmVudEVtaXR0ZXI8dm9pZD4oKTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG59XHJcbiJdfQ==