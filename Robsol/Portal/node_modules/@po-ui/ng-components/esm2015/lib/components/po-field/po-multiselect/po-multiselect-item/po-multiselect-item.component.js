import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
export class PoMultiselectItemComponent {
    constructor() {
        /** Esta propriedade indica se o campo está selecionado, indenterminate ou não. */
        this.selected = false;
        /** Evento que será disparado toda vez que o usuário marcar ou desmarcar um item. */
        this.change = new EventEmitter();
    }
    itemClicked() {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    }
}
PoMultiselectItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-multiselect-item',
                template: "<li [class.po-multiselect-item-selected]=\"selected\" (click)=\"itemClicked()\">\r\n  <a class=\"po-multiselect-item\">\r\n    <input\r\n      [checked]=\"selected\"\r\n      class=\"po-multiselect-checkbox-input\"\r\n      [class.po-multiselect-checkbox-input-indeterminate]=\"selected === null\"\r\n      [class.po-multiselect-checkbox-input-checked]=\"selected\"\r\n      type=\"checkbox\"\r\n    />\r\n\r\n    <label class=\"po-multiselect-checkbox-label po-clickable\">\r\n      {{ label }}\r\n    </label>\r\n  </a>\r\n</li>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoMultiselectItemComponent.propDecorators = {
    label: [{ type: Input, args: ['p-label',] }],
    selected: [{ type: Input, args: ['p-selected',] }],
    change: [{ type: Output, args: ['p-change',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tbXVsdGlzZWxlY3QvcG8tbXVsdGlzZWxlY3QtaXRlbS9wby1tdWx0aXNlbGVjdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhHOzs7Ozs7R0FNRztBQU1ILE1BQU0sT0FBTywwQkFBMEI7SUFMdkM7UUFTRSxrRkFBa0Y7UUFDN0QsYUFBUSxHQUFhLEtBQUssQ0FBQztRQUVoRCxvRkFBb0Y7UUFDaEUsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNbEQsQ0FBQztJQUpDLFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBbEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixraUJBQW1EO2dCQUNuRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRDs7O29CQUdFLEtBQUssU0FBQyxTQUFTO3VCQUdmLEtBQUssU0FBQyxZQUFZO3FCQUdsQixNQUFNLFNBQUMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogQ29tcG9uZW50ZSBxdWUgY29uc3Ryw7NpIGNhZGEgaXRlbSBubyBkcm9wZG93biwgY29udGVuZG8gbyBjaGVja2JveCBlIG8gbGFiZWwuXHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLW11bHRpc2VsZWN0LWl0ZW0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1tdWx0aXNlbGVjdC1pdGVtLmNvbXBvbmVudC5odG1sJyxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9NdWx0aXNlbGVjdEl0ZW1Db21wb25lbnQge1xyXG4gIC8qKiBSw7N0dWxvIGRvIGl0ZW0uICovXHJcbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcclxuXHJcbiAgLyoqIEVzdGEgcHJvcHJpZWRhZGUgaW5kaWNhIHNlIG8gY2FtcG8gZXN0w6Egc2VsZWNpb25hZG8sIGluZGVudGVybWluYXRlIG91IG7Do28uICovXHJcbiAgQElucHV0KCdwLXNlbGVjdGVkJykgc2VsZWN0ZWQ/OiBib29sZWFuID0gZmFsc2U7XHJcblxyXG4gIC8qKiBFdmVudG8gcXVlIHNlcsOhIGRpc3BhcmFkbyB0b2RhIHZleiBxdWUgbyB1c3XDoXJpbyBtYXJjYXIgb3UgZGVzbWFyY2FyIHVtIGl0ZW0uICovXHJcbiAgQE91dHB1dCgncC1jaGFuZ2UnKSBjaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGl0ZW1DbGlja2VkKCkge1xyXG4gICAgdGhpcy5zZWxlY3RlZCA9ICF0aGlzLnNlbGVjdGVkO1xyXG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkKTtcclxuICB9XHJcbn1cclxuIl19