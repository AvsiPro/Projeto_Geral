import { Component, Input, ViewChild } from '@angular/core';
import { isIEOrEdge } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para cada item do po-slide.
 */
export class PoSlideItemComponent {
    constructor() {
        this.isIEOrEdge = isIEOrEdge();
    }
    setLinkType() {
        if (!this.template && this.link) {
            return this.link.startsWith('http') ? 'externalLink' : 'internalLink';
        }
        return 'noLink';
    }
}
PoSlideItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-slide-item',
                template: "<div\r\n  #slideItem\r\n  class=\"po-slide-item\"\r\n  [class.po-slide-item-background-image]=\"!template && isIEOrEdge\"\r\n  [style.background-image]=\"!template && isIEOrEdge ? 'url(' + image + ')' : ''\"\r\n  [ngSwitch]=\"setLinkType()\"\r\n>\r\n  <!-- slide com link interno -->\r\n  <a *ngSwitchCase=\"'internalLink'\" class=\"po-slide-item-link\" [routerLink]=\"link\">\r\n    <ng-container [ngTemplateOutlet]=\"slideItemImage\" [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image } }\">\r\n    </ng-container>\r\n  </a>\r\n  <!-- slide com link externo -->\r\n  <a *ngSwitchCase=\"'externalLink'\" class=\"po-slide-item-link\" [href]=\"link\">\r\n    <ng-container [ngTemplateOutlet]=\"slideItemImage\" [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image } }\">\r\n    </ng-container>\r\n  </a>\r\n  <!-- slide sem link -->\r\n  <a\r\n    *ngSwitchCase=\"'noLink'\"\r\n    [ngClass]=\"action ? 'po-slide-item-link' : 'po-slide-item-no-link'\"\r\n    (click)=\"action ? action(data) : undefined\"\r\n  >\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"template ? slideItemTemplate : slideItemImage\"\r\n      [ngTemplateOutletContext]=\"{ item: { alt: alt, image: image, data: data } }\"\r\n    >\r\n    </ng-container>\r\n  </a>\r\n</div>\r\n\r\n<ng-template #slideItemTemplate let-item=\"item\" ; let-index=\"index\">\r\n  <div *ngIf=\"template\" class=\"po-slide-item-content\">\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"template.templateRef\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: item.data, index: index }\"\r\n    >\r\n    </ng-template>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #slideItemImage let-item=\"item\">\r\n  <img\r\n    *ngIf=\"item.image && !isIEOrEdge\"\r\n    class=\"po-slide-image\"\r\n    [alt]=\"item.alt\"\r\n    [src]=\"item.image\"\r\n    [style.height.px]=\"imageHeight\"\r\n  />\r\n</ng-template>\r\n"
            },] }
];
PoSlideItemComponent.propDecorators = {
    itemElement: [{ type: ViewChild, args: ['slideItem', { static: true },] }],
    action: [{ type: Input, args: ['p-action',] }],
    alt: [{ type: Input, args: ['p-alt',] }],
    data: [{ type: Input, args: ['p-data',] }],
    image: [{ type: Input, args: ['p-image',] }],
    imageHeight: [{ type: Input, args: ['p-image-height',] }],
    template: [{ type: Input, args: ['p-template',] }],
    link: [{ type: Input, args: ['p-link',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tc2xpZGUvcG8tc2xpZGUtaXRlbS9wby1zbGlkZS1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBSWpEOzs7Ozs7R0FNRztBQUtILE1BQU0sT0FBTyxvQkFBb0I7SUFKakM7UUE0QkUsZUFBVSxHQUFRLFVBQVUsRUFBRSxDQUFDO0lBU2pDLENBQUM7SUFQQyxXQUFXO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztTQUN2RTtRQUVELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLDAyREFBNkM7YUFDOUM7OzswQkFFRSxTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtxQkFHdkMsS0FBSyxTQUFDLFVBQVU7a0JBR2hCLEtBQUssU0FBQyxPQUFPO21CQUdiLEtBQUssU0FBQyxRQUFRO29CQUdkLEtBQUssU0FBQyxTQUFTOzBCQUdmLEtBQUssU0FBQyxnQkFBZ0I7dUJBR3RCLEtBQUssU0FBQyxZQUFZO21CQUdsQixLQUFLLFNBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgaXNJRU9yRWRnZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xyXG5cclxuaW1wb3J0IHsgUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4uL2RpcmVjdGl2ZXMvcG8tc2xpZGUtY29udGVudC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xyXG5cclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogQ29tcG9uZW50ZSBwYXJhIGNhZGEgaXRlbSBkbyBwby1zbGlkZS5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncG8tc2xpZGUtaXRlbScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXNsaWRlLWl0ZW0uY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb1NsaWRlSXRlbUNvbXBvbmVudCB7XHJcbiAgQFZpZXdDaGlsZCgnc2xpZGVJdGVtJywgeyBzdGF0aWM6IHRydWUgfSkgaXRlbUVsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcblxyXG4gIC8qKiBBw6fDo28gZXhlY3V0YWRhIGFvIGNsaWNhciBlbSB1bWEgaW1hZ2VtICovXHJcbiAgQElucHV0KCdwLWFjdGlvbicpIGFjdGlvbjogRnVuY3Rpb247XHJcblxyXG4gIC8qKiBUZXh0byBhbHRlcm5hdGl2byBxdWFuZG8gYSBpbWFnZW0gbsOjbyDDqSBlbmNvbnRyYWRhICovXHJcbiAgQElucHV0KCdwLWFsdCcpIGFsdDogc3RyaW5nO1xyXG5cclxuICAvKiogRGFkb3MgcGFyYSBvIHRlbXBsYXRlIGN1c3RvbWl6YWRvICovXHJcbiAgQElucHV0KCdwLWRhdGEnKSBkYXRhOiBBcnJheTxhbnk+O1xyXG5cclxuICAvKiogQ2FtaW5obyBkYSBpbWFnZW0gKi9cclxuICBASW5wdXQoJ3AtaW1hZ2UnKSBpbWFnZTogc3RyaW5nO1xyXG5cclxuICAvKiogQWx0dXJhIGRhIGltYWdlbSAqL1xyXG4gIEBJbnB1dCgncC1pbWFnZS1oZWlnaHQnKSBpbWFnZUhlaWdodDogbnVtYmVyO1xyXG5cclxuICAvKiogVGVtcGxhdGUgY3VzdG9taXphZG8gKi9cclxuICBASW5wdXQoJ3AtdGVtcGxhdGUnKSB0ZW1wbGF0ZTogUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZTtcclxuXHJcbiAgLyoqIExpbmsgZXhlY3V0YWRvIGFvIGNsaWNhciBlbSB1bWEgaW1hZ2VtICovXHJcbiAgQElucHV0KCdwLWxpbmsnKSBsaW5rOiBzdHJpbmc7XHJcblxyXG4gIGlzSUVPckVkZ2U6IGFueSA9IGlzSUVPckVkZ2UoKTtcclxuXHJcbiAgc2V0TGlua1R5cGUoKSB7XHJcbiAgICBpZiAoIXRoaXMudGVtcGxhdGUgJiYgdGhpcy5saW5rKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmxpbmsuc3RhcnRzV2l0aCgnaHR0cCcpID8gJ2V4dGVybmFsTGluaycgOiAnaW50ZXJuYWxMaW5rJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gJ25vTGluayc7XHJcbiAgfVxyXG59XHJcbiJdfQ==