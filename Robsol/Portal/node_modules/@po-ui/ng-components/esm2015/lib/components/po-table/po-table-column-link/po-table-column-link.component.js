import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { isExternalLink } from '../../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente respons√°vel por exibir link nas colunas.
 */
export class PoTableColumnLinkComponent {
    get type() {
        if (this.disabled) {
            return 'disabled';
        }
        if (this.action) {
            return 'action';
        }
        if (isExternalLink(this.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
}
PoTableColumnLinkComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-column-link',
                template: "<ng-container [ngSwitch]=\"type\">\r\n  <p *ngSwitchCase=\"'disabled'\" class=\"po-table-link-disabled\">{{ value }}</p>\r\n  <a *ngSwitchCase=\"'action'\" class=\"po-table-link\" (click)=\"action(value, row)\">{{ value }}</a>\r\n  <a *ngSwitchCase=\"'externalLink'\" class=\"po-table-link\" [href]=\"link\" target=\"_blank\">{{ value }}</a>\r\n  <a *ngSwitchCase=\"'internalLink'\" class=\"po-table-link\" [routerLink]=\"link\">{{ value }}</a>\r\n</ng-container>\r\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoTableColumnLinkComponent.propDecorators = {
    action: [{ type: Input, args: ['p-action',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    link: [{ type: Input, args: ['p-link',] }],
    row: [{ type: Input, args: ['p-row',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLWxpbmsuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYmxlL3BvLXRhYmxlLWNvbHVtbi1saW5rL3BvLXRhYmxlLWNvbHVtbi1saW5rLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQ7Ozs7OztHQU1HO0FBTUgsTUFBTSxPQUFPLDBCQUEwQjtJQVdyQyxJQUFJLElBQUk7UUFDTixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsT0FBTyxVQUFVLENBQUM7U0FDbkI7UUFFRCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUVELElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM3QixPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7OztZQTlCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHNCQUFzQjtnQkFDaEMsK2RBQW9EO2dCQUNwRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRDs7O3FCQUVFLEtBQUssU0FBQyxVQUFVO3VCQUVoQixLQUFLLFNBQUMsWUFBWTttQkFFbEIsS0FBSyxTQUFDLFFBQVE7a0JBRWQsS0FBSyxTQUFDLE9BQU87b0JBRWIsS0FBSyxTQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgaXNFeHRlcm5hbExpbmsgfSBmcm9tICcuLi8uLi8uLi91dGlscy91dGlsJztcclxuXHJcbi8qKlxyXG4gKiBAZG9jc1ByaXZhdGVcclxuICpcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIENvbXBvbmVudGUgcmVzcG9uc8OhdmVsIHBvciBleGliaXIgbGluayBuYXMgY29sdW5hcy5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAncG8tdGFibGUtY29sdW1uLWxpbmsnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby10YWJsZS1jb2x1bW4tbGluay5jb21wb25lbnQuaHRtbCcsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFBvVGFibGVDb2x1bW5MaW5rQ29tcG9uZW50IHtcclxuICBASW5wdXQoJ3AtYWN0aW9uJykgYWN0aW9uOiBGdW5jdGlvbjtcclxuXHJcbiAgQElucHV0KCdwLWRpc2FibGVkJykgZGlzYWJsZWQ6IGJvb2xlYW47XHJcblxyXG4gIEBJbnB1dCgncC1saW5rJykgbGluazogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ3Atcm93Jykgcm93O1xyXG5cclxuICBASW5wdXQoJ3AtdmFsdWUnKSB2YWx1ZTogc3RyaW5nO1xyXG5cclxuICBnZXQgdHlwZSgpIHtcclxuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XHJcbiAgICAgIHJldHVybiAnZGlzYWJsZWQnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLmFjdGlvbikge1xyXG4gICAgICByZXR1cm4gJ2FjdGlvbic7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGlzRXh0ZXJuYWxMaW5rKHRoaXMubGluaykpIHtcclxuICAgICAgcmV0dXJuICdleHRlcm5hbExpbmsnO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnaW50ZXJuYWxMaW5rJztcclxuICB9XHJcbn1cclxuIl19