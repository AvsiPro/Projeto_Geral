import { Directive, EventEmitter, Input, Output } from '@angular/core';
const PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];
const PO_AVATAR_SIZE_DEFAULT = 'md';
/**
 * @description
 *
 * O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de
 * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.
 *
 * Além de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar
 * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.
 */
export class PoAvatarBaseComponent {
    constructor() {
        /**
         * @optional
         *
         * @description
         *
         * Indica como o navegador deve carregar a imagem.
         *
         * Valores válidos:
         *  - `eager` (a imagem é carregada imediatamente, independente de estar visível ou não)
         *  - `lazy` (a imagem só é carregada quando estiver próxima de ser renderizada)
         *
         * @default `eager`
         */
        this.loading = 'eager';
        /** Evento disparado ao clicar na imagem do *avatar*. */
        this.click = new EventEmitter();
        this._size = 'md';
    }
    /**
     * @optional
     *
     * @description
     *
     * Tamanho de exibição do componente.
     *
     * Valores válidos:
     *  - `xs` (24x24)
     *  - `sm` (32x32)
     *  - `md` (64x64)
     *  - `lg` (96x96)
     *  - `xl` (144x144)
     *
     * @default `md`
     */
    set size(value) {
        this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;
    }
    get size() {
        return this._size;
    }
    get hasClickEvent() {
        return !!this.click.observers.length;
    }
}
PoAvatarBaseComponent.decorators = [
    { type: Directive }
];
PoAvatarBaseComponent.propDecorators = {
    src: [{ type: Input, args: ['p-src',] }],
    loading: [{ type: Input, args: ['p-loading',] }],
    click: [{ type: Output, args: ['p-click',] }],
    size: [{ type: Input, args: ['p-size',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYXZhdGFyLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWF2YXRhci9wby1hdmF0YXItYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxNQUFNLGVBQWUsR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztBQUN2RCxNQUFNLHNCQUFzQixHQUFHLElBQUksQ0FBQztBQUVwQzs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sT0FBTyxxQkFBcUI7SUFEbEM7UUFRRTs7Ozs7Ozs7Ozs7O1dBWUc7UUFDaUIsWUFBTyxHQUFxQixPQUFPLENBQUM7UUFFeEQsd0RBQXdEO1FBQ3JDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBRTNDLFVBQUssR0FBVyxJQUFJLENBQUM7SUE0Qi9CLENBQUM7SUExQkM7Ozs7Ozs7Ozs7Ozs7OztPQWVHO0lBQ0gsSUFBcUIsSUFBSSxDQUFDLEtBQWE7UUFDckMsSUFBSSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDO0lBQ2hGLENBQUM7SUFDRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUVELElBQUksYUFBYTtRQUNmLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUN2QyxDQUFDOzs7WUFyREYsU0FBUzs7O2tCQU1QLEtBQUssU0FBQyxPQUFPO3NCQWViLEtBQUssU0FBQyxXQUFXO29CQUdqQixNQUFNLFNBQUMsU0FBUzttQkFvQmhCLEtBQUssU0FBQyxRQUFRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmNvbnN0IFBPX0FWQVRBUl9TSVpFUyA9IFsneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnXTtcclxuY29uc3QgUE9fQVZBVEFSX1NJWkVfREVGQVVMVCA9ICdtZCc7XHJcblxyXG4vKipcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tYXZhdGFyYCDDqSB1bSBjb250YWluZXIgcGFyYSBpbWFnZW5zIGVtIG1pbmlhdHVyYSwgcG9zc3VpIHVtIGZvcm1hdG8gcmVkb25kbyBlIGNpbmNvIG9ww6fDtWVzIGRlXHJcbiAqIHRhbWFuaG8sIHBvZGUgc2VyIHV0aWxpemFkbyBwYXJhIG1vc3RyYXIgYSBmb3RvIGRvIHBlcmZpbCBkZSB1bSB1c3XDoXJpbywgZW50cmUgb3V0cmFzIHBvc3NpYmlsaWRhZGVzLlxyXG4gKlxyXG4gKiBBbMOpbSBkZSBwb2RlciBzZXIgdXRpbGl6YWRvIHNlcGFyYWRhbWVudGUsIMOpIHBvc3PDrXZlbCB1c2FyIG8gYHBvLWF2YXRhcmAganVudGFtZW50ZSBjb20gb3V0cm9zIGNvbXBvbmVudGVzIGUgY3JpYXJcclxuICogbGF5b3V0cyByaWNvcyBlIGJlbSBpbnRlcmVzc2FudGVzIHBhcmEgb3MgdXN1w6FyaW9zLCBjb21vIHBvciBleGVtcGxvLCB1bWEgbGlzdGEgZGUgaXRlbnMgb3UgcHJvZHV0b3MuXHJcbiAqL1xyXG5ARGlyZWN0aXZlKClcclxuZXhwb3J0IGNsYXNzIFBvQXZhdGFyQmFzZUNvbXBvbmVudCB7XHJcbiAgLyoqXHJcbiAgICogRm9udGUgZGEgaW1hZ2VtIHF1ZSBwb2RlIHNlciB1bSBjYW1pbmhvIGxvY2FsIChgLi9hc3NldHMvaW1hZ2VzL2xvZ28tYmxhY2stc21hbGwucG5nYClcclxuICAgKiBvdSB1bSBzZXJ2aWRvciBleHRlcm5vIChgaHR0cHM6Ly9wby11aS5pby9hc3NldHMvaW1hZ2VzL2xvZ28tYmxhY2stc21hbGwucG5nYCkuXHJcbiAgICovXHJcbiAgQElucHV0KCdwLXNyYycpIHNyYzogc3RyaW5nO1xyXG5cclxuICAvKipcclxuICAgKiBAb3B0aW9uYWxcclxuICAgKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogSW5kaWNhIGNvbW8gbyBuYXZlZ2Fkb3IgZGV2ZSBjYXJyZWdhciBhIGltYWdlbS5cclxuICAgKlxyXG4gICAqIFZhbG9yZXMgdsOhbGlkb3M6XHJcbiAgICogIC0gYGVhZ2VyYCAoYSBpbWFnZW0gw6kgY2FycmVnYWRhIGltZWRpYXRhbWVudGUsIGluZGVwZW5kZW50ZSBkZSBlc3RhciB2aXPDrXZlbCBvdSBuw6NvKVxyXG4gICAqICAtIGBsYXp5YCAoYSBpbWFnZW0gc8OzIMOpIGNhcnJlZ2FkYSBxdWFuZG8gZXN0aXZlciBwcsOzeGltYSBkZSBzZXIgcmVuZGVyaXphZGEpXHJcbiAgICpcclxuICAgKiBAZGVmYXVsdCBgZWFnZXJgXHJcbiAgICovXHJcbiAgQElucHV0KCdwLWxvYWRpbmcnKSBsb2FkaW5nOiAnZWFnZXInIHwgJ2xhenknID0gJ2VhZ2VyJztcclxuXHJcbiAgLyoqIEV2ZW50byBkaXNwYXJhZG8gYW8gY2xpY2FyIG5hIGltYWdlbSBkbyAqYXZhdGFyKi4gKi9cclxuICBAT3V0cHV0KCdwLWNsaWNrJykgY2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgcHJpdmF0ZSBfc2l6ZTogc3RyaW5nID0gJ21kJztcclxuXHJcbiAgLyoqXHJcbiAgICogQG9wdGlvbmFsXHJcbiAgICpcclxuICAgKiBAZGVzY3JpcHRpb25cclxuICAgKlxyXG4gICAqIFRhbWFuaG8gZGUgZXhpYmnDp8OjbyBkbyBjb21wb25lbnRlLlxyXG4gICAqXHJcbiAgICogVmFsb3JlcyB2w6FsaWRvczpcclxuICAgKiAgLSBgeHNgICgyNHgyNClcclxuICAgKiAgLSBgc21gICgzMngzMilcclxuICAgKiAgLSBgbWRgICg2NHg2NClcclxuICAgKiAgLSBgbGdgICg5Nng5NilcclxuICAgKiAgLSBgeGxgICgxNDR4MTQ0KVxyXG4gICAqXHJcbiAgICogQGRlZmF1bHQgYG1kYFxyXG4gICAqL1xyXG4gIEBJbnB1dCgncC1zaXplJykgc2V0IHNpemUodmFsdWU6IHN0cmluZykge1xyXG4gICAgdGhpcy5fc2l6ZSA9IFBPX0FWQVRBUl9TSVpFUy5pbmNsdWRlcyh2YWx1ZSkgPyB2YWx1ZSA6IFBPX0FWQVRBUl9TSVpFX0RFRkFVTFQ7XHJcbiAgfVxyXG4gIGdldCBzaXplKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy5fc2l6ZTtcclxuICB9XHJcblxyXG4gIGdldCBoYXNDbGlja0V2ZW50KCkge1xyXG4gICAgcmV0dXJuICEhdGhpcy5jbGljay5vYnNlcnZlcnMubGVuZ3RoO1xyXG4gIH1cclxufVxyXG4iXX0=