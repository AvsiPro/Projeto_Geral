import { Input, Directive } from '@angular/core';
import { isExternalLink, uuid } from '../../utils/util';
const poDefaultLogo = 'https://po-ui.io/assets/po-logos/po_black.svg';
/**
 * @description
 *
 * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação
 * em páginas internas, externas da aplicação ou aciona uma ação.
 *
 * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos
 * itens de menu como textos, links para redirecionamento, ações e ícones.
 */
export class PoMenuPanelBaseComponent {
    constructor() {
        this._logo = poDefaultLogo;
    }
    /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */
    set menus(menus) {
        this._menus = Array.isArray(menus) ? menus : [];
        this.setMenuExtraProperties(this._menus);
        this.validateMenus(this._menus);
    }
    get menus() {
        return this._menus;
    }
    /**
     * @optional
     *
     * @description
     *
     * Caminho para a logomarca localizada na parte superior do menu.
     *
     * > Caso seja indefinida será aplicada a imagem default do PO UI.
     */
    set logo(src) {
        this._logo = src !== null && src !== void 0 ? src : poDefaultLogo;
    }
    get logo() {
        return this._logo;
    }
    setMenuExtraProperties(menus) {
        menus.forEach(menuItem => this.setMenuItemProperties(menuItem));
    }
    setMenuItemProperties(menuItem) {
        menuItem.id = menuItem.id || uuid();
        menuItem.type = this.setMenuType(menuItem);
    }
    setMenuType(menuItem) {
        if (!menuItem.link) {
            return 'noLink';
        }
        if (isExternalLink(menuItem.link)) {
            return 'externalLink';
        }
        return 'internalLink';
    }
    validateMenu(menuItem) {
        if (!menuItem.label) {
            throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');
        }
        if (!menuItem.icon) {
            throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');
        }
    }
    validateMenus(menus) {
        menus.forEach(menu => this.validateMenu(menu));
    }
}
PoMenuPanelBaseComponent.decorators = [
    { type: Directive }
];
PoMenuPanelBaseComponent.propDecorators = {
    menus: [{ type: Input, args: ['p-menus',] }],
    logo: [{ type: Input, args: ['p-logo',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1wYW5lbC1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby1tZW51LXBhbmVsL3BvLW1lbnUtcGFuZWwtYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUt4RCxNQUFNLGFBQWEsR0FBRywrQ0FBK0MsQ0FBQztBQUV0RTs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sT0FBTyx3QkFBd0I7SUFEckM7UUFHVSxVQUFLLEdBQVcsYUFBYSxDQUFDO0lBaUV4QyxDQUFDO0lBL0RDLDRIQUE0SDtJQUM1SCxJQUFzQixLQUFLLENBQUMsS0FBNkI7UUFDdkQsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUVoRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ0gsSUFBcUIsSUFBSSxDQUFDLEdBQVc7UUFDbkMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLGFBQUgsR0FBRyxjQUFILEdBQUcsR0FBSSxhQUFhLENBQUM7SUFDcEMsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBRU8sc0JBQXNCLENBQUMsS0FBNkI7UUFDMUQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBMEIsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUMzRixDQUFDO0lBRU8scUJBQXFCLENBQUMsUUFBaUM7UUFDN0QsUUFBUSxDQUFDLEVBQUUsR0FBRyxRQUFRLENBQUMsRUFBRSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ3BDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU8sV0FBVyxDQUFDLFFBQXlCO1FBQzNDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ2xCLE9BQU8sUUFBUSxDQUFDO1NBQ2pCO1FBRUQsSUFBSSxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2pDLE9BQU8sY0FBYyxDQUFDO1NBQ3ZCO1FBRUQsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQztJQUVPLFlBQVksQ0FBQyxRQUF5QjtRQUM1QyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLHNEQUFzRCxDQUFDLENBQUM7U0FDekU7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNsQixNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7U0FDeEU7SUFDSCxDQUFDO0lBRU8sYUFBYSxDQUFDLEtBQUs7UUFDekIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUFuRUYsU0FBUzs7O29CQU1QLEtBQUssU0FBQyxTQUFTO21CQW9CZixLQUFLLFNBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IGlzRXh0ZXJuYWxMaW5rLCB1dWlkIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XHJcblxyXG5pbXBvcnQgeyBQb01lbnVQYW5lbEl0ZW0gfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0uaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgUG9NZW51UGFuZWxJdGVtSW50ZXJuYWwgfSBmcm9tICcuL3BvLW1lbnUtcGFuZWwtaXRlbS9wby1tZW51LXBhbmVsLWl0ZW0taW50ZXJuYWwuaW50ZXJmYWNlJztcclxuXHJcbmNvbnN0IHBvRGVmYXVsdExvZ28gPSAnaHR0cHM6Ly9wby11aS5pby9hc3NldHMvcG8tbG9nb3MvcG9fYmxhY2suc3ZnJztcclxuXHJcbi8qKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogRXN0ZSDDqSB1bSBjb21wb25lbnRlIGRlIG1lbnUgbGF0ZXJhbCBjb21wb3N0byBhcGVuYXMgcG9yIMOtY29uZXMgZSBjb20gdW0gbsOtdmVsLCB1dGlsaXphZG8gcGFyYSBuYXZlZ2HDp8Ojb1xyXG4gKiBlbSBww6FnaW5hcyBpbnRlcm5hcywgZXh0ZXJuYXMgZGEgYXBsaWNhw6fDo28gb3UgYWNpb25hIHVtYSBhw6fDo28uXHJcbiAqXHJcbiAqIE8gY29tcG9uZW50ZSBgcG8tbWVudS1wYW5lbGAgcmVjZWJlIHVtYSBsaXN0YSBkZSBvYmpldG9zIGRvIHRpcG8gYE1lbnVQYW5lbEl0ZW1gIGNvbSBhcyBpbmZvcm1hw6fDtWVzIGRvc1xyXG4gKiBpdGVucyBkZSBtZW51IGNvbW8gdGV4dG9zLCBsaW5rcyBwYXJhIHJlZGlyZWNpb25hbWVudG8sIGHDp8O1ZXMgZSDDrWNvbmVzLlxyXG4gKi9cclxuQERpcmVjdGl2ZSgpXHJcbmV4cG9ydCBjbGFzcyBQb01lbnVQYW5lbEJhc2VDb21wb25lbnQge1xyXG4gIHByaXZhdGUgX21lbnVzO1xyXG4gIHByaXZhdGUgX2xvZ286IHN0cmluZyA9IHBvRGVmYXVsdExvZ287XHJcblxyXG4gIC8qKiBMaXN0YSBkb3MgaXRlbnMgZG8gYHBvLW1lbnUtcGFuZWxgLiBTZSBvIHZhbG9yIGVzdGl2ZXIgaW5kZWZpbmlkbyBvdSBpbnbDoWxpZG8sIHNlcsOhIGluaWNpYWxpemFkbyBjb21vIHVtIGFycmF5IHZhemlvLiAqL1xyXG4gIEBJbnB1dCgncC1tZW51cycpIHNldCBtZW51cyhtZW51czogQXJyYXk8UG9NZW51UGFuZWxJdGVtPikge1xyXG4gICAgdGhpcy5fbWVudXMgPSBBcnJheS5pc0FycmF5KG1lbnVzKSA/IG1lbnVzIDogW107XHJcblxyXG4gICAgdGhpcy5zZXRNZW51RXh0cmFQcm9wZXJ0aWVzKHRoaXMuX21lbnVzKTtcclxuICAgIHRoaXMudmFsaWRhdGVNZW51cyh0aGlzLl9tZW51cyk7XHJcbiAgfVxyXG5cclxuICBnZXQgbWVudXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWVudXM7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBAb3B0aW9uYWxcclxuICAgKlxyXG4gICAqIEBkZXNjcmlwdGlvblxyXG4gICAqXHJcbiAgICogQ2FtaW5obyBwYXJhIGEgbG9nb21hcmNhIGxvY2FsaXphZGEgbmEgcGFydGUgc3VwZXJpb3IgZG8gbWVudS5cclxuICAgKlxyXG4gICAqID4gQ2FzbyBzZWphIGluZGVmaW5pZGEgc2Vyw6EgYXBsaWNhZGEgYSBpbWFnZW0gZGVmYXVsdCBkbyBQTyBVSS5cclxuICAgKi9cclxuICBASW5wdXQoJ3AtbG9nbycpIHNldCBsb2dvKHNyYzogc3RyaW5nKSB7XHJcbiAgICB0aGlzLl9sb2dvID0gc3JjID8/IHBvRGVmYXVsdExvZ287XHJcbiAgfVxyXG5cclxuICBnZXQgbG9nbygpIHtcclxuICAgIHJldHVybiB0aGlzLl9sb2dvO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRNZW51RXh0cmFQcm9wZXJ0aWVzKG1lbnVzOiBBcnJheTxQb01lbnVQYW5lbEl0ZW0+KSB7XHJcbiAgICBtZW51cy5mb3JFYWNoKG1lbnVJdGVtID0+IHRoaXMuc2V0TWVudUl0ZW1Qcm9wZXJ0aWVzKDxQb01lbnVQYW5lbEl0ZW1JbnRlcm5hbD5tZW51SXRlbSkpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXRNZW51SXRlbVByb3BlcnRpZXMobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbUludGVybmFsKSB7XHJcbiAgICBtZW51SXRlbS5pZCA9IG1lbnVJdGVtLmlkIHx8IHV1aWQoKTtcclxuICAgIG1lbnVJdGVtLnR5cGUgPSB0aGlzLnNldE1lbnVUeXBlKG1lbnVJdGVtKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc2V0TWVudVR5cGUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSk6IHN0cmluZyB7XHJcbiAgICBpZiAoIW1lbnVJdGVtLmxpbmspIHtcclxuICAgICAgcmV0dXJuICdub0xpbmsnO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpc0V4dGVybmFsTGluayhtZW51SXRlbS5saW5rKSkge1xyXG4gICAgICByZXR1cm4gJ2V4dGVybmFsTGluayc7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICdpbnRlcm5hbExpbmsnO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnUobWVudUl0ZW06IFBvTWVudVBhbmVsSXRlbSkge1xyXG4gICAgaWYgKCFtZW51SXRlbS5sYWJlbCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ08gYXRyaWJ1dG8gUG9NZW51UGFuZWxJdGVtLmxhYmVsIG7Do28gcG9kZSBzZXIgdmF6aW8uJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCFtZW51SXRlbS5pY29uKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTyBhdHJpYnV0byBQb01lbnVQYW5lbEl0ZW0uaWNvbiBuw6NvIHBvZGUgc2VyIHZhemlvLicpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB2YWxpZGF0ZU1lbnVzKG1lbnVzKTogdm9pZCB7XHJcbiAgICBtZW51cy5mb3JFYWNoKG1lbnUgPT4gdGhpcy52YWxpZGF0ZU1lbnUobWVudSkpO1xyXG4gIH1cclxufVxyXG4iXX0=