import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';
import { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';
import { PoPopoverBaseComponent } from './po-popover-base.component';
/**
 *
 * @docsExtends PoPopoverBaseComponent
 *
 * @example
 *
 * <example name="po-popover-basic" title="PO Popover Basic">
 *   <file name="sample-po-popover-basic/sample-po-popover-basic.component.html"> </file>
 *   <file name="sample-po-popover-basic/sample-po-popover-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popover-labs" title="PO Popover Labs">
 *   <file name="sample-po-popover-labs/sample-po-popover-labs.component.html"> </file>
 *   <file name="sample-po-popover-labs/sample-po-popover-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popover-credit-card" title="PO Popover - Credit Card">
 *   <file name="sample-po-popover-credit-card/sample-po-popover-credit-card.component.html"> </file>
 *   <file name="sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts"> </file>
 * </example>
 */
export class PoPopoverComponent extends PoPopoverBaseComponent {
    constructor(renderer, poControlPosition) {
        super();
        this.renderer = renderer;
        this.poControlPosition = poControlPosition;
        this.arrowDirection = 'left';
    }
    ngAfterViewInit() {
        this.targetElement = this.target instanceof ElementRef ? this.target.nativeElement : this.target;
        this.initEventListenerFunction();
        this.setElementsControlPosition();
        this.setRendererListenInit();
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    close() {
        this.isHidden = true;
        this.closePopover.emit();
    }
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(() => {
            this.setPopoverPosition();
        }, 200);
    }
    open() {
        this.addScrollEventListener();
        this.isHidden = false;
        this.setOpacity(0);
        setTimeout(() => {
            this.setElementsControlPosition();
            this.setPopoverPosition();
            this.setOpacity(1);
        });
    }
    setOpacity(value) {
        this.popoverElement.nativeElement.style.opacity = value;
    }
    setPopoverPosition() {
        this.poControlPosition.adjustPosition(this.position);
        this.arrowDirection = this.poControlPosition.getArrowDirection();
    }
    setRendererListenInit() {
        this.resizeListener = this.renderer.listen('window', 'resize', (event) => {
            if (!this.isHidden) {
                this.debounceResize();
            }
        });
        if (this.trigger === 'hover') {
            this.mouseEnterListener = this.renderer.listen(this.targetElement, 'mouseenter', (event) => {
                this.open();
            });
            this.mouseLeaveListener = this.renderer.listen(this.targetElement, 'mouseleave', (event) => {
                this.close();
            });
        }
        else {
            this.clickoutListener = this.renderer.listen('document', 'click', (event) => {
                this.togglePopup(event);
            });
        }
    }
    togglePopup(event) {
        if (!this.isHidden &&
            !this.popoverElement.nativeElement.contains(event.target) &&
            !this.targetElement.contains(event.target)) {
            this.close();
        }
        else if (this.targetElement.contains(event.target)) {
            this.popoverElement.nativeElement.hidden ? this.open() : this.close();
        }
    }
    addScrollEventListener() {
        window.addEventListener('scroll', this.eventListenerFunction, true);
    }
    initEventListenerFunction() {
        this.eventListenerFunction = () => {
            this.setPopoverPosition();
        };
    }
    removeListeners() {
        if (this.clickoutListener) {
            this.clickoutListener();
        }
        if (this.mouseEnterListener) {
            this.mouseEnterListener();
        }
        if (this.mouseLeaveListener) {
            this.mouseLeaveListener();
        }
        this.resizeListener();
        window.removeEventListener('scroll', this.eventListenerFunction, true);
    }
    setElementsControlPosition() {
        const popoverOffset = 8;
        this.poControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);
    }
}
PoPopoverComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-popover',
                template: "<div [hidden]=\"isHidden\" class=\"po-popover\" #popoverElement>\r\n  <div *ngIf=\"!hideArrow\" class=\"po-popover-arrow po-arrow-{{ arrowDirection }}\"></div>\r\n\r\n  <div class=\"po-popover-content\">\r\n    <span *ngIf=\"title\" class=\"po-popover-title\">{{ title }}</span>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n",
                providers: [PoControlPositionService]
            },] }
];
PoPopoverComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: PoControlPositionService }
];
PoPopoverComponent.propDecorators = {
    popoverElement: [{ type: ViewChild, args: ['popoverElement', { read: ElementRef, static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,