import { Component, Input, Renderer2, ViewChild } from '@angular/core';
export class PoGaugePointerComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.afterViewInit = false;
    }
    set coordinates(value) {
        var _a, _b;
        this._coordinates = value;
        if ((_a = this._coordinates) === null || _a === void 0 ? void 0 : _a.radius) {
            this.calculateRadiusScale(this.coordinates.radius);
        }
        if (((_b = this._coordinates) === null || _b === void 0 ? void 0 : _b.hasOwnProperty('pointerDegrees')) && this.afterViewInit) {
            this.applyPointerRotation(this.coordinates.pointerDegrees);
        }
    }
    get coordinates() {
        return this._coordinates;
    }
    ngAfterViewInit() {
        var _a;
        if ((_a = this._coordinates) === null || _a === void 0 ? void 0 : _a.pointerDegrees) {
            this.applyPointerRotation(this.coordinates.pointerDegrees);
        }
        this.afterViewInit = true;
    }
    calculateRadiusScale(radius) {
        const scale = radius / 20;
        const maxScaleValue = 24;
        this.radiusScale = scale < maxScaleValue ? scale : maxScaleValue;
    }
    applyPointerRotation(degrees) {
        this.renderer.setStyle(this.pointer.nativeElement, 'transformOrigin', `${this.coordinates.radius}px ${this.coordinates.radius}px`);
        this.renderer.setStyle(this.pointer.nativeElement, 'transform', `rotate(${degrees}deg)`);
    }
}
PoGaugePointerComponent.decorators = [
    { type: Component, args: [{
                selector: '[po-gauge-pointer]',
                template: "<svg:g>\r\n  <svg:path #pointer\r\n    class=\"po-gauge-pointer\"\r\n    [attr.d]=\"coordinates?.coordinates\"\r\n  >\r\n  </svg:path> \r\n\r\n  <svg:circle \r\n    class=\"po-gauge-pointer-circle\" \r\n    [attr.cx]=\"coordinates?.radius\" \r\n    [attr.cy]=\"coordinates?.radius\" \r\n    [attr.r]=\"radiusScale\"\r\n  >\r\n  </svg:circle>\r\n</svg:g>"
            },] }
];
PoGaugePointerComponent.ctorParameters = () => [
    { type: Renderer2 }
];
PoGaugePointerComponent.propDecorators = {
    pointer: [{ type: ViewChild, args: ['pointer',] }],
    coordinates: [{ type: Input, args: ['p-coordinates',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZ2F1Z2UtcG9pbnRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZ2F1Z2UvcG8tZ2F1Z2Utc3ZnL3BvLWdhdWdlLXBvaW50ZXIvcG8tZ2F1Z2UtcG9pbnRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWMsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPbEcsTUFBTSxPQUFPLHVCQUF1QjtJQXlCbEMsWUFBb0IsUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQWxCL0Isa0JBQWEsR0FBRyxLQUFLLENBQUM7SUFrQlksQ0FBQztJQWhCM0MsSUFBNEIsV0FBVyxDQUFDLEtBQXlCOztRQUMvRCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUUxQixJQUFJLE1BQUEsSUFBSSxDQUFDLFlBQVksMENBQUUsTUFBTSxFQUFFO1lBQzdCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3BEO1FBRUQsSUFBSSxDQUFBLE1BQUEsSUFBSSxDQUFDLFlBQVksMENBQUUsY0FBYyxDQUFDLGdCQUFnQixDQUFDLEtBQUksSUFBSSxDQUFDLGFBQWEsRUFBRTtZQUM3RSxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM1RDtJQUNILENBQUM7SUFFRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztJQUlELGVBQWU7O1FBQ2IsSUFBSSxNQUFBLElBQUksQ0FBQyxZQUFZLDBDQUFFLGNBQWMsRUFBRTtZQUNyQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM1RDtRQUVELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxNQUFNO1FBQ2pDLE1BQU0sS0FBSyxHQUFHLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDMUIsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO1FBRXpCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxHQUFHLGFBQWEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUM7SUFDbkUsQ0FBQztJQUVPLG9CQUFvQixDQUFDLE9BQWU7UUFDMUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUMxQixpQkFBaUIsRUFDakIsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sTUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxDQUM1RCxDQUFDO1FBQ0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsV0FBVyxFQUFFLFVBQVUsT0FBTyxNQUFNLENBQUMsQ0FBQztJQUMzRixDQUFDOzs7WUFyREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLDZXQUErQzthQUNoRDs7O1lBTnFELFNBQVM7OztzQkFRNUQsU0FBUyxTQUFDLFNBQVM7MEJBUW5CLEtBQUssU0FBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUG9HYXVnZUNvb3JkaW5hdGVzIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9wby1nYXVnZS1jb29yZGluYXRlcy5pbnRlcmZhY2UnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdbcG8tZ2F1Z2UtcG9pbnRlcl0nLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1nYXVnZS1wb2ludGVyLmNvbXBvbmVudC5zdmcnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb0dhdWdlUG9pbnRlckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIEBWaWV3Q2hpbGQoJ3BvaW50ZXInKSBwb2ludGVyOiBFbGVtZW50UmVmO1xyXG5cclxuICByYWRpdXNTY2FsZTogbnVtYmVyO1xyXG5cclxuICBwcml2YXRlIF9jb29yZGluYXRlczogUG9HYXVnZUNvb3JkaW5hdGVzO1xyXG5cclxuICBwcml2YXRlIGFmdGVyVmlld0luaXQgPSBmYWxzZTtcclxuXHJcbiAgQElucHV0KCdwLWNvb3JkaW5hdGVzJykgc2V0IGNvb3JkaW5hdGVzKHZhbHVlOiBQb0dhdWdlQ29vcmRpbmF0ZXMpIHtcclxuICAgIHRoaXMuX2Nvb3JkaW5hdGVzID0gdmFsdWU7XHJcblxyXG4gICAgaWYgKHRoaXMuX2Nvb3JkaW5hdGVzPy5yYWRpdXMpIHtcclxuICAgICAgdGhpcy5jYWxjdWxhdGVSYWRpdXNTY2FsZSh0aGlzLmNvb3JkaW5hdGVzLnJhZGl1cyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMuX2Nvb3JkaW5hdGVzPy5oYXNPd25Qcm9wZXJ0eSgncG9pbnRlckRlZ3JlZXMnKSAmJiB0aGlzLmFmdGVyVmlld0luaXQpIHtcclxuICAgICAgdGhpcy5hcHBseVBvaW50ZXJSb3RhdGlvbih0aGlzLmNvb3JkaW5hdGVzLnBvaW50ZXJEZWdyZWVzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCBjb29yZGluYXRlcygpIHtcclxuICAgIHJldHVybiB0aGlzLl9jb29yZGluYXRlcztcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMikge31cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgaWYgKHRoaXMuX2Nvb3JkaW5hdGVzPy5wb2ludGVyRGVncmVlcykge1xyXG4gICAgICB0aGlzLmFwcGx5UG9pbnRlclJvdGF0aW9uKHRoaXMuY29vcmRpbmF0ZXMucG9pbnRlckRlZ3JlZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYWZ0ZXJWaWV3SW5pdCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNhbGN1bGF0ZVJhZGl1c1NjYWxlKHJhZGl1cykge1xyXG4gICAgY29uc3Qgc2NhbGUgPSByYWRpdXMgLyAyMDtcclxuICAgIGNvbnN0IG1heFNjYWxlVmFsdWUgPSAyNDtcclxuXHJcbiAgICB0aGlzLnJhZGl1c1NjYWxlID0gc2NhbGUgPCBtYXhTY2FsZVZhbHVlID8gc2NhbGUgOiBtYXhTY2FsZVZhbHVlO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhcHBseVBvaW50ZXJSb3RhdGlvbihkZWdyZWVzOiBudW1iZXIpIHtcclxuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUoXHJcbiAgICAgIHRoaXMucG9pbnRlci5uYXRpdmVFbGVtZW50LFxyXG4gICAgICAndHJhbnNmb3JtT3JpZ2luJyxcclxuICAgICAgYCR7dGhpcy5jb29yZGluYXRlcy5yYWRpdXN9cHggJHt0aGlzLmNvb3JkaW5hdGVzLnJhZGl1c31weGBcclxuICAgICk7XHJcbiAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMucG9pbnRlci5uYXRpdmVFbGVtZW50LCAndHJhbnNmb3JtJywgYHJvdGF0ZSgke2RlZ3JlZXN9ZGVnKWApO1xyXG4gIH1cclxufVxyXG4iXX0=