import { Component, Input } from '@angular/core';
import { PoStepperStatus } from '../enums/po-stepper-status.enum';
const poMediumStepSize = 32;
const poLargeStepSize = 48;
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por exibir os círculos dos *steps*.
 */
export class PoStepperCircleComponent {
    get isActive() {
        return this.status === PoStepperStatus.Active;
    }
    get isDefault() {
        return this.status === PoStepperStatus.Default;
    }
    get isDisabled() {
        return this.status === PoStepperStatus.Disabled;
    }
    get isDone() {
        return this.status === PoStepperStatus.Done;
    }
    get isError() {
        return this.status === PoStepperStatus.Error;
    }
    get isLargeStep() {
        return this.size >= poLargeStepSize;
    }
    get isMediumStep() {
        return this.size >= poMediumStepSize && !this.isLargeStep;
    }
}
PoStepperCircleComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-stepper-circle',
                template: "<div class=\"po-stepper-circle\" [style.height.px]=\"size\" [style.width.px]=\"size\" [tabindex]=\"isDisabled ? -1 : 0\">\r\n  <span\r\n    *ngIf=\"!isActive\"\r\n    class=\"po-stepper-circle-content\"\r\n    [class.po-icon]=\"icons || isDone\"\r\n    [class.po-icon-exclamation]=\"icons && isError\"\r\n    [class.po-icon-info]=\"icons && (isActive || isDefault || isDisabled)\"\r\n    [class.po-icon-ok]=\"isDone\"\r\n    [class.po-stepper-circle-content-lg]=\"isLargeStep\"\r\n    [class.po-stepper-circle-content-md]=\"isMediumStep\"\r\n  >\r\n    {{ !icons && !isDone ? content : '' }}\r\n  </span>\r\n\r\n  <div *ngIf=\"isActive || isError\" class=\"po-stepper-circle-active\"></div>\r\n</div>\r\n"
            },] }
];
PoStepperCircleComponent.propDecorators = {
    content: [{ type: Input, args: ['p-content',] }],
    icons: [{ type: Input, args: ['p-icons',] }],
    size: [{ type: Input, args: ['p-size',] }],
    status: [{ type: Input, args: ['p-status',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc3RlcHBlci1jaXJjbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXN0ZXBwZXIvcG8tc3RlcHBlci1jaXJjbGUvcG8tc3RlcHBlci1jaXJjbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUVsRSxNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQztBQUM1QixNQUFNLGVBQWUsR0FBRyxFQUFFLENBQUM7QUFFM0I7Ozs7OztHQU1HO0FBS0gsTUFBTSxPQUFPLHdCQUF3QjtJQWFuQyxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLE1BQU0sQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1gsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLGVBQWUsQ0FBQyxPQUFPLENBQUM7SUFDakQsQ0FBQztJQUVELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLE1BQU0sS0FBSyxlQUFlLENBQUMsUUFBUSxDQUFDO0lBQ2xELENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxNQUFNLEtBQUssZUFBZSxDQUFDLElBQUksQ0FBQztJQUM5QyxDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsTUFBTSxLQUFLLGVBQWUsQ0FBQyxLQUFLLENBQUM7SUFDL0MsQ0FBQztJQUVELElBQUksV0FBVztRQUNiLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxlQUFlLENBQUM7SUFDdEMsQ0FBQztJQUVELElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUQsQ0FBQzs7O1lBM0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3Qiw0c0JBQWlEO2FBQ2xEOzs7c0JBR0UsS0FBSyxTQUFDLFdBQVc7b0JBR2pCLEtBQUssU0FBQyxTQUFTO21CQUdmLEtBQUssU0FBQyxRQUFRO3FCQUdkLEtBQUssU0FBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgUG9TdGVwcGVyU3RhdHVzIH0gZnJvbSAnLi4vZW51bXMvcG8tc3RlcHBlci1zdGF0dXMuZW51bSc7XHJcblxyXG5jb25zdCBwb01lZGl1bVN0ZXBTaXplID0gMzI7XHJcbmNvbnN0IHBvTGFyZ2VTdGVwU2l6ZSA9IDQ4O1xyXG5cclxuLyoqXHJcbiAqIEBkb2NzUHJpdmF0ZVxyXG4gKlxyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogQ29tcG9uZW50ZSByZXNwb25zw6F2ZWwgcG9yIGV4aWJpciBvcyBjw61yY3Vsb3MgZG9zICpzdGVwcyouXHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3BvLXN0ZXBwZXItY2lyY2xlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vcG8tc3RlcHBlci1jaXJjbGUuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb1N0ZXBwZXJDaXJjbGVDb21wb25lbnQge1xyXG4gIC8vIENvbnRlw7pkbyBxdWUgaXLDoSBhcGFyZWNlciBubyBjw61yY3VsbyBkbyAqc3RlcCouXHJcbiAgQElucHV0KCdwLWNvbnRlbnQnKSBjb250ZW50OiBhbnk7XHJcblxyXG4gIC8vIERlZmluZSBzZSBzZXLDo28gZXhpYmlkb3Mgw61jb25lcyBubyBsdWdhciBkZSBuw7ptZXJvcyBub3Mgc3RlcHMuXHJcbiAgQElucHV0KCdwLWljb25zJykgaWNvbnM6IGJvb2xlYW47XHJcblxyXG4gIC8vIFRhbWFuaG8gZG8gKnN0ZXAtY2lyY2xlKi5cclxuICBASW5wdXQoJ3Atc2l6ZScpIHNpemU6IG51bWJlcjtcclxuXHJcbiAgLy8gU3RhdHVzIGRvICpzdGVwKi5cclxuICBASW5wdXQoJ3Atc3RhdHVzJykgc3RhdHVzOiBzdHJpbmc7XHJcblxyXG4gIGdldCBpc0FjdGl2ZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gUG9TdGVwcGVyU3RhdHVzLkFjdGl2ZTtcclxuICB9XHJcblxyXG4gIGdldCBpc0RlZmF1bHQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFBvU3RlcHBlclN0YXR1cy5EZWZhdWx0O1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzRGlzYWJsZWQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFBvU3RlcHBlclN0YXR1cy5EaXNhYmxlZDtcclxuICB9XHJcblxyXG4gIGdldCBpc0RvbmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFBvU3RlcHBlclN0YXR1cy5Eb25lO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzRXJyb3IoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdGF0dXMgPT09IFBvU3RlcHBlclN0YXR1cy5FcnJvcjtcclxuICB9XHJcblxyXG4gIGdldCBpc0xhcmdlU3RlcCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnNpemUgPj0gcG9MYXJnZVN0ZXBTaXplO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGlzTWVkaXVtU3RlcCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnNpemUgPj0gcG9NZWRpdW1TdGVwU2l6ZSAmJiAhdGhpcy5pc0xhcmdlU3RlcDtcclxuICB9XHJcbn1cclxuIl19