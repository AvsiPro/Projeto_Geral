{"version":3,"file":"po-language.service.d.ts","sources":["po-language.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço responsável por gerenciar as linguagens da aplicação.\r\n */\r\nexport declare class PoLanguageService {\r\n    constructor();\r\n    set languageDefault(language: string);\r\n    get languageDefault(): string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método responsável por retornar o idioma ativo.\r\n     *\r\n     * A busca do idioma será feita na seguinte ordem:\r\n     *\r\n     *   1 - o idioma que foi armazenado no *localStorage*, através do método `setLanguage()` utilizado pelo i18n.\r\n     *\r\n     *   2 - o valor inserido nas configurações do módulo do i18n através do parâmetro `config`, sendo o idioma inserido\r\n     * na propriedade `language` da interface `PoI18nConfigDefault`.\r\n     *\r\n     *   3 - o idioma do navegador utilizado.\r\n     *\r\n     * > Caso o idioma do navegador não seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), será retornado valor `pt`.\r\n     *\r\n     * **Retorno:** `string` com a sigla do idioma ativo.\r\n     */\r\n    getLanguage(): string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método responsável por retornar o idioma *default* da aplicação definido nas configurações do módulo do i18n através\r\n     * do parâmetro `config`.\r\n     *\r\n     * **Retorno:** `string` com a sigla do idioma *default*.\r\n     */\r\n    getLanguageDefault(): string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método responsável por retornar a abreviação do idioma ativo na aplicação.\r\n     *\r\n     * @default `pt`\r\n     *\r\n     * **Retorno:** `string` com a sigla abreviada do idioma ativo.\r\n     */\r\n    getShortLanguage(): string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método para salvar o idioma da aplicação no *storage*, utilizado pelo serviço do i18n.\r\n     *\r\n     * > Ao definir um idioma por este método, todos os módulos da aplicação utilizarão o idioma definido.\r\n     *\r\n     * @param language sigla do idioma.\r\n     *\r\n     * Esta sigla deve ser composta por duas letras representando o idioma,\r\n     * podendo ser adicionado outras duas letras representando o país, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\r\n     *\r\n     * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n     */\r\n    setLanguage(language: string): void;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método que define o idioma configurado a partir do parâmetro `config` utilizado pelo módulo do i18n.\r\n     *\r\n     * > Ao definir um idioma por este serviço, apenas o módulo do i18n referente a esta configuração utilizará o idioma definido.\r\n     *\r\n     * @param language sigla do idioma.\r\n     *\r\n     * Esta sigla deve ser composta por duas letras representando o idioma,\r\n     * podendo ser adicionado outras duas letras representando o país, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\r\n     *\r\n     * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n     */\r\n    setLanguageDefault(language: string): void;\r\n    /**\r\n     * @description\r\n     *\r\n     * Método que retorna o separador\r\n     *\r\n     * @param language sigla do idioma.\r\n     *\r\n     * Esta sigla deve ser composta por duas letras representando o idioma\r\n     *\r\n     * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n     */\r\n    getNumberSeparators(language?: string): {\r\n        decimalSeparator: string;\r\n        thousandSeparator: string;\r\n    };\r\n}\r\n"]}