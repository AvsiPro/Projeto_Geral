{"version":3,"file":"po-i18n.module.d.ts","sources":["po-i18n.module.d.ts"],"names":[],"mappingssourcesContent":["import { ModuleWithProviders } from '@angular/core';\r\nimport { PoLanguageService } from './../po-language/po-language.service';\r\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `PoI18nService` para controle de idiomas com PO.\r\n *\r\n * Para utilização do serviço de idiomas `PoI18nService`, deve-se importar este módulo mesmo já havendo importado\r\n * o módulo `PoModule`. Na importação deve ser invocado o método `config`, informando um objeto que deve implementar\r\n * a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig) para configuração.\r\n *\r\n * <a id=\"i18n-config\"></a>\r\n * **Exemplo de configuração do módulo do i18n:**\r\n * ```\r\n * import { PoI18nConfig } from '@po-ui/ng-components';\r\n *\r\n * import { generalEn } from './i18n/general-en';\r\n * import { generalPt } from './i18n/general-pt';\r\n *\r\n * const i18nConfig: PoI18nConfig = {\r\n *   default: {\r\n *     language: 'pt-BR',\r\n *     context: 'general',\r\n *     cache: true\r\n *   },\r\n *   contexts: {\r\n *     general: {\r\n *       'pt-BR': generalPt,\r\n *       'en-US': generalEn\r\n *     },\r\n *     hcm: {\r\n *       url: 'http://10.1.1.1/api/translations/hcm/'\r\n *     }\r\n *   }\r\n * };\r\n *\r\n * @NgModule({\r\n *   declarations: [],\r\n *   imports: [\r\n *     PoModule,\r\n *     PoI18nModule.config(i18nConfig)\r\n *   ],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * ```\r\n *\r\n * Para cada contexto é possível definir a origem das literais, que podem ser de um serviço REST ou\r\n * de um objeto. Exemplo:\r\n *\r\n * Arquivo general-pt.ts\r\n * ```\r\n * export const generalPt = {\r\n *  add: 'Adicionar',\r\n *  greeting: 'Prazer, {0} {1}',\r\n *  people: '{0} Pessoas,\r\n *  remove: 'Remover'\r\n * }\r\n * ```\r\n *\r\n * Arquivo general-en.ts\r\n * ```\r\n * export const generalEn = {\r\n *  add: 'Add',\r\n *  greeting: 'Nice to meet you, {0} {1}',\r\n *  people: '{0} People,\r\n *  remove: 'Remove'\r\n * }\r\n * ```\r\n *\r\n * **Exemplo de configuração de contextos usando constantes externas:**\r\n * ```\r\n * import { PoI18nConfig } from '@po-ui/ng-components';\r\n *\r\n * import { generalEn } from './i18n/general-en';\r\n * import { generalPt } from './i18n/general-pt';\r\n *\r\n * const i18nConfig: PoI18nConfig = {\r\n *   contexts: {\r\n *     general: {\r\n *       'pt-BR': generalPt, // constantes em arquivos separados\r\n *       'en-US': generalEn // constantes em arquivos separados\r\n *     },\r\n *     crm: {\r\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\r\n *     }\r\n *   },\r\n *   default: {}\r\n * }\r\n * ```\r\n *\r\n * **Exemplo de configuração de um contexto utilizando serviço:**\r\n *\r\n * Ao optar por utilizar um serviço para configuração de contexto, deverá ser definida a URL\r\n * específica do contexto, como nos exemplos abaixo:\r\n *\r\n *  - http://10.0.0.1:3000/api/translations/crm\r\n *  - http://10.0.0.1:3000/api/translations/general\r\n *\r\n * Os idiomas e literais serão automaticamente buscados com parâmetros na própria URL:\r\n * - **language**: o idioma será sempre passado por parâmetro e é recomendado utilizar uma das linguagens\r\n * suportadas pelo PO (`pt-br`, `en-us`, `es-es` ou `ru`).\r\n * - **literals**: as literais serão separadas por vírgula. Caso esse parâmetro não seja informado, o\r\n * serviço deve retornar todas as literais do idioma.\r\n *\r\n * Exemplos de requisição:\r\n *\r\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\r\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\r\n *\r\n * > Sempre que o idioma solicitado não for encontrado, será buscado por `pt-br`.\r\n *\r\n * Além dos contextos, é possível definir as configurações *default* do sistema na configuração do\r\n * módulo utilizando a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig):\r\n *\r\n * **Exemplo de padrões definidos:**\r\n * ```\r\n * const i18nConfig: PoI18nConfig = {\r\n *   contexts: {\r\n *     general: { }\r\n *   },\r\n *   default: {\r\n *    language: 'pt-BR',\r\n *    context: 'general',\r\n *    cache: true\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * **Importante:**\r\n *\r\n * Recomenda-se que as definições *default* sejam realizadas apenas uma vez na aplicação,\r\n * preferencialmente no módulo `AppModule`.\r\n *\r\n * **i18n com *Lazy loading***\r\n *\r\n * Para aplicações que utilizem a abordagem de módulos com carregamento *lazy loading*, caso seja\r\n * definida outra configuração do `PoI18nModule`, deve-se atentar os seguintes detalhes:\r\n *\r\n * - Caso existam literais comuns na aplicação, estas devem ser reimportadas;\r\n * - Não defina outra *default language* para este módulo. Caso for definida, será sobreposta para\r\n * toda a aplicação;\r\n * - Caso precise de módulos carregados via *lazy loading* com linguagens diferentes, utilize o\r\n * método [`setLanguage()`](documentation/po-i18n#setLanguage) disponibilizado pelo `PoI18nService`\r\n * para definir a linguagem da aplicação e dos módulos com as linguagens diferentes.\r\n */\r\nexport declare class PoI18nModule {\r\n    static config(config: PoI18nConfig): ModuleWithProviders<PoI18nModule>;\r\n}\r\nexport declare function initializeLanguageDefault(config: PoI18nConfig, languageService: PoLanguageService): () => void;\r\n"]}