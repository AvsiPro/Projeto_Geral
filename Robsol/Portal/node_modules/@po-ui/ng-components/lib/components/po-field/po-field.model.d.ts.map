{"version":3,"file":"po-field.model.d.ts","sources":["po-field.model.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare abstract class PoFieldModel<T> implements ControlValueAccessor {\r\n    /** Rótulo exibido pelo componente. */\r\n    label: string;\r\n    /** Nome do componente. */\r\n    name: string;\r\n    /** Texto de apoio para o campo. */\r\n    help: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Aplica o foco no elemento ao ser iniciado.\r\n     *  > Caso mais de um elemento seja configurado com essa propriedade,\r\n     * o último elemento declarado com ela terá o foco.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoFocus: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica se o campo será desabilitado.\r\n     *\r\n     * @default `false`\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao alterar valor do campo.\r\n     */\r\n    change: EventEmitter<T>;\r\n    value: T;\r\n    protected onTouched: any;\r\n    private propagateChange;\r\n    constructor();\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    writeValue(value: T): void;\r\n    emitChange(value: any): void;\r\n    protected updateModel(value: T): void;\r\n    abstract onWriteValue(value: T): void;\r\n}\r\n"]}