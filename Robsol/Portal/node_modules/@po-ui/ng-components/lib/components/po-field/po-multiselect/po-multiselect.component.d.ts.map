{"version":3,"file":"po-multiselect.component.d.ts","sources":["po-multiselect.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\r\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\r\nimport { PoMultiselectFilterService } from './po-multiselect-filter.service';\r\n/**\r\n * @docsExtends PoMultiselectBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-multiselect-basic\" title=\"PO Multiselect Basic\">\r\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-labs\" title=\"PO Multiselect Labs\">\r\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-vacation\" title=\"PO Multiselect - Vacation\">\r\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"PO Multiselect - Vacation Reactive Form\">\r\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-heroes\" title=\"PO Multiselect - Heroes - using API\">\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.ts\"> </file>\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.service.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoMultiselectComponent extends PoMultiselectBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnChanges {\r\n    private renderer;\r\n    private changeDetector;\r\n    private el;\r\n    private controlPosition;\r\n    defaultService: PoMultiselectFilterService;\r\n    dropdownElement: ElementRef;\r\n    dropdown: any;\r\n    iconElement: ElementRef;\r\n    inputElement: ElementRef;\r\n    disclaimerOffset: number;\r\n    dropdownIcon: string;\r\n    dropdownOpen: boolean;\r\n    initialized: boolean;\r\n    positionDisclaimerExtra: any;\r\n    timeoutResize: any;\r\n    visibleElement: boolean;\r\n    private isCalculateVisibleItems;\r\n    private cacheOptions;\r\n    constructor(renderer: Renderer2, changeDetector: ChangeDetectorRef, el: ElementRef, controlPosition: PoControlPositionService, defaultService: PoMultiselectFilterService, languageService: PoLanguageService);\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Função que atribui foco ao componente.\r\n     *\r\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n     *\r\n     * ```\r\n     * import { PoMultiselectComponent } from '@po-ui/ng-components';\r\n     *\r\n     * ...\r\n     *\r\n     * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\r\n     *\r\n     * focusMultiselect() {\r\n     *   this.multiselect.focus();\r\n     * }\r\n     * ```\r\n     */\r\n    focus(): void;\r\n    getInputWidth(): number;\r\n    getDisclaimersWidth(): any[];\r\n    calculateVisibleItems(): void;\r\n    changeItems(changedItems: any): void;\r\n    updateVisibleItems(): void;\r\n    debounceResize(): void;\r\n    onBlur(): void;\r\n    onKeyDown(event?: any): void;\r\n    toggleDropdownVisibility(): void;\r\n    openDropdown(toOpen: any): void;\r\n    controlDropdownVisibility(toOpen: boolean): void;\r\n    scrollToSelectedOptions(): void;\r\n    setVisibleOptionsDropdown(options: any): void;\r\n    changeSearch(event: any): void;\r\n    closeDisclaimer(value: any): void;\r\n    wasClickedOnToggle(event: MouseEvent): void;\r\n    applyFilter(value?: string): Observable<Array<PoMultiselectOption>>;\r\n    private applyFilterInFirstClick;\r\n    private setOptionsByApplyFilter;\r\n    private adjustContainerPosition;\r\n    private close;\r\n    private initializeListeners;\r\n    private onScroll;\r\n    private open;\r\n    private removeListeners;\r\n    private setPositionDropdown;\r\n}\r\n"]}