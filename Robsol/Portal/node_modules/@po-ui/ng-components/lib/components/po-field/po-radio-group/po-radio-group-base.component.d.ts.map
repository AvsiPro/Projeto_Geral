{"version":3,"file":"po-radio-group-base.component.d.ts","sources":["po-radio-group-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-radio-group` deve ser utilizado para disponibilizar múltiplas opções ao usuário, permitindo a ele que\r\n * selecione apenas uma delas. Seu uso é recomendado para um número pequeno de opções, caso contrário, recomenda-se o uso\r\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\r\n *\r\n * Este não é um componente de multiseleção, se for este o caso, deve-se utilizar o\r\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\r\n *\r\n * > Ao passar um valor para o *model* que não esteja na lista de opções, o mesmo será definido como `undefined`.\r\n */\r\nexport declare abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Aplica foco no elemento ao ser iniciado.\r\n     *\r\n     * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoFocus: boolean;\r\n    /** Nome das opções. */\r\n    name: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se a indicação de campo opcional será exibida.\r\n     *\r\n     * > Não será exibida a indicação se:\r\n     * - O campo conter `p-required`;\r\n     * - Não possuir `p-help` e/ou `p-label`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    optional: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento ao alterar valor do campo.\r\n     */\r\n    change: EventEmitter<any>;\r\n    mdColumns: number;\r\n    value: any;\r\n    private _columns;\r\n    private _disabled?;\r\n    private _options;\r\n    private _required?;\r\n    private onChangePropagate;\r\n    private validatorChange;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define a quantidade de colunas para exibição das opções.\r\n     *\r\n     * **Considerações:**\r\n     *  - É possível exibir as opções entre `1` e `4` colunas.\r\n     *  - O número máximo de colunas é invariável nas seguintes resoluções:\r\n     *    + `sm`: `1`\r\n     *    + `md`: `2`\r\n     *\r\n     * @default `2`\r\n     */\r\n    set columns(value: number);\r\n    get columns(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será desabilitado.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set disabled(disabled: boolean);\r\n    get disabled(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será obrigatório.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set required(required: boolean);\r\n    get required(): boolean;\r\n    /**\r\n     * Lista de opções que serão exibidas.\r\n     * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\r\n     */\r\n    set options(value: Array<PoRadioGroupOption>);\r\n    get options(): Array<PoRadioGroupOption>;\r\n    changeValue(changedValue: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    registerOnValidatorChange(fn: any): void;\r\n    validate(abstractControl: AbstractControl): {\r\n        [key: string]: any;\r\n    };\r\n    writeValue(modelValue: any): void;\r\n    private checkColumnsRange;\r\n    private getGridSystemColumns;\r\n    private validateModel;\r\n    abstract getElementByValue(value: any): any;\r\n}\r\n"]}