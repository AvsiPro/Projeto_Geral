{"version":3,"file":"po-upload-base.service.d.ts","sources":["po-upload-base.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { Observable, Subscription } from 'rxjs';\r\nexport declare class PoUploadBaseService {\r\n    private http;\r\n    formField: string;\r\n    requests: Array<any>;\r\n    constructor(http: HttpClient);\r\n    /**\r\n     * Método responsável por enviar os arquivos ao servidor, conforme o parâmetro URL.\r\n     *\r\n     * @param url URL da requisição a ser efetuada.\r\n     * @param files Arquivos a serem enviados.\r\n     * @param tOnUpload Função a ser executada quando o arquivo for enviado ao servidor.\r\n     * @param uploadCallback Função que será executada enquanto os arquivos estiverem sendo enviados.\r\n     * @param successCallback Função a ser executada quando a requisição for efetuada com sucesso.\r\n     * @param errorCallback Função a ser executada quando a requisição foi efetuada com sucesso.\r\n     */\r\n    upload(url: string, files: Array<PoUploadFile>, headers: {\r\n        [name: string]: string | Array<string>;\r\n    }, tOnUpload: EventEmitter<any>, uploadCallback: (file: PoUploadFile, percent: number) => void, successCallback: (file: PoUploadFile, event: any) => void, errorCallback: (file: PoUploadFile, event: any) => void): void;\r\n    sendFile(url: string, file: PoUploadFile, headers: {\r\n        [name: string]: string | Array<string>;\r\n    }, formData: FormData, uploadCallback: (file: PoUploadFile, percent: number) => void, successCallback: (file: PoUploadFile, event: any) => void, errorCallback: (file: PoUploadFile, event: any) => void): void;\r\n    getRequest(url: string, headers: {\r\n        [name: string]: string | Array<string>;\r\n    }, formData: FormData): Observable<any>;\r\n    stopRequestByFile(file: any, callback: () => void): void;\r\n    removeRequest(requestObj: any): void;\r\n    addRequest(file: PoUploadFile, request: Subscription): void;\r\n}\r\n"]}