{"version":3,"file":"po-lookup-modal-base.component.d.ts","sources":["po-lookup-modal-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { PoModalAction } from '../../../../components/po-modal';\r\nimport { PoModalComponent } from '../../../../components/po-modal/po-modal.component';\r\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\r\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\r\nimport { PoLookupColumn } from '../interfaces/po-lookup-column.interface';\r\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\r\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\r\nimport { PoDisclaimer } from './../../../po-disclaimer/po-disclaimer.interface';\r\nimport { PoDisclaimerGroup } from './../../../po-disclaimer-group/po-disclaimer-group.interface';\r\nimport { PoLookupAdvancedFilter } from '../interfaces/po-lookup-advanced-filter.interface';\r\nimport { PoTableComponent } from './../../../po-table/po-table.component';\r\nexport declare const poLookupLiteralsDefault: {\r\n    en: PoLookupLiterals;\r\n    es: PoLookupLiterals;\r\n    pt: PoLookupLiterals;\r\n    ru: PoLookupLiterals;\r\n};\r\n/**\r\n * @docsPrivate\r\n *\r\n * Classe base do componente Po Lookup Modal.\r\n */\r\nexport declare abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {\r\n    private changeDetector;\r\n    poModal: PoModalComponent;\r\n    poTable: PoTableComponent;\r\n    /**\r\n     * Objeto com os campos que serão criados no busca avançada.\r\n     *\r\n     * > Caso não seja passado um objeto ou então ele esteja em branco o link de busca avançada ficará escondido.\r\n     *\r\n     * Exemplo de URL com busca avançada: http://localhost:3000/v1/heroes?filter=&page=1&pageSize=10`&name=Tony%20Stark&nickname=Homem%20de%20Ferro&email=irnman@marvel.com`\r\n     *\r\n     * Caso algum parâmetro seja uma lista, a concatenação é feita utilizando virgula.\r\n     * Exemplo: http://localhost:3000/v1/heroes?filter=&page=1&pageSize=10`&name=Tony%20Stark,Peter%20Parker,Gohan`\r\n     *\r\n     */\r\n    advancedFilters: Array<PoLookupAdvancedFilter>;\r\n    /**\r\n     * Lista das colunas da tabela.\r\n     * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\r\n     */\r\n    columns: Array<PoLookupColumn>;\r\n    /** Lista de itens da tabela. */\r\n    items: Array<any>;\r\n    /** Classe de serviço com a implementação do cliente. */\r\n    filterService: PoLookupFilter;\r\n    /** Classe de serviço com a implementação do cliente. */\r\n    filterParams: any;\r\n    /** Se verdadeiro, ativa a funcionalidade de scroll infinito para a tabela exibida no retorno da consulta. */\r\n    infiniteScroll: boolean;\r\n    /** Se verdadeiro, ativa a funcionalidade de multipla seleção. */\r\n    multiple: boolean;\r\n    /** Evento utilizado ao selecionar um registro da tabela. */\r\n    model: EventEmitter<any>;\r\n    /** Classe de serviço com items selecionados */\r\n    selectedItems: any;\r\n    /** Indica a coluna que será utilizada como descrição do campo e como filtro dentro da janela. */\r\n    fieldLabel: string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Indica a coluna que será utilizada como valor do campo.\r\n     *\r\n     * > Atenção: Caso não seja passada ou tenha o conteúdo incorreto, não irá atualizar o model do formulário.\r\n     */\r\n    fieldValue: string;\r\n    hasNext: boolean;\r\n    isLoading: boolean;\r\n    page: number;\r\n    pageSize: number;\r\n    searchValue: string;\r\n    tableLiterals: any;\r\n    advancedFilterModalTitle: string;\r\n    dynamicFormValue: {};\r\n    disclaimer: PoDisclaimer;\r\n    disclaimerGroup: PoDisclaimerGroup;\r\n    isAdvancedFilter: boolean;\r\n    primaryActionAdvancedFilter: PoModalAction;\r\n    secondaryActionAdvancedFilter: PoModalAction;\r\n    selecteds: Array<any>;\r\n    protected sort: PoTableColumnSort;\r\n    private filterSubscription;\r\n    private searchSubscription;\r\n    private showMoreSubscription;\r\n    private _literals;\r\n    private _title;\r\n    private language;\r\n    primaryAction: PoModalAction;\r\n    secondaryAction: PoModalAction;\r\n    /** Objeto com as literais usadas no `po-lookup-modal`. */\r\n    set literals(value: PoLookupLiterals);\r\n    get literals(): PoLookupLiterals;\r\n    /** Título da modal. */\r\n    set title(value: string);\r\n    get title(): string;\r\n    constructor(languageService: PoLanguageService, changeDetector: ChangeDetectorRef);\r\n    ngOnDestroy(): void;\r\n    ngOnInit(): void;\r\n    createDisclaimer(): void;\r\n    addDisclaimer(value: any, property: string): void;\r\n    onChangeDisclaimerGroup(): void;\r\n    search(): void;\r\n    searchFilteredItems(): void;\r\n    showMoreEvent(): void;\r\n    setSelectedItems(): void;\r\n    setDisclaimersItems(): void;\r\n    private setAdvancedFilterModalProperties;\r\n    private getAdvancedFilters;\r\n    private getFilteredItems;\r\n    private getFilteredParams;\r\n    private getOrderParam;\r\n    private initializeData;\r\n    private setLookupResponseProperties;\r\n    private setTableLiterals;\r\n    abstract openModal(): void;\r\n    abstract destroyDynamicForm(): void;\r\n}\r\n"]}