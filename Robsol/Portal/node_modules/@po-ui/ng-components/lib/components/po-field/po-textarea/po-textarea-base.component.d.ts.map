{"version":3,"file":"po-textarea-base.component.d.ts","sources":["po-textarea-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, ChangeDetectorRef } from '@angular/core';\r\n/**\r\n * @description\r\n *\r\n * Este é um componente de entrada de dados que possibilita o preechimento com múltiplas linhas.\r\n * É recomendado para observações, detalhamentos e outras situações onde o usuário deva preencher com um texto.\r\n *\r\n * Importante:\r\n *\r\n * - A propriedade `name` é obrigatória para que o formulário e o `model` funcionem corretamente. Do contrário, ocorrerá um erro de\r\n * _Angular_, onde será necessário informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\r\n *\r\n * ```\r\n * <po-textarea\r\n *   [(ngModel)]=\"pessoa.nome\"\r\n *   [ngModelOptions]=\"{standalone: true}\">\r\n * </po-textarea>\r\n * ```\r\n */\r\nexport declare abstract class PoTextareaBaseComponent implements ControlValueAccessor, Validator {\r\n    cd: ChangeDetectorRef;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Aplica foco no elemento ao ser iniciado.\r\n     *\r\n     * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoFocus: boolean;\r\n    /** Label do campo. */\r\n    label?: string;\r\n    /** Texto de apoio do campo. */\r\n    help?: string;\r\n    /** Nome e Id do componente. */\r\n    name: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se a indicação de campo opcional será exibida.\r\n     *\r\n     * > Não será exibida a indicação se:\r\n     * - O campo conter `p-required`;\r\n     * - Não possuir `p-help` e/ou `p-label`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    optional: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao sair do campo.\r\n     */\r\n    blur: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao entrar do campo.\r\n     */\r\n    enter: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao alterar valor e deixar o campo.\r\n     */\r\n    change: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao alterar valor do model.\r\n     */\r\n    changeModel: EventEmitter<any>;\r\n    private _disabled;\r\n    private _maxlength;\r\n    private _minlength;\r\n    private _placeholder;\r\n    private _readonly;\r\n    private _required;\r\n    private _rows;\r\n    private modelLastUpdate;\r\n    private onChangePropagate;\r\n    private validatorChange;\r\n    protected onTouched: any;\r\n    /** Placeholder, mensagem que aparecerá enquanto o campo não estiver preenchido. */\r\n    set placeholder(value: string);\r\n    get placeholder(): string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será desabilitado.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set disabled(disabled: boolean);\r\n    get disabled(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será somente leitura.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set readonly(readonly: boolean);\r\n    get readonly(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será obrigatório.\r\n     *\r\n     * > Esta propriedade é desconsiderada quando o _input_ está desabilitado `(p-disabled)`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set required(required: boolean);\r\n    get required(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica a quantidade mínima de caracteres que o campo aceita.\r\n     */\r\n    set minlength(minlength: number);\r\n    get minlength(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica a quantidade máxima de caracteres que o campo aceita.\r\n     */\r\n    set maxlength(maxlength: number);\r\n    get maxlength(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica a quantidade de linhas que serão exibidas.\r\n     *\r\n     * @default `3`\r\n     */\r\n    set rows(value: number);\r\n    get rows(): number;\r\n    constructor(cd: ChangeDetectorRef);\r\n    callOnChange(value: any): void;\r\n    controlChangeModelEmitter(value: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(func: any): void;\r\n    registerOnTouched(func: any): void;\r\n    registerOnValidatorChange(func: any): void;\r\n    validate(abstractControl: AbstractControl): {\r\n        [key: string]: any;\r\n    };\r\n    writeValue(value: any): void;\r\n    protected validateModel(): void;\r\n    abstract writeValueModel(value: any): void;\r\n}\r\n"]}