{"version":3,"file":"po-number.component.d.ts","sources":["po-number.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AbstractControl } from '@angular/forms';\r\nimport { ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { PoNumberBaseComponent } from './po-number-base.component';\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n *\r\n * O `po-number` é um input específico para receber apenas números.\r\n * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,\r\n * respectivamente.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-number-basic\" title=\"PO Number Basic\">\r\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-number-labs\" title=\"PO Number Labs\">\r\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-number-calculate\" title=\"PO Number - Calculate\">\r\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\r\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoNumberComponent extends PoNumberBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Intervalo.\r\n     *\r\n     * @default 1\r\n     */\r\n    step?: string;\r\n    /** Valor mínimo.\r\n     *\r\n     * > Quando o valor mínimo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\r\n     */\r\n    min?: number;\r\n    set setMin(min: number);\r\n    /** Valor máximo.\r\n     *\r\n     * > Quando o valor máximo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\r\n     */\r\n    max?: number;\r\n    set setMax(max: number);\r\n    constructor(el: ElementRef, cd: ChangeDetectorRef);\r\n    extraValidation(abstractControl: AbstractControl): {\r\n        [key: string]: any;\r\n    };\r\n    getErrorPatternMessage(): string;\r\n    private containsInvalidClass;\r\n}\r\n"]}