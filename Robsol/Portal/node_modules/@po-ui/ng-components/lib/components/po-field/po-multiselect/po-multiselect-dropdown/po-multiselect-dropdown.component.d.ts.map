{"version":3,"file":"po-multiselect-dropdown.component.d.ts","sources":["po-multiselect-dropdown.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\r\nimport { PoMultiselectLiterals } from '../../index';\r\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\r\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.\r\n */\r\nexport declare class PoMultiselectDropdownComponent {\r\n    /** Propriedade que indica se deve exibir o loading. */\r\n    isServerSearching?: boolean;\r\n    /** Propriedade que indica se o campo de pesquisa deverá ser escondido. */\r\n    hideSearch?: boolean;\r\n    /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\r\n    literals?: PoMultiselectLiterals;\r\n    /** Placeholder do campo de pesquisa. */\r\n    placeholderSearch: string;\r\n    /** Propriedade que recebe a lista de opções selecionadas. */\r\n    selectedOptions: Array<any>;\r\n    /** Propriedade que recebe a lista com todas as opções. */\r\n    options: Array<PoMultiselectOption>;\r\n    /** Propriedade que recebe a lista de opções que deverão ser criadas no dropdown. */\r\n    visibleOptions: Array<PoMultiselectOption>;\r\n    /** Propriedade que indica se o campo \"Selecionar todos\" deverá ser escondido. */\r\n    hideSelectAll?: boolean;\r\n    /** Evento disparado a cada tecla digitada na pesquisa. */\r\n    changeSearch: EventEmitter<any>;\r\n    /** Evento disparado a cada alteração na lista das opções selecionadas. */\r\n    change: EventEmitter<any>;\r\n    /**\r\n     * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.\r\n     * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento\r\n     * para notificar o componente principal que deve fechar o dropdown.\r\n     */\r\n    closeDropdown: EventEmitter<any>;\r\n    container: ElementRef;\r\n    ulElement: ElementRef;\r\n    searchElement: PoMultiselectSearchComponent;\r\n    scrollTop: number;\r\n    show: boolean;\r\n    get hasOptions(): boolean;\r\n    onKeydown(event: any): void;\r\n    scrollTo(index: any): void;\r\n    isSelectedItem(option: PoMultiselectOption): boolean;\r\n    clickItem(check: any, option: any): void;\r\n    onClickSelectAll(): void;\r\n    updateSelectedValues(checked: any, option: any): void;\r\n    everyVisibleOptionsSelected(selectedValues: any): boolean;\r\n    someVisibleOptionsSelected(selectedValues: any): boolean;\r\n    getStateSelectAll(): boolean;\r\n    callChangeSearch(event: any): void;\r\n    controlVisibility(toOpen: any): void;\r\n    private uniqueSelectedOptions;\r\n}\r\n"]}