{"version":3,"file":"po-checkbox-group-base.component.d.ts","sources":["po-checkbox-group-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\r\nimport { PoCheckboxGroupOptionView } from './interfaces/po-checkbox-group-option-view.interface';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-checkbox-group` exibe uma lista de múltipla escolha onde o usuário pode marcar e desmarcar,\r\n * utilizando a tecla de espaço ou o clique do mouse, várias opções.\r\n *\r\n * > Para seleção única, utilize o [**PO Radio Group**](/documentation/po-radio-group).\r\n *\r\n * Por padrão, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\r\n *\r\n * ```\r\n * favorites = ['PO', 'Angular'];\r\n * ```\r\n *\r\n * Na maioria das situações, o array com os objetos setados já atende as necessidades mas, caso o desenvolvedor\r\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\r\n * deve setar a propriedade `p-indeterminate` como `true`.\r\n *\r\n * Nesse caso, o po-checkbox-group vai retornar um objeto com todas as opções disponíveis e seus valores.\r\n *\r\n * ```\r\n * favorites = {\r\n *  PO: true,\r\n *  Angular: true,\r\n *  VueJS: false,\r\n *  React: null // indeterminado\r\n * };\r\n * ```\r\n */\r\nexport declare class PoCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Aplica foco no elemento ao ser iniciado.\r\n     *\r\n     * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoFocus: boolean;\r\n    /** Nome dos checkboxes */\r\n    name: string;\r\n    /** Texto de apoio do campo */\r\n    help?: string;\r\n    /** Label do campo */\r\n    label?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se a indicação de campo opcional será exibida.\r\n     *\r\n     * > Não será exibida a indicação se:\r\n     * - O campo conter `p-required`;\r\n     * - Não possuir `p-help` e/ou `p-label`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    optional: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Função para atualizar o `ngModel` do componente, necessário quando não for utilizado dentro da tag form.\r\n     *\r\n     * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n     * two-way binding no componente deve se utilizar da seguinte forma:\r\n     *\r\n     * ```\r\n     * <po-checkbox-group ... [ngModel]=\"checkboxgroupModel\" (ngModelChange)=\"checkboxgroupModel = $event\"> </po-checkbox-group>\r\n     * ```\r\n     *\r\n     */\r\n    ngModelChange: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao alterar valor do campo\r\n     */\r\n    change: EventEmitter<any>;\r\n    checkboxGroupOptionsView: Array<PoCheckboxGroupOptionView>;\r\n    checkedOptions: any;\r\n    checkedOptionsList: any;\r\n    mdColumns: number;\r\n    propagateChange: any;\r\n    validatorChange: any;\r\n    private _columns;\r\n    private _disabled?;\r\n    private _indeterminate?;\r\n    private _options?;\r\n    private _required?;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Possibilita definir a quantidade de colunas para exibição dos itens do *checkbox*.\r\n     * - É possível exibir as opções entre `1` e `4` colunas.\r\n     * - Para resolução `sm` a colunagem invariavelmente passa para `1` coluna.\r\n     * - Quando se trata de resolução `md` e o valor estabelecido para colunas for superior a `2`,\r\n     * o *grid system* será composto por `2` colunas.\r\n     * - Para evitar a quebra de linha, prefira a utilização de `1` coluna para opções com textos grandes.\r\n     *\r\n     * @default `2`\r\n     *\r\n     */\r\n    set columns(value: number);\r\n    get columns(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Desabilita todos os itens do checkbox.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set disabled(value: boolean);\r\n    get disabled(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opções, é necessário setar\r\n     * a propriedade `p-indeterminate` como `true`, por padrão essa propriedade vem desabilitada (`false`).\r\n     *\r\n     * Quando essa propriedade é setada como `true`, o *po-checkbox-group* passa a devolver um objeto completo para o\r\n     * `ngModel`, diferente do array que contém apenas os valores selecionados.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set indeterminate(indeterminate: boolean);\r\n    get indeterminate(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     * Lista de opções que serão exibidas\r\n     * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoCheckboxGroupOption\r\n     */\r\n    set options(value: Array<PoCheckboxGroupOption>);\r\n    get options(): Array<PoCheckboxGroupOption>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define que o campo será obrigatório.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set required(required: boolean);\r\n    get required(): boolean;\r\n    changeValue(): void;\r\n    checkIndeterminate(): any;\r\n    checkOption(value: PoCheckboxGroupOption): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    writeValue(optionsModel: any): void;\r\n    registerOnValidatorChange(fn: () => void): void;\r\n    validate(abstractControl: AbstractControl): {\r\n        [key: string]: any;\r\n    };\r\n    protected validateModel(model: any): void;\r\n    private checkColumnsRange;\r\n    private checkOptionModel;\r\n    private generateCheckOptions;\r\n    private getGridSystemColumns;\r\n    private isInvalidIndeterminate;\r\n    private removeDuplicatedOptions;\r\n    private setCheckboxGroupOptionsView;\r\n}\r\n"]}