{"version":3,"file":"po-rich-text.component.d.ts","sources":["po-rich-text.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\r\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\r\nimport { PoRichTextService } from './po-rich-text.service';\r\n/**\r\n * @docsExtends PoRichTextBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-rich-text-basic\" title=\"PO Rich Text Basic\">\r\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-rich-text-labs\" title=\"PO Rich Text Labs\">\r\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-rich-text-recipe\" title=\"PO Rich Text Recipe\">\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\r\n    private element;\r\n    bodyElement: PoRichTextBodyComponent;\r\n    private listener;\r\n    private modelLastUpdate;\r\n    get errorMsg(): string;\r\n    constructor(element: ElementRef, richTextService: PoRichTextService);\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Função que atribui foco ao componente.\r\n     *\r\n     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n     *\r\n     * ```\r\n     * import { PoRichTextComponent } from '@po-ui/ng-components';\r\n     *\r\n     * ...\r\n     *\r\n     * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\r\n     *\r\n     * focusRichText() {\r\n     *   this.richText.focus();\r\n     * }\r\n     * ```\r\n     */\r\n    focus(): void;\r\n    onBlur(): void;\r\n    onChangeValue(value: any): void;\r\n    updateValue(value: string): void;\r\n    private addKeyListeners;\r\n    private controlChangeModelEmitter;\r\n    private verifyAutoFocus;\r\n    private validateClassesForRequired;\r\n}\r\n"]}