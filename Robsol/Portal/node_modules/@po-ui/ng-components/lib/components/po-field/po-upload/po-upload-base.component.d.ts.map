{"version":3,"file":"po-upload-base.component.d.ts","sources":["po-upload-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadFileRestrictions } from './interfaces/po-upload-file-restriction.interface';\r\nimport { PoUploadLiterals } from './interfaces/po-upload-literals.interface';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nexport declare const poUploadLiteralsDefault: {\r\n    en: PoUploadLiterals;\r\n    es: PoUploadLiterals;\r\n    pt: PoUploadLiterals;\r\n    ru: PoUploadLiterals;\r\n};\r\n/**\r\n * @description\r\n *\r\n * O componente `po-upload` permite que o usuário envie arquivo(s) ao servidor e acompanhe o progresso.\r\n * Este componente também possibilita algumas configurações como:\r\n *  – Envio de diretórios, onde ele acessa o diretório selecionado assim como seus sub-diretórios;\r\n *  - Múltipla seleção, onde o usuário pode enviar mais de um arquivo ao servidor.\r\n *  - Auto envio, onde o arquivo é enviado imediatamente após a seleção do usuário, não necessitando que o usuário\r\n * clique em enviar.\r\n *  - Restrições de formatos de arquivo e tamanho.\r\n *  - Função de sucesso que será disparada quando os arquivos forem enviados com sucesso.\r\n *  - Função de erro que será disparada quando houver erro no envio dos arquivos.\r\n *  - Permite habilitar uma área onde os arquivos podem ser arrastados.\r\n */\r\nexport declare abstract class PoUploadBaseComponent implements ControlValueAccessor, Validator {\r\n    protected uploadService: PoUploadService;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Aplica foco no elemento ao ser iniciado.\r\n     *\r\n     * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoFocus: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define em *pixels* a altura da área onde podem ser arrastados os arquivos. A altura mínima aceita é `160px`.\r\n     *\r\n     * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\r\n     *\r\n     * @default `320`\r\n     */\r\n    dragDropHeight: number;\r\n    /** Rótulo do campo. */\r\n    label?: string;\r\n    /** Texto de apoio para o campo. */\r\n    help?: string;\r\n    /** URL que deve ser feita a requisição com os arquivos selecionados. */\r\n    url: string;\r\n    /** Define o valor do atributo `name` do componente. */\r\n    name: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se o envio do arquivo será automático ao selecionar o mesmo.\r\n     *\r\n     * @default `false`\r\n     */\r\n    autoUpload?: boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se a indicação de campo opcional será exibida.\r\n     *\r\n     * > Não será exibida a indicação se:\r\n     *  - O campo conter `p-required`;\r\n     *  - Não possuir `p-help` e/ou `p-label`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    optional: boolean;\r\n    /** Objeto que contém os cabeçalhos que será enviado na requisição dos arquvios. */\r\n    headers: {\r\n        [name: string]: string | Array<string>;\r\n    };\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Função que será executada no momento de realizar o envio do arquivo,\r\n     * onde será possível adicionar informações ao parâmetro que será enviado na requisição.\r\n     * É passado por parâmetro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\r\n     * que será enviado em conjunto com o arquivo na requisição, por exemplo:\r\n     *\r\n     * ```\r\n     *   event.data = {id: 'id do usuario'};\r\n     * ```\r\n     */\r\n    onUpload: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento será disparado quando ocorrer algum erro no envio do arquivo.\r\n     * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpErrorResponse`.\r\n     */\r\n    onError: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento será disparado quando o envio do arquivo for realizado com sucesso.\r\n     * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpResponse`.\r\n     */\r\n    onSuccess: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da *tag* `form`.\r\n     *\r\n     * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n     * two-way binding no componente deve se utilizar da seguinte forma:\r\n     *\r\n     * ```\r\n     * <po-upload ... [ngModel]=\"UploadModel\" (ngModelChange)=\"uploadModel = $event\"> </po-upload>\r\n     * ```\r\n     *\r\n     */\r\n    ngModelChange: EventEmitter<any>;\r\n    allowedExtensions: string;\r\n    currentFiles: Array<PoUploadFile>;\r\n    canHandleDirectory: boolean;\r\n    onModelChange: any;\r\n    protected extensionNotAllowed: number;\r\n    protected quantityNotAllowed: number;\r\n    protected sizeNotAllowed: number;\r\n    protected onModelTouched: any;\r\n    private _directory?;\r\n    private _disabled?;\r\n    private _dragDrop?;\r\n    private _fileRestrictions?;\r\n    private _formField?;\r\n    private _hideRestrictionsInfo?;\r\n    private _hideSelectButton?;\r\n    private _hideSendButton?;\r\n    private _isMultiple?;\r\n    private _literals?;\r\n    private _required?;\r\n    private language;\r\n    private validatorChange;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Permite a seleção de diretórios contendo um ou mais arquivos para envio.\r\n     *\r\n     * > A habilitação desta propriedade se restringe apenas à seleção de diretórios.\r\n     *\r\n     * > Definição não suportada pelo browser **Internet Explorer**, todavia será possível a seleção de arquivos padrão.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set directory(value: boolean);\r\n    get directory(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Exibe a área onde é possível arrastar e selecionar os arquivos. Quando estiver definida, omite o botão para seleção de arquivos\r\n     * automaticamente.\r\n     *\r\n     * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set dragDrop(value: boolean);\r\n    get dragDrop(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Oculta visualmente as informações de restrições para o upload.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideRestrictionsInfo(value: boolean);\r\n    get hideRestrictionsInfo(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Omite o botão de seleção de arquivos.\r\n     *\r\n     * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\r\n     * pela chamada do método `selectFiles()` para seleção de arquivos.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideSelectButton(value: boolean);\r\n    get hideSelectButton(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Omite o botão de envio de arquivos.\r\n     *\r\n     * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\r\n     * pela chamada do método `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideSendButton(value: boolean);\r\n    get hideSendButton(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Objeto com as literais usadas no `po-upload`.\r\n     *\r\n     * Existem duas maneiras de customizar o componente:\r\n     *\r\n     * - passando um objeto implementando a interface `PoUploadLiterals` com todas as literais disponíveis;\r\n     * - passando apenas as literais que deseja customizar:\r\n     * ```\r\n     *  const customLiterals: PoUploadLiterals = {\r\n     *    folders: 'Pastas',\r\n     *    selectFile: 'Buscar arquivo',\r\n     *    startSending: 'Enviar'\r\n     *  };\r\n     * ```\r\n     *\r\n     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\r\n     *\r\n     * ```\r\n     * <po-upload\r\n     *   [p-literals]=\"customLiterals\">\r\n     * </po-upload>\r\n     * ```\r\n     *\r\n     * > O objeto padrão de literais será traduzido de acordo com o idioma do *browser* (pt, en, es, ru).\r\n     */\r\n    set literals(value: PoUploadLiterals);\r\n    get literals(): PoUploadLiterals;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Objeto que segue a definição da interface `PoUploadFileRestrictions`,\r\n     * que possibilita definir tamanho máximo/mínimo e extensão dos arquivos permitidos.\r\n     */\r\n    set fileRestrictions(restrictions: PoUploadFileRestrictions);\r\n    get fileRestrictions(): PoUploadFileRestrictions;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Nome do campo de formulário que será enviado para o serviço informado na propriedade `p-url`.\r\n     *\r\n     * @default `files`\r\n     */\r\n    set formField(value: string);\r\n    get formField(): string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será desabilitado.\r\n     */\r\n    set disabled(value: boolean);\r\n    get disabled(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define se pode selecionar mais de um arquivo.\r\n     *\r\n     * > Se utilizada a `p-directory`, habilita-se automaticamente esta propriedade.\r\n     */\r\n    set isMultiple(value: boolean);\r\n    get isMultiple(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o campo será obrigatório.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set required(required: boolean);\r\n    get required(): boolean;\r\n    constructor(uploadService: PoUploadService, languageService: PoLanguageService);\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    registerOnValidatorChange(fn: () => void): void;\r\n    validate(abstractControl: AbstractControl): {\r\n        [key: string]: any;\r\n    };\r\n    writeValue(model: any): void;\r\n    protected isExceededFileLimit(currentFilesLength: number): boolean;\r\n    protected parseFiles(files: Array<File>): Array<PoUploadFile>;\r\n    protected validateModel(model: any): void;\r\n    private checkRestrictions;\r\n    private existsFileSameName;\r\n    private getUploadService;\r\n    private insertFileInFiles;\r\n    private isAllowedExtension;\r\n    private setAllowedExtensions;\r\n    private initRestrictions;\r\n    private updateExistsFileInFiles;\r\n    abstract sendFeedback(): void;\r\n    abstract setDirectoryAttribute(value: boolean): any;\r\n}\r\n"]}