{"version":3,"file":"po-list-view-base.component.d.ts","sources":["po-list-view-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\r\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\r\nexport declare const poListViewLiteralsDefault: {\r\n    en: PoListViewLiterals;\r\n    es: PoListViewLiterals;\r\n    pt: PoListViewLiterals;\r\n    ru: PoListViewLiterals;\r\n};\r\n/**\r\n * @description\r\n *\r\n * Componente de lista que recebe um array de objetos e renderiza de forma dinâmica os dados de\r\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\r\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\r\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\r\n *\r\n * O componente disponibiliza uma área específica para exibição informações adicionais,\r\n * através da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\r\n */\r\nexport declare class PoListViewBaseComponent {\r\n    /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será usado como link para o título. */\r\n    propertyLink?: string;\r\n    /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será exibido como o título de cada item. */\r\n    propertyTitle?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Recebe uma ação, que será executada quando clicar no botão \"Carregar mais resultados\".\r\n     *\r\n     * > Caso nenhuma ação for definida o mesmo não ficará visível.\r\n     */\r\n    showMore: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ação que será executada ao clicar no título.\r\n     *\r\n     * Ao ser disparado, o método inserido na ação irá receber como parâmetro o item da lista clicado.\r\n     */\r\n    titleAction: EventEmitter<any>;\r\n    popupTarget: any;\r\n    selectAll: boolean;\r\n    showHeader: boolean;\r\n    private _actions;\r\n    private _height;\r\n    private _hideSelectAll;\r\n    private _items;\r\n    private _literals;\r\n    private _select;\r\n    private _showMoreDisabled;\r\n    private language;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Lista de ações que serão exibidas no componente.\r\n     */\r\n    set actions(value: Array<PoListViewAction>);\r\n    get actions(): Array<PoListViewAction>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define a altura do `po-list-view` em *pixels*.\r\n     */\r\n    set height(height: number);\r\n    get height(): number;\r\n    /**\r\n     * @description\r\n     *\r\n     * Esconde o *checkbox* para seleção de todos os itens.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideSelectAll(hideSelectAll: boolean);\r\n    get hideSelectAll(): boolean;\r\n    /** Lista de itens que serão exibidos no componente. */\r\n    set items(value: Array<any>);\r\n    get items(): Array<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Objeto com as literais usadas no `po-list-view`.\r\n     *\r\n     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n     *\r\n     * ```\r\n     *  const customLiterals: PoListViewLiterals = {\r\n     *    hideDetail: 'Ocultar detalhes completamente',\r\n     *    loadMoreData: 'Mais dados',\r\n     *    showDetail: 'Mostrar mais detalhes',\r\n     *    selectAll: 'Selecionar todos os itens'\r\n     *  };\r\n     * ```\r\n     *\r\n     * Ou passando apenas as literais que deseja customizar:\r\n     *\r\n     * ```\r\n     *  const customLiterals: PoListViewLiterals = {\r\n     *    showDetail: 'Mostrar mais detalhes'\r\n     *  };\r\n     * ```\r\n     *\r\n     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n     *\r\n     * ```\r\n     * <po-list-view\r\n     *   [p-literals]=\"customLiterals\">\r\n     * </po-list-view>\r\n     * ```\r\n     *\r\n     * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n     * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n     */\r\n    set literals(value: PoListViewLiterals);\r\n    get literals(): PoListViewLiterals;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinâmica `$selected` para identificar se o\r\n     * item está selecionado, por exemplo:\r\n     *\r\n     * ```\r\n     *  item.$selected\r\n     *\r\n     *  // ou\r\n     *\r\n     *  item['$selected']\r\n     * ```\r\n     *\r\n     * @default `false`\r\n     */\r\n    set select(select: boolean);\r\n    get select(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Indica que o botão `Carregar Mais Resultados` será desabilitado.\r\n     */\r\n    set showMoreDisabled(value: boolean);\r\n    get showMoreDisabled(): boolean;\r\n    constructor(languageService: PoLanguageService);\r\n    onClickAction(listViewAction: PoListViewAction, item: any): void;\r\n    onShowMore(): void;\r\n    runTitleAction(listItem: any): void;\r\n    selectAllListItems(): void;\r\n    selectListItem(row: any): void;\r\n    private deleteInternalAttrs;\r\n    private checkIfItemsAreSelected;\r\n    private showMainHeader;\r\n}\r\n"]}