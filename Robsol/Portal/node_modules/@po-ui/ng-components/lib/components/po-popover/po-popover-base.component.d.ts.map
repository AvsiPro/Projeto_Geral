{"version":3,"file":"po-popover-base.component.d.ts","sources":["po-popover-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:\r\n * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\r\n *\r\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\r\n * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).\r\n *\r\n * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).\r\n *\r\n * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,\r\n * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\r\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\r\n *\r\n * Também é possível escolher entre os dois eventos que podem abrir o *popover*.\r\n * Os eventos permitidos são: `click` e `hover`.\r\n *\r\n */\r\nexport declare class PoPopoverBaseComponent {\r\n    /**\r\n     * @description\r\n     *\r\n     * ElementRef do componente de origem responsável por abrir o popover.\r\n     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\r\n     * de abertura, exemplo:\r\n     *\r\n     * ```\r\n     * <po-button\r\n     *   p-label=\"Open Popover\">\r\n     * </po-button>\r\n     *\r\n     * <po-popover\r\n     *   [p-target]=\"poButton\"\r\n     *   [p-title]=\"PO Popover\">\r\n     * </po-popover>\r\n     * ```\r\n     *\r\n     * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do\r\n     * HTML que irá disparar o evento. Exemplo:\r\n     *\r\n     * ```\r\n     * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\r\n     * ```\r\n     *\r\n     * Pode-se tambem informar diretamente o HTMLElement, para não ter que utilizar o ViewChild.\r\n     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\r\n     * de abertura, exemplo:\r\n     *\r\n     * ```\r\n     * <button #target>\r\n     *   Abrir popover\r\n     * </button>\r\n     *\r\n     * <po-popover\r\n     *     [p-target]=\"target\"\r\n     *     p-trigger=\"click\" >\r\n     * </po-popover>\r\n     * ```\r\n     *\r\n     *\r\n     *\r\n     */\r\n    target: ElementRef | HTMLElement;\r\n    /** Título do popover. */\r\n    title?: string;\r\n    /** Evento disparado ao fechar o popover. */\r\n    closePopover: EventEmitter<any>;\r\n    isHidden: boolean;\r\n    protected clickoutListener: () => void;\r\n    protected mouseEnterListener: () => void;\r\n    protected mouseLeaveListener: () => void;\r\n    protected resizeListener: () => void;\r\n    private _hideArrow;\r\n    private _position?;\r\n    private _trigger?;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Desabilita a seta do componente *popover*.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideArrow(value: boolean);\r\n    get hideArrow(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja\r\n     * usada a orientação \"right\" (direita), porém o mesmo é flexível e será rotacionado\r\n     * automaticamente para se adequar a tela, caso necessário.\r\n     *\r\n     * Posições válidas:\r\n     * - `right`: Posiciona o po-popover no lado direito do componente alvo.\r\n     * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\r\n     * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\r\n     * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\r\n     * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.\r\n     * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.\r\n     * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\r\n     * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\r\n     * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\r\n     * - `top`: Posiciona o po-popover acima do componente alvo.\r\n     * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.\r\n     * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.\r\n     *\r\n     *\r\n     * @default right\r\n     */\r\n    set position(value: string);\r\n    get position(): string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Define o evento que abrirá o po-popover.\r\n     *\r\n     * Valores válidos:\r\n     *  - `click`: Abre ao clicar no componente alvo.\r\n     *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\r\n     *\r\n     * @default click\r\n     * @optional\r\n     */\r\n    set trigger(value: string);\r\n    get trigger(): string;\r\n}\r\n"]}