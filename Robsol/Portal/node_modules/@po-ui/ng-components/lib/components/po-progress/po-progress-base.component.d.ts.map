{"version":3,"file":"po-progress-base.component.d.ts","sources":["po-progress-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\r\n/**\r\n * @description\r\n *\r\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\r\n *\r\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualização no sistema ou o processamento de uma imagem.\r\n */\r\nexport declare class PoProgressBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Informação adicional que aparecerá abaixo da barra de progresso ao lado direito.\r\n     */\r\n    info?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ícone que aparecerá ao lado do texto da propriedade `p-info`.\r\n     *\r\n     * Exemplo: `po-icon-ok`.\r\n     */\r\n    infoIcon?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Status da barra de progresso que indicará visualmente ao usuário\r\n     * o andamento, por exemplo, se a mesma foi concluída com sucesso.\r\n     *\r\n     * @default `PoProgressStatus.Default`\r\n     */\r\n    status: PoProgressStatus;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Texto principal que aparecerá abaixo da barra de progresso no lado esquerdo.\r\n     */\r\n    text?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento que será disparado ao clicar no ícone de cancelamento (\"x\") na parte inferior da barra de progresso.\r\n     *\r\n     * Ao ser disparado, a função receberá como parâmetro o status atual da barra de progresso.\r\n     *\r\n     * > Se nenhuma função for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\r\n     * o ícone de cancelamento não será exibido.\r\n     */\r\n    cancel: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento que será disparado ao clicar no ícone de tentar novamente na parte inferior da barra de progresso.\r\n     *\r\n     * > o ícone será exibido apenas se informar uma função neste evento e o status da barra de progresso for\r\n     * `PoProgressStatus.Error`.\r\n     */\r\n    retry: EventEmitter<any>;\r\n    private _indeterminate?;\r\n    private _value?;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Habilita o modo indeterminado na barra de progresso, que mostra uma animação fixa sem um valor estabelecido.\r\n     *\r\n     * Esta opção pode ser utilizada quando não souber quanto tempo levará para que um processo seja concluído.\r\n     *\r\n     * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` será ignorada.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set indeterminate(indeterminate: boolean);\r\n    get indeterminate(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Valor que representará o progresso.\r\n     *\r\n     * > Os valores aceitos são números inteiros de `0` à `100`.\r\n     *\r\n     * @default `0`\r\n     */\r\n    set value(value: number);\r\n    get value(): number;\r\n    private isProgressRangeValue;\r\n}\r\n"]}