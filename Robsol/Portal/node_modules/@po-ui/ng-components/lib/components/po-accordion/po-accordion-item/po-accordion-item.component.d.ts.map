{"version":3,"file":"po-accordion-item.component.d.ts","sources":["po-accordion-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef } from '@angular/core';\r\nimport { PoAccordionService } from '../services/po-accordion.service';\r\n/**\r\n * @description\r\n *\r\n * Componente utilizado para renderizar os itens do `po-accordion`.\r\n *\r\n * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,\r\n * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:\r\n *\r\n * ```\r\n * <po-accordion>\r\n *   <po-accordion-item p-label=\"PO Accordion 1\" #item1>\r\n *      Accordion 1\r\n *   </po-accordion-item>\r\n *\r\n *   <po-accordion-item p-label=\"PO Accordion 2\">\r\n *      Accordion 2\r\n *   </po-accordion-item>\r\n * </po-accordion>\r\n * ```\r\n *\r\n * e no typescript pode-se utilizar o `@ViewChild`:\r\n *\r\n * ```\r\n *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;\r\n *\r\n *  ngAfterContentInit() {\r\n *    // ou utilizar o método collapse()\r\n *    this.item1.expand();\r\n *  }\r\n * ```\r\n */\r\nexport declare class PoAccordionItemComponent {\r\n    private accordionService;\r\n    /** Título do item. */\r\n    label: string;\r\n    templateRef: TemplateRef<any>;\r\n    expanded: boolean;\r\n    constructor(accordionService: PoAccordionService);\r\n    /**\r\n     * Método para colapsar o `po-accordion-item`.\r\n     */\r\n    collapse(): void;\r\n    /**\r\n     * Método para expandir o `po-accordion-item`.\r\n     */\r\n    expand(): void;\r\n}\r\n"]}