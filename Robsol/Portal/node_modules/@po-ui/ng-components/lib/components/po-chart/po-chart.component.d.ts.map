{"version":3,"file":"po-chart.component.d.ts","sources":["po-chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, DoCheck, ElementRef, OnDestroy, ViewContainerRef, OnInit, Renderer2 } from '@angular/core';\r\nimport { PoChartBaseComponent } from './po-chart-base.component';\r\nimport { PoChartSvgContainerService } from './services/po-chart-svg-container.service';\r\nimport { PoColorService } from '../../services/po-color/po-color.service';\r\nimport { PoChartMathsService } from './services/po-chart-maths.service';\r\n/**\r\n * @docsExtends PoChartBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-chart-basic\" title=\"PO Chart Basic\">\r\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-chart-labs\" title=\"PO Chart Labs\">\r\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-chart-coffee-ranking\" title=\"PO Chart - Coffee Ranking\">\r\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\r\n    protected colorService: PoColorService;\r\n    private changeDetector;\r\n    private containerService;\r\n    private componentFactoryResolver;\r\n    private elementRef;\r\n    private mathsService;\r\n    private renderer;\r\n    chartContainer: ViewContainerRef;\r\n    chartHeader: ElementRef;\r\n    chartLegend: ElementRef;\r\n    chartWrapper: ElementRef;\r\n    private calculatedComponentRefElement;\r\n    private calculatedSvgContainerElement;\r\n    private componentRef;\r\n    private initialized;\r\n    private windowResizeListener;\r\n    private subscription;\r\n    private mappings;\r\n    constructor(colorService: PoColorService, changeDetector: ChangeDetectorRef, containerService: PoChartSvgContainerService, componentFactoryResolver: ComponentFactoryResolver, elementRef: ElementRef, mathsService: PoChartMathsService, renderer: Renderer2);\r\n    get isChartGaugeType(): boolean;\r\n    onResize: () => void;\r\n    ngAfterViewInit(): void;\r\n    ngDoCheck(): void;\r\n    ngOnDestroy(): void;\r\n    resizeAction(): void;\r\n    ngOnInit(): void;\r\n    rebuildComponentRef(): void;\r\n    protected calculateAxisXLabelArea(): number;\r\n    protected getSvgContainerSize(): void;\r\n    private chartLegendHeight;\r\n    private createComponent;\r\n    private dynamicComponentSetting;\r\n    private getAxisXLabelArea;\r\n    private getComponentType;\r\n    private getChartMeasurements;\r\n    private removeWindowResizeListener;\r\n    private setComponentRefProperties;\r\n    private setClickSubscribe;\r\n    private setHoverSubscribe;\r\n    private setResizeListenerSubscribe;\r\n}\r\n"]}