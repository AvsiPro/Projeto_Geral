import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';
import { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoChartGaugeTextContentComponent implements AfterViewInit {
    private changeDetection;
    descriptionElement: ElementRef;
    serieValueConverted: string;
    tooltip: string;
    private _gaugeWidth;
    private _serie;
    set gaugeWidth(value: number);
    get gaugeWidth(): number;
    set serie(serie: PoChartGaugeSerie);
    get serie(): PoChartGaugeSerie;
    constructor(changeDetection: ChangeDetectorRef);
    get hasSerieDescription(): string;
    get hasSerieValue(): boolean;
    get maxDescriptionWidth(): {
        'max-width': string;
    };
    ngAfterViewInit(): void;
    private checkTextDescriptionSize;
    private convertValueInPercentFormat;
    private isEllipsisActive;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PoChartGaugeTextContentComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PoChartGaugeTextContentComponent, "po-chart-gauge-text-content", never, { "gaugeWidth": "p-gauge-width"; "serie": "p-serie"; }, {}, never, never>;
}

//# sourceMappingURL=po-chart-gauge-text-content.component.d.ts.map