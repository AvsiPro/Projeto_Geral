import { ElementRef, ChangeDetectorRef, EventEmitter } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class PoGridCellComponent {
    private changeDetectorRef;
    align?: string;
    freeze?: boolean;
    tabIndex?: number;
    position?: string;
    readonly?: boolean;
    required?: boolean;
    valueChange: EventEmitter<any>;
    inputElement: ElementRef;
    contentElement: ElementRef;
    _value: any;
    edit: boolean;
    editValue: string;
    private _width;
    set width(value: string | number);
    get width(): string | number;
    set value(value: any);
    get value(): any;
    constructor(changeDetectorRef: ChangeDetectorRef);
    onKeyDownContent(event: any): void;
    dblclick(event: any): void;
    onBlurInput(): void;
    onKeyDownInput(event: any): void;
    private onEditCell;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<PoGridCellComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<PoGridCellComponent, "po-grid-cell", never, { "align": "p-align"; "freeze": "p-freeze"; "tabIndex": "p-tab-index"; "position": "p-position"; "readonly": "p-readonly"; "required": "p-required"; "width": "p-width"; "value": "p-value"; }, { "valueChange": "p-valueChange"; }, never, never>;
}

//# sourceMappingURL=po-grid-cell.component.d.ts.map