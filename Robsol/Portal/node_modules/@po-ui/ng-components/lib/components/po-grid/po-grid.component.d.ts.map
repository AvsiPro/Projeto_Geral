{"version":3,"file":"po-grid.component.d.ts","sources":["po-grid.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\r\n/**\r\n * @description\r\n *\r\n * > Componente em desenvolvimento, podendo haver BREAKING CHANGES nas próximas versões.\r\n *\r\n * Componente grid.\r\n *\r\n * Ações / atalhos:\r\n *\r\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\r\n * - ARROW-DOWN: Navega para celula inferior;\r\n * - ARROW-RIGHT: Navega para celula direita;\r\n * - ARROW-LEFT: Navega para celula esquerda;\r\n * - TAB: Navega para próxima celula;\r\n * - SHIFT+TAB: Navega para celula anterior;\r\n * - CTRL+DEL: Remove linha;\r\n * - DEL/BACKSPACE: Limpa celula;\r\n * - ENTER: Edita linha com valor atual/Confirma edição da celula;\r\n * - DOUBLE-CLICK: Edita linha com valor atual;\r\n * - ESC: Cancela edição da celula / Cancela inserção de linhas em branco;\r\n * - A..Z/0..9: Inicia edição com valor em branco.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-grid-basic\" title=\"PO Grid Basic\">\r\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoGridComponent implements OnDestroy {\r\n    private changeDetectorRef;\r\n    private elRef;\r\n    tableElement: ElementRef;\r\n    tableWrapper: ElementRef;\r\n    /**\r\n     * @description\r\n     *\r\n     * Ações disparadas quando uma linha do grid é manipulada.\r\n     */\r\n    rowActions: PoGridRowActions;\r\n    /**\r\n     * Lista com os dados que serão exibidos no grid.\r\n     */\r\n    data: Array<any>;\r\n    lastCell: string;\r\n    lastRow: number;\r\n    lastColumn: number;\r\n    currencyCell: string;\r\n    currencyRow: number;\r\n    currencyColumn: number;\r\n    currencyObj: any;\r\n    logger: boolean;\r\n    width: string;\r\n    widporeeze: number;\r\n    widthActions: number;\r\n    private resizeListener;\r\n    private timeoutResize;\r\n    private _columns;\r\n    /**\r\n     * Colunas exibidas no grid.\r\n     */\r\n    set columns(value: Array<any>);\r\n    get columns(): Array<any>;\r\n    constructor(changeDetectorRef: ChangeDetectorRef, elRef: ElementRef, renderer: Renderer2);\r\n    ngOnDestroy(): void;\r\n    get freezeColumns(): any[];\r\n    get actionColumns(): any[];\r\n    cancelRow(event: any, row: any): void;\r\n    removeRow(event: any, row: any): boolean;\r\n    tableKeydown(event: any, direction: string): void;\r\n    tableClick(event: any): void;\r\n    saveRow(row: number): boolean;\r\n    insertRow(): boolean;\r\n    isEmptyRow(row: number): boolean;\r\n    selectCell(row: number, col: number): void;\r\n    private debounceResize;\r\n    private getEventPath;\r\n}\r\n"]}