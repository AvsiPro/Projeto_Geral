{"version":3,"file":"po-menu-base.component.d.ts","sources":["po-menu-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { PoMenuFilter } from './po-menu-filter/po-menu-filter.interface';\r\nimport { PoMenuItem } from './po-menu-item.interface';\r\nimport { PoMenuService } from './services/po-menu.service';\r\nimport { PoMenuGlobalService } from './services/po-menu-global.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nexport declare const poMenuLiteralsDefault: {\r\n    en: {\r\n        itemNotFound: string;\r\n        emptyLabelError: string;\r\n    };\r\n    es: {\r\n        itemNotFound: string;\r\n        emptyLabelError: string;\r\n    };\r\n    pt: {\r\n        itemNotFound: string;\r\n        emptyLabelError: string;\r\n    };\r\n    ru: {\r\n        itemNotFound: string;\r\n        emptyLabelError: string;\r\n    };\r\n};\r\n/**\r\n * @description\r\n *\r\n * Este é um componente de menu lateral que é utilizado para navegação nas páginas de uma aplicação.\r\n *\r\n * O componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informações dos itens de menu como\r\n * textos, links para redirecionamento, ações, até 4 níveis de menu e ícones para o primeiro nível de menu.\r\n */\r\nexport declare abstract class PoMenuBaseComponent {\r\n    menuGlobalService: PoMenuGlobalService;\r\n    menuService: PoMenuService;\r\n    languageService: PoLanguageService;\r\n    allowIcons: boolean;\r\n    allowCollapseMenu: boolean;\r\n    filteredItems: any;\r\n    filterService: PoMenuFilter;\r\n    readonly literals: any;\r\n    private _collapsed;\r\n    private _filter;\r\n    private _level;\r\n    private _logo;\r\n    private _maxLevel;\r\n    private _menus;\r\n    private _params;\r\n    private _service;\r\n    private _shortLogo;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\r\n     *\r\n     * > Utilize esta propriedade para iniciar o menu colapsado.\r\n     *\r\n     * > Ao utilizar os métodos [`colapse`](documentation/po-menu#colapseMethod), [`expand`](documentation/po-menu#expandMethod) e\r\n     * [`toggle`](documentation/po-menu#toggleMethod) o valor desta propriedade não é alterado.\r\n     *\r\n     * **Importante:**\r\n     *\r\n     * > O menu será colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set collapsed(collapsed: boolean);\r\n    get collapsed(): boolean;\r\n    /** Lista dos itens do menu. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */\r\n    set menus(menus: Array<PoMenuItem>);\r\n    get menus(): Array<PoMenuItem>;\r\n    get maxLevel(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Habilita um campo para pesquisa no menu.\r\n     * A pesquisa é realizada em todos os níveis do menu e busca apenas pelos itens que contém uma ação e/ou link definidos,\r\n     * ou também, pode ser realizada através de um serviço definido na propriedade `p-service`.\r\n     *\r\n     * > O campo de pesquisa é desabilitado se o menu estiver colapsado.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set filter(filter: boolean);\r\n    get filter(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Nesta propriedade deve ser informada a URL do serviço em que será utilizado para realizar o filtro de itens do\r\n     * menu quando realizar uma busca. Caso haja a necessidade de customização, pode ser informado um\r\n     * serviço implementando a interface `PoMenuFilter`.\r\n     *\r\n     * Caso utilizada uma URL, o serviço deve retornar os dados conforme o\r\n     * [Guia de implementação de APIs](https://po-ui.io/guides/api) do PO UI.\r\n     *\r\n     * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando o valor digitado\r\n     * no parâmetro `search`, veja exemplo:\r\n     *\r\n     * > O filtro no serviço será realizado caso contenha no mínimo três caracteres no campo de busca, por exemplo `tot`.\r\n     *\r\n     * ```\r\n     * <po-menu p-service=\"/api/v1/fnd/menu\">\r\n     * </po-menu>\r\n     *\r\n     * Requisição: GET /api/v1/fnd/menu?search=contas\r\n     * ```\r\n     *\r\n     * > É necessário que propriedade `p-filter` esteja habilitada.\r\n     */\r\n    set service(value: string | PoMenuFilter);\r\n    get service(): string | PoMenuFilter;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Deve ser informado um objeto que deseja-se utilizar na requisição de filtro dos itens de menu.\r\n     *\r\n     * Caso utilizado um serviço customizado, implementando a interface `PoMenuFilter`, o valor desta propriedade\r\n     * será passado como parâmetro, na função `getFilteredData`.\r\n     *\r\n     * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando os valores informados\r\n     * nesta propriedade em conjunto com o parâmetro `search`, veja exemplo:\r\n     *\r\n     * ```\r\n     * <po-menu p-service=\"/api/v1/fnd/menu\" [p-params]=\"{ company: 1, user: 297767512 }\">\r\n     * </po-menu>\r\n     *\r\n     * Requisição: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\r\n     * ```\r\n     */\r\n    set params(value: any);\r\n    get params(): any;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caminho para a logomarca, que será exibida quando o componente estiver expandido, localizada na parte superior.\r\n     *\r\n     * > **Importante:**\r\n     * - Caso esta propriedade estiver indefinida ou inválida o espaço para logomarca será removido.\r\n     * - Como boa prática, indica-se utilizar imagens com até `24px` de altura e `224px` de largura,\r\n     * caso ultrapassar esses valores a imagem será readequada no espaço disponível.\r\n     */\r\n    set logo(value: any);\r\n    get logo(): any;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caminho para a logomarca, que será exibida quando o componente estiver colapsado, localizada na parte superior.\r\n     *\r\n     * > **Importante:**\r\n     * - Caso esta propriedade estiver indefinida ou inválida passa a assumir o valor informado na propriedade `p-logo` e na ausência desta o\r\n     * espaço para logomarca será removido.\r\n     * - Como boa prática, indica-se utilizar imagens com até `48px` de altura e `48px` de largura,\r\n     * caso ultrapassar esses valores a imagem será readequada no espaço disponível.\r\n     * - Caso não informar um valor, esta propriedade passa a assumir o valor informado na propriedade `p-logo`.\r\n     */\r\n    set shortLogo(value: any);\r\n    get shortLogo(): any;\r\n    constructor(menuGlobalService: PoMenuGlobalService, menuService: PoMenuService, languageService: PoLanguageService);\r\n    protected setMenuExtraProperties(): void;\r\n    protected setMenuItemProperties(menuItem: PoMenuItem): void;\r\n    protected validateMenus(menus: any): void;\r\n    protected setMenuType(menuItem: PoMenuItem): string;\r\n    private configService;\r\n    private processSubItems;\r\n    private removeBadgeAlert;\r\n    private setMenuBadgeAlert;\r\n    private validateMenu;\r\n    protected abstract checkActiveMenuByUrl(urlRouter: any): any;\r\n    protected abstract checkingRouterChildrenFragments(): any;\r\n    protected abstract validateCollapseClass(): any;\r\n}\r\n"]}