{"version":3,"file":"po-disclaimer-base.component.d.ts","sources":["po-disclaimer-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente po-disclaimer é responsável por representar tags.\r\n * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,\r\n * como por exemplo, no po-multi-select.\r\n *\r\n */\r\nexport declare class PoDisclaimerBaseComponent {\r\n    /**\r\n     * Label que aparecerá dentro do po-disclaimer.\r\n     * Quando não for definido um label será apresentada a propriedade p-value.\r\n     */\r\n    label?: string;\r\n    /** Valor do po-disclaimer. */\r\n    value: string;\r\n    /** Nome da propriedade vinculada à este po-disclaimer. */\r\n    property?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Evento disparado ao fechar o disclaimer.\r\n     * Para este evento será passado como parâmetro um objeto com value, label e property.\r\n     */\r\n    closeAction: EventEmitter<any>;\r\n    showDisclaimer: boolean;\r\n    private _type;\r\n    private _hideClose?;\r\n    /**\r\n     * @description\r\n     *\r\n     * Esta propriedade esconde o botão para fechamento do po-disclaimer, ao utilizar esta propriedade\r\n     * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.\r\n     *\r\n     * @default false\r\n     */\r\n    set hideClose(value: boolean);\r\n    get hideClose(): boolean;\r\n    /**\r\n     * @description\r\n     *\r\n     * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.\r\n     *\r\n     * @default default\r\n     * @optional\r\n     */\r\n    set type(type: string);\r\n    get type(): string;\r\n    close(): void;\r\n    getLabel(): string;\r\n}\r\n"]}