{"version":3,"file":"po-page-slide.component.d.ts","sources":["po-page-slide.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef } from '@angular/core';\r\nimport { PoActiveOverlayService } from '../../../services/po-active-overlay/po-active-overlay.service';\r\nimport { PoPageSlideBaseComponent } from './po-page-slide-base.component';\r\n/**\r\n * @docsExtends PoPageSlideBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-slide-basic\" title=\"PO Page Slide Basic\">\r\n *  <file name=\"sample-po-page-slide-basic/sample-po-page-slide-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-basic/sample-po-page-slide-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-slide-labs\" title=\"PO Page Slide Labs\">\r\n *  <file name=\"sample-po-page-slide-labs/sample-po-page-slide-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-labs/sample-po-page-slide-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-slide-configuration\" title=\"PO Page Slide - Configuration\">\r\n *  <file name=\"sample-po-page-slide-configuration/sample-po-page-slide-configuration.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-configuration/sample-po-page-slide-configuration.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoPageSlideComponent extends PoPageSlideBaseComponent {\r\n    private poActiveOverlayService;\r\n    private _pageContent;\r\n    private firstElement;\r\n    private id;\r\n    private loadingCompleted;\r\n    private sourceElement;\r\n    private focusEvent;\r\n    set pageContent(pageContent: ElementRef);\r\n    get pageContent(): ElementRef;\r\n    constructor(poActiveOverlayService: PoActiveOverlayService);\r\n    open(): void;\r\n    close(): void;\r\n    onClickOut(event: MouseEvent): void;\r\n    private handleFocus;\r\n    private initFocus;\r\n    private loadFirstElement;\r\n    private removeEventListeners;\r\n}\r\n"]}