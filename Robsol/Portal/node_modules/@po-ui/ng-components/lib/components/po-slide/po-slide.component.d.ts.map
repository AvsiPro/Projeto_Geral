{"version":3,"file":"po-slide.component.d.ts","sources":["po-slide.component.d.ts"],"names":[],"mappingssourcesContent":["import { DoCheck, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AnimationBuilder } from '@angular/animations';\r\nimport { PoSlideBaseComponent } from './po-slide-base.component';\r\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\r\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\r\n/**\r\n * @docsExtends PoSlideBaseComponent\r\n *\r\n * @example\r\n * <example name=\"po-slide-basic\" title=\"PO Slide Basic\">\r\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-labs\" title=\"PO Slide Labs\">\r\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-useful-articles\" title=\"PO Slide - Useful articles\">\r\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-landscapes\" title=\"PO Slide - Landscapes\">\r\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-external-controls\" title=\"PO Slide - External Controls\">\r\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.html\"> </file>\r\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoSlideComponent extends PoSlideBaseComponent implements OnInit, DoCheck, OnChanges, OnDestroy {\r\n    private builder;\r\n    slideContentTemplate: PoSlideContentTemplateDirective;\r\n    private slide;\r\n    private itemsElements;\r\n    currentSlideIndex: number;\r\n    imageHeight: number;\r\n    slideItems: Array<PoSlideItem | any>;\r\n    slideItemWidth: number;\r\n    private isLoaded;\r\n    private player;\r\n    private setInterval;\r\n    private resize$;\r\n    private resizeSubscription;\r\n    private get hasElements();\r\n    private get isImageSlide();\r\n    private get offset();\r\n    get hasSlides(): boolean;\r\n    constructor(builder: AnimationBuilder);\r\n    onResize(): void;\r\n    ngOnInit(): void;\r\n    ngDoCheck(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Método que retorna o index do slide atual\r\n     *\r\n     * ```\r\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n     *  myFunction() {\r\n     *    let currentIndex = this.slideComponent.getCurrentSlideIndex();\r\n     * }\r\n     *\r\n     * ```\r\n     */\r\n    getCurrentSlideIndex(): number;\r\n    goToItem(index: number): void;\r\n    nextControl(): void;\r\n    /**\r\n     * Método para chamar o próximo slide.\r\n     *\r\n     * ```\r\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n     *\r\n     * myFunction() {\r\n     *  this.slideComponent.next();\r\n     * }\r\n     * ```\r\n     */\r\n    next(): void;\r\n    /**\r\n     * Método para chamar o slide anterior.\r\n     *\r\n     * ```\r\n     * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n     *\r\n     * myFunction() {\r\n     *  this.slideComponent.previous();\r\n     * }\r\n     * ```\r\n     */\r\n    previous(): void;\r\n    previousControl(): void;\r\n    setSlideHeight(height: number): void;\r\n    protected cancelInterval(): void;\r\n    protected setSlideItems(slides: Array<PoSlideItem | string | any>): void;\r\n    protected startSlide(): void;\r\n    protected startInterval(): void;\r\n    private animate;\r\n    private buildTransitionAnimation;\r\n    private createArrayForTemplate;\r\n    private createArrayFromSlides;\r\n    private setDefaultHeight;\r\n    private setHeight;\r\n    private setSlideItemWidth;\r\n}\r\n"]}