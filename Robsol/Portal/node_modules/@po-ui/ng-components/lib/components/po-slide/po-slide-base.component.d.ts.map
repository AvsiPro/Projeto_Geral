{"version":3,"file":"po-slide-base.component.d.ts","sources":["po-slide-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { PoSlideItem } from './interfaces/po-slide-item.interface';\r\n/**\r\n * @description\r\n *\r\n * Componente de slide para visualização e controle de elementos de forma cíclica. Exibe um conjunto de imagens ou dados que permitem\r\n * customizar sua visualização utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\r\n *\r\n * #### Boas práticas:\r\n * - Utilizar imagens no slide, mesmo quando possui conteúdo personalizado.\r\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\r\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente é destacar apenas informações importantes.\r\n */\r\nexport declare abstract class PoSlideBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define a exibição das setas de navegação.\r\n     *\r\n     * @default `false`\r\n     */\r\n    hideArrows: boolean;\r\n    private _interval;\r\n    private _height?;\r\n    private _slides;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     * Altura do po-slide, caso seja slide com template customizado, não assume o valor `default`.\r\n     *\r\n     * @default `336`\r\n     */\r\n    set height(value: number);\r\n    get height(): number;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides não trocam automaticamente.\r\n     *\r\n     * @default `4000`\r\n     */\r\n    set interval(value: number);\r\n    get interval(): number;\r\n    /**\r\n     * @description\r\n     *\r\n     * Array de imagens ou dados para o slide, pode ser de três formas:\r\n     *\r\n     * - Array implementando objetos da interface `PoSlideItem`:\r\n     * ```\r\n     * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\r\n     * ```\r\n     * - Array de `strings` com os caminhos das imagens:\r\n     * ```\r\n     * ['/assets/image-1', '/assets/image-2' ]\r\n     * ```\r\n     * - Array com lista de itens (para utilizar template):\r\n     * ```\r\n     * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\r\n     * ```\r\n     *\r\n     * > As setas de navegação e o controle com círculos apenas serão renderizados caso possua mais de um slide.\r\n     */\r\n    set slides(value: Array<PoSlideItem | string | any>);\r\n    get slides(): Array<PoSlideItem | string | any>;\r\n    abstract setSlideHeight(height: number): void;\r\n    protected abstract cancelInterval(): void;\r\n    protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;\r\n    protected abstract startSlide(): void;\r\n    protected abstract startInterval(): void;\r\n}\r\n"]}