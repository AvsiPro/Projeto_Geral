{"version":3,"file":"po-modal-base.component.d.ts","sources":["po-modal-base.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { PoModalAction } from './po-modal-action.interface';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.\r\n *\r\n * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.\r\n *\r\n * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\r\n * `po-table` e os demais componentes do PO.\r\n *\r\n * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como\r\n * definir um estado de carregando e / ou desabilitado e / ou definir o botão com o tipo *danger*. Também é possível utilizar\r\n * o componente [`PoModalFooter`](/documentation/po-modal-footer).\r\n *\r\n * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.\r\n */\r\nexport declare class PoModalBaseComponent {\r\n    /** Título da modal. */\r\n    title: string;\r\n    /**\r\n     * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da primeira ação.\r\n     * Caso esta propriedade não seja definida ou esteja incompleta, automaticamente será adicionado um botão de ação com\r\n     * a função de fechar a modal.\r\n     */\r\n    primaryAction?: PoModalAction;\r\n    /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da segunda ação. */\r\n    secondaryAction?: PoModalAction;\r\n    language: any;\r\n    literals: any;\r\n    isHidden: boolean;\r\n    onXClosed: EventEmitter<boolean>;\r\n    private _hideClose?;\r\n    private _size?;\r\n    /**\r\n     * Define o tamanho da modal.\r\n     *\r\n     * Valores válidos:\r\n     *  - `sm` (pequeno)\r\n     *  - `md` (médio)\r\n     *  - `lg` (grande)\r\n     *  - `xl` (extra grande)\r\n     *  - `auto` (automático)\r\n     *\r\n     * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.\r\n     * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.\r\n     *\r\n     * > Todas as opções de tamanho possuem uma largura máxima de **768px**.\r\n     */\r\n    set size(value: string);\r\n    get size(): string;\r\n    /**\r\n     * Define o fechamento da modal ao clicar fora da mesma.\r\n     * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\r\n     */\r\n    clickOut?: boolean;\r\n    set setClickOut(value: boolean | string);\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Oculta o ícone de fechar do cabeçalho da modal.\r\n     *\r\n     * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideClose(value: boolean);\r\n    get hideClose(): boolean;\r\n    constructor(poLanguageService: PoLanguageService);\r\n    /** Função para fechar a modal. */\r\n    close(xClosed?: boolean): void;\r\n    /** Função para abrir a modal. */\r\n    open(): void;\r\n    validPrimaryAction(): void;\r\n}\r\n"]}