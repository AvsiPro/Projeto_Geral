{"version":3,"file":"po-tag-base.component.d.ts","sources":["po-tag-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\r\nimport { PoTagOrientation } from './enums/po-tag-orientation.enum';\r\nimport { PoTagType } from './enums/po-tag-type.enum';\r\n/**\r\n * @description\r\n *\r\n * Este componente permite exibir um valor em forma de um marcador colorido, sendo possível definir uma legenda e realizar customizações\r\n * na cor, iconografia e tipo.\r\n *\r\n * Além disso, é possível definir uma ação que será executada tanto ao *click* quanto através das teclas *enter/space* enquanto navega\r\n * utilizando a tecla *tab*.\r\n *\r\n * Seu uso é recomendado para informações que necessitem de destaque em forma de marcação.\r\n */\r\nexport declare class PoTagBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define uma legenda que será exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.\r\n     */\r\n    label?: string;\r\n    /** Texto da tag. */\r\n    value: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ação que será executada ao clicar sobre o `po-tag` e que receberá como parâmetro um objeto contendo o seu valor e tipo.\r\n     */\r\n    click: EventEmitter<any>;\r\n    readonly poTagOrientation: typeof PoTagOrientation;\r\n    private _color?;\r\n    private _icon?;\r\n    private _inverse?;\r\n    private _orientation?;\r\n    private _type?;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define uma cor para a *tag*.\r\n     *\r\n     * Valores válidos:\r\n     *  - <span class=\"dot po-color-01\"></span> `color-01`\r\n     *  - <span class=\"dot po-color-02\"></span> `color-02`\r\n     *  - <span class=\"dot po-color-03\"></span> `color-03`\r\n     *  - <span class=\"dot po-color-04\"></span> `color-04`\r\n     *  - <span class=\"dot po-color-05\"></span> `color-05`\r\n     *  - <span class=\"dot po-color-06\"></span> `color-06`\r\n     *  - <span class=\"dot po-color-07\"></span> `color-07`\r\n     *  - <span class=\"dot po-color-08\"></span> `color-08`\r\n     *  - <span class=\"dot po-color-09\"></span> `color-09`\r\n     *  - <span class=\"dot po-color-10\"></span> `color-10`\r\n     *  - <span class=\"dot po-color-11\"></span> `color-11`\r\n     *  - <span class=\"dot po-color-12\"></span> `color-12`\r\n     *\r\n     * > **Atenção:** A propriedade `p-type` sobrepõe esta definição.\r\n     */\r\n    set color(value: string);\r\n    get color(): string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define ou ativa um ícone que será exibido ao lado do valor da *tag*.\r\n     *\r\n     * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o ícone seja exibido conforme descrições abaixo:\r\n     * - <span class=\"po-icon po-icon-ok\"></span> - `success`\r\n     * - <span class=\"po-icon po-icon-warning\"></span> - `warning`\r\n     * - <span class=\"po-icon po-icon-close\"></span> - `danger`\r\n     * - <span class=\"po-icon po-icon-info\"></span> - `info`\r\n     *\r\n     * Também É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n     * ```\r\n     * <po-tag p-icon=\"po-icon-user\" p-value=\"PO Tag\"></po-tag>\r\n     * ```\r\n     * como também utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n     * ```\r\n     * <po-tag p-icon=\"fa fa-podcast\" p-value=\"PO Tag\"></po-button>\r\n     * ```\r\n     * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n     * ```\r\n     * <po-tag [p-icon]=\"template\" p-value=\"Tag template ionic\"></po-button>\r\n     *\r\n     * <ng-template #template>\r\n     *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n     * </ng-template>\r\n     * ```\r\n     * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set icon(value: boolean | string | TemplateRef<void>);\r\n    get icon(): boolean | string | TemplateRef<void>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ativa a inversão de cores configuradas no componente, possibilitando uma visualização de status ativo e inativo.\r\n     *\r\n     * > A cor do texto, do ícone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,\r\n     * e a cor do fundo fica branca.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set inverse(value: boolean);\r\n    get inverse(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define o *layout* de exibição.\r\n     *\r\n     * @default `vertical`\r\n     */\r\n    set orientation(value: PoTagOrientation);\r\n    get orientation(): PoTagOrientation;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define o tipo da *tag*.\r\n     *\r\n     * Valores válidos:\r\n     *  - `success`: cor verde utilizada para simbolizar sucesso ou êxito.\r\n     *  - `warning`: cor amarela que representa aviso ou advertência.\r\n     *  - `danger`: cor vermelha para erro ou aviso crítico.\r\n     *  - `info`: cor cinza escuro que caracteriza conteúdo informativo.\r\n     *\r\n     * > Quando esta propriedade for definida, irá sobrepor a definição de `p-color` e `p-icon` somente será exibido caso seja `true`.\r\n     *\r\n     * @default `info`\r\n     */\r\n    set type(value: PoTagType);\r\n    get type(): PoTagType;\r\n}\r\n"]}