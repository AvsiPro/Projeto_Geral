{"version":3,"file":"po-table-column-template.directive.d.ts","sources":["po-table-column-template.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef } from '@angular/core';\r\n/**\r\n * @usedBy PoTableComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que seja possível alterar o conteúdo das células de uma coluna, para que os valores possam ser exibidos\r\n * de acordo com a necessidade do usuário.\r\n *\r\n * Em seu uso, deve-se utilizar como parâmetro de entrada o input [p-property], o qual é responsável por informar ao PO-TABLE qual a coluna que\r\n * será adicionado o conteúdo do template.\r\n *\r\n * Retorno:\r\n *  - value: valor referente ao conteúdo da linha corrente.\r\n *\r\n * Modo de uso:\r\n * ```html\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *   <ng-template p-table-column-template [p-property]=\"targetProperty\" let-value>\r\n *     <span [innerText]=\"value\"></span>\r\n *   </ng-template>\r\n * </po-table>\r\n * ...\r\n * ```\r\n * > No exemplo acima, todas as células correspondentes a coluna `status` terão o conteúdo alterado para `<h1>${value}</h1>`,\r\n * sendo que `value` refere-se ao conteúdo da linha.\r\n *\r\n * ```html\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *   <ng-template  p-table-column-template [p-property]=\"targetProperty\" let-value>\r\n *     <span *ngIf=\"value === 'FINISHED'\" [style.background]=\"'silver'\" [innerText]=\"value\"></span>\r\n *     <span *ngIf=\"value === 'OPENED'\" [style.background]=\"'gray'\" [innerText]=\"value\"></span>\r\n *   </ng-template>\r\n * </po-table>\r\n * ...\r\n * ```\r\n * > Agora, neste exemplo, com o valor da linha corrente retornado (value), é feito uma validação para\r\n * definir o template exato para adicionar a uma específica célula.\r\n *\r\n * Abaixo, a declaração dos dados de entrada do PO-TABLE para o uso da directiva.\r\n * ```typescript\r\n * ...\r\n * export class AppComponent {\r\n *\r\n *    targetProperty= 'status';\r\n *\r\n *    items = [{\r\n *      code: 1200,\r\n *      product: 'Rice',\r\n *      status: 'CANCELED'\r\n *      },{\r\n *      code: 1355,\r\n *      product: 'Bean',\r\n *      status: 'FINISHED'\r\n *    }];\r\n *\r\n *    columns = [\r\n *      { property: 'code', label: 'ID' },\r\n *      { property: 'product', label: 'PRODUTO' },\r\n *      { property: 'status', label: 'STATUS', type: 'columnTemplate' }\r\n *    ];\r\n * }\r\n * ...\r\n * ```\r\n * > Observação: Sempre adicionar o **type** da coluna que deseja manipular com a directiva como `columnTemplate`\r\n */\r\nexport declare class PoTableColumnTemplateDirective {\r\n    templateRef: TemplateRef<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Variável responsável por armazenar a property da coluna da tabela que será adicionado o template.\r\n     *\r\n     * Caso não seja informada esta propriedade, serão apresentados normalmente os dados da coluna.\r\n     */\r\n    targetProperty: string;\r\n    constructor(templateRef: TemplateRef<any>);\r\n}\r\n"]}