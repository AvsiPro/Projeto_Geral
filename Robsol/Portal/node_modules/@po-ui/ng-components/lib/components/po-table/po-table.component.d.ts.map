{"version":3,"file":"po-table.component.d.ts","sources":["po-table.component.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, OnDestroy, QueryList, Renderer2, TemplateRef } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { PoDateService } from '../../services/po-date/po-date.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\r\nimport { PoTableAction } from './interfaces/po-table-action.interface';\r\nimport { PoTableBaseComponent, QueryParamsType } from './po-table-base.component';\r\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\r\nimport { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';\r\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\r\nimport { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';\r\nimport { PoTableCellTemplateDirective } from './po-table-cell-template/po-table-cell-template.directive';\r\nimport { PoTableColumnTemplateDirective } from './po-table-column-template/po-table-column-template.directive';\r\nimport { PoTableService } from './services/po-table.service';\r\n/**\r\n * @docsExtends PoTableBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-table-basic\" title=\"PO Table Basic\">\r\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.html\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-labs\" title=\"PO Table Labs\">\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.po.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-with-api\" title=\"PO Table using API\">\r\n *  <file name=\"sample-po-table-with-api/sample-po-table-with-api.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-with-api/sample-po-table-with-api.component.html\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-transport\" title=\"PO Table - Transport\">\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.html\"> </file>\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-airfare\" title=\"PO Table - Airfare\">\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.html\"> </file>\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-components\" title=\"PO Table - Po Field Components\">\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.enum.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.html\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.service.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.css\"> </file>\r\n * </example>\r\n *\r\n */\r\nexport declare class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\r\n    private changeDetector;\r\n    private decimalPipe;\r\n    private router;\r\n    private defaultService;\r\n    tableRowTemplate: PoTableRowTemplateDirective;\r\n    tableCellTemplate: PoTableCellTemplateDirective;\r\n    tableColumnTemplates: QueryList<PoTableColumnTemplateDirective>;\r\n    noColumnsHeader: any;\r\n    poPopupComponent: PoPopupComponent;\r\n    tableFooterElement: any;\r\n    tableWrapperElement: any;\r\n    poTableTbody: any;\r\n    actionsIconElement: QueryList<any>;\r\n    actionsElement: QueryList<any>;\r\n    headersTable: QueryList<any>;\r\n    heightTableContainer: number;\r\n    popupTarget: any;\r\n    tableOpacity: number;\r\n    tooltipText: string;\r\n    lastVisibleColumnsSelected: Array<PoTableColumn>;\r\n    private _columnManagerTarget;\r\n    private differ;\r\n    private footerHeight;\r\n    private initialized;\r\n    private timeoutResize;\r\n    private visibleElement;\r\n    private scrollEvent$;\r\n    private subscriptionScrollEvent;\r\n    private clickListener;\r\n    private resizeListener;\r\n    set columnManagerTarget(value: ElementRef);\r\n    get columnManagerTarget(): ElementRef;\r\n    constructor(poDate: PoDateService, differs: IterableDiffers, renderer: Renderer2, poLanguageService: PoLanguageService, changeDetector: ChangeDetectorRef, decimalPipe: DecimalPipe, router: Router, defaultService: PoTableService);\r\n    get hasRowTemplateWithArrowDirectionRight(): boolean;\r\n    get columnCount(): number;\r\n    get columnCountForMasterDetail(): number;\r\n    get detailHideSelect(): boolean;\r\n    get hasVisibleActions(): boolean;\r\n    get firstAction(): PoTableAction;\r\n    get hasFooter(): boolean;\r\n    get hasMasterDetailColumn(): boolean;\r\n    get hasRowTemplate(): boolean;\r\n    get hasSelectableColumn(): boolean;\r\n    get hasValidColumns(): boolean;\r\n    get hasVisibleSubtitleColumns(): boolean;\r\n    get isSingleAction(): boolean;\r\n    get visibleActions(): PoTableAction[];\r\n    ngAfterViewInit(): void;\r\n    showMoreInfiniteScroll({ target }: {\r\n        target: any;\r\n    }): void;\r\n    ngDoCheck(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Método responsável por realizar busca no serviço de dados podendo informar filtros e com o retorno, atualiza a tabela.\r\n     *\r\n     * Caso não seja informado parâmetro, nada será adicionado ao GET, conforme abaixo:\r\n     * ```\r\n     * url + ?page=1&pageSize=10\r\n     * ```\r\n     * > Obs: os parâmetros `page` e `pageSize` sempre serão chamados independente de ser enviados outros parâmetros.\r\n     *\r\n     * Caso sejam informados os parâmetros `{ name: 'JOHN', age: '23' }`, todos serão adicionados ao GET, conforme abaixo:\r\n     * ```\r\n     * url + ?page=1&pageSize=10&name=JOHN&age=23\r\n     * ```\r\n     *\r\n     * @param { { key: value } } queryParams Formato do objeto a ser enviado.\r\n     * > Pode ser utilizada qualquer string como key, e qualquer string ou number como value.\r\n     */\r\n    applyFilters(queryParams?: {\r\n        [key: string]: QueryParamsType;\r\n    }): void;\r\n    /**\r\n     * Método que colapsa uma linha com detalhe quando executada.\r\n     *\r\n     * @param { number } rowIndex Índice da linha que será colapsada.\r\n     * > Ao reordenar os dados da tabela, o valor contido neste índice será alterado conforme a ordenação.\r\n     */\r\n    collapse(rowIndex: number): void;\r\n    /**\r\n     * Método que expande uma linha com detalhe quando executada.\r\n     *\r\n     * @param { number } rowIndex Índice da linha que será expandida.\r\n     * > Ao reordenar os dados da tabela, o valor contido neste índice será alterado conforme a ordenação.\r\n     */\r\n    expand(rowIndex: number): void;\r\n    /**\r\n     * Retorna as linhas do `po-table` que estão selecionadas.\r\n     */\r\n    getSelectedRows(): any[];\r\n    /**\r\n     * Retorna as linhas do `po-table` que não estão selecionadas.\r\n     */\r\n    getUnselectedRows(): any[];\r\n    /**\r\n     * Desmarca as linhas que estão selecionadas.\r\n     */\r\n    unselectRows(): void;\r\n    checkDisabled(row: any, column: PoTableColumn): any;\r\n    containsMasterDetail(row: any): any;\r\n    executeTableAction(row: any, tableAction: any): void;\r\n    /**\r\n     * Desmarca uma linha que está selecionada.\r\n     */\r\n    unselectRowItem(itemfn: {\r\n        [key: string]: any;\r\n    } | ((item: any) => boolean)): void;\r\n    /**\r\n     * Seleciona uma linha do 'po-table'.\r\n     */\r\n    selectRowItem(itemfn: {\r\n        [key: string]: any;\r\n    } | ((item: any) => boolean)): void;\r\n    formatNumber(value: any, format: string): any;\r\n    getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string;\r\n    getColumnIcons(row: any, column: PoTableColumn): any;\r\n    getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel;\r\n    getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn;\r\n    isShowMasterDetail(row: any): boolean;\r\n    isShowRowTemplate(row: any, index: number): boolean;\r\n    onClickLink(event: any, row: any, column: PoTableColumn): void;\r\n    onChangeVisibleColumns(columns: Array<string>): void;\r\n    onVisibleColumnsChange(columns: Array<PoTableColumn>): void;\r\n    tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any): any;\r\n    tooltipMouseLeave(): void;\r\n    togglePopup(row: any, targetRef: any): void;\r\n    trackBy(index: number): number;\r\n    validateTableAction(row: any, tableAction: any): any;\r\n    onOpenColumnManager(): void;\r\n    /**\r\n     * Método que remove um item da tabela.\r\n     *\r\n     * @param { number | { key: value } } item Índice da linha ou o item que será removido.\r\n     * > Ao remover o item, a linha que o representa será excluída da tabela.\r\n     */\r\n    removeItem(item: number | {\r\n        [key: string]: any;\r\n    }): void;\r\n    /**\r\n     * Método que atualiza um item da tabela.\r\n     *\r\n     * @param { number | { key: value } } item Índice da linha ou o item que será atualizado.\r\n     * @param { { key: value } } updatedItem Item que foi atualizado.\r\n     * > Ao atualizar o item, a informação será alterada na tabela.\r\n     */\r\n    updateItem(item: number | {\r\n        [key: string]: any;\r\n    }, updatedItem: {\r\n        [key: string]: any;\r\n    }): void;\r\n    getTemplate(column: PoTableColumn): TemplateRef<any>;\r\n    protected calculateHeightTableContainer(height: any): void;\r\n    protected calculateWidthHeaders(): void;\r\n    protected checkInfiniteScroll(): void;\r\n    private checkChangesItems;\r\n    private checkingIfColumnHasTooltip;\r\n    private debounceResize;\r\n    private findCustomIcon;\r\n    private getHeightTableFooter;\r\n    private hasInfiniteScroll;\r\n    private includeInfiniteScroll;\r\n    private mergeCustomIcons;\r\n    private removeListeners;\r\n    private setTableOpacity;\r\n    private verifyChangeHeightInFooter;\r\n    private verifyCalculateHeightTableContainer;\r\n    private toggleSelect;\r\n}\r\n"]}