{"version":3,"file":"po-dynamic-form.component.d.ts","sources":["po-dynamic-form.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\r\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\r\nimport { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';\r\nimport { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';\r\n/**\r\n * @docsExtends PoDynamicFormBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dynamic-form-basic\" title=\"PO Dynamic Form Basic\">\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dynamic-form-register\" title=\"PO Dynamic Form - Register\">\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {\r\n    private changes;\r\n    private loadService;\r\n    private validationService;\r\n    fieldsComponent: {\r\n        focus: (property: string) => void;\r\n        updatePreviousValue: () => void;\r\n    };\r\n    disabledForm: boolean;\r\n    private _form;\r\n    private onLoadSubscription;\r\n    private sendFormSubscription;\r\n    private comboOptionSubject;\r\n    set form(value: NgForm);\r\n    get form(): NgForm;\r\n    constructor(changes: ChangeDetectorRef, loadService: PoDynamicFormLoadService, validationService: PoDynamicFormValidationService);\r\n    ngOnDestroy(): void;\r\n    ngOnInit(): void;\r\n    /**\r\n     * Função que atribui foco ao campo desejado.\r\n     *\r\n     * Para utilizá-la é necessário capturar a instância do `dynamic form`, como por exemplo:\r\n     *\r\n     * ``` html\r\n     * <po-dynamic-form #dynamicForm [p-fields]=\"fields\"></po-dynamic-form>\r\n     * ```\r\n     *\r\n     * ``` javascript\r\n     * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';\r\n     *\r\n     * ...\r\n     *\r\n     * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;\r\n     *\r\n     * fields: Array<PoDynamicFormField> = [\r\n     *   { property: 'fieldOne' },\r\n     *   { property: 'fieldTwo' }\r\n     * ];\r\n     *\r\n     * fieldFocus() {\r\n     *   this.dynamicForm.focus('fieldTwo');\r\n     * }\r\n     * ```\r\n     *\r\n     * @param {string} property Nome da propriedade atribuída ao `PoDynamicFormField.property`.\r\n     */\r\n    focus(property: string): void;\r\n    getObjectValue(): Observable<any>;\r\n    sendObjectValue(objectValue: any): void;\r\n    validateForm(field: PoDynamicFormField): void;\r\n    private applyFormUpdatesOnLoad;\r\n    private applyFormValidation;\r\n    private disableForm;\r\n    private emitForm;\r\n    private loadDataOnInitialize;\r\n    private removeListeners;\r\n    private setFocusOnFieldByProperty;\r\n    private updateModelOnLoad;\r\n    private updateModelWithValidation;\r\n}\r\n"]}