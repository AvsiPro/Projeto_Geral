{"version":3,"file":"po-ui-ng-components.js","sources":["../../../projects/ui/src/lib/components/po-accordion/po-accordion-base.component.ts","../../../projects/ui/src/lib/components/po-accordion/services/po-accordion.service.ts","../../../projects/ui/src/lib/components/po-accordion/po-accordion-item/po-accordion-item.component.ts","../../../projects/ui/src/lib/components/po-accordion/po-accordion.component.ts","../../../projects/ui/src/lib/components/po-accordion/po-accordion-item-body/po-accordion-item-body.component.ts","../../../projects/ui/src/lib/components/po-accordion/po-accordion-item-header/po-accordion-item-header.component.ts","../../../projects/ui/src/lib/components/po-accordion/po-accordion.module.ts","../../../projects/ui/src/lib/components/po-avatar/po-avatar-base.component.ts","../../../projects/ui/src/lib/components/po-avatar/po-avatar.component.ts","../../../projects/ui/src/lib/components/po-avatar/po-avatar.module.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb-base.component.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb.component.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb-dropdown/po-breadcrumb-dropdown.component.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.service.ts","../../../projects/ui/src/lib/services/po-language/po-language.constant.ts","../../../projects/ui/src/lib/utils/util.ts","../../../projects/ui/src/lib/services/po-language/po-language.service.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.component.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb-item/po-breadcrumb-item.component.ts","../../../projects/ui/src/lib/components/po-breadcrumb/po-breadcrumb.module.ts","../../../projects/ui/src/lib/components/po-icon/po-icon.component.ts","../../../projects/ui/src/lib/components/po-icon/po-icon.module.ts","../../../projects/ui/src/lib/components/po-loading/po-loading-overlay/po-loading-overlay-base.component.ts","../../../projects/ui/src/lib/components/po-loading/po-loading-overlay/po-loading-overlay.component.ts","../../../projects/ui/src/lib/components/po-loading/po-loading-icon/po-loading-icon.component.ts","../../../projects/ui/src/lib/components/po-loading/po-loading-base.component.ts","../../../projects/ui/src/lib/components/po-loading/po-loading.component.ts","../../../projects/ui/src/lib/services/po-language/po-language.module.ts","../../../projects/ui/src/lib/components/po-loading/po-loading.module.ts","../../../projects/ui/src/lib/decorators/utils-decorators.ts","../../../projects/ui/src/lib/decorators/input-boolean/input-boolean.decorator.ts","../../../projects/ui/src/lib/decorators/input-required/input-required.decorator.ts","../../../projects/ui/src/lib/components/po-button/po-button-base.component.ts","../../../projects/ui/src/lib/components/po-button/po-button.component.ts","../../../projects/ui/src/lib/components/po-button/po-button.module.ts","../../../projects/ui/src/lib/services/po-control-position/po-control-position.constants.ts","../../../projects/ui/src/lib/directives/po-tooltip/po-tooltip-base.directive.ts","../../../projects/ui/src/lib/services/po-control-position/po-control-position.service.ts","../../../projects/ui/src/lib/directives/po-tooltip/po-tooltip-control-position.service.ts","../../../projects/ui/src/lib/directives/po-tooltip/po-tooltip.directive.ts","../../../projects/ui/src/lib/directives/po-tooltip/po-tooltip.module.ts","../../../projects/ui/src/lib/components/po-button-group/po-button-group-toggle.enum.ts","../../../projects/ui/src/lib/components/po-button-group/po-button-group-base.component.ts","../../../projects/ui/src/lib/components/po-button-group/po-button-group.component.ts","../../../projects/ui/src/lib/components/po-button-group/po-button-group.module.ts","../../../projects/ui/src/lib/services/po-date/po-date.service.ts","../../../projects/ui/src/lib/services/po-date/po-date.module.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar-mode.enum.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar-base.component.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar.component.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar-header/po-calendar-header.component.ts","../../../projects/ui/src/lib/components/po-calendar/services/po-calendar.lang.service.ts","../../../projects/ui/src/lib/components/po-calendar/services/po-calendar.service.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar-wrapper/po-calendar-wrapper.component.ts","../../../projects/ui/src/lib/components/po-calendar/po-calendar.module.ts","../../../projects/ui/src/lib/components/po-chart/enums/po-chart-type.enum.ts","../../../projects/ui/src/lib/components/po-chart/helpers/po-chart-default-values.constant.ts","../../../projects/ui/src/lib/components/po-chart/services/po-chart-maths.service.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-line/po-chart-line-base.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-line/po-chart-area/po-chart-area.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis-path/po-chart-axis-path.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis-label/po-chart-axis-label.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar-base.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-column/po-chart-column.component.ts","../../../projects/ui/src/lib/services/po-color/po-colors.constant.ts","../../../projects/ui/src/lib/enums/po-color-palette.enum.ts","../../../projects/ui/src/lib/services/po-color/po-color.service.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-base.component.ts","../../../projects/ui/src/lib/components/po-chart/services/po-chart-svg-container.service.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.constant.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-types/po-chart-dynamic-type.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-container.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-legend/po-chart-legend.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-line/po-chart-line.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar-path/po-chart-bar-path.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-line/po-chart-path/po-chart-path.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-line/po-chart-series-point/po-chart-series-point.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-pie/po-chart-pie.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-donut/po-chart-donut.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-label/po-chart-circular-label.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-circular-path.component.ts","../../../projects/ui/src/lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-tooltip.directive.ts","../../../projects/ui/src/lib/components/po-chart/directives/po-resize-observer.directive.ts","../../../projects/ui/src/lib/components/po-chart/po-chart.module.ts","../../../projects/ui/src/lib/components/po-container/po-container-base.component.ts","../../../projects/ui/src/lib/components/po-container/po-container.component.ts","../../../projects/ui/src/lib/components/po-container/po-container.module.ts","../../../projects/ui/src/lib/components/po-disclaimer/po-disclaimer-base.component.ts","../../../projects/ui/src/lib/components/po-disclaimer/po-disclaimer.component.ts","../../../projects/ui/src/lib/components/po-disclaimer/po-disclaimer.module.ts","../../../projects/ui/src/lib/components/po-disclaimer-group/po-disclaimer-group-base.component.ts","../../../projects/ui/src/lib/components/po-disclaimer-group/po-disclaimer-group.component.ts","../../../projects/ui/src/lib/components/po-disclaimer-group/po-disclaimer-remove/po-disclaimer-remove.component.ts","../../../projects/ui/src/lib/components/po-disclaimer-group/po-disclaimer-group.module.ts","../../../projects/ui/src/lib/components/po-divider/po-divider-base.component.ts","../../../projects/ui/src/lib/components/po-divider/po-divider.component.ts","../../../projects/ui/src/lib/components/po-divider/po-divider.module.ts","../../../projects/ui/src/lib/components/po-popup/po-popup-base.component.ts","../../../projects/ui/src/lib/components/po-popup/po-popup.component.ts","../../../projects/ui/src/lib/components/po-popup/po-popup.module.ts","../../../projects/ui/src/lib/components/po-dropdown/po-dropdown-base.component.ts","../../../projects/ui/src/lib/components/po-dropdown/po-dropdown.component.ts","../../../projects/ui/src/lib/components/po-dropdown/po-dropdown.module.ts","../../../projects/ui/src/lib/components/po-field/po-field-container/po-field-container-bottom/po-field-container-bottom.component.ts","../../../projects/ui/src/lib/components/po-field/po-field-container/po-field-container-literals.ts","../../../projects/ui/src/lib/components/po-field/po-field-container/po-field-container.component.ts","../../../projects/ui/src/lib/components/po-field/po-field-container/po-field-container.module.ts","../../../projects/ui/src/lib/components/po-field/validators.ts","../../../projects/ui/src/lib/components/po-field/po-checkbox-group/po-checkbox-group-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-checkbox-group/po-checkbox-group.component.ts","../../../projects/ui/src/lib/components/po-field/po-checkbox-group/po-checkbox-group.module.ts","../../../projects/ui/src/lib/components/po-field/po-clean/po-clean-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-clean/po-clean.component.ts","../../../projects/ui/src/lib/components/po-field/po-clean/po-clean.module.ts","../../../projects/ui/src/lib/components/po-field/po-input/po-mask.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker/enums/po-datepicker-iso-format.enum.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker/po-datepicker-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker/po-datepicker.component.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker/po-datepicker.module.ts","../../../projects/ui/src/lib/components/po-modal/po-modal.literals.ts","../../../projects/ui/src/lib/components/po-modal/po-modal-base.component.ts","../../../projects/ui/src/lib/components/po-modal/po-modal-footer/po-modal-footer.component.ts","../../../projects/ui/src/lib/services/po-active-overlay/po-active-overlay.service.ts","../../../projects/ui/src/lib/components/po-modal/po-modal.component.ts","../../../projects/ui/src/lib/components/po-modal/po-modal.module.ts","../../../projects/ui/src/lib/components/po-progress/po-progress-bar/po-progress-bar.component.ts","../../../projects/ui/src/lib/components/po-progress/enums/po-progress-status.enum.ts","../../../projects/ui/src/lib/components/po-progress/po-progress-base.component.ts","../../../projects/ui/src/lib/components/po-progress/po-progress.component.ts","../../../projects/ui/src/lib/components/po-progress/po-progress.module.ts","../../../projects/ui/src/lib/services/po-active-overlay/po-active-overlay.module.ts","../../../projects/ui/src/lib/services/po-color-palette/po-color-palette.service.ts","../../../projects/ui/src/lib/services/po-color-palette/po-color-palette.module.ts","../../../projects/ui/src/lib/services/po-component-injector/po-component-injector.service.ts","../../../projects/ui/src/lib/services/po-component-injector/po-component-injector.module.ts","../../../projects/ui/src/lib/services/po-control-position/po-control-position.module.ts","../../../projects/ui/src/lib/services/po-dialog/po-dialog.enum.ts","../../../projects/ui/src/lib/services/po-dialog/po-dialog.component.ts","../../../projects/ui/src/lib/services/po-dialog/po-dialog-base.service.ts","../../../projects/ui/src/lib/services/po-dialog/po-dialog.service.ts","../../../projects/ui/src/lib/services/po-dialog/po-dialog.module.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n-base.pipe.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n.pipe.ts","../../../projects/ui/src/lib/services/po-notification/po-toaster/po-toaster-orientation.enum.ts","../../../projects/ui/src/lib/services/po-notification/po-toaster/po-toaster-base.component.ts","../../../projects/ui/src/lib/services/po-notification/po-toaster/po-toaster-type.enum.ts","../../../projects/ui/src/lib/services/po-notification/po-toaster/po-toaster.component.ts","../../../projects/ui/src/lib/services/po-notification/po-notification.module.ts","../../../projects/ui/src/lib/services/services.module.ts","../../../projects/ui/src/lib/components/po-popover/po-popover-base.component.ts","../../../projects/ui/src/lib/components/po-popover/po-popover.component.ts","../../../projects/ui/src/lib/components/po-popover/po-popover.module.ts","../../../projects/ui/src/lib/pipes/po-time/po-time.pipe.ts","../../../projects/ui/src/lib/pipes/po-time/po-time.module.ts","../../../projects/ui/src/lib/components/po-table/po-table-column-icon/po-table-column-icon.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-column-label/po-table-column-label.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-column-link/po-table-column-link.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-column-manager/po-table-column-manager.component.ts","../../../projects/ui/src/lib/components/po-table/enums/po-table-column-sort-type.enum.ts","../../../projects/ui/src/lib/components/po-table/services/po-table.service.ts","../../../projects/ui/src/lib/components/po-table/po-table-base.component.ts","../../../projects/ui/src/lib/components/po-table/enums/po-table-row-template-arrow-direction.enum.ts","../../../projects/ui/src/lib/components/po-table/po-table-row-template/po-table-row-template.directive.ts","../../../projects/ui/src/lib/components/po-table/po-table-cell-template/po-table-cell-template.directive.ts","../../../projects/ui/src/lib/components/po-table/po-table-column-template/po-table-column-template.directive.ts","../../../projects/ui/src/lib/components/po-table/po-table.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-detail/po-table-detail.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-icon/po-table-icon.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-show-subtitle/po-table-show-subtitle.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-subtitle-circle/po-table-subtitle-circle.component.ts","../../../projects/ui/src/lib/components/po-table/po-table-subtitle-footer/po-table-subtitle-footer.component.ts","../../../projects/ui/src/lib/components/po-table/po-table.module.ts","../../../projects/ui/src/lib/enums/po-key-code.enum.ts","../../../projects/ui/src/lib/components/po-field/po-checkbox/po-checkbox-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-checkbox/po-checkbox.component.ts","../../../projects/ui/src/lib/components/po-field/po-combo/po-combo-filter-mode.enum.ts","../../../projects/ui/src/lib/components/po-field/po-combo/po-combo-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-combo/po-combo-filter.service.ts","../../../projects/ui/src/lib/components/po-field/po-combo/po-combo-option-template/po-combo-option-template.directive.ts","../../../projects/ui/src/lib/components/po-field/po-combo/po-combo.component.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker-range/po-datepicker-range.literals.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker-range/po-datepicker-range-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-datepicker-range/po-datepicker-range.component.ts","../../../projects/ui/src/lib/components/po-field/po-input/po-input-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-decimal/po-decimal.component.ts","../../../projects/ui/src/lib/components/po-field/po-input-generic/po-input-generic.ts","../../../projects/ui/src/lib/components/po-field/po-email/po-email.component.ts","../../../projects/ui/src/lib/components/po-field/po-login/po-login.component.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/services/po-lookup-filter.service.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/po-lookup-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal-base.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-base.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-operation/po-dynamic-form-operation.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form.component.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal.component.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/services/po-lookup-modal.service.ts","../../../projects/ui/src/lib/components/po-field/po-lookup/po-lookup.component.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-filter-mode.enum.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-filter.service.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect.component.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-item/po-multiselect-item.component.ts","../../../projects/ui/src/lib/components/po-field/po-multiselect/po-multiselect-search/po-multiselect-search.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text.service.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-body/po-rich-text-body.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-literals.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-image-modal/po-rich-text-image-modal.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-link-modal/po-rich-text-link-modal.component.ts","../../../projects/ui/src/lib/components/po-field/po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component.ts","../../../projects/ui/src/lib/components/po-field/po-input/po-input.component.ts","../../../projects/ui/src/lib/components/po-field/po-number/po-number-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-number/po-number.component.ts","../../../projects/ui/src/lib/components/po-field/po-password/po-password.component.ts","../../../projects/ui/src/lib/components/po-field/po-radio-group/po-radio-group-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-radio-group/po-radio-group.component.ts","../../../projects/ui/src/lib/components/po-field/po-select/po-select-option-template/po-select-option-template.directive.ts","../../../projects/ui/src/lib/components/po-field/po-field.model.ts","../../../projects/ui/src/lib/components/po-field/po-field-validate.model.ts","../../../projects/ui/src/lib/components/po-field/po-select/po-select.component.ts","../../../projects/ui/src/lib/components/po-field/po-switch/po-switch-label-position.enum.ts","../../../projects/ui/src/lib/components/po-field/po-switch/po-switch.component.ts","../../../projects/ui/src/lib/components/po-field/po-textarea/po-textarea-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-textarea/po-textarea.component.ts","../../../projects/ui/src/lib/services/po-notification/po-notification-base.service.ts","../../../projects/ui/src/lib/services/po-notification/po-notification.service.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-status.enum.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-file.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-base.service.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload.service.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-base.component.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload.component.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.directive.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component.ts","../../../projects/ui/src/lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component.ts","../../../projects/ui/src/lib/components/po-field/po-url/po-url.component.ts","../../../projects/ui/src/lib/components/po-field/po-field.module.ts","../../../projects/ui/src/lib/components/po-info/po-info-orietation.enum.ts","../../../projects/ui/src/lib/components/po-info/po-info-base.component.ts","../../../projects/ui/src/lib/components/po-info/po-info.component.ts","../../../projects/ui/src/lib/components/po-info/po-info.module.ts","../../../projects/ui/src/lib/components/po-tag/enums/po-tag-orientation.enum.ts","../../../projects/ui/src/lib/components/po-tag/enums/po-tag-type.enum.ts","../../../projects/ui/src/lib/components/po-tag/po-tag-base.component.ts","../../../projects/ui/src/lib/components/po-tag/enums/po-tag-icon.enum.ts","../../../projects/ui/src/lib/components/po-tag/po-tag.component.ts","../../../projects/ui/src/lib/components/po-tag/po-tag.module.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic.util.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-field-type.enum.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields-base.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.service.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view-base.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.component.ts","../../../projects/ui/src/lib/components/po-dynamic/po-dynamic.module.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-default-values.constant.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-base.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-description/po-gauge-description.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-legend/po-gauge-legend.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-svg/po-gauge-path/po-gauge-path.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-svg/po-gauge-svg.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-title/po-gauge-title.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge-svg/po-gauge-pointer/po-gauge-pointer.component.ts","../../../projects/ui/src/lib/components/po-gauge/po-gauge.module.ts","../../../projects/ui/src/lib/components/po-grid/po-grid-cell-action/po-grid-cell-action.component.ts","../../../projects/ui/src/lib/components/po-grid/po-grid-cell/po-grid-cell.component.ts","../../../projects/ui/src/lib/components/po-grid/po-grid.component.ts","../../../projects/ui/src/lib/components/po-grid/po-grid-head/po-grid-head.component.ts","../../../projects/ui/src/lib/components/po-grid/po-grid.module.ts","../../../projects/ui/src/lib/components/po-list-view/po-list-view-base.component.ts","../../../projects/ui/src/lib/components/po-list-view/po-list-view-content-template/po-list-view-content-template.directive.ts","../../../projects/ui/src/lib/components/po-list-view/po-list-view-detail-template/po-list-view-detail-template.directive.ts","../../../projects/ui/src/lib/components/po-list-view/po-list-view.component.ts","../../../projects/ui/src/lib/components/po-list-view/po-list-view.module.ts","../../../projects/ui/src/lib/components/po-badge/po-badge-base.component.ts","../../../projects/ui/src/lib/components/po-badge/po-badge.component.ts","../../../projects/ui/src/lib/components/po-badge/po-badge.module.ts","../../../projects/ui/src/lib/components/po-menu/services/po-menu.service.ts","../../../projects/ui/src/lib/components/po-menu/services/po-menu-global.service.ts","../../../projects/ui/src/lib/components/po-menu/po-menu-base.component.ts","../../../projects/ui/src/lib/components/po-menu/po-menu-header-template/po-menu-header-template.directive.ts","../../../projects/ui/src/lib/components/po-menu/services/po-menu-items.service.ts","../../../projects/ui/src/lib/components/po-menu/po-menu.component.ts","../../../projects/ui/src/lib/components/po-menu/po-menu-filter/po-menu-filter.component.ts","../../../projects/ui/src/lib/components/po-menu/po-menu-item/po-menu-item.component.ts","../../../projects/ui/src/lib/components/po-menu/po-menu.module.ts","../../../projects/ui/src/lib/components/po-menu-panel/po-menu-panel-base.component.ts","../../../projects/ui/src/lib/components/po-menu-panel/services/po-menu-panel-items.service.ts","../../../projects/ui/src/lib/components/po-menu-panel/po-menu-panel.component.ts","../../../projects/ui/src/lib/components/po-menu-panel/po-menu-panel-item/po-menu-panel-item.component.ts","../../../projects/ui/src/lib/components/po-menu-panel/po-menu-panel.module.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-actions/po-navbar-action/po-navbar-action.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-actions/po-navbar-action-popup/po-navbar-action-popup.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-actions/po-navbar-actions.module.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-base.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-items/po-navbar-item/po-navbar-item.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-items/po-navbar-items.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-items/po-navbar-items.module.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-logo/po-navbar-logo.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.module.ts","../../../projects/ui/src/lib/components/po-navbar/po-navbar.module.ts","../../../projects/ui/src/lib/components/po-page/po-page-content/po-page-content-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-content/po-page-content.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-default/po-page-default-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-default/po-page-default.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-detail/po-page-detail-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-detail/po-page-detail.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-edit/po-page-edit-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-edit/po-page-edit.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-header/po-page-header-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-header/po-page-header.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-list/po-page-list-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-list/po-page-list.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-slide/po-page-slide-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-slide/po-page-slide.component.ts","../../../projects/ui/src/lib/components/po-page/po-page-base.component.ts","../../../projects/ui/src/lib/components/po-page/po-page.component.ts","../../../projects/ui/src/lib/components/po-page/po-page.module.ts","../../../projects/ui/src/lib/components/po-slide/po-slide-circles/po-slide-circles.component.ts","../../../projects/ui/src/lib/components/po-slide/po-slide-base.component.ts","../../../projects/ui/src/lib/components/po-slide/directives/po-slide-content-template.directive.ts","../../../projects/ui/src/lib/components/po-slide/po-slide-item/po-slide-item.component.ts","../../../projects/ui/src/lib/components/po-slide/po-slide.component.ts","../../../projects/ui/src/lib/components/po-slide/po-slide-control/po-slide-control.component.ts","../../../projects/ui/src/lib/components/po-slide/po-slide.module.ts","../../../projects/ui/src/lib/components/po-stepper/enums/po-stepper-status.enum.ts","../../../projects/ui/src/lib/components/po-stepper/po-step/po-step.component.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper-circle/po-stepper-circle.component.ts","../../../projects/ui/src/lib/components/po-stepper/enums/po-stepper-orientation.enum.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper-base.component.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper.component.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper-label/po-stepper-label.component.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper-step/po-stepper-step.component.ts","../../../projects/ui/src/lib/components/po-stepper/po-stepper.module.ts","../../../projects/ui/src/lib/components/po-tabs/po-tab-button/po-tab-button.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tab/po-tab-base.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tab/po-tab.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tab-dropdown/po-tab-dropdown.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tabs-base.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tabs.component.ts","../../../projects/ui/src/lib/components/po-tabs/po-tabs.module.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar-actions/po-toolbar-actions.component.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar-base.component.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar.component.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar-notification/po-toolbar-notification.component.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar-profile/po-toolbar-profile.component.ts","../../../projects/ui/src/lib/components/po-toolbar/po-toolbar.module.ts","../../../projects/ui/src/lib/components/po-tree-view/po-tree-view-base.component.ts","../../../projects/ui/src/lib/components/po-tree-view/services/po-tree-view.service.ts","../../../projects/ui/src/lib/components/po-tree-view/po-tree-view.component.ts","../../../projects/ui/src/lib/components/po-tree-view/po-tree-view-item/po-tree-view-item.component.ts","../../../projects/ui/src/lib/components/po-tree-view/po-tree-view-item-header/po-tree-view-item-header.component.ts","../../../projects/ui/src/lib/components/po-tree-view/po-tree-view.module.ts","../../../projects/ui/src/lib/components/po-widget/po-widget-base.component.ts","../../../projects/ui/src/lib/components/po-widget/po-widget.component.ts","../../../projects/ui/src/lib/components/po-widget/po-widget.module.ts","../../../projects/ui/src/lib/components/components.module.ts","../../../projects/ui/src/lib/directives/directives.module.ts","../../../projects/ui/src/lib/guards/guards.module.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail-literals.interface.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail.component.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor-literals.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor-base.service.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor.service.ts","../../../projects/ui/src/lib/interceptors/po-http-interceptor/po-http-interceptor.module.ts","../../../projects/ui/src/lib/interceptors/po-http-request/po-http-request-control-service.ts","../../../projects/ui/src/lib/interceptors/po-http-request/po-http-request-interceptor.service.ts","../../../projects/ui/src/lib/interceptors/po-http-request/po-http-request.module.ts","../../../projects/ui/src/lib/interceptors/interceptors.module.ts","../../../projects/ui/src/lib/pipes/pipes.module.ts","../../../projects/ui/src/lib/po.module.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n-config-injection-token.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n-base.service.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n.service.ts","../../../projects/ui/src/lib/services/po-i18n/po-i18n.module.ts","../../../projects/ui/src/po-ui-ng-components.ts"],"sourcesContent":["/**\r\n * @description\r\n *\r\n * Componente utilizado para agrupar visualmente uma lista de conteúdos, mostrando-os individualmente\r\n * ao clicar no título de cada item.\r\n *\r\n * Para utilizá-lo, é necessário envolver cada item no componente [`po-accordion-item`](/documentation/po-accordion-item),\r\n * como no exemplo abaixo:\r\n *\r\n * ```\r\n * <po-accordion>\r\n *   <po-accordion-item p-label=\"PO Accordion 1\">\r\n *      Accordion 1\r\n *   </po-accordion-item>\r\n *\r\n *   <po-accordion-item p-label=\"PO Accordion 2\">\r\n *      Accordion 2\r\n *   </po-accordion-item>\r\n * </po-accordion>\r\n * ```\r\n *\r\n * O componente já faz o controle de abertura e fechamento dos itens automaticamente.\r\n *\r\n * Caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript\r\n * acesse a [documentação do PoAccordionItem](/documentation/po-accordion-item).\r\n */\r\nexport class PoAccordionBaseComponent {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço para poder notificar o componente `po-accordion` quando um `po-accordion-item` for\r\n * expandido/colapsado.\r\n */\r\n@Injectable()\r\nexport class PoAccordionService {\r\n  private subjectChild = new Subject<any>();\r\n\r\n  // Recebe o accordionItem\r\n  receiveFromChildAccordionClicked() {\r\n    return this.subjectChild.asObservable();\r\n  }\r\n\r\n  // Envia accordionItem colapsado/expadido do accordion\r\n  sendToParentAccordionItemClicked(accordionItem: object) {\r\n    this.subjectChild.next(accordionItem);\r\n  }\r\n}\r\n","import { Component, Input, TemplateRef, ViewChild } from '@angular/core';\r\n\r\nimport { PoAccordionService } from '../services/po-accordion.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente utilizado para renderizar os itens do `po-accordion`.\r\n *\r\n * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,\r\n * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:\r\n *\r\n * ```\r\n * <po-accordion>\r\n *   <po-accordion-item p-label=\"PO Accordion 1\" #item1>\r\n *      Accordion 1\r\n *   </po-accordion-item>\r\n *\r\n *   <po-accordion-item p-label=\"PO Accordion 2\">\r\n *      Accordion 2\r\n *   </po-accordion-item>\r\n * </po-accordion>\r\n * ```\r\n *\r\n * e no typescript pode-se utilizar o `@ViewChild`:\r\n *\r\n * ```\r\n *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;\r\n *\r\n *  ngAfterContentInit() {\r\n *    // ou utilizar o método collapse()\r\n *    this.item1.expand();\r\n *  }\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'po-accordion-item',\r\n  templateUrl: 'po-accordion-item.component.html'\r\n})\r\nexport class PoAccordionItemComponent {\r\n  /** Título do item. */\r\n  @Input('p-label') label: string;\r\n\r\n  @ViewChild(TemplateRef, { static: true }) templateRef: TemplateRef<any>;\r\n\r\n  expanded: boolean;\r\n\r\n  constructor(private accordionService: PoAccordionService) {}\r\n\r\n  /**\r\n   * Método para colapsar o `po-accordion-item`.\r\n   */\r\n  collapse() {\r\n    this.expanded = false;\r\n\r\n    this.accordionService.sendToParentAccordionItemClicked(this);\r\n  }\r\n\r\n  /**\r\n   * Método para expandir o `po-accordion-item`.\r\n   */\r\n  expand() {\r\n    this.expanded = true;\r\n\r\n    this.accordionService.sendToParentAccordionItemClicked(this);\r\n  }\r\n}\r\n","import { Component, ContentChildren, QueryList, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoAccordionBaseComponent } from './po-accordion-base.component';\r\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\r\nimport { PoAccordionService } from './services/po-accordion.service';\r\n\r\n/**\r\n * @docsExtends PoAccordionBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-accordion-basic\" title=\"PO Accordion Basic\" >\r\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-accordion-basic/sample-po-accordion-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-accordion-labs\" title=\"PO Accordion Labs\" >\r\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-accordion-labs/sample-po-accordion-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-accordion-faq\" title=\"PO Accordion - FAQs\" >\r\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.html\"> </file>\r\n *  <file name=\"sample-po-accordion-faq/sample-po-accordion-faq.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-accordion',\r\n  templateUrl: 'po-accordion.component.html',\r\n  providers: [PoAccordionService]\r\n})\r\nexport class PoAccordionComponent extends PoAccordionBaseComponent implements OnDestroy {\r\n  @ContentChildren(PoAccordionItemComponent) poAccordionItems: QueryList<PoAccordionItemComponent>;\r\n\r\n  private accordionServiceSubscription: Subscription;\r\n  private expandedActiveAccordionItem: PoAccordionItemComponent;\r\n\r\n  constructor(private accordionService: PoAccordionService) {\r\n    super();\r\n    this.receiveFromChildAccordionSubscription();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.accordionServiceSubscription.unsubscribe();\r\n  }\r\n\r\n  headerToggle(event: boolean, poAccordionItem: PoAccordionItemComponent) {\r\n    poAccordionItem.expanded = event;\r\n\r\n    this.toggle(poAccordionItem);\r\n  }\r\n\r\n  private receiveFromChildAccordionSubscription() {\r\n    this.accordionServiceSubscription = this.accordionService\r\n      .receiveFromChildAccordionClicked()\r\n      .subscribe(poAccordionItem => this.toggle(poAccordionItem));\r\n  }\r\n\r\n  private toggle(poAccordionItem: PoAccordionItemComponent) {\r\n    const isCurrentAccordionCollapsed = !poAccordionItem.expanded;\r\n\r\n    if (isCurrentAccordionCollapsed) {\r\n      this.expandedActiveAccordionItem = null;\r\n      return;\r\n    }\r\n\r\n    if (this.expandedActiveAccordionItem) {\r\n      this.expandedActiveAccordionItem.collapse();\r\n    }\r\n\r\n    this.expandedActiveAccordionItem = poAccordionItem;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'po-accordion-item-body',\r\n  templateUrl: 'po-accordion-item-body.component.html',\r\n  animations: [\r\n    trigger('toggleBody', [\r\n      transition('* => void', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\r\n      transition('void => *', [style({ height: '0' }), animate(200, style({ height: '*' }))])\r\n    ])\r\n  ]\r\n})\r\nexport class PoAccordionItemBodyComponent {\r\n  @Input('p-expanded') expanded: boolean = false;\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-accordion-item-header',\r\n  templateUrl: 'po-accordion-item-header.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoAccordionItemHeaderComponent {\r\n  @Input('p-expanded') expanded: boolean = false;\r\n\r\n  @Input('p-label') label: string;\r\n\r\n  @Output('p-toggle') toggle = new EventEmitter<boolean>();\r\n\r\n  onClick() {\r\n    this.expanded = !this.expanded;\r\n\r\n    this.toggle.emit(this.expanded);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoAccordionComponent } from './po-accordion.component';\r\nimport { PoAccordionItemBodyComponent } from './po-accordion-item-body/po-accordion-item-body.component';\r\nimport { PoAccordionItemComponent } from './po-accordion-item/po-accordion-item.component';\r\nimport { PoAccordionItemHeaderComponent } from './po-accordion-item-header/po-accordion-item-header.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-accordion`.\r\n *\r\n * > Para o correto funcionamento do componente `po-accordion`, deve ser importado o módulo `BrowserAnimationsModule` no\r\n * > módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    PoAccordionComponent,\r\n    PoAccordionItemBodyComponent,\r\n    PoAccordionItemComponent,\r\n    PoAccordionItemHeaderComponent\r\n  ],\r\n  exports: [PoAccordionComponent, PoAccordionItemComponent]\r\n})\r\nexport class PoAccordionModule {}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nconst PO_AVATAR_SIZES = ['xs', 'sm', 'md', 'lg', 'xl'];\r\nconst PO_AVATAR_SIZE_DEFAULT = 'md';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-avatar` é um container para imagens em miniatura, possui um formato redondo e cinco opções de\r\n * tamanho, pode ser utilizado para mostrar a foto do perfil de um usuário, entre outras possibilidades.\r\n *\r\n * Além de poder ser utilizado separadamente, é possível usar o `po-avatar` juntamente com outros componentes e criar\r\n * layouts ricos e bem interessantes para os usuários, como por exemplo, uma lista de itens ou produtos.\r\n */\r\n@Directive()\r\nexport class PoAvatarBaseComponent {\r\n  /**\r\n   * Fonte da imagem que pode ser um caminho local (`./assets/images/logo-black-small.png`)\r\n   * ou um servidor externo (`https://po-ui.io/assets/images/logo-black-small.png`).\r\n   */\r\n  @Input('p-src') src: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica como o navegador deve carregar a imagem.\r\n   *\r\n   * Valores válidos:\r\n   *  - `eager` (a imagem é carregada imediatamente, independente de estar visível ou não)\r\n   *  - `lazy` (a imagem só é carregada quando estiver próxima de ser renderizada)\r\n   *\r\n   * @default `eager`\r\n   */\r\n  @Input('p-loading') loading: 'eager' | 'lazy' = 'eager';\r\n\r\n  /** Evento disparado ao clicar na imagem do *avatar*. */\r\n  @Output('p-click') click = new EventEmitter<any>();\r\n\r\n  private _size: string = 'md';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Tamanho de exibição do componente.\r\n   *\r\n   * Valores válidos:\r\n   *  - `xs` (24x24)\r\n   *  - `sm` (32x32)\r\n   *  - `md` (64x64)\r\n   *  - `lg` (96x96)\r\n   *  - `xl` (144x144)\r\n   *\r\n   * @default `md`\r\n   */\r\n  @Input('p-size') set size(value: string) {\r\n    this._size = PO_AVATAR_SIZES.includes(value) ? value : PO_AVATAR_SIZE_DEFAULT;\r\n  }\r\n  get size(): string {\r\n    return this._size;\r\n  }\r\n\r\n  get hasClickEvent() {\r\n    return !!this.click.observers.length;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { PoAvatarBaseComponent } from './po-avatar-base.component';\r\n\r\n/**\r\n * @docsExtends PoAvatarBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-avatar-basic\" title=\"PO Avatar Basic\" >\r\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-avatar-basic/sample-po-avatar-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-avatar-labs\" title=\"PO Avatar Labs\" >\r\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-avatar-labs/sample-po-avatar-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-avatar-business-card\" title=\"PO Avatar - Business Card\" >\r\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.html\"> </file>\r\n *  <file name=\"sample-po-avatar-business-card/sample-po-avatar-business-card.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-avatar',\r\n  templateUrl: './po-avatar.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoAvatarComponent extends PoAvatarBaseComponent implements OnInit {\r\n  ngOnInit(): void {\r\n    if (!this.src) {\r\n      this.src = undefined;\r\n    }\r\n  }\r\n\r\n  onError(): void {\r\n    this.src = undefined;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoAvatarComponent } from './po-avatar.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-avatar.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoAvatarComponent],\r\n  exports: [PoAvatarComponent]\r\n})\r\nexport class PoAvatarModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * Este componente gera uma estrutura de navegação que apresenta ao usuário a localização\r\n * da URL atual, exibindo as antecessoras conforme é realizado a navegação na aplicação.\r\n *\r\n * Quando não houver espaçamento suficiente para exibi-lás, o componente se encarrega também\r\n * de agrupar as URLs antecessoras, gerando assim um ícone que permite a visualização em cascata.\r\n *\r\n * Caso um endereço seja especificado na propriedade `p-favorite-service`, o componente permite ao usuário\r\n * favoritar a URL.\r\n *\r\n * Havendo necessidade de incluir parâmetros na requisição do serviço,\r\n * o componente dispõe da propriedade `p-params-service` que recebe um objeto contendo as informações.\r\n */\r\n@Directive()\r\nexport class PoBreadcrumbBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite definir uma URL no componente `po-breadcrumb` para favoritar ou desfavoritar.\r\n   * > Para utilizar esta propriedade, o último `PoBreadcrumbItem` da lista de items da propriedade `p-items` deve ter um link informado.\r\n   *\r\n   * > A API deve estar preparada para retornar um objeto no formato `{ isFavorite: boolean }`.\r\n   *\r\n   * Ao iniciar, o `po-breadcrumb` faz um GET na URL definida na propriedade `p-favorite-service` e deve retornar a propriedade\r\n   * `{ isFavorite: boolean }` do último `PoBreadcrumbItem` definido na lista de itens da propriedade `p-items`.\r\n   *\r\n   * Ao clicar em favoritar ou desfavoritar o `po-breadcrumb` faz um POST com o link e a propriedade `{ isFavorite: boolean }`\r\n   * definidos no último item da propriedade `p-items`.\r\n   *\r\n   * > Caso algum parâmetro seja definido na propriedade `p-params-service`, o mesmo será enviado para a API e retornará\r\n   * após fazer um GET ou POST.\r\n   *\r\n   * Exemplo de URL contendo o serviço de favoritar ou desfavoritar:\r\n   *\r\n   * ```\r\n   * https://po-ui.io/sample/api/favorite\r\n   * ```\r\n   *\r\n   * Ao fazer o GET o `po-breadcrumb` concatena o link com a URL de serviço. Exemplo:\r\n   *\r\n   * ```\r\n   * GET http://<domain>/api/favorite?url=/example\r\n   * ```\r\n   *\r\n   * ```\r\n   * GET http://po.com.br/sample/api/favorite?url=/example\r\n   * ```\r\n   *\r\n   * ```\r\n   * POST\r\n   * payload: { isFavorite: true, url: '/example' }\r\n   * ```\r\n   *\r\n   * Caso possua parâmetros definidos na propriedade `p-params-service`:\r\n   *\r\n   * ```\r\n   * POST\r\n   * payload: { isFavorite: true, url: \"/example\", params: \"{ id: 14, user: 'dev.po' }\" }\r\n   * ```\r\n   *\r\n   * Exemplos de retorno:\r\n   *\r\n   * ```\r\n   * { isFavorite: true, url: \"/example\" }\r\n   * ```\r\n   *\r\n   * ```\r\n   * { isFavorite: false, url: \"/example\" }\r\n   * ```\r\n   *\r\n   * ```\r\n   * { isFavorite: false, url: \"/example\", params: \"{ id: 14, user: 'dev.po' }\" }\r\n   * ```\r\n   */\r\n  @Input('p-favorite-service') favoriteService?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que possibilita o envio de parâmetros adicionais à requisição.\r\n   */\r\n  @Input('p-params-service') paramsService?: object;\r\n\r\n  itemsView: Array<PoBreadcrumbItem> = [];\r\n\r\n  protected clickoutListener: () => void;\r\n  protected resizeListener: () => void;\r\n\r\n  private _items: Array<PoBreadcrumbItem> = [];\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Lista de itens do _breadcrumb_.\r\n   *\r\n   * **Exemplo:**\r\n   * ```\r\n   * { label: 'Po Portal', link: 'portal' }\r\n   * ```\r\n   */\r\n  @Input('p-items') set items(items: Array<PoBreadcrumbItem>) {\r\n    this._items = items;\r\n    this.itemsView = [].concat(items);\r\n  }\r\n\r\n  get items() {\r\n    return this._items;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  IterableDiffers,\r\n  OnDestroy,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { PoBreadcrumbBaseComponent } from './po-breadcrumb-base.component';\r\nimport { PoBreadcrumbItem } from './po-breadcrumb-item.interface';\r\n\r\n/**\r\n * @docsExtends PoBreadcrumbBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-breadcrumb-basic\" title=\"PO Breadcrumb Basic\">\r\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-breadcrumb-basic/sample-po-breadcrumb-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-breadcrumb-labs\" title=\"PO Breadcrumb Labs\">\r\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-breadcrumb-labs/sample-po-breadcrumb-labs.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-breadcrumb',\r\n  templateUrl: './po-breadcrumb.component.html'\r\n})\r\nexport class PoBreadcrumbComponent extends PoBreadcrumbBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\r\n  @ViewChild('breadcrumb', { read: ElementRef, static: true }) breadcrumbElement: ElementRef;\r\n  @ViewChild('dropdownIcon', { read: ElementRef }) dropdownIcon: ElementRef;\r\n\r\n  showDropdown: boolean = false;\r\n  showDropdownToggle: boolean = false;\r\n  dropdownItems: Array<PoBreadcrumbItem>;\r\n\r\n  private _breadcrumbItemsLenght: number = 0;\r\n  private calculatedElement = false;\r\n  private differ;\r\n  private hiddenWithoutResize = false;\r\n  private initialized = false;\r\n  private timeoutResize;\r\n\r\n  constructor(differs: IterableDiffers, private element: ElementRef, public renderer: Renderer2) {\r\n    super();\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initialized = true;\r\n\r\n    this.initializeResizeListener();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const breadcrumbWidth = this.breadcrumbElement.nativeElement.offsetWidth;\r\n\r\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,\r\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\r\n    if (breadcrumbWidth && !this.calculatedElement && this.initialized) {\r\n      this.initBreadcrumbSize();\r\n    }\r\n\r\n    if (this.hiddenWithoutResize) {\r\n      this.debounceResize();\r\n      this.hiddenWithoutResize = false;\r\n    }\r\n\r\n    this.checkChangeOnItems();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeClickoutListener();\r\n    this.removeResizeListener();\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.showDropdown = !this.showDropdown;\r\n    this.initializeClickoutListener();\r\n  }\r\n\r\n  private wasClickedonDropdown = (event: MouseEvent) => {\r\n    const clickedOutIconDropdown = this.checkClickOutElement(event, this.dropdownIcon);\r\n\r\n    if (clickedOutIconDropdown) {\r\n      this.showDropdown = false;\r\n      this.removeClickoutListener();\r\n    }\r\n  };\r\n\r\n  private checkClickOutElement(event, element) {\r\n    return element && !element.nativeElement.contains(event.target);\r\n  }\r\n\r\n  private checkChangeOnItems() {\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(this.items);\r\n      if (changes) {\r\n        this.calcBreadcrumbItemsWidth();\r\n        this.calculatedElement = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  private calcBreadcrumb() {\r\n    const breadcrumbFavorite = this.getBreadcrumbFavoriteWidth();\r\n    const breadcrumb = this.getBreadcrumbWidth(breadcrumbFavorite);\r\n\r\n    if (breadcrumb <= this._breadcrumbItemsLenght) {\r\n      this.enableBreadcrumbResponsive();\r\n    } else {\r\n      this.disableBreadcrumbResponsive();\r\n    }\r\n  }\r\n\r\n  private getBreadcrumbFavoriteWidth() {\r\n    return this.favoriteService\r\n      ? this.element.nativeElement.querySelector('.po-breadcrumb-favorite').offsetWidth + 20\r\n      : 0;\r\n  }\r\n\r\n  private getBreadcrumbWidth(breadcrumbFavorite) {\r\n    return this.element.nativeElement.querySelector('.po-breadcrumb').offsetWidth - breadcrumbFavorite;\r\n  }\r\n\r\n  private calcBreadcrumbItemsWidth() {\r\n    const breadcrumbItem = this.element.nativeElement.querySelectorAll(\r\n      '.po-breadcrumb-item, .po-breadcrumb-item-unclickable'\r\n    );\r\n\r\n    this._breadcrumbItemsLenght = Array.from(breadcrumbItem)\r\n      .map(breadcrumb => breadcrumb['offsetWidth'])\r\n      .reduce((a, b) => a + b, 16);\r\n  }\r\n\r\n  private enableBreadcrumbResponsive() {\r\n    this.showDropdownToggle = true;\r\n    this.itemsView = this.items.slice(-2);\r\n    this.dropdownItems = this.items.slice(0, -2).reverse();\r\n  }\r\n\r\n  private disableBreadcrumbResponsive() {\r\n    this.showDropdownToggle = false;\r\n    this.itemsView = [].concat(this.items);\r\n    this.showDropdown = false;\r\n  }\r\n\r\n  private debounceResize() {\r\n    clearTimeout(this.timeoutResize);\r\n    this.timeoutResize = setTimeout(() => {\r\n      if (\r\n        this.calculatedElement &&\r\n        !this.hiddenWithoutResize &&\r\n        this.breadcrumbElement.nativeElement.offsetWidth === 0\r\n      ) {\r\n        this.hiddenWithoutResize = true;\r\n      } else {\r\n        this.calcBreadcrumb();\r\n      }\r\n    }, 50);\r\n  }\r\n\r\n  private initBreadcrumbSize() {\r\n    this.calcBreadcrumbItemsWidth();\r\n    this.calcBreadcrumb();\r\n    this.calculatedElement = true;\r\n  }\r\n\r\n  private initializeClickoutListener() {\r\n    this.clickoutListener = this.renderer.listen('document', 'click', this.wasClickedonDropdown);\r\n  }\r\n\r\n  private initializeResizeListener() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\r\n      this.debounceResize();\r\n    });\r\n  }\r\n\r\n  private removeClickoutListener() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n  }\r\n\r\n  private removeResizeListener() {\r\n    this.resizeListener();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que renderiza o dropdown do po-breadcrumb.\r\n */\r\n@Component({\r\n  selector: 'po-breadcrumb-dropdown',\r\n  templateUrl: './po-breadcrumb-dropdown.component.html'\r\n})\r\nexport class PoBreadcrumbDropdownComponent {\r\n  // Itens a serem apresentados na lista do dropdown.\r\n  @Input('p-items') items: Array<PoBreadcrumbItem>;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.\r\n * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os métodos, GET e POST este\r\n * objeto deve ser retornado.\r\n * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.\r\n * No método POST, existe a possibilidade de ser enviado parâmetros junto com a requisição. Neste caso, o objeto enviado\r\n * para a API terá o formato: { isFavorite: booleano, url: string, params: {} }, onde params é o objeto que pode ser enviado\r\n * junto com a requisição.\r\n *\r\n */\r\n@Injectable()\r\nexport class PoBreadcrumbFavoriteService {\r\n  private _url: string;\r\n  private _bodyParams: object;\r\n\r\n  get url(): string {\r\n    return this._url;\r\n  }\r\n\r\n  get bodyParams(): object {\r\n    return this._bodyParams;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  configService(url, params, item) {\r\n    this._url = url;\r\n    this._bodyParams = {\r\n      isFavorite: false,\r\n      url: item.link,\r\n      params: params\r\n    };\r\n  }\r\n\r\n  sendStatusFavorite(status): Observable<any> {\r\n    this.bodyParams['isFavorite'] = status;\r\n    return this.http.post(this.url, this.bodyParams);\r\n  }\r\n\r\n  getFavorite(): Observable<any> {\r\n    return this.http.get(this.url, { responseType: 'json', params: { url: this.bodyParams['url'] } });\r\n  }\r\n}\r\n","import { PoLanguage, PoNumberSeparator } from './po-language.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * <a id=\"poLanguageDefault\"></a>\r\n *\r\n *\r\n * A constante poLanguageDefault possui as linguagens de suporte padrão do Po-UI\r\n *\r\n * > Português, Inglês, Espanhol e Russo.\r\n *\r\n * @usedBy PoI18nModule\r\n */\r\nexport const poLanguageDefault: Array<PoLanguage> = [\r\n  { description: 'English', language: 'en' },\r\n  { description: 'Español', language: 'es' },\r\n  { description: 'Português', language: 'pt' },\r\n  { description: 'Pусский', language: 'ru' }\r\n];\r\n\r\n/**\r\n * @description\r\n *\r\n * <a id=\"poLocales\"></a>\r\n *\r\n *\r\n * A constante poLocales possui somente os códigos das linguagem padrão\r\n *\r\n * @usedBy PoI18nModule\r\n */\r\nexport const poLocales = poLanguageDefault.map(language => language.language);\r\n\r\n/**\r\n * @description\r\n *\r\n * <a id=\"poLocaleDefault\"></a>\r\n *\r\n *\r\n * A constante poLocaleDefault possui o código da linguagem padrão do Po-UI\r\n *\r\n * @usedBy PoI18nModule\r\n */\r\nexport const poLocaleDefault = 'pt';\r\n\r\n/**\r\n * @description\r\n *\r\n * <a id=\"poLocaleDecimalSeparatorList\"></a>\r\n *\r\n *\r\n * A constante poLocaleDecimalSeparatorList possui os separadores de decimal por linguagens de suporte padrão do Po-UI\r\n *\r\n * @usedBy PoI18nModule\r\n */\r\nexport const poLocaleDecimalSeparatorList: Array<PoNumberSeparator> = [\r\n  { separator: '.', language: 'en' },\r\n  { separator: ',', language: 'es' },\r\n  { separator: ',', language: 'pt' },\r\n  { separator: ',', language: 'ru' }\r\n];\r\n\r\n/**\r\n * @description\r\n *\r\n * <a id=\"poLocaleDecimalSeparatorList\"></a>\r\n *\r\n *\r\n * A constante poLocaleDecimalSeparatorList possui os separadores de decimal por linguagens de suporte padrão do Po-UI\r\n *\r\n * @usedBy PoI18nModule\r\n */\r\nexport const poLocaleThousandSeparatorList: Array<PoNumberSeparator> = [\r\n  { separator: ',', language: 'en' },\r\n  { separator: '.', language: 'es' },\r\n  { separator: '.', language: 'pt' },\r\n  { separator: ' ', language: 'ru' }\r\n];\r\n","import { ViewContainerRef } from '@angular/core';\r\nimport { poLocales, poLocaleDefault } from '../services/po-language/po-language.constant';\r\n\r\n/**\r\n * @deprecated\r\n * Utilize o método `getShortBrowserLanguage`.\r\n *\r\n * @description\r\n * Retorna idioma do browser ou o idioma padrão.\r\n */\r\nexport function browserLanguage() {\r\n  return getShortBrowserLanguage();\r\n}\r\n\r\n/**\r\n * Converte e formata os bytes em formato mais legível para o usuário.\r\n *\r\n * Por exemplo:\r\n * - 31457280 em 30 MB.\r\n * - 21474836480 em 20 GB.\r\n * - 12.5666666 em 12.57 Bytes (duas casas decimais).\r\n *\r\n * @param bytes {number} Valor em bytes\r\n * @param decimals {number} Quantidade de casas decimais que terá após a conversão.\r\n */\r\nexport function formatBytes(bytes: number, decimals = 2): string {\r\n  if (!bytes) {\r\n    return undefined;\r\n  }\r\n\r\n  const multiplier = 1024;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n  const result = Math.floor(Math.log(bytes) / Math.log(multiplier));\r\n  decimals = decimals < 0 ? 0 : decimals;\r\n\r\n  return `${parseFloat((bytes / Math.pow(multiplier, result)).toFixed(decimals))} ${sizes[result]}`;\r\n}\r\n\r\n/**\r\n * Retorna o idioma atual do navegador\r\n */\r\nexport function getBrowserLanguage(): string {\r\n  // navigator.userLanguage is the value for IE10\r\n  const language = navigator.language || navigator['userLanguage'];\r\n  const shortLanguage = getShortLanguage(language);\r\n\r\n  return poLocales.includes(shortLanguage) ? language : poLocaleDefault;\r\n}\r\n\r\n/**\r\n * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: \"pt\" ou \"es\".\r\n *\r\n * Caso o valor retornado pelo navegador não estiver dentro dos idiomas suportados pelo PO,\r\n * será retornado a linguagem padrão (poLocaleDefault).\r\n */\r\nexport function getShortBrowserLanguage(): string {\r\n  return getShortLanguage(getBrowserLanguage());\r\n}\r\n\r\n/**\r\n * Retorna o idioma com somente a abreviação do idioma (duas primeiras letras).\r\n * Por exemplo: \"pt\" ou \"es\".\r\n *\r\n * @param language {string} linguagem.\r\n *\r\n * @returns sigla do idioma padrão {string}.\r\n *\r\n * @default pt\r\n */\r\nexport function getShortLanguage(language: string): string {\r\n  return (language || poLocaleDefault).toLowerCase().substring(0, 2);\r\n}\r\n\r\nexport function isLanguage(value) {\r\n  const languageRegex = new RegExp('^[a-z]{2}(-[a-z]{2})?$', 'i');\r\n\r\n  return languageRegex.test(value);\r\n}\r\n\r\n/* istanbul ignore next */\r\nexport function reloadCurrentPage() {\r\n  window.location.assign(location.href);\r\n}\r\n\r\nexport function convertToBoolean(val: any): boolean {\r\n  if (typeof val === 'string') {\r\n    val = val.toLowerCase().trim();\r\n    return val === 'true' || val === 'on' || val === '';\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    return val === 1;\r\n  }\r\n\r\n  return !!val;\r\n}\r\n\r\nexport function convertToInt(value: any, valueDefault?: any): number {\r\n  const validNumber = parseInt(value, 10);\r\n  const validDefaultValue = parseInt(valueDefault, 10);\r\n  const defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;\r\n\r\n  return validNumber || validNumber === 0 ? validNumber : defaultValue;\r\n}\r\n\r\nexport function isTypeof(object: any, type: any) {\r\n  return typeof object === type;\r\n}\r\n\r\n/**\r\n *\r\n * @param fn Função que será executada dentro do contexto. Podendo ser o nome da função\r\n * ou a referência da mesma.\r\n *\r\n * @param context Contexto do qual a função será executada.\r\n */\r\nexport function callFunction(fn: any, context: any, param?): void {\r\n  if (isTypeof(fn, 'function')) {\r\n    fn.call(context, param);\r\n  } else {\r\n    context[fn](param);\r\n  }\r\n}\r\n\r\nexport function convertIsoToDate(value: string, start: boolean, end: boolean) {\r\n  if (value) {\r\n    const day = parseInt(value.substring(8, 10), 10);\r\n    const month = parseInt(value.substring(5, 7), 10);\r\n    const year = parseInt(value.substring(0, 4), 10);\r\n    if (start) {\r\n      const date = new Date(year, month - 1, day, 0, 0, 0);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else if (end) {\r\n      const date = new Date(year, month - 1, day, 23, 59, 59);\r\n\r\n      setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    } else {\r\n      const milliseconds = Date.parse(value);\r\n      const timezone = new Date().getTimezoneOffset() * 60000;\r\n      return new Date(milliseconds + timezone);\r\n    }\r\n  }\r\n}\r\n\r\nexport function convertDateToISODate(date: Date) {\r\n  if (date) {\r\n    const getMonth = date.getMonth() + 1;\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\r\n    const year = formatYear(date.getFullYear());\r\n\r\n    return year + '-' + month + '-' + day;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function convertDateToISOExtended(date: Date, time?: string) {\r\n  if (date) {\r\n    const getMonth = date.getMonth() + 1;\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n    const month = getMonth < 10 ? '0' + getMonth : getMonth;\r\n    const year = formatYear(date.getFullYear());\r\n\r\n    const dateString = date.toString();\r\n\r\n    if (time !== null) {\r\n      return year + '-' + month + '-' + day + time;\r\n    } else {\r\n      return (\r\n        year +\r\n        '-' +\r\n        month +\r\n        '-' +\r\n        day +\r\n        'T' +\r\n        dateString.substring(16, 24) +\r\n        dateString.substring(28, 31) +\r\n        ':' +\r\n        dateString.substring(31, 33)\r\n      );\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.\r\n *\r\n * @param year Ano\r\n */\r\nexport function formatYear(year: number) {\r\n  if (year >= 1000) {\r\n    return year.toString();\r\n  }\r\n\r\n  if (year > 99 && year < 1000) {\r\n    return `0${year}`;\r\n  }\r\n\r\n  if (year > 9 && year < 100) {\r\n    return `00${year}`;\r\n  }\r\n\r\n  if (year >= 0 && year < 10) {\r\n    return `000${year}`;\r\n  }\r\n}\r\n// Verifica se o navegador em que está sendo usado é Internet Explorer ou Edge\r\nexport function isIEOrEdge() {\r\n  const userAgent = window.navigator.userAgent;\r\n\r\n  return /msie\\s|trident\\/|edge\\//i.test(userAgent);\r\n}\r\n\r\n// Verifica se o navegador em que está sendo usado é Internet Explorer\r\nexport function isIE() {\r\n  const userAgent = window.navigator.userAgent;\r\n\r\n  return /msie\\s|trident/i.test(userAgent);\r\n}\r\n\r\n// Verifica se o navegador em que está sendo usado é Firefox\r\nexport function isFirefox() {\r\n  const userAgent = window.navigator.userAgent;\r\n\r\n  return userAgent.toLowerCase().indexOf('firefox') > -1;\r\n}\r\n\r\n// Verifica qual o dispositivo que está sendo usado\r\nexport function isMobile() {\r\n  const userAgent = window.navigator.userAgent;\r\n\r\n  return userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i);\r\n}\r\n\r\nexport function isEquals(value, comparedValue) {\r\n  return JSON.stringify(value) === JSON.stringify(comparedValue);\r\n}\r\n\r\nexport function isKeyCodeEnter(event: any): boolean {\r\n  return event.keyCode === 13 || event.which === 13;\r\n}\r\n\r\n/**\r\n * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.\r\n *\r\n * @param date Data\r\n * @param year Ano original\r\n */\r\nexport function setYearFrom0To100(date: Date, year: number) {\r\n  if (year >= 0 && year < 100) {\r\n    date.setFullYear(year);\r\n  }\r\n}\r\n\r\nexport function sortOptionsByProperty(options: Array<any>, property: string) {\r\n  options.sort((optionA, optionB) => {\r\n    optionA = optionA[property].toString().toLowerCase();\r\n    optionB = optionB[property].toString().toLowerCase();\r\n\r\n    if (optionA < optionB) {\r\n      return -1;\r\n    }\r\n    if (optionA > optionB) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n}\r\n\r\n/**\r\n * Ordena o campos baseado no valor da propriedade `order`.\r\n *\r\n * Só serão aceitos valores com números inteiros maiores do que zero para a ordenação.\r\n *\r\n * Campos sem `order` ou com valores negativos, zerados ou inválidos\r\n * receberão o valor default e seguirão o posicionamento dentro do\r\n * array.\r\n *\r\n * @param fields campo que se deseja ordenar.\r\n * @param defaultOrdering valor que será utilizado para manter na posição do array.\r\n */\r\nexport function sortFields(fields = [], defaultOrdering = -1) {\r\n  const resultClassification = { fieldAComesFirst: -1, fieldAComesAfter: 1, keepPositions: 0 };\r\n\r\n  const isOrderValid = (order: number) => isTypeof(order, 'number') && order > 0;\r\n  const applyDefaultOrdering = (order: number) => (isOrderValid(order) ? order : defaultOrdering);\r\n\r\n  return fields.sort((fieldA, fieldB) => {\r\n    const orderA = applyDefaultOrdering(fieldA.order);\r\n    const orderB = applyDefaultOrdering(fieldB.order);\r\n\r\n    if (orderA === orderB) {\r\n      return resultClassification.keepPositions;\r\n    }\r\n\r\n    if (orderA === defaultOrdering) {\r\n      return resultClassification.fieldAComesAfter;\r\n    }\r\n\r\n    if (orderB === defaultOrdering) {\r\n      return resultClassification.fieldAComesFirst;\r\n    }\r\n\r\n    return orderA - orderB;\r\n  });\r\n}\r\n\r\nexport function removeDuplicatedOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (i === 0) {\r\n      continue;\r\n    }\r\n\r\n    if (list.findIndex(op => op.value === list[i].value) !== i) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUndefinedAndNullOptions(list: Array<any>) {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].value === undefined || list[i].value === null) {\r\n      list.splice(i, 1);\r\n      i--;\r\n    }\r\n  }\r\n}\r\n\r\nexport function validValue(value: any) {\r\n  return (value !== null && value !== undefined && value !== '') || value === false;\r\n}\r\n\r\nexport function isExternalLink(url): boolean {\r\n  return url ? url.startsWith('http') : false;\r\n}\r\n\r\nexport function openExternalLink(url): void {\r\n  window.open(url, '_blank');\r\n}\r\n\r\nexport function getFormattedLink(link: string): string {\r\n  let formattedLink = '';\r\n  // Retira todos os pontos no começo da URL.\r\n  if (link) {\r\n    formattedLink = link.replace(/^(\\.)+/g, '');\r\n  }\r\n  // Verifica se foi utilizado uma rota que não comece com barra.\r\n  if (!formattedLink.startsWith('/')) {\r\n    formattedLink = '/'.concat(formattedLink);\r\n  }\r\n  return formattedLink;\r\n}\r\n\r\n/**\r\n * Método responsável por ordenar dois valores.\r\n *\r\n * @param leftSide Primeiro valor a ser comparado.\r\n * @param rightSide Segundo valor a ser comparado.\r\n * @param ascending Determina se será em ordem ascendente ou descendente.\r\n */\r\nexport function sortValues(leftSide: string | Date, rightSide: string | Date, ascending: boolean = true): number {\r\n  const left = isTypeof(leftSide, 'string') ? (leftSide as string).toLowerCase() : leftSide;\r\n  const right = isTypeof(rightSide, 'string') ? (rightSide as string).toLowerCase() : rightSide;\r\n\r\n  const leftIsInvalid = left === null || left === undefined || Number.isNaN(left);\r\n  const rightIsInvalid = right === null || right === undefined || Number.isNaN(right);\r\n\r\n  if (ascending) {\r\n    if (left < right || leftIsInvalid) {\r\n      return -1;\r\n    } else if (left > right || rightIsInvalid) {\r\n      return 1;\r\n    }\r\n  } else if (ascending === false) {\r\n    if (left < right || leftIsInvalid) {\r\n      return 1;\r\n    } else if (left > right || rightIsInvalid) {\r\n      return -1;\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function validateDateRange(date: Date, dateStart: Date, dateEnd: Date) {\r\n  if (dateStart && dateEnd) {\r\n    return date >= dateStart && date <= dateEnd;\r\n  } else if (dateStart && !dateEnd) {\r\n    return date >= dateStart;\r\n  } else if (!dateStart && dateEnd) {\r\n    return date <= dateEnd;\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function uuid() {\r\n  function hex4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n\r\n  return hex4() + hex4() + '-' + hex4() + '-' + hex4() + '-' + hex4() + '-' + hex4() + hex4() + hex4();\r\n}\r\n\r\nexport function capitalizeFirstLetter(text: string): string {\r\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\r\n}\r\n\r\n/**\r\n * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de\r\n * origem.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const people = [\r\n *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 },\r\n *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },\r\n *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapArrayByProperties(people, properties);\r\n *\r\n * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]\r\n * ```\r\n *\r\n * Um outro uso para o método é \"parear\" todos os objetos do array com as mesmas propriedades.\r\n *\r\n * ```\r\n * const customers = [\r\n *  { id: 1, name: 'Fulano', city: 'São Paulo', dependents: 2 }, // sem genre\r\n *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents\r\n *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }\r\n * ];\r\n * const properties = ['id', 'name', 'city', 'genre', 'dependents'];\r\n *\r\n * const pattern = mapArrayByProperties(customers, properties);\r\n * console.log(pattern);\r\n *\r\n * // [\r\n * //   { id: 1, name: 'Fulano', city: 'São Paulo', genre: undefined, dependents: 2 },\r\n * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },\r\n * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }\r\n * // ]\r\n * ```\r\n *\r\n * @param items {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapArrayByProperties(items: Array<any> = [], properties: Array<string> = []): Array<any> {\r\n  return items.map(item => mapObjectByProperties(item, properties));\r\n}\r\n\r\n/**\r\n * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 };\r\n *\r\n * const properties = ['id', 'name'];\r\n *\r\n * const idAndName = mapObjectByProperties(person, properties);\r\n *\r\n * console.log(idAndName); // { id: 1, name: 'Fulano' }\r\n * ```\r\n *\r\n * @param object {Array<any>} Array de items original.\r\n * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.\r\n *\r\n * @returns Array<any>\r\n */\r\nexport function mapObjectByProperties(object: any = {}, properties: Array<string> = []) {\r\n  const getSelectedProperties = (selectedProperties, property) => ({\r\n    ...selectedProperties,\r\n    [property]: object[property]\r\n  });\r\n\r\n  return properties.reduce(getSelectedProperties, {});\r\n}\r\n\r\n/**\r\n * Retorna os valores de um objeto dentro de um array.\r\n *\r\n * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versão typescrit for atualizada.\r\n *\r\n * @param object Objeto de onde será pego os valores.\r\n */\r\nexport function valuesFromObject(object: any = {}): Array<any> {\r\n  return Object.keys(object).map(property => object[property]);\r\n}\r\n\r\n/**\r\n * Converte um arquivo em base64.\r\n *\r\n * @param file arquivo que será convertido.\r\n */\r\nexport function convertImageToBase64(file: File): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    /* istanbul ignore next */\r\n    reader.onerror = error => reject(error);\r\n  });\r\n}\r\n\r\n/**\r\n * Converte um número em decimal baseado na quantidade de casas decimais.\r\n *\r\n * Caso o valor seja inválido, será retornado o valor `undefined`.\r\n * Valores inválidos são: `false`, `NaN`, `strings` que não numéricas, `undefined` e `null`.\r\n *\r\n * @param number valor que será convertido\r\n * @param decimalsPlace quantidade de casas decimais\r\n */\r\nexport function convertNumberToDecimal(number: any, decimalsPlace: number): number {\r\n  const isValidValue = (number || number === 0) && !isNaN(number);\r\n\r\n  const floatValue = isValidValue ? parseFloat(number) : undefined;\r\n\r\n  try {\r\n    return parseFloat(floatValue.toFixed(decimalsPlace));\r\n  } catch {\r\n    return floatValue;\r\n  }\r\n}\r\n\r\n/**\r\n * Retorna uma copia do objeto sujo, sem as propriedades nulas ou indefinidas.\r\n * Retorna o objeto sem as propriedades que contém valores nulos ou indefinidos.\r\n *\r\n * @param dirtyObject\r\n */\r\nexport function clearObject(dirtyObject: object): any {\r\n  const cleanObject = {};\r\n\r\n  Object.keys(dirtyObject).forEach(key => {\r\n    if (dirtyObject[key] !== null && dirtyObject[key] !== undefined) {\r\n      cleanObject[key] = dirtyObject[key];\r\n    }\r\n  });\r\n\r\n  return cleanObject;\r\n}\r\n\r\nexport function validateObjectType(value: any) {\r\n  return isTypeof(value, 'object') && !Array.isArray(value) ? value : undefined;\r\n}\r\n\r\n/**\r\n * Retorna os elementos DOM capazes de receber foco.\r\n *\r\n * > Atualmente são considerados \"focáveis\" os elementos DOM `input`, `select`,\r\n * `textarea`, `button` e `a`.\r\n *\r\n * @param parentElement Elemento DOM pai.\r\n * @returns Lista dos elementos DOM filhos \"focáveis\".\r\n */\r\nexport function getFocusableElements(parentElement: Element): NodeListOf<Element> {\r\n  const focusableElements = 'button:not([disabled]), [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]';\r\n  return parentElement.querySelectorAll(focusableElements);\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { getBrowserLanguage, getShortLanguage, isLanguage } from '../../utils/util';\r\nimport {\r\n  poLocaleDecimalSeparatorList,\r\n  poLocaleDefault,\r\n  poLocales,\r\n  poLocaleThousandSeparatorList\r\n} from './po-language.constant';\r\n\r\nconst poDefaultLanguage = 'PO_DEFAULT_LANGUAGE';\r\nconst poLocaleKey = 'PO_USER_LOCALE';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço responsável por gerenciar as linguagens da aplicação.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoLanguageService {\r\n  constructor() {}\r\n\r\n  set languageDefault(language: string) {\r\n    if (language && isLanguage(language)) {\r\n      localStorage.setItem(poDefaultLanguage, language);\r\n    }\r\n  }\r\n\r\n  get languageDefault(): string {\r\n    return localStorage.getItem(poDefaultLanguage);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método responsável por retornar o idioma ativo.\r\n   *\r\n   * A busca do idioma será feita na seguinte ordem:\r\n   *\r\n   *   1 - o idioma que foi armazenado no *localStorage*, através do método `setLanguage()` utilizado pelo i18n.\r\n   *\r\n   *   2 - o valor inserido nas configurações do módulo do i18n através do parâmetro `config`, sendo o idioma inserido\r\n   * na propriedade `language` da interface `PoI18nConfigDefault`.\r\n   *\r\n   *   3 - o idioma do navegador utilizado.\r\n   *\r\n   * > Caso o idioma do navegador não seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), será retornado valor `pt`.\r\n   *\r\n   * **Retorno:** `string` com a sigla do idioma ativo.\r\n   */\r\n  getLanguage(): string {\r\n    const language = localStorage.getItem(poLocaleKey) || this.languageDefault || getBrowserLanguage();\r\n    return language && language.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método responsável por retornar o idioma *default* da aplicação definido nas configurações do módulo do i18n através\r\n   * do parâmetro `config`.\r\n   *\r\n   * **Retorno:** `string` com a sigla do idioma *default*.\r\n   */\r\n  getLanguageDefault(): string {\r\n    return this.languageDefault;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método responsável por retornar a abreviação do idioma ativo na aplicação.\r\n   *\r\n   * @default `pt`\r\n   *\r\n   * **Retorno:** `string` com a sigla abreviada do idioma ativo.\r\n   */\r\n  getShortLanguage(): string {\r\n    const language = this.getLanguage();\r\n    const shortLanguage = getShortLanguage(language);\r\n\r\n    return poLocales.includes(shortLanguage) ? shortLanguage : poLocaleDefault;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método para salvar o idioma da aplicação no *storage*, utilizado pelo serviço do i18n.\r\n   *\r\n   * > Ao definir um idioma por este método, todos os módulos da aplicação utilizarão o idioma definido.\r\n   *\r\n   * @param language sigla do idioma.\r\n   *\r\n   * Esta sigla deve ser composta por duas letras representando o idioma,\r\n   * podendo ser adicionado outras duas letras representando o país, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\r\n   *\r\n   * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n   */\r\n  setLanguage(language: string): void {\r\n    if (!isLanguage(language)) {\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(poLocaleKey, language.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método que define o idioma configurado a partir do parâmetro `config` utilizado pelo módulo do i18n.\r\n   *\r\n   * > Ao definir um idioma por este serviço, apenas o módulo do i18n referente a esta configuração utilizará o idioma definido.\r\n   *\r\n   * @param language sigla do idioma.\r\n   *\r\n   * Esta sigla deve ser composta por duas letras representando o idioma,\r\n   * podendo ser adicionado outras duas letras representando o país, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\r\n   *\r\n   * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n   */\r\n  setLanguageDefault(language: string): void {\r\n    this.languageDefault = language;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Método que retorna o separador\r\n   *\r\n   * @param language sigla do idioma.\r\n   *\r\n   * Esta sigla deve ser composta por duas letras representando o idioma\r\n   *\r\n   * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n   */\r\n  getNumberSeparators(language?: string) {\r\n    language = language || this.getShortLanguage();\r\n    const decimal = poLocaleDecimalSeparatorList.find(separator => separator.language === language) ?? {};\r\n    const thousand = poLocaleThousandSeparatorList.find(separator => separator.language === language) ?? {};\r\n    const decimalSeparator = decimal.separator ?? ',';\r\n    const thousandSeparator = thousand.separator ?? '.';\r\n\r\n    return { decimalSeparator, thousandSeparator };\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoBreadcrumbItem } from './../po-breadcrumb-item.interface';\r\nimport { PoBreadcrumbFavoriteService } from './po-breadcrumb-favorite.service';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nexport const PoBreadcrumbLiterals: Object = {\r\n  en: <any>{\r\n    favorite: 'Favorite',\r\n    unfavorite: 'Unfavorite'\r\n  },\r\n  es: <any>{\r\n    favorite: 'Favor',\r\n    unfavorite: 'Desfavorecer'\r\n  },\r\n  pt: <any>{\r\n    favorite: 'Favoritar',\r\n    unfavorite: 'Desfavoritar'\r\n  },\r\n  ru: <any>{\r\n    favorite: 'Любимый',\r\n    unfavorite: 'Немилость'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que renderiza o serviço de favoritar do po-breadcrumb.\r\n */\r\n\r\n@Component({\r\n  selector: 'po-breadcrumb-favorite',\r\n  templateUrl: './po-breadcrumb-favorite.component.html',\r\n  providers: [PoBreadcrumbFavoriteService]\r\n})\r\nexport class PoBreadcrumbFavoriteComponent implements OnInit, OnDestroy {\r\n  // URL do serviço.\r\n  @Input('p-favorite-service') favoriteService: string;\r\n\r\n  // Item do breadcrumb ativo.\r\n  @Input('p-item-active') itemActive: PoBreadcrumbItem;\r\n\r\n  // Parâmetro que será enviado junto com o serviço de favoritar.\r\n  @Input('p-params-service') paramsService: object;\r\n\r\n  favorite: boolean = false;\r\n  literals;\r\n\r\n  private getSubscription: Subscription;\r\n  private setSubscription: Subscription;\r\n\r\n  constructor(private service: PoBreadcrumbFavoriteService, private languageService: PoLanguageService) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...PoBreadcrumbLiterals[language]\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.configService(this.favoriteService, this.paramsService, this.itemActive);\r\n    this.getStatusFavorite();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.getSubscription) {\r\n      this.getSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.setSubscription) {\r\n      this.setSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  toggleFavoriteAction() {\r\n    this.favorite ? this.setStatusFavorite(false) : this.setStatusFavorite(true);\r\n  }\r\n\r\n  private getStatusFavorite() {\r\n    this.getSubscription = this.service.getFavorite().subscribe(result => (this.favorite = result.isFavorite));\r\n  }\r\n\r\n  private setStatusFavorite(status) {\r\n    this.setSubscription = this.service\r\n      .sendStatusFavorite(status)\r\n      .subscribe(result => (this.favorite = result.isFavorite));\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que renderiza cada item do po-breadcrumb.\r\n */\r\n@Component({\r\n  selector: 'po-breadcrumb-item',\r\n  templateUrl: './po-breadcrumb-item.component.html'\r\n})\r\nexport class PoBreadcrumbItemComponent {\r\n  // Ação que será executada ao clicar sobre o item.\r\n  @Input('p-action') action: Function;\r\n\r\n  // Label do item.\r\n  @Input('p-label') label: string;\r\n\r\n  // Link do item.\r\n  @Input('p-link') link: string;\r\n\r\n  // Especifica se item é o link ativo.\r\n  @Input('p-item-active') itemActive: boolean = false;\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoBreadcrumbComponent } from './po-breadcrumb.component';\r\nimport { PoBreadcrumbDropdownComponent } from './po-breadcrumb-dropdown/po-breadcrumb-dropdown.component';\r\nimport { PoBreadcrumbFavoriteComponent } from './po-breadcrumb-favorite/po-breadcrumb-favorite.component';\r\nimport { PoBreadcrumbItemComponent } from './po-breadcrumb-item/po-breadcrumb-item.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-breadcrumb.\r\n *\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [\r\n    PoBreadcrumbComponent,\r\n    PoBreadcrumbDropdownComponent,\r\n    PoBreadcrumbFavoriteComponent,\r\n    PoBreadcrumbItemComponent\r\n  ],\r\n  exports: [PoBreadcrumbComponent]\r\n})\r\nexport class PoBreadcrumbModule {}\r\n","import { Input, TemplateRef, Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoButton\r\n *\r\n * @description\r\n *\r\n * Permite a exibição de ícones.\r\n */\r\n@Component({\r\n  selector: 'po-icon',\r\n  templateUrl: './po-icon.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoIconComponent {\r\n  class: string;\r\n  private _icon: string | TemplateRef<void>;\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Define o ícone a ser exibido.\r\n   *\r\n   * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-button p-icon=\"po-icon-user\" p-label=\"PO button\"></po-button>\r\n   * ```\r\n   * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-button p-icon=\"fa fa-podcast\" p-label=\"PO button\"></po-button>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-button [p-icon]=\"template\" p-label=\"button template ionic\"></po-button>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   */\r\n  @Input('p-icon') set icon(value: string | TemplateRef<void>) {\r\n    if (typeof value === 'string') {\r\n      this.addClasses(value);\r\n    } else if (value instanceof TemplateRef) {\r\n      this._icon = value;\r\n    }\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon;\r\n  }\r\n\r\n  private addClasses(value: string) {\r\n    this.class = value.startsWith('po-icon-')\r\n      ? (this.class = `po-icon ${value}`)\r\n      : (this.class = `po-fonts-icon ${value}`);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoIconComponent } from './po-icon.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente Po-Icon.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoIconComponent],\r\n  exports: [PoIconComponent]\r\n})\r\nexport class PoIconModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from './../../../utils/util';\r\n\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { PoLoadingOverlayLiterals } from './interfaces/po-loading-overlay-literals.interface';\r\n\r\nexport const poLoadingOverlayLiteralsDefault = {\r\n  en: <PoLoadingOverlayLiterals>{\r\n    loading: 'Loading'\r\n  },\r\n  es: <PoLoadingOverlayLiterals>{\r\n    loading: 'Cargando'\r\n  },\r\n  pt: <PoLoadingOverlayLiterals>{\r\n    loading: 'Carregando'\r\n  },\r\n  ru: <PoLoadingOverlayLiterals>{\r\n    loading: 'погрузка'\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * Este componente mostra ao usuário uma imagem de _loading_ e bloqueia a página inteira ou o container escolhido,\r\n * enquanto aguarda a resposta de alguma requisição.\r\n */\r\n@Directive()\r\nexport class PoLoadingOverlayBaseComponent {\r\n  private _screenLock?: boolean = false;\r\n  private _text?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se o *overlay* será aplicado a um *container* ou a página inteira.\r\n   *\r\n   * Para utilizar o componente como um *container*, o elemento pai deverá receber uma posição relativa, por exemplo:\r\n   *\r\n   * ```\r\n   * <div style=\"position: relative\">\r\n   *\r\n   *  <po-chart [p-series]=\"[{ value: 10, category: 'Example' }]\">\r\n   *  </po-chart>\r\n   *\r\n   *  <po-loading-overlay>\r\n   *  </po-loading-overlay>\r\n   * </div>\r\n   * ```\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-screen-lock') set screenLock(screenLock: boolean) {\r\n    this._screenLock = convertToBoolean(screenLock);\r\n  }\r\n\r\n  get screenLock() {\r\n    return this._screenLock;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Texto a ser exibido no componente.\r\n   *\r\n   * > O valor padrão será traduzido acordo com o idioma configurado no [**PoI18n**](/documentation/po-i18n) ou navegador.\r\n   *\r\n   * @default `Carregando`\r\n   */\r\n  @Input('p-text') set text(value: string) {\r\n    this._text = value || this.getTextDefault();\r\n  }\r\n\r\n  get text(): string {\r\n    return this._text;\r\n  }\r\n\r\n  constructor(private languageService: PoLanguageService) {\r\n    this.text = this.getTextDefault();\r\n  }\r\n\r\n  private getTextDefault(): string {\r\n    const language = this.languageService.getShortLanguage();\r\n\r\n    return poLoadingOverlayLiteralsDefault[language].loading;\r\n  }\r\n}\r\n","import { Component, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\r\n\r\nimport { PoLoadingOverlayBaseComponent } from './po-loading-overlay-base.component';\r\n\r\n/**\r\n *\r\n * @docsExtends PoLoadingOverlayBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-loading-overlay-basic\" title=\"PO Loading Overlay Basic\">\r\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-loading-overlay-basic/sample-po-loading-overlay-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-loading-overlay-labs\" title=\"PO Loading Overlay Labs\">\r\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-loading-overlay-labs/sample-po-loading-overlay-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-loading-overlay-connection-test\" title=\"PO Loading Overlay - Connection Test\">\r\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.html\"> </file>\r\n *  <file name=\"sample-po-loading-overlay-connection-test/sample-po-loading-overlay-connection-test.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-loading-overlay',\r\n  templateUrl: 'po-loading-overlay.component.html'\r\n})\r\nexport class PoLoadingOverlayComponent extends PoLoadingOverlayBaseComponent {\r\n  constructor(public changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\r\n    super(languageService);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que exibe um ícone de carregamento de conteúdo. A cor padrão para ele é a primária conforme o tema utilizado.\r\n * É possível alterá-la para um tom cinza conforme a necessidade.\r\n */\r\n@Component({\r\n  selector: 'po-loading-icon',\r\n  templateUrl: 'po-loading-icon.component.html'\r\n})\r\nexport class PoLoadingIconComponent {\r\n  private _neutralColor: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição para cor neutra (cinza) para o ícone de carregamento.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-neutral-color') set neutralColor(value: boolean) {\r\n    this._neutralColor = convertToBoolean(value);\r\n  }\r\n\r\n  get neutralColor(): boolean {\r\n    return this._neutralColor;\r\n  }\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Este componente tem o objetivo de mostrar visualmente aos usuários que a aplicação está processando\r\n * ou aguardando a resposta de alguma requisição.\r\n */\r\n@Directive()\r\nexport class PoLoadingBaseComponent {\r\n  /**\r\n   * Texto a ser exibido no componente.\r\n   */\r\n  @Input('p-text') text?: string = 'Carregando';\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoLoadingBaseComponent } from './po-loading-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoLoadingBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-loading',\r\n  templateUrl: 'po-loading.component.html'\r\n})\r\nexport class PoLoadingComponent extends PoLoadingBaseComponent {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoLanguageService } from './po-language.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `po-language`.\r\n */\r\n@NgModule({\r\n  providers: [PoLanguageService]\r\n})\r\nexport class PoLanguageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\r\n\r\nimport { PoLoadingComponent } from './po-loading.component';\r\nimport { PoLoadingIconComponent } from './po-loading-icon/po-loading-icon.component';\r\nimport { PoLoadingOverlayComponent } from './po-loading-overlay/po-loading-overlay.component';\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * Módulo do componente po-loading-overlay.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoLanguageModule],\r\n  declarations: [PoLoadingComponent, PoLoadingIconComponent, PoLoadingOverlayComponent],\r\n  exports: [PoLoadingComponent, PoLoadingIconComponent, PoLoadingOverlayComponent]\r\n})\r\nexport class PoLoadingModule {}\r\n","import { PropertyDecoratorInterface } from './property-decorator.interface';\r\n\r\n/**\r\n * Função utilizada pela fábrica de decoradores para validar uma propriedade de uma classe durante\r\n * o ciclo de vida do Angular.\r\n *\r\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\r\n * @param lifecycleName clico de vida que se deseja executar com a validação.\r\n * @param callback função que será executada para validadar a propriedade.\r\n */\r\nexport function validatePropertyOnLifeCycle(\r\n  decoratorProperties: PropertyDecoratorInterface,\r\n  lifecycleName: string,\r\n  callback: Function\r\n) {\r\n  const { target, property } = decoratorProperties;\r\n  const emptyFunction = () => {};\r\n  const lifecycleFunctionClone: Function | null = target[lifecycleName] || emptyFunction;\r\n\r\n  Object.defineProperty(target, lifecycleName, {\r\n    value: function () {\r\n      callback.call(this, property, target);\r\n      lifecycleFunctionClone.call(this);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Função utilizada pela fábrica de decoradores para alterar/manipular o valor de uma propriedade.\r\n *\r\n * > Este decorator irá criar os métodos get e set internamente. Portanto,\r\n * é importante **não** criar nomes privados para as propriedades utilizando\r\n * `$$__nomeDaPropriedade` ao utilizar este decorator, pois ela será sobrescrita pela propriedade privada\r\n * criada pelo decorator.\r\n *\r\n * @param decoratorProperties propriedades da interface PoPropertyDecoratorInterface.\r\n * @param decoratorName nome do decorator\r\n * @param callback função que será executada para alterar o valor da propriedade\r\n */\r\nexport function changeValueByCallback(\r\n  decoratorProperties: PropertyDecoratorInterface,\r\n  decoratorName: string,\r\n  callback: Function\r\n) {\r\n  const { target, property, originalDescriptor } = decoratorProperties;\r\n  const privatePropertyName = createPrivateProperty(target, property, decoratorName);\r\n\r\n  return {\r\n    get: getter(originalDescriptor, privatePropertyName),\r\n    set: setter(originalDescriptor, callback, privatePropertyName)\r\n  };\r\n}\r\nfunction setter(originalDescriptor, callback: Function, privatePropertyName: string) {\r\n  return function (value): void {\r\n    if (originalDescriptor && originalDescriptor.set) {\r\n      originalDescriptor.set.bind(this)(callback(value));\r\n    }\r\n\r\n    this[privatePropertyName] = callback(value);\r\n  };\r\n}\r\n\r\nfunction getter(originalDescriptor: TypedPropertyDescriptor<any>, privatePropName: string) {\r\n  return function () {\r\n    return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\r\n  };\r\n}\r\n\r\nexport function createPrivateProperty(target: any, propertyName: string, decoratorName: string) {\r\n  const privatePropName = `$$__${propertyName}`;\r\n\r\n  if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\r\n    console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${decoratorName} decorator.`);\r\n  }\r\n\r\n  Object.defineProperty(target, privatePropName, {\r\n    configurable: true,\r\n    writable: true\r\n  });\r\n\r\n  return privatePropName;\r\n}\r\n","import { convertToBoolean } from '../../utils/util';\r\nimport { changeValueByCallback } from '../utils-decorators';\r\nimport { PropertyDecoratorInterface } from '../property-decorator.interface';\r\n\r\n/**\r\n * Converte o valor de um campo de entrada para booleano.\r\n *\r\n * Forma de utilização:\r\n *\r\n * ```\r\n * @Input('p-loading') @InputBoolean() loading: boolean;\r\n * ```\r\n */\r\n\r\nexport function InputBoolean(): any {\r\n  return function (target: any, property: string, originalDescriptor?) {\r\n    const decoratorProperties: PropertyDecoratorInterface = { target, property, originalDescriptor };\r\n\r\n    return changeValueByCallback(decoratorProperties, 'InputBoolean', convertToBoolean);\r\n  };\r\n}\r\n","import { PropertyDecoratorInterface } from '../property-decorator.interface';\r\nimport { validatePropertyOnLifeCycle } from '../utils-decorators';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Verifica se uma entrada de um componente foi preenchida.\r\n *\r\n * Na ausência da propriedade o decorator irá disparar um warn no console\r\n * do navegador do usuário.\r\n *\r\n * > Esta verificação é feita apenas no ngOnInit do componente.\r\n *\r\n * Forma de utilização:\r\n * ```\r\n * @Input('p-label') @InputRequired() label: string;\r\n * ```\r\n *\r\n * Referência:\r\n * https://netbasal.com/how-to-add-angular-component-input-validation-b078a30af97f\r\n * https://medium.com/@abdelelmedny/angular-input-decorators-5d38089070aa\r\n */\r\n\r\nexport function InputRequired() {\r\n  return function (target: any, property: string) {\r\n    const decoratorProperties: PropertyDecoratorInterface = { target, property };\r\n    validatePropertyOnLifeCycle(decoratorProperties, 'ngOnInit', validateProperty);\r\n  };\r\n}\r\n\r\nfunction validateProperty(property: string, target: any) {\r\n  if (this[property] == null) {\r\n    console.warn(`${target.constructor.name}: ${property} is required, but was not provided`);\r\n  }\r\n}\r\n","import { EventEmitter, Input, Output, Directive, TemplateRef } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { InputBoolean } from '../../decorators';\r\n\r\nconst PO_BUTTON_TYPES = ['default', 'primary', 'danger', 'link'];\r\nconst PO_BUTTON_TYPE_DEFAULT = 'default';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-button` permite que o usuário execute ações predefinidas pelo desenvolvedor.\r\n *\r\n * Através dos tipos, é possível identificar a importância de cada ação, sendo ela primária (`primary`) ou até mesmo uma\r\n * ação irreversível (`danger`), como a exclusão de um registro.\r\n *\r\n * #### Boas práticas\r\n *\r\n * - Evite `labels` extensos que quebram o layout do `po-button`, use `labels` diretos, curtos e intuitivos.\r\n * - Utilize apenas um `po-button` configurado como `primary` por página.\r\n * - Para ações irreversíveis use sempre o tipo `danger`.\r\n */\r\n@Directive()\r\nexport class PoButtonBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   * > Caso mais de um elemento seja configurado com essa propriedade,\r\n   * o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Label do botão.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Ícone exibido ao lado esquerdo do label do botão.\r\n   *\r\n   * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-button p-icon=\"po-icon-user\" p-label=\"PO button\"></po-button>\r\n   * ```\r\n   * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-button p-icon=\"fa fa-podcast\" p-label=\"PO button\"></po-button>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-button [p-icon]=\"template\" p-label=\"button template ionic\"></po-button>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   */\r\n  @Input('p-icon') icon?: string | TemplateRef<void>;\r\n\r\n  /** Ação que será executada quando o usuário clicar sobre o `po-button`. */\r\n  @Output('p-click') click = new EventEmitter<null>();\r\n\r\n  private _disabled?: boolean = false;\r\n  private _loading?: boolean = false;\r\n  private _small?: boolean = false;\r\n  private _type?: string = 'default';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe um ícone de carregamento à esquerda do _label_ do botão.\r\n   *\r\n   * > Quando esta propriedade estiver habilitada, desabilitará o botão.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-loading') set loading(value: boolean) {\r\n    this._loading = convertToBoolean(value);\r\n  }\r\n\r\n  get loading(): boolean {\r\n    return this._loading;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Deixa o botão menor.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-small') set small(value: boolean) {\r\n    this._small = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n  get small(): boolean {\r\n    return this._small;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o estilo do `po-button`.\r\n   *\r\n   * Valore válidos:\r\n   *  - `default`: estilo padrão do `po-button`.\r\n   *  - `primary`: deixa o `po-button` com destaque, deve ser usado para ações primárias.\r\n   *  - `danger`: deve ser usado para ações que o usuário precisa ter cuidado ao executa-lá.\r\n   *  - `link`: o `po-button` recebe o estilo de um link.\r\n   *\r\n   * @default `default`\r\n   */\r\n  @Input('p-type') set type(value: string) {\r\n    this._type = PO_BUTTON_TYPES.includes(value) ? value : PO_BUTTON_TYPE_DEFAULT;\r\n  }\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o `po-button` e não permite que o usuário interaja com o mesmo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { PoButtonBaseComponent } from './po-button-base.component';\r\n\r\n/**\r\n * @docsExtends PoButtonBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-button-basic\" title=\"PO Button Basic\">\r\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-button-basic/sample-po-button-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-button-labs\" title=\"PO Button Labs\">\r\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.ts\"> </file>\r\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-button-labs/sample-po-button-labs.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-button-social-network\" title=\"PO Button Social Network\">\r\n *  <file name=\"sample-po-button-social-network/sample-po-button-social-network.component.html\"> </file>\r\n *  <file name=\"sample-po-button-social-network/sample-po-button-social-network.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-button',\r\n  templateUrl: './po-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoButtonComponent extends PoButtonBaseComponent implements AfterViewInit {\r\n  @ViewChild('button', { static: true }) buttonElement: ElementRef;\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoButtonComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoButtonComponent, { static: true }) button: PoButtonComponent;\r\n   *\r\n   * focusButton() {\r\n   *   this.button.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.buttonElement.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n    this.click.emit(null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoIconModule } from './../po-icon/index';\r\nimport { PoLoadingModule } from './../po-loading/index';\r\n\r\nimport { PoButtonComponent } from './po-button.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-button.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoLoadingModule, PoIconModule],\r\n  declarations: [PoButtonComponent],\r\n  exports: [PoButtonComponent]\r\n})\r\nexport class PoButtonModule {}\r\n","// Array de posições.\r\nexport const PO_CONTROL_POSITIONS = [\r\n  'right',\r\n  'right-top',\r\n  'right-bottom',\r\n  'top',\r\n  'top-left',\r\n  'top-right',\r\n  'left',\r\n  'left-top',\r\n  'left-bottom',\r\n  'bottom',\r\n  'bottom-left',\r\n  'bottom-right'\r\n];\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { InputBoolean } from '../../decorators';\r\n\r\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\r\n\r\nconst CONTENT_MAX_LENGTH = 140;\r\nconst PO_TOOLTIP_POSITION_DEFAULT = 'bottom';\r\n\r\n/**\r\n * @description\r\n *\r\n * A diretiva po-tooltip deve ser utilizada para oferecer informações adicionais quando os usuários\r\n * passam o mouse sobre o elemento alvo ao qual ela está atribuída.\r\n *\r\n * O conteúdo é formado por um pequeno texto que deve contribuir para uma tomada de decisão ou\r\n * orientação do usuário. A ativação dele pode estar em qualquer componente ou tag HTML.\r\n *\r\n * Para textos maiores ou no caso de haver a necessidade de utilizar algum outro elemento como\r\n * conteúdo deve-se utilizar o [**po-popover**](https://po-ui.io/documentation/po-popover?view=doc).\r\n */\r\n\r\n@Directive()\r\nexport abstract class PoTooltipBaseDirective {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define que o po-tooltip será incluido no body e não dentro do elemento ao qual o tooltip foi especificado.\r\n   * Opção necessária para o caso de uso de tooltip em um elemento SVG.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-append-in-body') @InputBoolean() appendInBody: boolean = false;\r\n\r\n  protected _tooltipPosition?: string = 'bottom';\r\n  protected tooltipContent;\r\n\r\n  private _displayTooltip: boolean = false;\r\n  private _tooltip: string = '';\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Habilita e atribui um texto ao po-tooltip, com limitação de 140 caracteres.\r\n   */\r\n  @Input('p-tooltip') set tooltip(tooltip: string) {\r\n    if (tooltip && tooltip.length > CONTENT_MAX_LENGTH) {\r\n      this._tooltip = tooltip.substring(0, CONTENT_MAX_LENGTH);\r\n    } else {\r\n      this._tooltip = tooltip;\r\n    }\r\n  }\r\n  get tooltip() {\r\n    return this._tooltip;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a posição que o po-tooltip abrirá em relação ao componente alvo. Sugere-se que seja\r\n   * usada a orientação \"bottom\" (abaixo), porém o mesmo é flexível e será rotacionado\r\n   * automaticamente para se adequar a tela, caso necessário.\r\n   *\r\n   * Posições válidas:\r\n   * - `right`: Posiciona o po-tooltip no lado direito do componente alvo.\r\n   * - `right-bottom`: Posiciona o po-tooltip no lado direito inferior do componente alvo.\r\n   * - `right-top`: Posiciona o po-tooltip no lado direito superior do componente alvo.\r\n   * - `bottom`: Posiciona o po-tooltip abaixo do componente alvo.\r\n   * - `bottom-left`: Posiciona o po-tooltip abaixo e à esquerda do componente alvo.\r\n   * - `bottom-right`: Posiciona o po-tooltip abaixo e à direita do componente alvo.\r\n   * - `left`: Posiciona o po-tooltip no lado esquerdo do componente alvo.\r\n   * - `left-top`: Posiciona o po-tooltip no lado esquerdo superior do componente alvo.\r\n   * - `left-bottom`: Posiciona o po-tooltip no lado esquerdo inferior do componente alvo.\r\n   * - `top`: Posiciona o po-tooltip acima do componente alvo.\r\n   * - `top-right`: Posiciona o po-tooltip acima e à direita do componente alvo.\r\n   * - `top-left`: Posiciona o po-tooltip acima e à esquerda do componente alvo.\r\n   *\r\n   * @default bottom\r\n   */\r\n  @Input('p-tooltip-position') set tooltipPosition(position: string) {\r\n    this._tooltipPosition = PO_CONTROL_POSITIONS.includes(position) ? position : PO_TOOLTIP_POSITION_DEFAULT;\r\n  }\r\n  get tooltipPosition(): string {\r\n    return this._tooltipPosition;\r\n  }\r\n\r\n  @Input('p-display-tooltip') @InputBoolean() set displayTooltip(value: boolean) {\r\n    this._displayTooltip = value;\r\n    this._displayTooltip ? this.addTooltipAction() : this.removeTooltipAction();\r\n  }\r\n\r\n  get displayTooltip(): boolean {\r\n    return this._displayTooltip;\r\n  }\r\n\r\n  protected abstract addTooltipAction();\r\n  protected abstract removeTooltipAction();\r\n}\r\n","import { ElementRef, Injectable } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n * @description\r\n *\r\n * Serviço responsável por gerenciar as posições de um elemento em relação a um elemento alvo. Ele pode receber as\r\n * seguintes posições:\r\n *\r\n * - `right`: Posiciona o elemento no lado direito do componente alvo.\r\n * - `right-bottom`: Posiciona o elemento no lado direito inferior do componente alvo.\r\n * - `right-top`: Posiciona o elemento no lado direito superior do componente alvo.\r\n * - `bottom`: Posiciona o elemento abaixo do componente alvo.\r\n * - `bottom-left`: Posiciona o elemento abaixo e à esquerda do componente alvo.\r\n * - `bottom-right`: Posiciona o elemento abaixo e à direita do componente alvo.\r\n * - `left`: Posiciona o elemento no lado esquerdo do componente alvo.\r\n * - `left-top`: Posiciona o elemento no lado esquerdo superior do componente alvo.\r\n * - `left-bottom`: Posiciona o elemento no lado esquerdo inferior do componente alvo.\r\n * - `top`: Posiciona o elemento acima do componente alvo.\r\n * - `top-right`: Posiciona o elemento acima e à direita do componente alvo.\r\n * - `top-left`: Posiciona o elemento acima e à esquerda do componente alvo.\r\n *\r\n * Caso o elemento não caiba na tela na posição indicada ele será rotacionado automaticamente para se adequar,\r\n * inicialmente no lado definido como padrão e em seguida seguindo o sentido horário.\r\n */\r\n\r\nconst poControlPositionSidesDefault: Array<string> = [\r\n  'bottom',\r\n  'bottom-left',\r\n  'bottom-right',\r\n  'left',\r\n  'left-top',\r\n  'left-bottom',\r\n  'top',\r\n  'top-right',\r\n  'top-left',\r\n  'right',\r\n  'right-bottom',\r\n  'right-top'\r\n];\r\n\r\n@Injectable()\r\nexport class PoControlPositionService {\r\n  private arrowDirection: string;\r\n  private customPositions: Array<string>;\r\n  private differenceDiagonalToWidthArrow: number = 3;\r\n  private element: HTMLElement;\r\n  private elementOffset: number;\r\n  private isCornerAligned: boolean;\r\n  private isSetElementWidth: boolean = false;\r\n  // offset da seta em relação ao canto do componente\r\n  private offsetArrow: number = 12;\r\n  private targetElement: HTMLElement;\r\n\r\n  /**\r\n   * @description Ajusta a posição do elemento, caso não couber em tela irá para próxima posição.\r\n   *\r\n   * @param value posição para exibição do elemento\r\n   */\r\n  adjustPosition(value: string) {\r\n    const position = value || 'bottom';\r\n    this.elementPosition(position);\r\n    this.customPositions && this.customPositions.length\r\n      ? this.adjustCustomPosition(position)\r\n      : this.adjustDefaultPosition(position);\r\n  }\r\n\r\n  /**\r\n   * @description Retorna a direção da seta, conforme a posição do elemento.\r\n   */\r\n  getArrowDirection() {\r\n    return this.arrowDirection;\r\n  }\r\n\r\n  /**\r\n   * @description Método responsável por definir as propriedades utilizadas para exibir o elemento na posição correta.\r\n   *\r\n   * @param element elemento que será exibido\r\n   * @param elementOffset offSet do elemento\r\n   * @param targetElement elemento de onde deve partir a exibição\r\n   * @param customPositions posições que sobrescreve as posições padrões\r\n   * @param isSetElementWidth indica se deve definir o tamanho do elemento a ser exibido, caso for verdadeiro será igual do targetElement\r\n   * @param isCornerAligned indica se o elemento filho será alinhado nos cantos do elemneto pai.\r\n   */\r\n  setElements(\r\n    element: ElementRef | HTMLElement,\r\n    elementOffset: number,\r\n    targetElement: ElementRef | HTMLElement,\r\n    customPositions?: Array<string>,\r\n    isSetElementWidth: boolean = false,\r\n    isCornerAligned: boolean = false\r\n  ) {\r\n    this.element = element instanceof ElementRef ? element.nativeElement : element;\r\n    this.targetElement = targetElement instanceof ElementRef ? targetElement.nativeElement : targetElement;\r\n\r\n    this.elementOffset = elementOffset;\r\n\r\n    this.customPositions = customPositions;\r\n    this.isSetElementWidth = isSetElementWidth;\r\n    this.isCornerAligned = isCornerAligned;\r\n  }\r\n\r\n  private adjustCustomPosition(position: string) {\r\n    const positionLength = this.customPositions.length;\r\n\r\n    let sidesCount = 0;\r\n\r\n    while (sidesCount++ < positionLength) {\r\n      if (this.overflowAllSides(position)) {\r\n        position = this.nextPosition(position, this.customPositions);\r\n        this.elementPosition(position);\r\n      }\r\n    }\r\n  }\r\n\r\n  private adjustDefaultPosition(position: string) {\r\n    const mainPositions = this.getMainPositions();\r\n    const mainPositionLength = mainPositions.length;\r\n\r\n    let mainSidesCount = 0;\r\n\r\n    while (mainSidesCount++ < mainPositionLength) {\r\n      const mainPosition = this.getMainPosition(position);\r\n      this.elementPosition(position);\r\n\r\n      if (this.overflowMain(mainPosition)) {\r\n        position = this.nextPosition(mainPosition, mainPositions);\r\n        continue;\r\n      } else if (this.overflowAllSides(position)) {\r\n        this.verifySubPositions(position);\r\n        return;\r\n      }\r\n\r\n      return;\r\n    }\r\n  }\r\n\r\n  private elementPosition(position: string) {\r\n    this.isCornerAligned ? this.setAlignedElementPosition(position) : this.setElementPosition(position);\r\n  }\r\n\r\n  private getMainPosition(position: string) {\r\n    return position.indexOf('-') > -1 ? position.substring(0, position.indexOf('-')) : position;\r\n  }\r\n\r\n  private getMainPositions() {\r\n    const defaultMainPositions = ['top', 'right', 'bottom', 'left'];\r\n\r\n    return this.customPositions && this.customPositions.length\r\n      ? this.getMainPositionsByCustomPositions(this.customPositions)\r\n      : defaultMainPositions;\r\n  }\r\n\r\n  private getMainPositionsByCustomPositions(customPositions: Array<string>) {\r\n    const mainPositions = [];\r\n    const customPositionsLength = customPositions.length;\r\n\r\n    for (let i = 0; i < customPositionsLength; i++) {\r\n      const position = customPositions[i];\r\n\r\n      const mainPosition = this.getMainPosition(position);\r\n\r\n      if (!mainPositions.includes(mainPosition)) {\r\n        mainPositions.push(mainPosition);\r\n      }\r\n    }\r\n\r\n    return mainPositions;\r\n  }\r\n\r\n  private getOverflows() {\r\n    const sizesAndPositions = this.getSizesAndPositions();\r\n\r\n    return {\r\n      right: sizesAndPositions.element.right > sizesAndPositions.window.innerWidth,\r\n      top: sizesAndPositions.element.top <= 0,\r\n      left: sizesAndPositions.element.left <= 0,\r\n      bottom: sizesAndPositions.element.bottom > sizesAndPositions.window.innerHeight\r\n    };\r\n  }\r\n\r\n  private getSizesAndPositions() {\r\n    return {\r\n      window: {\r\n        scrollY: window.scrollY,\r\n        scrollX: window.scrollX,\r\n        innerWidth: window.innerWidth,\r\n        innerHeight: window.innerHeight\r\n      },\r\n      element: this.element.getBoundingClientRect(),\r\n      target: this.targetElement ? this.targetElement.getBoundingClientRect() : { top: 0, bottom: 0, right: 0, left: 0 }\r\n    };\r\n  }\r\n\r\n  private nextPosition(position: string, positions: Array<string> = []): string {\r\n    const index = positions.indexOf(position);\r\n    const nextIndex = index + 1;\r\n\r\n    if (index > -1 && nextIndex < positions.length) {\r\n      return positions[nextIndex];\r\n    } else {\r\n      return positions[0];\r\n    }\r\n  }\r\n\r\n  private overflowAllSides(position: string) {\r\n    const overflows = this.getOverflows();\r\n\r\n    switch (position) {\r\n      case 'top':\r\n        return overflows.top || overflows.right || overflows.left;\r\n      case 'top-right':\r\n        return overflows.top || overflows.right || overflows.left;\r\n      case 'top-left':\r\n        return overflows.top || overflows.left || overflows.right;\r\n      case 'right':\r\n        return overflows.right || overflows.top || overflows.bottom;\r\n      case 'right-top':\r\n        return overflows.right || overflows.top;\r\n      case 'right-bottom':\r\n        return overflows.right || overflows.bottom;\r\n      case 'bottom':\r\n        return overflows.bottom || overflows.right || overflows.left;\r\n      case 'bottom-right':\r\n        return overflows.bottom || overflows.right || overflows.left;\r\n      case 'bottom-left':\r\n        return overflows.bottom || overflows.left || overflows.right;\r\n      case 'left':\r\n        return overflows.left || overflows.top || overflows.bottom;\r\n      case 'left-top':\r\n        return overflows.left || overflows.top;\r\n      case 'left-bottom':\r\n        return overflows.left || overflows.bottom;\r\n    }\r\n  }\r\n\r\n  private overflowMain(position: string) {\r\n    const overflows = this.getOverflows();\r\n\r\n    switch (position) {\r\n      case 'top':\r\n        return overflows.top;\r\n      case 'right':\r\n        return overflows.right;\r\n      case 'bottom':\r\n        return overflows.bottom;\r\n      case 'left':\r\n        return overflows.left;\r\n    }\r\n  }\r\n\r\n  private setAlignedArrowDirection(elementPosition: string) {\r\n    switch (elementPosition) {\r\n      case 'top-left':\r\n        return 'bottom-left';\r\n      case 'top-right':\r\n        return 'bottom-right';\r\n      case 'bottom-right':\r\n        return 'top-right';\r\n      case 'bottom-left':\r\n        return 'top-left';\r\n    }\r\n  }\r\n\r\n  private setAlignedBottomPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\r\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\r\n  }\r\n\r\n  private setAlignedElementPosition(position: string) {\r\n    this.setElementWidth();\r\n\r\n    const sizesAndPositions: any = this.getSizesAndPositions();\r\n\r\n    switch (position) {\r\n      case 'bottom-left':\r\n        this.setAlignedBottomPositions(0, sizesAndPositions);\r\n        break;\r\n      case 'bottom-right':\r\n        this.setAlignedBottomPositions(\r\n          sizesAndPositions.element.width - sizesAndPositions.target.width,\r\n          sizesAndPositions\r\n        );\r\n        break;\r\n      case 'top-left':\r\n        this.setAlignedTopPositions(0, sizesAndPositions);\r\n        break;\r\n      case 'top-right':\r\n        this.setAlignedTopPositions(\r\n          sizesAndPositions.element.width - sizesAndPositions.target.width,\r\n          sizesAndPositions\r\n        );\r\n        break;\r\n    }\r\n\r\n    this.arrowDirection = this.setAlignedArrowDirection(position);\r\n  }\r\n\r\n  private setAlignedTopPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top =\r\n      sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\r\n    this.element.style.left = sizesAndPositions.target.left - displacement + 'px';\r\n  }\r\n\r\n  private setArrowDirection(elementPosition: string) {\r\n    switch (elementPosition) {\r\n      case 'top':\r\n        return 'bottom';\r\n      case 'top-left':\r\n        return 'bottom-right';\r\n      case 'top-right':\r\n        return 'bottom-left';\r\n      case 'right':\r\n        return 'left';\r\n      case 'right-top':\r\n        return 'left-bottom';\r\n      case 'right-bottom':\r\n        return 'left-top';\r\n      case 'bottom':\r\n        return 'top';\r\n      case 'bottom-right':\r\n        return 'top-left';\r\n      case 'bottom-left':\r\n        return 'top-right';\r\n      case 'left':\r\n        return 'right';\r\n      case 'left-bottom':\r\n        return 'right-top';\r\n      case 'left-top':\r\n        return 'right-bottom';\r\n    }\r\n  }\r\n\r\n  private setBottomPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top = sizesAndPositions.target.bottom + this.elementOffset + 'px';\r\n    this.element.style.left = sizesAndPositions.target.left + sizesAndPositions.target.width / 2 - displacement + 'px';\r\n  }\r\n\r\n  private setElementPosition(position: string) {\r\n    this.setElementWidth();\r\n\r\n    const sizesAndPositions = this.getSizesAndPositions();\r\n\r\n    switch (position) {\r\n      case 'top':\r\n        this.setTopPositions(sizesAndPositions.element.width / 2, sizesAndPositions);\r\n        break;\r\n      case 'top-left':\r\n        this.setTopPositions(\r\n          sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow,\r\n          sizesAndPositions\r\n        );\r\n        break;\r\n      case 'top-right':\r\n        this.setTopPositions(this.offsetArrow + this.differenceDiagonalToWidthArrow, sizesAndPositions);\r\n        break;\r\n      case 'right':\r\n        this.setRightPositions(sizesAndPositions.element.height / 2, sizesAndPositions);\r\n        break;\r\n      case 'right-top':\r\n        this.setRightPositions(\r\n          sizesAndPositions.element.height - this.offsetArrow - this.differenceDiagonalToWidthArrow,\r\n          sizesAndPositions\r\n        );\r\n        break;\r\n      case 'right-bottom':\r\n        this.setRightPositions(this.offsetArrow, sizesAndPositions);\r\n        break;\r\n      case 'bottom':\r\n        this.setBottomPositions(sizesAndPositions.element.width / 2, sizesAndPositions);\r\n        break;\r\n      case 'bottom-right':\r\n        this.setBottomPositions(this.offsetArrow + this.differenceDiagonalToWidthArrow, sizesAndPositions);\r\n        break;\r\n      case 'bottom-left':\r\n        this.setBottomPositions(\r\n          sizesAndPositions.element.width - this.offsetArrow - this.differenceDiagonalToWidthArrow,\r\n          sizesAndPositions\r\n        );\r\n        break;\r\n      case 'left':\r\n        this.setLeftPositions(sizesAndPositions.element.height / 2, sizesAndPositions);\r\n        break;\r\n      case 'left-bottom':\r\n        this.setLeftPositions(this.offsetArrow, sizesAndPositions);\r\n        break;\r\n      case 'left-top':\r\n        this.setLeftPositions(sizesAndPositions.element.height - this.offsetArrow, sizesAndPositions);\r\n        break;\r\n    }\r\n\r\n    this.arrowDirection = this.setArrowDirection(position);\r\n  }\r\n\r\n  private setElementWidth() {\r\n    if (this.isSetElementWidth && this.targetElement) {\r\n      this.element.style.width = `${this.targetElement.clientWidth}px`;\r\n    }\r\n  }\r\n\r\n  private setLeftPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top = sizesAndPositions.target.top - displacement + sizesAndPositions.target.height / 2 + 'px';\r\n    this.element.style.left =\r\n      sizesAndPositions.target.left - sizesAndPositions.element.width - this.elementOffset + 'px';\r\n  }\r\n\r\n  private setRightPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top = sizesAndPositions.target.top - displacement + sizesAndPositions.target.height / 2 + 'px';\r\n    this.element.style.left = sizesAndPositions.target.right + this.elementOffset + 'px';\r\n  }\r\n\r\n  private setTopPositions(displacement: number, sizesAndPositions) {\r\n    this.element.style.top =\r\n      sizesAndPositions.target.top - sizesAndPositions.element.height - this.elementOffset + 'px';\r\n    this.element.style.left = sizesAndPositions.target.left + sizesAndPositions.target.width / 2 - displacement + 'px';\r\n  }\r\n\r\n  private verifySubPositions(position: string) {\r\n    if (position.indexOf('-') > -1) {\r\n      position = position.substring(0, position.indexOf('-'));\r\n      this.elementPosition(position);\r\n    }\r\n\r\n    let align = 0;\r\n    while (align++ < 3) {\r\n      if (this.overflowAllSides(position)) {\r\n        position = this.nextPosition(position, poControlPositionSidesDefault);\r\n        this.elementPosition(position);\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\r\n\r\n@Injectable()\r\nexport class PoTooltipControlPositionService extends PoControlPositionService {}\r\n","import { Directive, ElementRef, HostListener, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { PoTooltipBaseDirective } from './po-tooltip-base.directive';\r\nimport { PoTooltipControlPositionService } from './po-tooltip-control-position.service';\r\n\r\n/**\r\n * @docsExtends PoTooltipBaseDirective\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-tooltip-basic\" title=\"PO Tooltip Basic\" >\r\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tooltip-labs\" title=\"PO Tooltip Labs\" >\r\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tooltip-new-user\" title=\"PO Tooltip - New User\" >\r\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html\"> </file>\r\n *  <file name=\"sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Directive({\r\n  selector: '[p-tooltip]',\r\n  providers: [PoTooltipControlPositionService]\r\n})\r\nexport class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {\r\n  private arrowDirection: string;\r\n  private divArrow;\r\n  private divContent;\r\n  private isHidden: boolean;\r\n  private lastTooltipText: string;\r\n  private textContent;\r\n  private tooltipOffset: number = 8;\r\n\r\n  private eventListenerFunction: () => void;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private poControlPosition: PoTooltipControlPositionService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    if (!this.displayTooltip) {\r\n      this.addTooltipAction();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    if (!this.displayTooltip) {\r\n      this.removeTooltipAction();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initScrollEventListenerFunction();\r\n  }\r\n\r\n  protected addTooltipAction() {\r\n    setTimeout(() => {\r\n      if (this.tooltip) {\r\n        this.tooltipContent ? this.showTooltip() : this.createTooltip();\r\n\r\n        this.removeArrow(this.arrowDirection);\r\n\r\n        this.poControlPosition.adjustPosition(this.tooltipPosition);\r\n        this.arrowDirection = this.poControlPosition.getArrowDirection();\r\n\r\n        this.addArrow(this.arrowDirection);\r\n\r\n        this.lastTooltipText = this.tooltip;\r\n      }\r\n    });\r\n  }\r\n\r\n  protected removeTooltipAction() {\r\n    // necessita do timeout para conseguir adicionar \".po-invisible\", pois quando tem alguns elementos\r\n    // próximos com tooltips e ficar passando o mouse em cima, os mesmos não estavam ficando invisiveis.\r\n    setTimeout(() => {\r\n      if (this.appendInBody && this.tooltipContent) {\r\n        this.renderer.removeChild(document.body, this.tooltipContent);\r\n        this.tooltipContent = undefined;\r\n      } else {\r\n        this.hideTooltip();\r\n      }\r\n    });\r\n  }\r\n\r\n  private addArrow(arrowDirection) {\r\n    this.renderer.addClass(this.divArrow, `po-arrow-${arrowDirection}`);\r\n  }\r\n\r\n  private addScrollEventListener() {\r\n    window.addEventListener('scroll', this.eventListenerFunction, true);\r\n  }\r\n\r\n  // Monta a estrutura do tooltip\r\n  private createTooltip() {\r\n    this.tooltipContent = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.tooltipContent, 'po-tooltip');\r\n\r\n    this.divArrow = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.divArrow, 'po-tooltip-arrow');\r\n\r\n    this.divContent = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.divContent, 'po-tooltip-content');\r\n\r\n    this.textContent = this.renderer.createText(this.tooltip);\r\n\r\n    this.renderer.appendChild(this.divContent, this.textContent);\r\n    this.renderer.appendChild(this.tooltipContent, this.divArrow);\r\n    this.renderer.appendChild(this.tooltipContent, this.divContent);\r\n\r\n    const parentTarget = this.appendInBody ? document.body : this.elementRef.nativeElement;\r\n    this.renderer.appendChild(parentTarget, this.tooltipContent);\r\n\r\n    this.poControlPosition.setElements(this.tooltipContent, this.tooltipOffset, this.elementRef);\r\n\r\n    this.addScrollEventListener();\r\n  }\r\n\r\n  private initScrollEventListenerFunction() {\r\n    this.eventListenerFunction = () => {\r\n      if (!this.isHidden) {\r\n        setTimeout(() => {\r\n          this.poControlPosition.adjustPosition(this.tooltipPosition);\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  private hideTooltip() {\r\n    if (this.tooltipContent) {\r\n      this.renderer.addClass(this.tooltipContent, 'po-invisible');\r\n      this.isHidden = true;\r\n\r\n      this.removeScrollEventListener();\r\n    }\r\n  }\r\n\r\n  private removeArrow(arrowDirection) {\r\n    if (this.elementRef.nativeElement.querySelector(`.po-arrow-${arrowDirection}`)) {\r\n      this.renderer.removeClass(this.divArrow, `po-arrow-${arrowDirection}`);\r\n    }\r\n  }\r\n\r\n  private removeScrollEventListener() {\r\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\r\n  }\r\n\r\n  private showTooltip() {\r\n    this.renderer.removeClass(this.tooltipContent, 'po-invisible');\r\n    this.updateTextContent();\r\n    this.isHidden = false;\r\n\r\n    this.addScrollEventListener();\r\n  }\r\n\r\n  private updateTextContent() {\r\n    if (this.lastTooltipText !== this.tooltip) {\r\n      this.renderer.removeChild(this.divContent, this.textContent);\r\n      this.textContent = this.renderer.createText(this.tooltip);\r\n      this.renderer.appendChild(this.divContent, this.textContent);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoTooltipDirective } from './po-tooltip.directive';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo da diretiva Po-Tooltip.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoTooltipDirective],\r\n  exports: [PoTooltipDirective]\r\n})\r\nexport class PoTooltipModule {}\r\n","/**\r\n * @usedBy PoButtonGroupComponent\r\n *\r\n * @description\r\n *\r\n * Define o tipo de seleção dos botões do `po-button-group`.\r\n */\r\nexport enum PoButtonGroupToggle {\r\n  /** Seleção múltipla. */\r\n  Multiple = 'multiple',\r\n\r\n  /** Seleção desabilitada. */\r\n  None = 'none',\r\n\r\n  /** Seleção única. */\r\n  Single = 'single'\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PoButtonGroupItem } from './po-button-group-item.interface';\r\nimport { PoButtonGroupToggle } from './po-button-group-toggle.enum';\r\n\r\nconst PO_TOGGLE_TYPE_DEFAULT = 'none';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-button-group` é formado por um conjunto de botões distribuídos horizontalmente.\r\n * Cada botão do grupo é tratado de forma individual, recebendo assim um rótulo, uma ação bem como se deverá estar habilitado ou não.\r\n *\r\n * Este componente além de servir como um agrupador de botões para ação, também permite que sejam utilizados\r\n * para seleções multiplas e únicas.\r\n *\r\n * O grupo de botões deve ser utilizado para organizar as ações de maneira uniforme e transmitir a ideia de que os botões fazem\r\n * parte de um mesmo contexto.\r\n *\r\n * #### Boas práticas\r\n *\r\n * - Evite usar o `po-button-group` com apenas 1 ação, para isso utilize o `po-button`.\r\n * - Procure utilizar no máximo 3 ações para cada `po-button-group`.\r\n *\r\n * > As recomendações do `po-button` também valem para o `po-button-group`.\r\n */\r\n@Directive()\r\nexport class PoButtonGroupBaseComponent {\r\n  /** Lista de botões. */\r\n  @Input('p-buttons') buttons: Array<PoButtonGroupItem> = [];\r\n\r\n  private _small?: boolean = false;\r\n  private _toggle?: string = PO_TOGGLE_TYPE_DEFAULT;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Torna o grupo de botões com tamanho minificado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-small') set small(value: boolean) {\r\n    this._small = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get small(): boolean {\r\n    return this._small;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o modo de seleção de botões.\r\n   *\r\n   * > Veja os valores válidos no *enum* `PoMultiselectFilterMode`.\r\n   *\r\n   * @default `none`\r\n   */\r\n  @Input('p-toggle') set toggle(value: string) {\r\n    this._toggle = (<any>Object).values(PoButtonGroupToggle).includes(value) ? value : PO_TOGGLE_TYPE_DEFAULT;\r\n\r\n    this.checkSelecteds(this._toggle);\r\n  }\r\n\r\n  get toggle(): string {\r\n    return this._toggle;\r\n  }\r\n\r\n  onButtonClick(buttonClicked: PoButtonGroupItem, buttonIndex: number) {\r\n    if (this.toggle === PoButtonGroupToggle.Single) {\r\n      this.buttons.forEach(\r\n        (button, index) => (button.selected = index === buttonIndex ? !buttonClicked.selected : false)\r\n      );\r\n    } else if (this.toggle === PoButtonGroupToggle.Multiple) {\r\n      buttonClicked.selected = !buttonClicked.selected;\r\n    }\r\n  }\r\n\r\n  private checkSelecteds(toggleMode: string) {\r\n    if (toggleMode === PoButtonGroupToggle.None) {\r\n      this.deselectAllButtons();\r\n    } else if (toggleMode === PoButtonGroupToggle.Single) {\r\n      const hasMoreOneSelected = this.buttons.filter(button => button.selected).length > 1;\r\n      if (hasMoreOneSelected) {\r\n        this.deselectAllButtons();\r\n      }\r\n    }\r\n  }\r\n\r\n  private deselectAllButtons() {\r\n    this.buttons.forEach(button => (button.selected = false));\r\n  }\r\n}\r\n","import { Component, ViewContainerRef } from '@angular/core';\r\n\r\nimport { PoButtonGroupBaseComponent } from './po-button-group-base.component';\r\n\r\n/**\r\n * @docsExtends PoButtonGroupBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-button-group-basic\" title=\"PO Button Group Basic\">\r\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-button-group-basic/sample-po-button-group-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-button-group-labs\" title=\"PO Button Group Labs\">\r\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-button-group-labs/sample-po-button-group-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n *\r\n * <example name=\"po-button-group-attendance\" title=\"PO Button Group - Attendance\">\r\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.html\"> </file>\r\n *  <file name=\"sample-po-button-group-attendance/sample-po-button-group-attendance.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-button-group-post\" title=\"PO Button Group - Post\">\r\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.html\"> </file>\r\n *  <file name=\"sample-po-button-group-post/sample-po-button-group-post.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-button-group',\r\n  templateUrl: './po-button-group.component.html'\r\n})\r\nexport class PoButtonGroupComponent extends PoButtonGroupBaseComponent {\r\n  constructor(viewRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoButtonModule } from './../po-button/index';\r\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\r\n\r\nimport { PoButtonGroupComponent } from './po-button-group.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-button-group.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoButtonModule, PoTooltipModule],\r\n  declarations: [PoButtonGroupComponent],\r\n  exports: [PoButtonGroupComponent]\r\n})\r\nexport class PoButtonGroupModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { sortValues } from '../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço responsável por gerenciar o tratamento dos formatos de data e hora.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoDateService {\r\n  private readonly dateRegex = new RegExp(\r\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' + '(?:0[1-9]|1[0-2])-' + '(?:0[1-9]|[12]\\\\d|3[01])$'\r\n  );\r\n\r\n  private readonly isoRegex = new RegExp(\r\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\r\n      '(?:0[1-9]|1[0-2])-' +\r\n      '(?:0[1-9]|[12]\\\\d|3[01])' +\r\n      'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\r\n      '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\r\n      '(?:|:?[0-5]\\\\d)$'\r\n  );\r\n\r\n  /**\r\n   * Método responsável por converter datas do formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` para o formato `Date`.\r\n   *\r\n   * @param dateString Data no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\r\n   * @param minDate Definir `true` caso seja `minDate`.\r\n   * @param maxDate Definir `true` caso seja `maxDate`.\r\n   */\r\n  convertIsoToDate(dateString: string, minDate?: boolean, maxDate?: boolean): Date {\r\n    if (dateString) {\r\n      const { year, month, day } = this.getDateFromIso(dateString);\r\n\r\n      if (minDate) {\r\n        const date = new Date(year, month - 1, day, 0, 0, 0);\r\n        this.setYearFrom0To100(date, year);\r\n        return date;\r\n      } else if (maxDate) {\r\n        const date = new Date(year, month - 1, day, 23, 59, 59);\r\n        this.setYearFrom0To100(date, year);\r\n        return date;\r\n      } else {\r\n        const miliseconds = Date.parse(dateString);\r\n        const timezone = new Date().getTimezoneOffset() * 60000;\r\n        return new Date(miliseconds + timezone);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método responsável por converter data do formato `Date` para o formato `yyyy-mm-dd`.\r\n   *\r\n   * @param date Data no formato `Date`.\r\n   */\r\n  convertDateToISO(date: Date) {\r\n    if (date) {\r\n      const fullYear = date.getFullYear();\r\n      const getMonth = date.getMonth() + 1;\r\n      const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\r\n      const month = getMonth < 10 ? '0' + getMonth : getMonth;\r\n      const year = this.formatYear(fullYear);\r\n      return year + '-' + month + '-' + day;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método responsável por adicionar zeros a esquerda do anos em formato string.\r\n   *\r\n   * @param year Ano a ser validado.\r\n   */\r\n  formatYear(year: number) {\r\n    if (year > 999) {\r\n      return year.toString();\r\n    }\r\n\r\n    if (year > 99 && year < 1000) {\r\n      return `0${year}`;\r\n    }\r\n\r\n    if (year > 9 && year < 100) {\r\n      return `00${year}`;\r\n    }\r\n\r\n    if (year >= 0 && year < 10) {\r\n      return `000${year}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método responsável por retornar o dia, mês e ano separados em formato de objeto.\r\n   *\r\n   * @param isoDate Ano em formato string.\r\n   */\r\n  getDateFromIso(isoDate: string): { year: number; month: number; day: number } {\r\n    const day = parseInt(isoDate.substring(8, 10), 10);\r\n    const month = parseInt(isoDate.substring(5, 7), 10);\r\n    const year = parseInt(isoDate.substring(0, 4), 10);\r\n\r\n    return { year, month, day };\r\n  }\r\n\r\n  /**\r\n   * Método responsável por retornar a data com a hora definida para `00:00:00` caso `isMinDate` for igual a `true` ou `23:59:59`\r\n   * caso `isMindate` seja igual a `false` .\r\n   *\r\n   * @param date Data no formato `Date` ou `yyyy-mm-ddThh:mm:ss+|-hh:mm`.\r\n   * @param isMinDate Caso `true` aplica `00:00:00`, caso `false` aplica `23:59:59` a hora da data informada.\r\n   */\r\n  getDateForDateRange(date: any, isMinDate: boolean) {\r\n    const lastHour = isMinDate ? [0, 0, 0] : [23, 59, 59];\r\n    if (date instanceof Date) {\r\n      const { year, month, day } = this.splitDate(date);\r\n      const validDate = new Date(year, month, day, ...lastHour);\r\n      this.setYearFrom0To100(validDate, year);\r\n      return validDate;\r\n    } else if (this.isValidIso(date)) {\r\n      return this.convertIsoToDate(date, isMinDate, !isMinDate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retorna `true` caso o período seja válido, para isso a primeira data deve ser maior que a segunda data.\r\n   *\r\n   * @param dateA primeira data\r\n   * @param dateB segunda data\r\n   */\r\n  isDateRangeValid(dateA: string = '', dateB: string = ''): boolean {\r\n    const dateASplitted = dateA.split('-').map(item => parseInt(item, 10));\r\n    const dateBSplitted = dateB.split('-').map(item => parseInt(item, 10));\r\n\r\n    for (let index = 0; index <= dateASplitted.length; index++) {\r\n      if (dateASplitted[index] > dateBSplitted[index]) {\r\n        return true;\r\n      } else if (dateASplitted[index] < dateBSplitted[index]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Método responsável por validar se uma data está no formato `yyyy-mm-ddThh:mm:ss+|-hh:mm` ou `yyyy-mm-dd`.\r\n   *\r\n   * @param stringDate Data.\r\n   */\r\n  isValidIso(stringDate: string) {\r\n    return this.dateRegex.test(stringDate) || this.isoRegex.test(stringDate);\r\n  }\r\n\r\n  /**\r\n   * Método responsável por corrigir a data caso a mesma esteja entre os anos 0 e 99.\r\n   *\r\n   * @param date Data.\r\n   * @param year .\r\n   */\r\n  setYearFrom0To100(date: Date, year: number) {\r\n    if (year >= 0 && year < 100) {\r\n      date.setFullYear(year);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método responsável por retornar o dia , mês e ano de uma data informada.\r\n   *\r\n   * @param date Valor da data.\r\n   */\r\n  splitDate(date: Date) {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const day = date.getDate();\r\n    return { year, month, day };\r\n  }\r\n\r\n  /**\r\n   * Método responsável por validar se uma data está entre a `minDate` e `maxDate`.\r\n   *\r\n   * @param date Data a ser validada.\r\n   * @param minDate Data inicial.\r\n   * @param maxDate Data final.\r\n   */\r\n  validateDateRange(date: Date, minDate: Date, maxDate: Date) {\r\n    if (minDate && maxDate) {\r\n      return date >= minDate && date <= maxDate;\r\n    } else if (minDate && !maxDate) {\r\n      return date >= minDate;\r\n    } else if (!minDate && maxDate) {\r\n      return date <= maxDate;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método responsável por validar se a data foi informada nos padrões 'yyyy-mm-dd', 'yyyy-mm-ddThh:mm:ss+|-hh:mm' ou\r\n   * 'Date' padrão do javascript.\r\n   *\r\n   * @param date Data que será validada.\r\n   */\r\n  private validateDate(date: string | Date) {\r\n    const validDate = date instanceof Date ? this.convertDateToISO(date) : date;\r\n\r\n    return this.isValidIso(validDate) ? validDate : undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoDateService } from './po-date.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `po-date`.\r\n */\r\n@NgModule({\r\n  providers: [PoDateService],\r\n  bootstrap: []\r\n})\r\nexport class PoDateTimeModule {}\r\n","/**\r\n * @usedBy PoCalendarComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* `PoCalendarMode` para especificar os modos de visualização do calendário.\r\n */\r\nexport enum PoCalendarMode {\r\n  /** Define que o calendário será exibido em modo faixa de seleção. */\r\n  Range = 'range'\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { PoDateService } from '../../services/po-date';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocales } from '../../services/po-language/po-language.constant';\r\n\r\nimport { PoCalendarMode } from './po-calendar-mode.enum';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-calendar` é um componente para seleção de datas. Ele permite uma fácil navegação clicando nas setas\r\n * de direcionamento e nos *labels* do ano ou mês.\r\n *\r\n * Este componente pode receber os seguintes formatos de data:\r\n *\r\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\r\n * ```\r\n * this.date = '2017-11-28T00:00:00-02:00';\r\n * ```\r\n *\r\n * - **Data (E8601DAw.): yyyy-mm-dd**\r\n * ```\r\n * this.date = '2017-11-28';\r\n * ```\r\n *\r\n * - **JavaScript Date Object:**\r\n * ```\r\n * this.date = new Date(2017, 10, 28);\r\n * ```\r\n *\r\n * > Independentemente do formato utilizado, o componente trata o valor do *model* internamente com o\r\n * formato **Data (E8601DAw.): yyyy-mm-dd**.\r\n *\r\n * Importante:\r\n *\r\n * - Caso seja definida uma data fora do range da data mínima e data máxima via *ngModel* o componente mostrará\r\n * a data desabilitada porém o *model* não será alterado.\r\n * - Caso seja definida uma data inválida a mesma não será atribuída ao calendário porém o *model* manterá a data inválida.\r\n */\r\n@Directive()\r\nexport class PoCalendarBaseComponent {\r\n  /** Evento disparado ao selecionar um dia do calendário. */\r\n  @Output('p-change') change = new EventEmitter<string | { start; end }>();\r\n\r\n  activateDate;\r\n  value;\r\n\r\n  protected onTouched: any = null;\r\n  protected propagateChange: any = null;\r\n  protected today: Date = new Date();\r\n\r\n  private shortLanguage: string;\r\n  private _locale: string = this.languageService.getShortLanguage();\r\n  private _maxDate: Date;\r\n  private _minDate: Date;\r\n  private _mode: PoCalendarMode;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Idioma do calendário.\r\n   *\r\n   * > O locale padrão sera recuperado com base no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  @Input('p-locale') set locale(locale: string) {\r\n    this._locale = poLocales.includes(locale) ? locale : this.shortLanguage;\r\n  }\r\n  get locale() {\r\n    return this._locale;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a data máxima possível de ser selecionada.\r\n   *\r\n   * Pode receber os seguintes formatos de data:\r\n   *\r\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\r\n   * ```\r\n   * this.date = '2017-11-28T00:00:00-02:00';\r\n   * ```\r\n   *\r\n   * - **Data (E8601DAw.): yyyy-mm-dd**\r\n   * ```\r\n   * this.date = '2017-11-28';\r\n   * ```\r\n   *\r\n   * - **JavaScript Date Object:**\r\n   * ```\r\n   * this.date = new Date(2017, 10, 28);\r\n   * ```\r\n   */\r\n  @Input('p-max-date') set maxDate(maxDate: any) {\r\n    this._maxDate = this.poDate.getDateForDateRange(maxDate, false);\r\n  }\r\n  get maxDate() {\r\n    return this._maxDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a data mínima possível de ser selecionada.\r\n   *\r\n   * Pode receber os seguintes formatos de data:\r\n   *\r\n   * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\r\n   * ```\r\n   * this.date = '2017-11-28T00:00:00-02:00';\r\n   * ```\r\n   *\r\n   * - **Data (E8601DAw.): yyyy-mm-dd**\r\n   * ```\r\n   * this.date = '2017-11-28';\r\n   * ```\r\n   *\r\n   * - **JavaScript Date Object:**\r\n   * ```\r\n   * this.date = new Date(2017, 10, 28);\r\n   * ```\r\n   */\r\n  @Input('p-min-date') set minDate(minDate: any) {\r\n    this._minDate = this.poDate.getDateForDateRange(minDate, true);\r\n  }\r\n  get minDate() {\r\n    return this._minDate;\r\n  }\r\n\r\n  /**\r\n   * Propriedade que permite informar o modo de exibição do calendar.\r\n   *\r\n   * Implementa o enum `PoCalendarMode`.\r\n   */\r\n  @Input('p-mode') set mode(value: PoCalendarMode) {\r\n    this._mode = value;\r\n\r\n    this.setActivateDate();\r\n  }\r\n\r\n  get mode() {\r\n    return this._mode;\r\n  }\r\n\r\n  get isRange() {\r\n    return this.mode === PoCalendarMode.Range;\r\n  }\r\n\r\n  constructor(public poDate: PoDateService, private languageService: PoLanguageService) {\r\n    this.shortLanguage = languageService.getShortLanguage();\r\n  }\r\n\r\n  protected setActivateDate(date?: Date | string) {\r\n    const activateDate = date ? date : this.verifyActivateDate();\r\n\r\n    if (this.isRange) {\r\n      const checkedStart =\r\n        typeof activateDate === 'string' ? this.poDate.convertIsoToDate(activateDate) : new Date(activateDate);\r\n      const checkedEnd = new Date(new Date(checkedStart).setMonth(checkedStart.getMonth() + 1));\r\n      this.activateDate = { start: checkedStart, end: checkedEnd };\r\n    } else {\r\n      this.activateDate = new Date(activateDate);\r\n    }\r\n  }\r\n\r\n  private verifyActivateDate(): Date {\r\n    let today = this.today;\r\n    if (this.minDate && this.minDate > this.today) {\r\n      today = this.minDate;\r\n    } else if (this.maxDate && this.maxDate < this.today) {\r\n      today = this.maxDate;\r\n    }\r\n    return today;\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  forwardRef,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoCalendarBaseComponent } from './po-calendar-base.component';\r\nimport { PoCalendarLangService } from './services/po-calendar.lang.service';\r\nimport { PoDateService } from '../../services/po-date/po-date.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoCalendarComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoCalendarComponent),\r\n    multi: true\r\n  }\r\n];\r\n\r\nconst poCalendarRangeWidth = 600;\r\n\r\n/**\r\n * @docsExtends PoCalendarBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-calendar-basic\" title=\"PO Calendar Basic\" >\r\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-calendar-basic/sample-po-calendar-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-calendar-labs\" title=\"PO Calendar Labs\" >\r\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-calendar-labs/sample-po-calendar-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-calendar-ticket-sales\" title=\"PO Calendar - Ticket Sales\" >\r\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html\"> </file>\r\n *  <file name=\"sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-calendar',\r\n  templateUrl: './po-calendar.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers\r\n})\r\nexport class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit, OnChanges {\r\n  hoverValue: Date;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef, poDate: PoDateService, languageService: PoLanguageService) {\r\n    super(poDate, languageService);\r\n  }\r\n\r\n  get isResponsive() {\r\n    return window.innerWidth < poCalendarRangeWidth;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setActivateDate();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.minDate || changes.maxDate) {\r\n      this.setActivateDate();\r\n    }\r\n  }\r\n\r\n  getActivateDate(partType) {\r\n    if (this.isRange && this.activateDate) {\r\n      return this.activateDate[partType];\r\n    } else {\r\n      return this.activateDate;\r\n    }\r\n  }\r\n\r\n  getValue(partType) {\r\n    if (this.isRange && this.value) {\r\n      return this.value[partType];\r\n    } else {\r\n      return this.value;\r\n    }\r\n  }\r\n\r\n  onSelectDate(selectedDate, partType?) {\r\n    let newValue;\r\n\r\n    if (this.isRange) {\r\n      newValue = this.getValueFromSelectedDate(selectedDate);\r\n\r\n      if (partType === 'end' && (!this.value?.start || (this.value.start && this.value.end))) {\r\n        this.setActivateDate(selectedDate);\r\n      }\r\n    } else {\r\n      newValue = selectedDate;\r\n      this.setActivateDate(selectedDate);\r\n    }\r\n\r\n    this.value = newValue;\r\n    const newModel = this.convertDateToISO(this.value);\r\n    this.updateModel(newModel);\r\n    this.change.emit(newModel);\r\n  }\r\n\r\n  onHoverDate(date) {\r\n    this.hoverValue = date;\r\n  }\r\n\r\n  onHeaderChange({ month, year }, partType) {\r\n    if (this.isRange) {\r\n      let newStart;\r\n      let newEnd;\r\n      const { start, end } = this.activateDate;\r\n\r\n      if (partType === 'end') {\r\n        const newYear = month === 0 ? year - 1 : year;\r\n\r\n        newStart = new Date(new Date(start.setMonth(month - 1)).setFullYear(newYear));\r\n        newEnd = new Date(new Date(end.setMonth(month)).setFullYear(year));\r\n      } else {\r\n        const newYear = month === 11 ? year + 1 : year;\r\n\r\n        newEnd = new Date(new Date(end.setMonth(month + 1)).setFullYear(newYear));\r\n        newStart = new Date(new Date(start.setMonth(month)).setFullYear(year));\r\n      }\r\n\r\n      this.activateDate = { start: newStart, end: newEnd };\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(func: any): void {\r\n    this.onTouched = func;\r\n  }\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    if (value) {\r\n      this.writeDate(value);\r\n    } else {\r\n      this.value = null;\r\n    }\r\n\r\n    const activateDate = this.getValidateStartDate(value);\r\n    this.setActivateDate(activateDate);\r\n\r\n    this.changeDetector.markForCheck();\r\n  }\r\n\r\n  private getValidateStartDate(value) {\r\n    if (this.isRange) {\r\n      return value?.start || null;\r\n    } else if (value instanceof Date || typeof value === 'string') {\r\n      return value;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private getValueFromSelectedDate(selectedDate: Date): { start: Date; end?: Date } {\r\n    if (!this.value?.start || this.value.start > selectedDate || (this.value.end && this.value.start)) {\r\n      return { start: new Date(selectedDate), end: null };\r\n    }\r\n\r\n    return { start: new Date(this.value.start), end: new Date(selectedDate) };\r\n  }\r\n\r\n  private convertDateToISO(date) {\r\n    if (this.isRange) {\r\n      const start = date?.start instanceof Date ? this.poDate.convertDateToISO(date.start) : null;\r\n      const end = date?.end instanceof Date ? this.poDate.convertDateToISO(date.end) : null;\r\n\r\n      return { start, end };\r\n    } else {\r\n      return this.poDate.convertDateToISO(date);\r\n    }\r\n  }\r\n\r\n  private convertDateFromIso(stringDate: string) {\r\n    if (stringDate && typeof stringDate === 'string') {\r\n      const { year, month, day } = this.poDate.getDateFromIso(stringDate);\r\n      const date = new Date(year, month - 1, day);\r\n      this.poDate.setYearFrom0To100(date, year);\r\n\r\n      return date;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  private updateModel(value) {\r\n    if (this.propagateChange) {\r\n      this.propagateChange(value);\r\n    }\r\n  }\r\n\r\n  private writeDate(value: any) {\r\n    if (this.isRange) {\r\n      const start = value?.start;\r\n      const end = value?.end;\r\n\r\n      const newStart = start instanceof Date ? new Date(start) : this.convertDateFromIso(start);\r\n      const newEnd = end instanceof Date ? new Date(end) : this.convertDateFromIso(end);\r\n\r\n      this.value = { start: newStart, end: newEnd };\r\n    } else {\r\n      this.value = value instanceof Date ? new Date(value) : this.convertDateFromIso(value);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-calendar-header',\r\n  templateUrl: './po-calendar-header.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoCalendarHeaderComponent {\r\n  @Input('p-hide-previous') hidePrevious = false;\r\n\r\n  @Input('p-hide-next') hideNext = false;\r\n\r\n  @Output('p-previous') previous = new EventEmitter<void>();\r\n\r\n  @Output('p-next') next = new EventEmitter<void>();\r\n\r\n  constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { poLocales, poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoCalendarLangService {\r\n  private language = poLocaleDefault;\r\n\r\n  private months = [\r\n    {\r\n      pt: 'Janeiro',\r\n      en: 'January',\r\n      es: 'Enero',\r\n      ru: 'Январь'\r\n    },\r\n    {\r\n      pt: 'Fevereiro',\r\n      en: 'February',\r\n      es: 'Febrero',\r\n      ru: 'Февраль'\r\n    },\r\n    {\r\n      pt: 'Março',\r\n      en: 'March',\r\n      es: 'Marzo',\r\n      ru: 'Март'\r\n    },\r\n    {\r\n      pt: 'Abril',\r\n      en: 'April',\r\n      es: 'Abril',\r\n      ru: 'Апрель'\r\n    },\r\n    {\r\n      pt: 'Maio',\r\n      en: 'May',\r\n      es: 'Mayo',\r\n      ru: 'Май'\r\n    },\r\n    {\r\n      pt: 'Junho',\r\n      en: 'June',\r\n      es: 'Junio',\r\n      ru: 'Июнь'\r\n    },\r\n    {\r\n      pt: 'Julho',\r\n      en: 'July',\r\n      es: 'Julio',\r\n      ru: 'Июль'\r\n    },\r\n    {\r\n      pt: 'Agosto',\r\n      en: 'August',\r\n      es: 'Agosto',\r\n      ru: 'Август'\r\n    },\r\n    {\r\n      pt: 'Setembro',\r\n      en: 'September',\r\n      es: 'Setiembre',\r\n      ru: 'Сентябрь'\r\n    },\r\n    {\r\n      pt: 'Outubro',\r\n      en: 'October',\r\n      es: 'Octubre',\r\n      ru: 'Октябрь'\r\n    },\r\n    {\r\n      pt: 'Novembro',\r\n      en: 'November',\r\n      es: 'Noviembre',\r\n      ru: 'Ноябрь'\r\n    },\r\n    {\r\n      pt: 'Dezembro',\r\n      en: 'December',\r\n      es: 'Diciembre',\r\n      ru: 'Декабрь'\r\n    }\r\n  ];\r\n\r\n  private shortWeekDays = [\r\n    {\r\n      pt: 'Dom',\r\n      en: 'Sun',\r\n      es: 'Dom',\r\n      ru: 'Вс'\r\n    },\r\n    {\r\n      pt: 'Seg',\r\n      en: 'Mon',\r\n      es: 'Lun',\r\n      ru: 'Пн'\r\n    },\r\n    {\r\n      pt: 'Ter',\r\n      en: 'Tue',\r\n      es: 'Mar',\r\n      ru: 'Вт'\r\n    },\r\n    {\r\n      pt: 'Qua',\r\n      en: 'Wed',\r\n      es: 'Mié',\r\n      ru: 'Ср'\r\n    },\r\n    {\r\n      pt: 'Qui',\r\n      en: 'Thu',\r\n      es: 'Jue',\r\n      ru: 'Чт'\r\n    },\r\n    {\r\n      pt: 'Sex',\r\n      en: 'Fri',\r\n      es: 'Vie',\r\n      ru: 'Пт'\r\n    },\r\n    {\r\n      pt: 'Sáb',\r\n      en: 'Sat',\r\n      es: 'Sáb',\r\n      ru: 'Сб'\r\n    }\r\n  ];\r\n\r\n  private monthLabel = {\r\n    pt: 'Mês',\r\n    en: 'Month',\r\n    es: 'Mes',\r\n    ru: 'Месяц'\r\n  };\r\n\r\n  private yearLabel = {\r\n    pt: 'Ano',\r\n    en: 'Year',\r\n    es: 'Año',\r\n    ru: 'Год'\r\n  };\r\n\r\n  private todayLabel = {\r\n    pt: 'Hoje',\r\n    en: 'Today',\r\n    es: 'Hoy',\r\n    ru: 'Сегодня'\r\n  };\r\n\r\n  getMonth(month: number) {\r\n    return this.months[month][this.language];\r\n  }\r\n\r\n  getMonthLabel() {\r\n    return this.monthLabel[this.language];\r\n  }\r\n\r\n  getMonthsArray() {\r\n    const arrMonths = Array();\r\n    for (let i = 0; i < this.months.length; i++) {\r\n      arrMonths.push(this.months[i][this.language]);\r\n    }\r\n    return arrMonths;\r\n  }\r\n\r\n  getWeekDays(day: number) {\r\n    return this.shortWeekDays[day][this.language];\r\n  }\r\n\r\n  getWeekDaysArray() {\r\n    const arrWeekDays = Array();\r\n    for (let i = 0; i < this.shortWeekDays.length; i++) {\r\n      const weekDay = this.shortWeekDays[i][this.language];\r\n      arrWeekDays.push(weekDay.toLowerCase());\r\n    }\r\n    return arrWeekDays;\r\n  }\r\n\r\n  getYearLabel() {\r\n    return this.yearLabel[this.language];\r\n  }\r\n\r\n  getTodayLabel() {\r\n    return this.todayLabel[this.language];\r\n  }\r\n\r\n  setLanguage(language: string) {\r\n    if (language && language.length >= 2) {\r\n      language = language.toLowerCase().slice(0, 2);\r\n      this.language = poLocales.includes(language) ? language : poLocaleDefault;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst poCalendarServiceFirstWeekDayDefault: number = 0;\r\n\r\n@Injectable()\r\nexport class PoCalendarService {\r\n  monthDates(year: any, month: any, dayFormatter: any = null, weekFormatter: any = null) {\r\n    if (typeof month !== 'number' || month < 0 || month > 11) {\r\n      throw Error('month must be a number (Jan is 0)');\r\n    }\r\n\r\n    const weeks: Array<any> = [];\r\n    let week: Array<any> = [];\r\n    let i = 0;\r\n    let date = new Date(year, month, 1);\r\n\r\n    if (year >= 0 && year < 100) {\r\n      date.setFullYear(year);\r\n    }\r\n\r\n    date = this.weekStartDate(date);\r\n\r\n    do {\r\n      for (i = 0; i < 7; i++) {\r\n        week.push(dayFormatter ? dayFormatter(date) : date);\r\n        date = new Date(date.getTime());\r\n        date.setDate(date.getDate() + 1);\r\n      }\r\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\r\n      week = [];\r\n    } while (date.getMonth() <= month && date.getFullYear() === year);\r\n    return weeks;\r\n  }\r\n\r\n  monthDays(year: any, month: any) {\r\n    const getDayOrZero = function (date: any) {\r\n      return date.getMonth() === month ? date : 0;\r\n    };\r\n    return this.monthDates(year, month, getDayOrZero);\r\n  }\r\n\r\n  weekStartDate(date: any) {\r\n    const startDate = new Date(date.getTime());\r\n    while (startDate.getDay() !== poCalendarServiceFirstWeekDayDefault) {\r\n      startDate.setDate(startDate.getDate() - 1);\r\n    }\r\n    return startDate;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { PoCalendarLangService } from '../services/po-calendar.lang.service';\r\nimport { PoCalendarService } from '../services/po-calendar.service';\r\nimport { PoDateService } from '../../../services/po-date/po-date.service';\r\n\r\n@Component({\r\n  selector: 'po-calendar-wrapper',\r\n  templateUrl: './po-calendar-wrapper.component.html',\r\n  providers: [PoCalendarService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoCalendarWrapperComponent implements OnInit, OnChanges {\r\n  @Input('p-value') value;\r\n\r\n  @Input('p-mode') mode: 'day' | 'month' | 'year' = 'day';\r\n\r\n  @Input('p-responsive') responsive: boolean = false;\r\n\r\n  @Input('p-part-type') partType: 'start' | 'end';\r\n\r\n  @Input('p-range') range: boolean = false;\r\n\r\n  @Input('p-activate-date') activateDate = new Date();\r\n\r\n  @Input('p-selected-value') selectedValue;\r\n\r\n  @Input('p-min-date') minDate;\r\n\r\n  @Input('p-max-date') maxDate;\r\n\r\n  @Input('p-hover-value') hoverValue: Date;\r\n\r\n  @Output('p-header-change') headerChange = new EventEmitter<any>();\r\n\r\n  @Output('p-select-date') selectDate = new EventEmitter<any>();\r\n\r\n  @Output('p-hover-date') hoverDate = new Subject<Date>().pipe(debounceTime(100));\r\n\r\n  currentYear: number;\r\n  displayDays: Array<number>;\r\n  displayDecade: Array<number>;\r\n  displayFinalDecade: number;\r\n  displayMonth: any;\r\n  displayMonthNumber: number;\r\n  displayMonths: Array<any> = Array();\r\n  displayStartDecade: number;\r\n  displayWeekDays: Array<any> = Array();\r\n  displayYear: number;\r\n  displayToday: string;\r\n  today: Date = new Date();\r\n\r\n  protected currentMonthNumber: number;\r\n  protected date: Date;\r\n  protected lastDisplay: string;\r\n\r\n  private _locale: string;\r\n\r\n  @Input('p-locale') set locale(value: string) {\r\n    this._locale = value;\r\n    this.initializeLanguage();\r\n  }\r\n\r\n  get locale() {\r\n    return this._locale;\r\n  }\r\n\r\n  get monthLabel() {\r\n    return this.poCalendarLangService.getMonthLabel();\r\n  }\r\n\r\n  get yearLabel() {\r\n    return this.poCalendarLangService.getYearLabel();\r\n  }\r\n\r\n  get isDayVisible() {\r\n    return this.mode === 'day';\r\n  }\r\n\r\n  get isMonthVisible() {\r\n    return this.mode === 'month';\r\n  }\r\n\r\n  get isYearVisible() {\r\n    return this.mode === 'year';\r\n  }\r\n\r\n  get isStartPart() {\r\n    return this.partType === 'start';\r\n  }\r\n\r\n  get isEndPart() {\r\n    return this.partType === 'end';\r\n  }\r\n\r\n  constructor(\r\n    private poCalendarService: PoCalendarService,\r\n    private poCalendarLangService: PoCalendarLangService,\r\n    private poDate: PoDateService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.init();\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n    const { activateDate } = changes;\r\n\r\n    if (activateDate) {\r\n      this.updateDate(activateDate.currentValue);\r\n    }\r\n  }\r\n\r\n  getBackgroundColor(displayValue: number, propertyValue: number) {\r\n    return displayValue === propertyValue ? 'po-calendar-box-background-selected' : 'po-calendar-box-background';\r\n  }\r\n\r\n  getDayBackgroundColor(date: Date) {\r\n    return this.getDayColor(date, 'background');\r\n  }\r\n\r\n  getDayForegroundColor(date: Date) {\r\n    return this.getDayColor(date, 'foreground');\r\n  }\r\n\r\n  getForegroundColor(displayValue: number, propertyValue: number) {\r\n    return displayValue === propertyValue ? 'po-calendar-box-foreground-selected' : 'po-calendar-box-foreground';\r\n  }\r\n\r\n  isTodayUnavailable() {\r\n    return this.minDate > this.today || this.maxDate < this.today;\r\n  }\r\n\r\n  onNextMonth() {\r\n    this.displayMonthNumber < 11\r\n      ? this.updateDisplay(this.displayYear, this.displayMonthNumber + 1)\r\n      : this.updateDisplay(this.displayYear + 1, 0);\r\n\r\n    this.headerChange.emit({ month: this.displayMonthNumber, year: this.displayYear });\r\n  }\r\n\r\n  onPreviousMonth() {\r\n    if (this.displayMonthNumber > 0) {\r\n      this.updateDisplay(this.displayYear, this.displayMonthNumber - 1);\r\n    } else {\r\n      this.updateDisplay(this.displayYear - 1, 11);\r\n    }\r\n\r\n    this.headerChange.emit({ month: this.displayMonthNumber, year: this.displayYear });\r\n  }\r\n\r\n  onMouseEnter(day) {\r\n    (<Subject<Date>>this.hoverDate).next(day);\r\n  }\r\n\r\n  onMouseLeave() {\r\n    (<Subject<Date>>this.hoverDate).next(null);\r\n  }\r\n\r\n  // Ao selecionar uma data\r\n  onSelectDate(date: Date) {\r\n    this.selectDate.emit(date);\r\n  }\r\n\r\n  // Ao selecionar um mês\r\n  onSelectMonth(year: number, month: number) {\r\n    this.selectDisplayMode('day');\r\n    this.updateDisplay(year, month);\r\n\r\n    this.headerChange.emit({ month, year });\r\n  }\r\n\r\n  // Ao selecionar um ano\r\n  onSelectYear(year: number, month: number) {\r\n    // Se veio da tela de seleção de mês\r\n    this.selectDisplayMode(this.lastDisplay === 'month' ? 'month' : 'day');\r\n\r\n    this.currentYear = year;\r\n    this.updateDisplay(year, month);\r\n\r\n    this.headerChange.emit({ month, year });\r\n  }\r\n\r\n  selectDisplayMode(mode: 'month' | 'day' | 'year') {\r\n    this.lastDisplay = this.mode;\r\n    this.mode = mode;\r\n  }\r\n\r\n  updateYear(value: number) {\r\n    this.updateDisplay(this.displayYear + value, this.displayMonthNumber);\r\n  }\r\n\r\n  private addAllYearsInDecade(year: number) {\r\n    let i;\r\n    for (i = year; i < year + 10; i++) {\r\n      this.displayDecade.push(i);\r\n    }\r\n  }\r\n\r\n  private equalsDate(date1: Date, date2: Date): boolean {\r\n    try {\r\n      return (\r\n        date1.getFullYear() === date2.getFullYear() &&\r\n        date1.getMonth() === date2.getMonth() &&\r\n        date1.getDate() === date2.getDate()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Obtém um array de todos os anos desta década\r\n  private getDecadeArray(year) {\r\n    this.displayDecade = Array();\r\n\r\n    if (year % 10 !== 0) {\r\n      while (year % 10 !== 0) {\r\n        year--;\r\n      }\r\n    }\r\n    this.updateDecade(year);\r\n  }\r\n\r\n  private getColorForDate(date: Date, local: string) {\r\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\r\n      ? `po-calendar-box-${local}-selected`\r\n      : `po-calendar-box-${local}-selected-disabled`;\r\n  }\r\n\r\n  private getColorForDefaultDate(date: Date, local: string) {\r\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\r\n      ? `po-calendar-box-${local}`\r\n      : `po-calendar-box-${local}-disabled`;\r\n  }\r\n\r\n  private getColorForToday(date: Date, local: string) {\r\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\r\n      ? `po-calendar-box-${local}-today`\r\n      : `po-calendar-box-${local}-today-disabled`;\r\n  }\r\n\r\n  private getColorForDateRange(date: Date, local: string) {\r\n    return this.poDate.validateDateRange(date, this.minDate, this.maxDate)\r\n      ? `po-calendar-box-${local}-in-range`\r\n      : `po-calendar-box-${local}-in-range-disabled`;\r\n  }\r\n\r\n  private getDayColor(date: Date, local: string) {\r\n    const start = this.selectedValue?.start;\r\n    const end = this.selectedValue?.end;\r\n\r\n    if (this.range && (this.equalsDate(date, start) || this.equalsDate(date, end))) {\r\n      return this.getColorForDate(date, local);\r\n    } else if (this.range && start && end && date > start && date < end) {\r\n      return this.getColorForDateRange(date, local);\r\n    } else if (this.range && start && !end && date > start && date < this.hoverValue) {\r\n      return `po-calendar-box-${local}-hover`;\r\n    } else if (!this.range && this.equalsDate(date, this.value)) {\r\n      return this.getColorForDate(date, local);\r\n    } else if (this.equalsDate(date, this.today)) {\r\n      return this.getColorForToday(date, local);\r\n    } else {\r\n      return this.getColorForDefaultDate(date, local);\r\n    }\r\n  }\r\n\r\n  private init() {\r\n    this.updateDate(this.activateDate);\r\n    this.initializeLanguage();\r\n    this.selectDisplayMode('day');\r\n  }\r\n\r\n  private initializeLanguage() {\r\n    this.poCalendarLangService.setLanguage(this.locale);\r\n    this.displayWeekDays = this.poCalendarLangService.getWeekDaysArray();\r\n    this.displayMonths = this.poCalendarLangService.getMonthsArray();\r\n    this.displayMonth = this.displayMonths[this.displayMonthNumber];\r\n    this.displayToday = this.poCalendarLangService.getTodayLabel();\r\n  }\r\n\r\n  private updateDate(value: Date = new Date()) {\r\n    const date = new Date(value);\r\n\r\n    this.currentMonthNumber = date.getMonth();\r\n    this.currentYear = date.getFullYear();\r\n    this.updateDisplay(this.currentYear, this.currentMonthNumber);\r\n  }\r\n\r\n  private updateDecade(year: number) {\r\n    this.addAllYearsInDecade(year);\r\n    this.displayStartDecade = year;\r\n    this.displayFinalDecade = year + 9;\r\n  }\r\n\r\n  private updateDisplay(year: number, month: number) {\r\n    const calendarArray = this.poCalendarService.monthDays(year, month);\r\n    this.displayDays = [].concat.apply([], calendarArray);\r\n    this.displayMonthNumber = month;\r\n    this.displayMonth = this.displayMonths[month];\r\n    this.displayYear = year;\r\n    this.getDecadeArray(year);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoCalendarComponent } from './po-calendar.component';\r\nimport { PoCalendarHeaderComponent } from './po-calendar-header/po-calendar-header.component';\r\nimport { PoCalendarWrapperComponent } from './po-calendar-wrapper/po-calendar-wrapper.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente `po-calendar`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoCalendarComponent, PoCalendarHeaderComponent, PoCalendarWrapperComponent],\r\n  exports: [PoCalendarComponent]\r\n})\r\nexport class PoCalendarModule {}\r\n","/**\r\n * @usedBy PoChartComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* `PoChartType` para especificação dos tipos de gráficos.\r\n */\r\nexport enum PoChartType {\r\n  /**\r\n   * Tipo de gráfico que exibe os dados de modo quantitativo, utilizando linhas contínuas demarcadas por pontos para cada valor de série definido.\r\n   * Similar ao gráfico de linha, diferencia-se pela área localizada abaixo da linha das séries, que é preenchida com cores para um destaque explícita da evolução e mudança dos dados.\r\n   */\r\n  Area = 'area',\r\n\r\n  /**\r\n   * Exibe os dados em formato de rosca, dividindo em partes proporcionais.\r\n   */\r\n  Donut = 'donut',\r\n\r\n  /**\r\n   * @deprecated 6.x.x\r\n   *\r\n   * @description\r\n   *\r\n   * **Deprecated 6.x.x**\r\n   *\r\n   * O gráfico de *gauge* fornece como opção uma melhor relação de intensidade de dados que nos gráficos de pizza padrão ou rosca, uma vez\r\n   * que o centro em branco pode ser usado para exibir dados adicionais relacionados.\r\n   *\r\n   * > Componente depreciado, por favor utilizar componente [po-gauge](/documentation/po-gauge).\r\n   */\r\n  Gauge = 'gauge',\r\n\r\n  /**\r\n   * Exibe os dados em formato circular, dividindo proporcionalmente em fatias.\r\n   */\r\n  Pie = 'pie',\r\n\r\n  /**\r\n   * Gráfico que mostra os dados de modo linear e contínuo. É útil, por exemplo, para fazer comparações de tendência durante determinado período.\r\n   * Pode ser utilizado em conjunto com gráficos dos tipos `column` e `area`, definindo-se o tipo através da propriedade `PoChartSerie.type`.\r\n   */\r\n  Line = 'line',\r\n\r\n  /**\r\n   * Gráfico que exibe os dados em forma de barras verticais e sua extensão varia de acordo com seus valores. É comumente usado como comparativo entre diversas séries.\r\n   * As séries são exibidas lado-a-lado, com um pequeno espaço entre elas.\r\n   */\r\n  Column = 'column',\r\n\r\n  /**\r\n   * Gráfico que exibe os dados em forma de barras horizontais e sua extensão varia de acordo com seus valores. É comumente usado como comparativo de séries e categorias.\r\n   */\r\n  Bar = 'bar'\r\n}\r\n","// Padding padrão\r\nexport const PoChartPadding = 24;\r\n\r\n// Área lateral designada para os rótulos do eixo X\r\nexport const PoChartAxisXLabelArea = 56;\r\n\r\n// Quantidade de linhas do eixo X\r\nexport const PoChartGridLines = 5;\r\n\r\n// Padding top para área interna de plotagem do grid para evitar overflow no hover dos pontos do gráfico do tipo linha;\r\nexport const PoChartPlotAreaPaddingTop = 8;\r\n\r\n// Angulação inicial de raio para gráficos do tipo circular\r\nexport const PoChartStartAngle = -Math.PI / 2;\r\n\r\n// Valor referente à espessura padrão do gráfico do tipo Donut.\r\nexport const PoChartDonutDefaultThickness = 40;\r\n\r\n// Valor para subtração do valor de angulo radiano final de série em tipos Donut e Pie. Necessário para o caso de uma série única: se uma circunferência tiver valores de ângulo de raio inicial e final iguais não plota.\r\nexport const PoChartCompleteCircle = 0.0001;\r\n\r\n// Duração da animação para gráficos dos tipos Donut e Pie.\r\nconst durationTime = 1500;\r\nexport const PoChartAngleStepInterval = (Math.PI * 2) / Math.floor(durationTime / 60);\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoChartGridLines } from '../helpers/po-chart-default-values.constant';\r\nimport { PoChartType } from '../enums/po-chart-type.enum';\r\n\r\nimport { PoChartAxisOptions } from '../interfaces/po-chart-axis-options.interface';\r\nimport { PoChartMinMaxValues } from '../interfaces/po-chart-min-max-values.interface';\r\nimport { PoChartOptions } from '../interfaces/po-chart-options.interface';\r\nimport { PoChartSerie } from '../interfaces/po-chart-serie.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoChartMathsService {\r\n  /**\r\n   * Calcula e retorna os válores mínimo e máximo das séries.\r\n   *\r\n   * @param series Lista de séries.\r\n   * @param acceptNegativeValues boolean.\r\n   */\r\n  calculateMinAndMaxValues(series: Array<any>, acceptNegativeValues: boolean = true): PoChartMinMaxValues {\r\n    const minValue = this.getDomain(series, 'min');\r\n    const maxValue = this.getDomain(series, 'max');\r\n\r\n    return {\r\n      minValue: !acceptNegativeValues && minValue < 0 ? 0 : minValue,\r\n      maxValue: acceptNegativeValues && maxValue < 0 ? 0 : maxValue\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Retorna o valor com maior quantidade de dígitos entre todas as séries.\r\n   * Pode receber uma lista de categorias para o caso de gráfico de barra, ou então a lista de séries se o tipo de gráfico for linha ou coluna.\r\n   *\r\n   * @param data Lista de séries.\r\n   * @param type O tipo do gráfico'.\r\n   * @param options As opções para validação de número de linhas do eixo X'.\r\n   */\r\n  getLongestDataValue(\r\n    data: Array<PoChartSerie | string> = [],\r\n    type: PoChartType,\r\n    options: PoChartOptions\r\n  ): number | string {\r\n    if (type === PoChartType.Bar) {\r\n      return this.getLongestData<string>(data as Array<string>);\r\n    } else {\r\n      return this.getAxisXLabelLongestValue(data as Array<PoChartSerie>, this.amountOfGridLines(options?.axis));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retorna o tamanho da série que tiver mais itens.\r\n   *\r\n   * @param series Lista de séries.\r\n   */\r\n  seriesGreaterLength(series: Array<PoChartSerie>): number {\r\n    return series.reduce((result, serie: any) => (result > serie.data.length ? result : serie.data.length), 0);\r\n  }\r\n\r\n  /**\r\n   * Retorna o percentual em decimal da série passada pela distância entre os valores mínimos e máximos da série.\r\n   *\r\n   * Se o valor mínimo for negativo o alcance partirá dele como sendo zero %.\r\n   *\r\n   * Por exemplo:\r\n   *    minValue = -10;\r\n   *    maxValue = 0;\r\n   *    serieValue = -8\r\n   *    O resultado será de 0.20;\r\n   *\r\n   * @param minMaxValues Objeto contendo os valores mínimo e máximo de todas as séries.\r\n   * @param serieValue O valor da série.\r\n   */\r\n  getSeriePercentage(minMaxValues: any, serieValue: number): number {\r\n    const { minValue, maxValue } = minMaxValues;\r\n\r\n    const range = maxValue - minValue;\r\n    const displacement = serieValue - minValue;\r\n    const result = displacement / range;\r\n\r\n    return isNaN(result) ? 0 : result;\r\n  }\r\n\r\n  /**\r\n   * Calcula e retorna uma lista de valores referentes aos textos dos eixos X em relação à quantidade de linhas horizontais.\r\n   *\r\n   * @param minMaxValues Objeto contendo os valores mínimo e máximo de todas as séries.\r\n   * @param gridLines Quantidade de linhas horizontais. Valor default é 5.\r\n   */\r\n  range(minMaxValues: PoChartMinMaxValues, gridLines: number = 5) {\r\n    const { minValue, maxValue } = minMaxValues;\r\n\r\n    const result = [];\r\n    const step = this.getGridLineArea(minMaxValues, gridLines);\r\n\r\n    for (let index = minValue; index <= maxValue; index = (index * 10 + step * 10) / 10) {\r\n      result.push(index);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Verifica se o valor passado é um Integer ou Float.\r\n   *\r\n   * @param number O valor a ser validado\r\n   */\r\n  verifyIfFloatOrInteger(number: number) {\r\n    const notABoolean = typeof number !== 'boolean';\r\n    const notInfinity = number !== Infinity;\r\n\r\n    const isInteger = Number(number) === number && number % 1 === 0 && notInfinity;\r\n    const isFloat = Number(number) === number && number % 1 !== 0 && notInfinity;\r\n\r\n    return (notABoolean && isInteger) || (notABoolean && isFloat);\r\n  }\r\n\r\n  private amountOfGridLines(options: PoChartAxisOptions): number {\r\n    const gridLines = options?.gridLines ?? PoChartGridLines;\r\n\r\n    return gridLines && gridLines >= 2 && gridLines <= 10 ? gridLines : PoChartGridLines;\r\n  }\r\n\r\n  private getAxisXLabelLongestValue(data: Array<PoChartSerie>, gridLines: number): number {\r\n    const allowNegativeData: boolean = data.every(dataItem => dataItem.type === PoChartType.Line);\r\n    const domain: PoChartMinMaxValues = this.calculateMinAndMaxValues(data, allowNegativeData);\r\n    const axisXLabelsList: Array<number> = this.range(domain, gridLines);\r\n\r\n    return this.getLongestData<number>(axisXLabelsList);\r\n  }\r\n\r\n  // Cálculo que retorna o valor obtido de gridLines em relação ao alcance dos valores mínimos e máximos das séries (maxMinValues)\r\n  private getGridLineArea(minMaxValues: PoChartMinMaxValues, gridLines: number) {\r\n    const percentageValue = this.getFractionFromInt(gridLines - 1);\r\n    const { minValue, maxValue } = minMaxValues;\r\n    const result = (percentageValue * (maxValue - minValue)) / 100;\r\n\r\n    return result === 0 ? 1 : result;\r\n  }\r\n\r\n  // Retorna o valor máximo ou mínimo das séries baseado no tipo passado(type).\r\n  private getDomain(series: Array<any>, type: string) {\r\n    const result = Math[type](\r\n      ...series.map(serie => {\r\n        if (Array.isArray(serie.data)) {\r\n          return Math[type](...serie.data);\r\n        }\r\n      })\r\n    );\r\n    return isNaN(result) ? 0 : result;\r\n  }\r\n\r\n  // Retorna a fração do número passado referente à quantidade de linhas no eixo X (gridLines)\r\n  private getFractionFromInt(value: number) {\r\n    return (1 / value) * (100 / 1);\r\n  }\r\n\r\n  private getLongestData<T>(serie: Array<T>): T {\r\n    const newSerie = [...serie];\r\n    return newSerie.sort((longest, current) => current.toString().length - longest.toString().length)['0'];\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\r\n\r\nimport { PoChartType } from '../../enums/po-chart-type.enum';\r\nimport { PoChartPlotAreaPaddingTop } from '../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartContainerSize } from '../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartMathsService } from '../../services/po-chart-maths.service';\r\nimport { PoChartMinMaxValues } from '../../interfaces/po-chart-min-max-values.interface';\r\nimport { PoChartPathCoordinates } from '../../interfaces/po-chart-path-coordinates.interface';\r\nimport { PoChartPointsCoordinates } from '../../interfaces/po-chart-points-coordinates.interface';\r\nimport { PoChartSerie } from '../../interfaces/po-chart-serie.interface';\r\n\r\n@Directive()\r\nexport abstract class PoChartLineBaseComponent {\r\n  @Input('p-align-by-the-corners') alignByTheCorners: boolean = false;\r\n\r\n  @Input('p-categories') categories: Array<string>;\r\n\r\n  @Input('p-categories-coordinates') categoriesCoordinates: Array<number>;\r\n\r\n  @Input('p-svg-space') svgSpace;\r\n\r\n  @Output('p-point-click') pointClick = new EventEmitter<any>();\r\n\r\n  @Output('p-point-hover') pointHover = new EventEmitter<any>();\r\n\r\n  @ViewChild('chartLine') chartLine: ElementRef;\r\n\r\n  activeTooltip: boolean;\r\n  animate: boolean = true;\r\n  chartType: PoChartType;\r\n  seriesPathsCoordinates: Array<PoChartPathCoordinates>;\r\n  seriesPointsCoordinates: Array<Array<PoChartPointsCoordinates>> = [];\r\n\r\n  protected firstValidItemFromSerieArray: boolean;\r\n  protected seriesLength: number;\r\n\r\n  private _containerSize: PoChartContainerSize = {};\r\n  private _range: PoChartMinMaxValues = {};\r\n  private _series: Array<PoChartSerie> = [];\r\n\r\n  @Input('p-range') set range(value: PoChartMinMaxValues) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._range = value;\r\n\r\n      this.seriePathPointsDefinition(this.containerSize, this._series, this._range);\r\n    }\r\n  }\r\n\r\n  get range() {\r\n    return this._range;\r\n  }\r\n\r\n  @Input('p-container-size') set containerSize(value: PoChartContainerSize) {\r\n    this._containerSize = value;\r\n\r\n    this.seriePathPointsDefinition(this._containerSize, this.series, this.range);\r\n  }\r\n\r\n  get containerSize() {\r\n    return this._containerSize;\r\n  }\r\n\r\n  @Input('p-series') set series(seriesList: Array<PoChartSerie>) {\r\n    const seriesDataArrayFilter = seriesList.filter(serie => Array.isArray(serie.data));\r\n\r\n    if (seriesDataArrayFilter.length) {\r\n      this._series = seriesDataArrayFilter;\r\n      this.animate = true;\r\n      this.seriesLength = this.mathsService.seriesGreaterLength(this.series);\r\n      this.chartType = this._series[0].type;\r\n      this.seriePathPointsDefinition(this.containerSize, seriesDataArrayFilter, this.range);\r\n    } else {\r\n      this._series = [];\r\n    }\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  constructor(\r\n    protected mathsService: PoChartMathsService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef\r\n  ) {}\r\n\r\n  onSeriePointClick(selectedItem: any) {\r\n    this.pointClick.emit(selectedItem);\r\n  }\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  private getTooltipLabel(data: number, label: string, tooltipLabel: string) {\r\n    const dataLabel = label ? `${label}: ` : '';\r\n    const dataValue = data.toString();\r\n\r\n    return tooltipLabel || `${dataLabel}${dataValue}`;\r\n  }\r\n\r\n  private svgPathCommand() {\r\n    const command = this.firstValidItemFromSerieArray ? 'M' : 'L';\r\n    // firstValidItemFromSerieArray: tratamento para permitir ao usuário definir o primeiro valor como null para que seja ignorado;\r\n    this.firstValidItemFromSerieArray = false;\r\n\r\n    return command;\r\n  }\r\n\r\n  private xCoordinate(index: number, containerSize: PoChartContainerSize) {\r\n    const halfCategoryWidth = !this.alignByTheCorners\r\n      ? (containerSize.svgWidth - containerSize.axisXLabelWidth) / this.seriesLength / 2\r\n      : 0;\r\n\r\n    const divideIndexBySeriesLength = index / (this.alignByTheCorners ? this.seriesLength - 1 : this.seriesLength);\r\n    const xRatio = isNaN(divideIndexBySeriesLength) ? 0 : divideIndexBySeriesLength;\r\n\r\n    return Math.floor(\r\n      containerSize.axisXLabelWidth +\r\n        halfCategoryWidth +\r\n        (containerSize.svgWidth - containerSize.axisXLabelWidth) * xRatio\r\n    );\r\n  }\r\n\r\n  private serieCategory(index: number, categories: Array<string> = []) {\r\n    return categories[index] ?? undefined;\r\n  }\r\n\r\n  private seriePathPointsDefinition(\r\n    containerSize: PoChartContainerSize,\r\n    series: Array<PoChartSerie>,\r\n    range: PoChartMinMaxValues\r\n  ) {\r\n    this.seriesPointsCoordinates = [];\r\n\r\n    this.seriesPathsCoordinates = series.map((serie: PoChartSerie) => {\r\n      if (Array.isArray(serie.data)) {\r\n        let pathCoordinates: string = '';\r\n        let pointCoordinates: Array<PoChartPointsCoordinates> = [];\r\n        const color = serie.color;\r\n        this.firstValidItemFromSerieArray = true;\r\n\r\n        serie.data.forEach((data, index) => {\r\n          if (this.mathsService.verifyIfFloatOrInteger(data)) {\r\n            const svgPathCommand = this.svgPathCommand();\r\n            const xCoordinate = this.xCoordinate(index, containerSize);\r\n            const yCoordinate = this.yCoordinate(range, data, containerSize);\r\n            const category = this.serieCategory(index, this.categories);\r\n            const label = serie.label;\r\n            const tooltip = serie.tooltip;\r\n            const tooltipLabel = this.getTooltipLabel(data, label, tooltip);\r\n            const isActive = this.chartType === PoChartType.Line;\r\n            pointCoordinates = [\r\n              ...pointCoordinates,\r\n              { category, label, tooltipLabel, data: data, xCoordinate, yCoordinate, color, isActive }\r\n            ];\r\n            pathCoordinates += ` ${svgPathCommand}${xCoordinate} ${yCoordinate}`;\r\n          }\r\n        });\r\n\r\n        pathCoordinates = this.verifyIfClosePath(pathCoordinates, serie.data.length - 1, range, 0, containerSize);\r\n\r\n        this.seriesPointsCoordinates = [...this.seriesPointsCoordinates, pointCoordinates];\r\n\r\n        return { coordinates: pathCoordinates, color, isActive: true };\r\n      }\r\n    });\r\n  }\r\n\r\n  private verifyIfClosePath(pathCoordinates, lastIndex, range, data, containerSize) {\r\n    const { axisXLabelWidth, svgWidth } = containerSize;\r\n\r\n    if (this.chartType === PoChartType.Area) {\r\n      const xLastPosition = this.xCoordinate(lastIndex, containerSize);\r\n      const baseYCoordinate = this.yCoordinate(range, data, containerSize);\r\n      const xInitialPosition = Math.floor(\r\n        this.alignByTheCorners\r\n          ? axisXLabelWidth\r\n          : axisXLabelWidth + (svgWidth - axisXLabelWidth) / this.seriesLength / 2\r\n      );\r\n\r\n      return `${pathCoordinates} ${xLastPosition} ${baseYCoordinate} L${xInitialPosition} ${baseYCoordinate} Z`;\r\n    }\r\n\r\n    return pathCoordinates;\r\n  }\r\n\r\n  private yCoordinate(range: PoChartMinMaxValues, data: number, containerSize: PoChartContainerSize) {\r\n    const yRratio = this.mathsService.getSeriePercentage(range, data);\r\n    const yCoordinate =\r\n      containerSize.svgPlottingAreaHeight - containerSize.svgPlottingAreaHeight * yRratio + PoChartPlotAreaPaddingTop;\r\n\r\n    return Math.floor(yCoordinate);\r\n  }\r\n}\r\n","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\n\r\nimport { fromEvent, of, Subscription } from 'rxjs';\r\nimport { debounceTime, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { PoChartLineBaseComponent } from '../po-chart-line-base.component';\r\nimport { PoChartMathsService } from '../../../services/po-chart-maths.service';\r\nimport { PoChartPathCoordinates } from '../../../interfaces/po-chart-path-coordinates.interface';\r\nimport { PoChartPointsCoordinates } from '../../../interfaces/po-chart-points-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-area]',\r\n  templateUrl: '../po-chart-line.component.svg'\r\n})\r\nexport class PoChartAreaComponent extends PoChartLineBaseComponent {\r\n  private currentActiveSerieIndex: number;\r\n  private mouseMoveSubscription$: Subscription;\r\n  private previousActiveSerieIndex: number;\r\n\r\n  constructor(\r\n    protected mathsService: PoChartMathsService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef\r\n  ) {\r\n    super(mathsService, renderer, elementRef);\r\n  }\r\n\r\n  onEnter(serieIndex: number): void {\r\n    this.applyActiveItem<PoChartPathCoordinates>(this.seriesPathsCoordinates, serieIndex);\r\n    this.initializeListener(serieIndex);\r\n    this.activeTooltip = true;\r\n  }\r\n\r\n  onLeave(serieIndex: number): void {\r\n    this.removeListener();\r\n    this.applyActiveItem<PoChartPathCoordinates>(this.seriesPathsCoordinates);\r\n    this.applyActiveItem<PoChartPointsCoordinates>(this.seriesPointsCoordinates[serieIndex], null);\r\n  }\r\n\r\n  onSeriePointHover(selectedItem: any) {\r\n    const { relativeTo, ...item } = selectedItem;\r\n\r\n    this.pointHover.emit(item);\r\n  }\r\n\r\n  private applyActiveItem<T>(list: Array<T>, index?: number): void {\r\n    list.forEach((serie, seriesIndex) => {\r\n      serie['isActive'] = index === undefined ? true : index === seriesIndex;\r\n    });\r\n  }\r\n\r\n  private getMouseCoordinates(event: MouseEvent): SVGPoint {\r\n    event.preventDefault();\r\n    const { svgDomMatrix, svgPoint } = this.svgSpace;\r\n\r\n    svgPoint.x = event.clientX;\r\n    svgPoint.y = event.clientY;\r\n\r\n    // Retorna as coordenadas do mouse em relação ao container svg.\r\n    return svgPoint.matrixTransform(svgDomMatrix);\r\n  }\r\n\r\n  private initializeListener(serieIndex: number): void {\r\n    let pointPosition: SVGPoint;\r\n    this.previousActiveSerieIndex = undefined;\r\n\r\n    this.mouseMoveSubscription$ = fromEvent(this.elementRef.nativeElement, 'mousemove')\r\n      .pipe(\r\n        debounceTime(10),\r\n        tap((event: MouseEvent) => (pointPosition = this.getMouseCoordinates(event))),\r\n        switchMap(() => of(this.verifyActiveArea(pointPosition)))\r\n      )\r\n      .subscribe(activeObjIndex => {\r\n        if (activeObjIndex !== undefined) {\r\n          this.applyActiveItem<PoChartPointsCoordinates>(this.seriesPointsCoordinates[serieIndex], activeObjIndex);\r\n        }\r\n      });\r\n  }\r\n\r\n  private removeListener(): void {\r\n    this.mouseMoveSubscription$.unsubscribe();\r\n  }\r\n\r\n  private verifyActiveArea(pointPosition: SVGPoint): number {\r\n    const { x } = pointPosition;\r\n\r\n    this.currentActiveSerieIndex = this.categoriesCoordinates.findIndex(\r\n      (category, index) =>\r\n        (x >= category && index === this.categoriesCoordinates.length - 1) ||\r\n        (x >= category && x <= this.categoriesCoordinates[index + 1])\r\n    );\r\n\r\n    if (this.currentActiveSerieIndex >= 0 && this.currentActiveSerieIndex !== this.previousActiveSerieIndex) {\r\n      this.previousActiveSerieIndex = this.currentActiveSerieIndex;\r\n      return this.currentActiveSerieIndex;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport {\r\n  PoChartGridLines,\r\n  PoChartPadding,\r\n  PoChartPlotAreaPaddingTop\r\n} from '../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartMathsService } from '../../services/po-chart-maths.service';\r\nimport { PoChartContainerSize } from '../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartMinMaxValues } from '../../interfaces/po-chart-min-max-values.interface';\r\nimport { PoChartPathCoordinates } from '../../interfaces/po-chart-path-coordinates.interface';\r\nimport { PoChartLabelCoordinates } from '../../interfaces/po-chart-label-coordinates.interface';\r\nimport { PoChartAxisOptions } from '../../interfaces/po-chart-axis-options.interface';\r\nimport { PoChartType } from '../../enums/po-chart-type.enum';\r\n\r\n@Component({\r\n  selector: '[po-chart-axis]',\r\n  templateUrl: './po-chart-axis.component.svg'\r\n})\r\nexport class PoChartAxisComponent {\r\n  @Input('p-align-by-the-corners') alignByTheCorners: boolean = false;\r\n\r\n  @Input('p-type') type: PoChartType;\r\n\r\n  @Input('p-range') range: PoChartMinMaxValues;\r\n\r\n  @Output('p-categories-coordinates') categoriesCoordinates: EventEmitter<Array<number>> = new EventEmitter();\r\n\r\n  axisXCoordinates: Array<PoChartPathCoordinates>;\r\n  axisXLabelCoordinates: Array<PoChartLabelCoordinates>;\r\n  axisYCoordinates: Array<PoChartPathCoordinates>;\r\n  axisYLabelCoordinates: Array<PoChartLabelCoordinates>;\r\n\r\n  private axisXLabels: Array<string> = [];\r\n  private axisYLabels: Array<string> = [];\r\n  private gridLines: number = PoChartGridLines;\r\n  private seriesLength: number = 0;\r\n\r\n  private _axisOptions: PoChartAxisOptions;\r\n  private _categories: Array<string> = [];\r\n  private _containerSize: PoChartContainerSize = {};\r\n  private _series: Array<any> = [];\r\n\r\n  @Input('p-series') set series(seriesList: Array<any>) {\r\n    const seriesDataArrayFilter = seriesList.filter(serie => Array.isArray(serie.data));\r\n\r\n    if (seriesDataArrayFilter.length) {\r\n      this._series = seriesDataArrayFilter;\r\n\r\n      this.seriesLength = this.mathsService.seriesGreaterLength(this.series);\r\n      this.checkAxisOptions(this.axisOptions);\r\n      this.setAxisXCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n      this.setAxisYCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n    } else {\r\n      this._series = [];\r\n      this.cleanUpCoordinates();\r\n    }\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  @Input('p-categories') set categories(value: Array<string>) {\r\n    this._categories = value;\r\n\r\n    if (this.type === PoChartType.Bar) {\r\n      this.setAxisXCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n    } else {\r\n      this.setAxisYCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n    }\r\n  }\r\n\r\n  get categories() {\r\n    return this._categories;\r\n  }\r\n\r\n  @Input('p-container-size') set containerSize(value: PoChartContainerSize) {\r\n    this._containerSize = value;\r\n\r\n    this.checkAxisOptions(this.axisOptions);\r\n    this.setAxisXCoordinates(this.gridLines, this.seriesLength, this._containerSize, this.range, this.type);\r\n    this.setAxisYCoordinates(this.gridLines, this.seriesLength, this._containerSize, this.range, this.type);\r\n  }\r\n\r\n  get containerSize() {\r\n    return this._containerSize;\r\n  }\r\n\r\n  @Input('p-options') set axisOptions(value: PoChartAxisOptions) {\r\n    this._axisOptions = value;\r\n\r\n    this.checkAxisOptions(this._axisOptions);\r\n\r\n    if (this.type === PoChartType.Bar) {\r\n      this.setAxisYCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n    } else {\r\n      this.setAxisXCoordinates(this.gridLines, this.seriesLength, this.containerSize, this.range, this.type);\r\n    }\r\n  }\r\n\r\n  get axisOptions() {\r\n    return this._axisOptions;\r\n  }\r\n\r\n  constructor(private mathsService: PoChartMathsService) {}\r\n\r\n  private setAxisXCoordinates(\r\n    gridLines: number,\r\n    seriesLength: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxAxisValues: PoChartMinMaxValues,\r\n    type: PoChartType\r\n  ) {\r\n    if (seriesLength) {\r\n      const amountOfAxisLabels = type === PoChartType.Bar ? seriesLength : gridLines;\r\n      this.calculateAxisXLabelCoordinates(amountOfAxisLabels, containerSize, minMaxAxisValues, type);\r\n    }\r\n\r\n    const amountOfAxisXLines = this.amountOfAxisXLines(seriesLength, gridLines, type);\r\n    this.calculateAxisXCoordinates(amountOfAxisXLines, containerSize, minMaxAxisValues);\r\n  }\r\n\r\n  private amountOfAxisXLines(seriesLength: number, gridLines: number, type: PoChartType): number {\r\n    if (type === PoChartType.Bar) {\r\n      return seriesLength <= 1 ? 2 : seriesLength + 1;\r\n    }\r\n    return gridLines === 0 ? 1 : gridLines;\r\n  }\r\n\r\n  private setAxisYCoordinates(\r\n    gridLines: number,\r\n    seriesLength: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxAxisValues: PoChartMinMaxValues,\r\n    type: PoChartType\r\n  ) {\r\n    const amountOfAxisY = type === PoChartType.Bar ? gridLines : seriesLength;\r\n\r\n    if (seriesLength) {\r\n      this.calculateAxisYLabelCoordinates(amountOfAxisY, containerSize, minMaxAxisValues, type);\r\n    }\r\n\r\n    if (type === PoChartType.Area) {\r\n      this.getCategoriesRangeForMouseMove(amountOfAxisY, containerSize);\r\n    }\r\n\r\n    this.calculateAxisYCoordinates(amountOfAxisY, containerSize, type, minMaxAxisValues);\r\n  }\r\n\r\n  private calculateAxisXCoordinates(\r\n    amountOfAxisX: number,\r\n    containerSize: PoChartContainerSize,\r\n    range: PoChartMinMaxValues\r\n  ) {\r\n    const startX = containerSize.axisXLabelWidth;\r\n    const endX = containerSize.svgWidth;\r\n\r\n    let coordinatesReferedToZero;\r\n    let coordinatesList = [...Array(amountOfAxisX)].map((_, index: number) => {\r\n      const yCoordinate = this.calculateAxisXCoordinateY(amountOfAxisX, containerSize, index);\r\n      const coordinates = `M${startX} ${yCoordinate} L${endX}, ${yCoordinate}`;\r\n\r\n      return { coordinates };\r\n    });\r\n\r\n    // Avalia a necessidade de adicionar a linha referente ao valor zero em gráficos do tipo `column`, `area` e `line`.\r\n    if (this.type !== PoChartType.Bar && range.minValue < 0 && !this.axisXLabels.includes('0')) {\r\n      coordinatesReferedToZero = this.getCoordinatesRelatedToZero(containerSize, range, startX, endX);\r\n      coordinatesList = [...coordinatesList, coordinatesReferedToZero];\r\n    }\r\n\r\n    this.axisXCoordinates = coordinatesList;\r\n  }\r\n\r\n  private getCoordinatesRelatedToZero(\r\n    containerSize: PoChartContainerSize,\r\n    range: PoChartMinMaxValues,\r\n    start: number,\r\n    end: number,\r\n    isAxisY: boolean = false\r\n  ) {\r\n    const type = isAxisY ? PoChartType.Bar : PoChartType.Column;\r\n    const basePosition = this.axisCoordinatesForValueZero(range, 0, containerSize, isAxisY);\r\n    const coordinates = {\r\n      column: {\r\n        startX: start,\r\n        endX: end,\r\n        startY: basePosition,\r\n        endY: basePosition\r\n      },\r\n      bar: {\r\n        startX: basePosition,\r\n        endX: basePosition,\r\n        startY: start,\r\n        endY: end\r\n      }\r\n    };\r\n\r\n    return {\r\n      coordinates: `M${coordinates[type].startX} ${coordinates[type].startY} L${coordinates[type].endX} ${coordinates[type].endY}`\r\n    };\r\n  }\r\n\r\n  private axisCoordinatesForValueZero(\r\n    range: PoChartMinMaxValues,\r\n    data: number,\r\n    containerSize: PoChartContainerSize,\r\n    isAxisY: boolean\r\n  ) {\r\n    const { axisXLabelWidth, svgWidth, svgPlottingAreaHeight } = containerSize;\r\n    const ratio = this.mathsService.getSeriePercentage(range, data);\r\n\r\n    return Math.floor(\r\n      isAxisY\r\n        ? axisXLabelWidth + (svgWidth - axisXLabelWidth) * ratio\r\n        : svgPlottingAreaHeight - svgPlottingAreaHeight * ratio + PoChartPlotAreaPaddingTop\r\n    );\r\n  }\r\n\r\n  private calculateAxisXLabelCoordinates(\r\n    amountOfAxisX: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxAxisValues: PoChartMinMaxValues,\r\n    type: PoChartType\r\n  ) {\r\n    this.axisXLabels = this.getAxisXLabels(type, minMaxAxisValues, amountOfAxisX);\r\n\r\n    this.axisXLabelCoordinates = [...Array(amountOfAxisX)].map((_, index: number) => {\r\n      const label = this.axisXLabels[index];\r\n      const xCoordinate = this.calculateAxisXLabelXCoordinate(containerSize.axisXLabelWidth);\r\n      const yCoordinate = this.calculateAxisXLabelYCoordinate(amountOfAxisX, containerSize, type, index);\r\n\r\n      return { label, xCoordinate, yCoordinate };\r\n    });\r\n  }\r\n\r\n  private calculateAxisYCoordinates(\r\n    amountOfAxisY: number,\r\n    containerSize: PoChartContainerSize,\r\n    type: PoChartType,\r\n    range: PoChartMinMaxValues\r\n  ) {\r\n    const startY = PoChartPlotAreaPaddingTop;\r\n    const endY = containerSize.svgPlottingAreaHeight + PoChartPlotAreaPaddingTop;\r\n\r\n    // tratamento necessário para criar uma linha a mais para fechar o gráfico\r\n    const length = amountOfAxisY === 0 || type === PoChartType.Bar ? amountOfAxisY : amountOfAxisY + 1;\r\n\r\n    let coordinatesReferedToZero;\r\n    let coordinatesList = [...Array(length)].map((_, index: number) => {\r\n      const xCoordinate = this.calculateAxisYCoordinateX(containerSize, amountOfAxisY, index);\r\n      const coordinates = `M${xCoordinate} ${startY} L${xCoordinate}, ${endY}`;\r\n\r\n      return { coordinates };\r\n    });\r\n\r\n    // Avalia a necessidade de adicionar a linha referente ao valor zero em gráficos do tipo `bar`.\r\n    if (type === PoChartType.Bar && range.minValue < 0 && !this.axisYLabels.includes('0')) {\r\n      coordinatesReferedToZero = this.getCoordinatesRelatedToZero(containerSize, range, startY, endY, true);\r\n      coordinatesList = [...coordinatesList, coordinatesReferedToZero];\r\n    }\r\n\r\n    this.axisYCoordinates = [...coordinatesList];\r\n  }\r\n\r\n  private calculateAxisYLabelCoordinates(\r\n    amountOfAxisY: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxAxisValues: PoChartMinMaxValues,\r\n    type: PoChartType\r\n  ) {\r\n    this.axisYLabels = this.getAxisYLabels(type, minMaxAxisValues, amountOfAxisY);\r\n\r\n    this.axisYLabelCoordinates = [...Array(amountOfAxisY)].map((_, index: number) => {\r\n      const label = this.axisYLabels[index];\r\n\r\n      const xCoordinate = this.getAxisXCoordinates(containerSize, amountOfAxisY, type, index);\r\n      const yCoordinate = this.calculateAxisYLabelYCoordinate(containerSize);\r\n\r\n      return { label, xCoordinate, yCoordinate };\r\n    });\r\n  }\r\n\r\n  private calculateAxisXLabelXCoordinate(axisXLabelWidth: number): number {\r\n    const labelPoChartPadding = PoChartPadding / 3;\r\n\r\n    return axisXLabelWidth - labelPoChartPadding;\r\n  }\r\n\r\n  private calculateAxisXLabelYCoordinate(\r\n    amountOfAxisX: number,\r\n    containerSize: PoChartContainerSize,\r\n    type: PoChartType,\r\n    index: number\r\n  ): number {\r\n    const amountOfLines = type === PoChartType.Bar ? amountOfAxisX : amountOfAxisX - 1;\r\n    const yRatio = index / amountOfLines;\r\n\r\n    if (type !== PoChartType.Bar) {\r\n      return (\r\n        containerSize.svgPlottingAreaHeight - containerSize.svgPlottingAreaHeight * yRatio + PoChartPlotAreaPaddingTop\r\n      );\r\n    }\r\n\r\n    const halfCategoryHeight = containerSize.svgPlottingAreaHeight / amountOfAxisX / 2;\r\n    return (\r\n      containerSize.svgPlottingAreaHeight -\r\n      halfCategoryHeight -\r\n      containerSize.svgPlottingAreaHeight * yRatio +\r\n      PoChartPlotAreaPaddingTop\r\n    );\r\n  }\r\n\r\n  private calculateAxisXCoordinateY(amountOfAxisX: number, containerSize: PoChartContainerSize, index: number): number {\r\n    const yRatio = index / (amountOfAxisX - 1);\r\n\r\n    return (\r\n      containerSize.svgPlottingAreaHeight - containerSize.svgPlottingAreaHeight * yRatio + PoChartPlotAreaPaddingTop\r\n    );\r\n  }\r\n\r\n  private calculateAxisYLabelYCoordinate(containerSize: PoChartContainerSize): number {\r\n    const textPoChartPadding = PoChartPadding / 3;\r\n\r\n    return containerSize.svgHeight - textPoChartPadding;\r\n  }\r\n\r\n  private centeredInCategoryArea(\r\n    containerSize: PoChartContainerSize,\r\n    amountOfAxisY: number,\r\n    type: PoChartType,\r\n    index: number\r\n  ): number {\r\n    const amountOfLines = type === PoChartType.Bar ? amountOfAxisY - 1 : amountOfAxisY;\r\n    const xRatio = index / amountOfLines;\r\n\r\n    if (type === PoChartType.Bar) {\r\n      return Math.round(\r\n        containerSize.axisXLabelWidth + (containerSize.svgWidth - containerSize.axisXLabelWidth) * xRatio\r\n      );\r\n    }\r\n\r\n    const halfCategoryWidth = (containerSize.svgWidth - containerSize.axisXLabelWidth) / amountOfAxisY / 2;\r\n    return Math.round(\r\n      containerSize.axisXLabelWidth +\r\n        halfCategoryWidth +\r\n        (containerSize.svgWidth - containerSize.axisXLabelWidth) * xRatio\r\n    );\r\n  }\r\n\r\n  private calculateAxisYCoordinateX(\r\n    containerSize: PoChartContainerSize,\r\n    amountOfAxisY: number,\r\n    index: number,\r\n    subtractCategoryWidth: boolean = false\r\n  ): number {\r\n    const amountOfLines = this.alignByTheCorners ? amountOfAxisY - 1 : amountOfAxisY;\r\n    const halfCategoryWidth =\r\n      this.alignByTheCorners && subtractCategoryWidth\r\n        ? (containerSize.svgWidth - containerSize.axisXLabelWidth) / (amountOfAxisY - 1) / 2\r\n        : 0;\r\n    const divideIndexByAmountOfLines = index / amountOfLines;\r\n    const xRatio = divideIndexByAmountOfLines === Infinity ? 0 : divideIndexByAmountOfLines;\r\n\r\n    return Math.round(\r\n      containerSize.axisXLabelWidth +\r\n        (containerSize.svgWidth - containerSize.axisXLabelWidth) * xRatio -\r\n        halfCategoryWidth\r\n    );\r\n  }\r\n\r\n  private checkAxisOptions(options: PoChartAxisOptions = {}): void {\r\n    this.gridLines =\r\n      options.gridLines && this.isValidGridLinesLengthOption(options.gridLines) ? options.gridLines : PoChartGridLines;\r\n  }\r\n\r\n  private cleanUpCoordinates() {\r\n    this.axisXCoordinates = [];\r\n    this.axisYCoordinates = [];\r\n    this.axisXLabelCoordinates = [];\r\n    this.axisYLabelCoordinates = [];\r\n    this.seriesLength = 0;\r\n  }\r\n\r\n  private getAxisXCoordinates(\r\n    containerSize: PoChartContainerSize,\r\n    amountOfAxisY: number,\r\n    type: PoChartType,\r\n    index: number\r\n  ): number {\r\n    return this.alignByTheCorners\r\n      ? this.calculateAxisYCoordinateX(containerSize, amountOfAxisY, index)\r\n      : this.centeredInCategoryArea(containerSize, amountOfAxisY, type, index);\r\n  }\r\n\r\n  private getCategoriesRangeForMouseMove(amountOfAxisY: number, containerSize: PoChartContainerSize) {\r\n    const categoriesCoordinates = [...Array(amountOfAxisY)].map((_, index: number) =>\r\n      this.calculateAxisYCoordinateX(containerSize, amountOfAxisY, index, true)\r\n    );\r\n\r\n    this.categoriesCoordinates.emit(categoriesCoordinates);\r\n  }\r\n\r\n  private isValidGridLinesLengthOption(gridLines: number): boolean {\r\n    return gridLines >= 2 && gridLines <= 10;\r\n  }\r\n\r\n  private getAxisXLabels(type: PoChartType, minMaxAxisValues: PoChartMinMaxValues, amountOfAxisX: number) {\r\n    if (type === PoChartType.Bar) {\r\n      const axisXLabelsList = this.formatCategoriesLabels(amountOfAxisX, this.categories);\r\n      return axisXLabelsList.reverse();\r\n    }\r\n\r\n    return this.generateAverageOfLabels(minMaxAxisValues, amountOfAxisX);\r\n  }\r\n\r\n  private getAxisYLabels(type: PoChartType, minMaxAxisValues: PoChartMinMaxValues, amountOfAxisX: number) {\r\n    return type === PoChartType.Bar\r\n      ? this.generateAverageOfLabels(minMaxAxisValues, amountOfAxisX)\r\n      : this.formatCategoriesLabels(amountOfAxisX, this.categories);\r\n  }\r\n\r\n  private formatCategoriesLabels(amountOfAxisX: number, categories: Array<string> = []) {\r\n    return [...Array(amountOfAxisX)].map((_, index: number) => categories[index] ?? '-');\r\n  }\r\n\r\n  private generateAverageOfLabels(minMaxAxisValues: PoChartMinMaxValues, amountOfAxisLines: number) {\r\n    const averageLabelsList = this.mathsService.range(minMaxAxisValues, amountOfAxisLines);\r\n\r\n    return averageLabelsList.map(label => {\r\n      const formattedDigit = label.toFixed(label % 1 && 2);\r\n      // Remove dígitos com zero.\r\n      // Também trata caso quando o valor retornado era -0, substituindo-o por 0.\r\n      const removeZeroDigits = formattedDigit.replace(/\\.00$/, '').replace(/\\-0$/, 0);\r\n\r\n      return removeZeroDigits.toString();\r\n    });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoChartPathCoordinates } from '../../../interfaces/po-chart-path-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-axis-path]',\r\n  templateUrl: './po-chart-axis-path.component.svg'\r\n})\r\nexport class PoChartAxisPathComponent {\r\n  @Input('p-axis-x-coordinates') axisXCoordinates: Array<PoChartPathCoordinates>;\r\n\r\n  @Input('p-axis-y-coordinates') axisYCoordinates: Array<PoChartPathCoordinates>;\r\n\r\n  constructor() {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoChartType } from '../../../enums/po-chart-type.enum';\r\nimport { PoChartLabelCoordinates } from '../../../interfaces/po-chart-label-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-axis-label]',\r\n  templateUrl: './po-chart-axis-label.component.svg'\r\n})\r\nexport class PoChartAxisLabelComponent {\r\n  @Input('p-align-by-the-corners') alignByTheCorners: boolean = false;\r\n\r\n  @Input('p-axis-x-label-coordinates') axisXLabelCoordinates: Array<PoChartLabelCoordinates>;\r\n\r\n  @Input('p-axis-y-label-coordinates') axisYLabelCoordinates: Array<PoChartLabelCoordinates>;\r\n\r\n  @Input('p-type') type: PoChartType;\r\n\r\n  constructor() {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { PoChartMathsService } from '../../services/po-chart-maths.service';\r\n\r\nimport { PoChartContainerSize } from '../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartMinMaxValues } from '../../interfaces/po-chart-min-max-values.interface';\r\nimport { PoChartBarCoordinates } from '../../interfaces/po-chart-bar-coordinates.interface';\r\nimport { PoChartSerie } from '../../interfaces/po-chart-serie.interface';\r\n\r\n@Directive()\r\nexport abstract class PoChartBarBaseComponent {\r\n  @Input('p-categories') categories: Array<string>;\r\n\r\n  @Output('p-bar-click') barClick = new EventEmitter<any>();\r\n\r\n  @Output('p-bar-hover') barHover = new EventEmitter<any>();\r\n\r\n  seriesPathsCoordinates: Array<Array<PoChartBarCoordinates>>;\r\n\r\n  protected seriesGreaterLength: number;\r\n\r\n  private _containerSize: PoChartContainerSize = {};\r\n  private _range: PoChartMinMaxValues = {};\r\n  private _series: Array<PoChartSerie> = [];\r\n\r\n  @Input('p-range') set range(value: PoChartMinMaxValues) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._range = value;\r\n\r\n      this.calculateSeriesPathsCoordinates(this.containerSize, this._series, this._range);\r\n    }\r\n  }\r\n\r\n  get range() {\r\n    return this._range;\r\n  }\r\n\r\n  @Input('p-container-size') set containerSize(value: PoChartContainerSize) {\r\n    this._containerSize = value;\r\n\r\n    this.calculateSeriesPathsCoordinates(this._containerSize, this.series, this.range);\r\n  }\r\n\r\n  get containerSize() {\r\n    return this._containerSize;\r\n  }\r\n\r\n  @Input('p-series') set series(seriesList: Array<PoChartSerie>) {\r\n    const seriesDataArrayFilter = seriesList.filter(serie => Array.isArray(serie.data));\r\n\r\n    if (seriesDataArrayFilter.length) {\r\n      this._series = seriesDataArrayFilter;\r\n      this.seriesGreaterLength = this.mathsService.seriesGreaterLength(this.series);\r\n      this.calculateSeriesPathsCoordinates(this.containerSize, seriesDataArrayFilter, this.range);\r\n    } else {\r\n      this._series = [];\r\n    }\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  constructor(protected mathsService: PoChartMathsService) {}\r\n\r\n  onSerieBarClick(selectedItem: any) {\r\n    this.barClick.emit(selectedItem);\r\n  }\r\n\r\n  onSerieBarHover(selectedItem: any) {\r\n    this.barHover.emit(selectedItem);\r\n  }\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  private calculateSeriesPathsCoordinates(\r\n    containerSize: PoChartContainerSize,\r\n    series: Array<PoChartSerie>,\r\n    range: PoChartMinMaxValues\r\n  ) {\r\n    this.seriesPathsCoordinates = series.map((serie: PoChartSerie, seriesIndex) => {\r\n      if (Array.isArray(serie.data)) {\r\n        let pathCoordinates: Array<PoChartBarCoordinates> = [];\r\n\r\n        serie.data.forEach((data, serieDataIndex) => {\r\n          if (this.mathsService.verifyIfFloatOrInteger(data)) {\r\n            const coordinates = this.barCoordinates(seriesIndex, serieDataIndex, containerSize, range, data);\r\n\r\n            const category = this.serieCategory(serieDataIndex, this.categories);\r\n            const label = serie['label'];\r\n            const color = serie['color'];\r\n            const tooltip = serie['tooltip'];\r\n            const tooltipLabel = this.getTooltipLabel(data, label, tooltip);\r\n\r\n            pathCoordinates = [...pathCoordinates, { category, color, label, tooltipLabel, data, coordinates }];\r\n          }\r\n        });\r\n\r\n        return pathCoordinates;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getTooltipLabel(data: number, label: string, tooltipLabel: string) {\r\n    const dataLabel = label ? `${label}: ` : '';\r\n    const dataValue = data.toString();\r\n\r\n    return tooltipLabel || `${dataLabel}${dataValue}`;\r\n  }\r\n\r\n  private serieCategory(index: number, categories: Array<string> = []) {\r\n    return categories[index] ?? undefined;\r\n  }\r\n\r\n  protected abstract barCoordinates(\r\n    seriesIndex: number,\r\n    serieDataIndex: number,\r\n    containerSize: PoChartContainerSize,\r\n    range: PoChartMinMaxValues,\r\n    serieValue: number\r\n  );\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoChartPlotAreaPaddingTop } from './../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartBarBaseComponent } from './po-chart-bar-base.component';\r\nimport { PoChartMathsService } from './../../services/po-chart-maths.service';\r\n\r\nimport { PoChartContainerSize } from './../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartMinMaxValues } from './../../interfaces/po-chart-min-max-values.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-bar]',\r\n  templateUrl: './po-chart-bar.component.svg'\r\n})\r\nexport class PoChartBarComponent extends PoChartBarBaseComponent {\r\n  readonly tooltipPosition = 'right';\r\n\r\n  constructor(protected mathsService: PoChartMathsService) {\r\n    super(mathsService);\r\n  }\r\n\r\n  protected barCoordinates(\r\n    seriesIndex: number,\r\n    serieItemDataIndex: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxSeriesValues: PoChartMinMaxValues,\r\n    serieValue: number\r\n  ) {\r\n    const { svgPlottingAreaWidth, barHeight, spaceBetweenBars } = this.calculateElementsMeasurements(containerSize);\r\n\r\n    const { x1, x2 } = this.xCoordinates(\r\n      minMaxSeriesValues,\r\n      svgPlottingAreaWidth,\r\n      containerSize.axisXLabelWidth,\r\n      containerSize.svgWidth,\r\n      serieValue\r\n    );\r\n    const { y1, y2 } = this.yCoordinates(\r\n      seriesIndex,\r\n      serieItemDataIndex,\r\n      containerSize.svgPlottingAreaHeight,\r\n      barHeight,\r\n      spaceBetweenBars\r\n    );\r\n\r\n    return ['M', x1, y2, 'L', x2, y2, 'L', x2, y1, 'L', x1, y1, 'z'].join(' ');\r\n  }\r\n\r\n  private calculateElementsMeasurements(containerSize: PoChartContainerSize) {\r\n    const { svgWidth, svgPlottingAreaHeight, axisXLabelWidth } = containerSize;\r\n\r\n    // Fração das séries em relação à largura da categoria. Incrementa + 2 na extensão das séries pois se trata da área de margem entre as categorias.\r\n    const svgPlottingAreaWidth = svgWidth - axisXLabelWidth;\r\n    const categoryHeight = svgPlottingAreaHeight / this.seriesGreaterLength;\r\n    const columnFraction = categoryHeight / (this.series.length + 2);\r\n\r\n    // Área entre as colunas: retorna zero se houver apenas uma série.\r\n    const spaceBetweenBars = this.series.length > 1 ? columnFraction / (this.series.length + 2) : 0;\r\n\r\n    // Subtrai a fração das séries pelo espaço entre as colunas.\r\n    const barHeight = columnFraction - (spaceBetweenBars * (this.series.length - 1)) / (this.series.length + 2);\r\n\r\n    return { svgPlottingAreaWidth, barHeight, spaceBetweenBars };\r\n  }\r\n\r\n  private xCoordinates(\r\n    minMaxSeriesValues: PoChartMinMaxValues,\r\n    svgPlottingAreaWidth: number,\r\n    axisXLabelWidth: PoChartContainerSize['axisXLabelWidth'],\r\n    svgWidth: PoChartContainerSize['svgWidth'],\r\n    serieValue: number\r\n  ) {\r\n    const { minValue } = minMaxSeriesValues;\r\n    const valueZeroPercentage = this.mathsService.getSeriePercentage(minMaxSeriesValues, minValue < 0 ? 0 : minValue);\r\n    const x1 = axisXLabelWidth + (svgWidth - axisXLabelWidth) * valueZeroPercentage;\r\n\r\n    const xRatio = this.mathsService.getSeriePercentage(minMaxSeriesValues, serieValue);\r\n    const x2 = Math.round(svgPlottingAreaWidth * xRatio + axisXLabelWidth);\r\n\r\n    return { x1, x2 };\r\n  }\r\n\r\n  private yCoordinates(\r\n    seriesIndex: number,\r\n    serieItemDataIndex: number,\r\n    svgPlottingAreaHeight: number,\r\n    barHeight: number,\r\n    spaceBetweenBars: number\r\n  ) {\r\n    const spaceBetweenAxisAndBars = barHeight;\r\n    const yRatio = serieItemDataIndex / this.seriesGreaterLength;\r\n\r\n    const y1 = Math.round(\r\n      PoChartPlotAreaPaddingTop +\r\n        svgPlottingAreaHeight * yRatio +\r\n        spaceBetweenAxisAndBars +\r\n        barHeight * seriesIndex +\r\n        spaceBetweenBars * seriesIndex\r\n    );\r\n\r\n    const y2 = Math.round(y1 + barHeight);\r\n    return { y1, y2 };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoChartPlotAreaPaddingTop } from '../../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartBarBaseComponent } from '../po-chart-bar-base.component';\r\nimport { PoChartMathsService } from '../../../services/po-chart-maths.service';\r\n\r\nimport { PoChartContainerSize } from '../../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartMinMaxValues } from '../../../interfaces/po-chart-min-max-values.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-column]',\r\n  templateUrl: '../po-chart-bar.component.svg'\r\n})\r\nexport class PoChartColumnComponent extends PoChartBarBaseComponent {\r\n  readonly tooltipPosition = 'top';\r\n\r\n  constructor(protected mathsService: PoChartMathsService) {\r\n    super(mathsService);\r\n  }\r\n\r\n  protected barCoordinates(\r\n    seriesIndex: number,\r\n    serieItemDataIndex: number,\r\n    containerSize: PoChartContainerSize,\r\n    minMaxSeriesValues: PoChartMinMaxValues,\r\n    serieValue: number\r\n  ) {\r\n    const { svgWidth, axisXLabelWidth, svgPlottingAreaHeight } = containerSize;\r\n    const { chartBarPlotArea, barWidth, spaceBetweenBars } = this.calculateElementsMeasurements(\r\n      svgWidth,\r\n      axisXLabelWidth\r\n    );\r\n\r\n    const { x1, x2 } = this.xCoordinates(\r\n      seriesIndex,\r\n      serieItemDataIndex,\r\n      chartBarPlotArea,\r\n      barWidth,\r\n      spaceBetweenBars,\r\n      axisXLabelWidth\r\n    );\r\n    const { y1, y2 } = this.yCoordinates(minMaxSeriesValues, svgPlottingAreaHeight, serieValue);\r\n\r\n    return ['M', x1, y2, 'L', x2, y2, 'L', x2, y1, 'L', x1, y1, 'z'].join(' ');\r\n  }\r\n\r\n  private calculateElementsMeasurements(\r\n    svgWidth: PoChartContainerSize['svgWidth'],\r\n    axisXLabelWidth: PoChartContainerSize['axisXLabelWidth']\r\n  ) {\r\n    // Fração das séries em relação à largura da categoria. Incrementa + 2 na extensão das séries pois se trata da área de margem entre as categorias.\r\n    const chartBarPlotArea = svgWidth - axisXLabelWidth;\r\n    const categoryWidth = chartBarPlotArea / this.seriesGreaterLength;\r\n    const columnFraction = categoryWidth / (this.series.length + 2);\r\n\r\n    // Área entre as colunas: retorna zero se houver apenas uma série.\r\n    const spaceBetweenBars = this.series.length > 1 ? columnFraction / (this.series.length + 2) : 0;\r\n\r\n    // Subtrai a fração das séries pelo espaço entre as colunas.\r\n    const barWidth = columnFraction - (spaceBetweenBars * (this.series.length - 1)) / (this.series.length + 2);\r\n\r\n    return { chartBarPlotArea, barWidth, spaceBetweenBars };\r\n  }\r\n\r\n  private xCoordinates(\r\n    seriesIndex: number,\r\n    serieItemDataIndex: number,\r\n    chartBarPlotArea: number,\r\n    barWidth: number,\r\n    spaceBetweenBars: number,\r\n    axisXLabelWidth: PoChartContainerSize['axisXLabelWidth']\r\n  ) {\r\n    // A área lateral entre a coluna e a linha do eixo Y do grid será sempre equivalente à largura da coluna.\r\n    const spaceBetweenAxisAndBars = barWidth;\r\n    const xRatio = serieItemDataIndex / this.seriesGreaterLength;\r\n\r\n    const x1 = Math.round(\r\n      axisXLabelWidth +\r\n        chartBarPlotArea * xRatio +\r\n        spaceBetweenAxisAndBars +\r\n        barWidth * seriesIndex +\r\n        spaceBetweenBars * seriesIndex\r\n    );\r\n\r\n    const x2 = Math.round(x1 + barWidth);\r\n\r\n    return { x1, x2 };\r\n  }\r\n\r\n  private yCoordinates(minMaxSeriesValues: PoChartMinMaxValues, svgPlottingAreaHeight: number, serieValue: number) {\r\n    const { minValue } = minMaxSeriesValues;\r\n    const minValuePercentage = this.mathsService.getSeriePercentage(minMaxSeriesValues, minValue < 0 ? 0 : minValue);\r\n    const y1 = Math.round(\r\n      svgPlottingAreaHeight - svgPlottingAreaHeight * minValuePercentage + PoChartPlotAreaPaddingTop\r\n    );\r\n\r\n    const yRatio = this.mathsService.getSeriePercentage(minMaxSeriesValues, serieValue);\r\n    const y2 = Math.round(svgPlottingAreaHeight - svgPlottingAreaHeight * yRatio + PoChartPlotAreaPaddingTop);\r\n\r\n    return { y1, y2 };\r\n  }\r\n}\r\n","// Array de cores para gráficos definido pela equipe de UX PO.\r\nexport const PoDefaultColors = [\r\n  ['#29B6C5'],\r\n  ['#0C6C94', '#29B6C5'],\r\n  ['#0C6C94', '#29B6C5', '#C9ECF0'],\r\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2'],\r\n  ['#0C6C94', '#0B92B4', '#29B6C5', '#94DAE2', '#C9ECF0'],\r\n  ['#0C6C94', '#00A5C5', '#0082A8', '#31628D', '#364473', '#32285C'],\r\n  ['#0C6C94', '#00AACB', '#018DAE', '#277099', '#325783', '#35426E', '#32285D'],\r\n  ['#0C6C94', '#00AFCE', '#0194B6', '#117FA2', '#0088AC', '#23789F', '#2B6992', '#32285C'],\r\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#32285C'],\r\n  ['#0C6C94', '#00BAD5', '#00A7C7', '#0197B8', '#0088AC', '#23789F', '#2B6992', '#315C87', '#364E7C', '#32285C'],\r\n  [\r\n    '#0C6C94',\r\n    '#00BAD5',\r\n    '#00A7C7',\r\n    '#0197B8',\r\n    '#0088AC',\r\n    '#23789F',\r\n    '#2B6992',\r\n    '#315C87',\r\n    '#364E7C',\r\n    '#36436F',\r\n    '#32285C'\r\n  ],\r\n  [\r\n    '#0C6C94',\r\n    '#00BAD5',\r\n    '#00A7C7',\r\n    '#0197B8',\r\n    '#0088AC',\r\n    '#23789F',\r\n    '#2B6992',\r\n    '#315C87',\r\n    '#364E7C',\r\n    '#36436F',\r\n    '#333565',\r\n    '#32285C'\r\n  ]\r\n];\r\n\r\n// Cores que será utilizado texto preto\r\nexport const PoDefaultColorsTextBlack = ['#94DAE2', '#C9ECF0'];\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Enum que contém paleta de 12 cores.\r\n */\r\nexport enum PoColorPaletteEnum {\r\n  /** #0c9abe */\r\n  Color01 = 'color-01',\r\n\r\n  /** #2c85c8 */\r\n  Color02 = 'color-02',\r\n\r\n  /** #2c43c8 */\r\n  Color03 = 'color-03',\r\n\r\n  /** #5843c8 */\r\n  Color04 = 'color-04',\r\n\r\n  /** #ab43c8 */\r\n  Color05 = 'color-05',\r\n\r\n  /** #ab4391 */\r\n  Color06 = 'color-06',\r\n\r\n  /** #c64840 */\r\n  Color07 = 'color-07',\r\n\r\n  /** #ea9b3e */\r\n  Color08 = 'color-08',\r\n\r\n  /** #abc249 */\r\n  Color09 = 'color-09',\r\n\r\n  /** #56b96b */\r\n  Color10 = 'color-10',\r\n\r\n  /** #00b28e */\r\n  Color11 = 'color-11',\r\n\r\n  /** #06a6a5 */\r\n  Color12 = 'color-12'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\r\nimport { PoDefaultColors } from './po-colors.constant';\r\n\r\nconst poColorPalette = (<any>Object).values(PoColorPaletteEnum);\r\n\r\ninterface PoColorArgs {\r\n  color?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoColorService {\r\n  defaultColors: Array<string> = [];\r\n\r\n  /**\r\n   * Avalia a propriedade `color` na lista de items passada. Caso sim, trata se é decimal ou string `po-color`. Caso não haja, retorna a cor default.\r\n   *\r\n   * @param data\r\n   */\r\n  getColors<T extends PoColorArgs>(data: Array<T>): Array<T> {\r\n    this.verifyIfHasColorProperty<T>(data);\r\n\r\n    return data.map((dataItem, index) => {\r\n      if (dataItem.color) {\r\n        dataItem.color = this.verifyIfIsPoColorPalette(dataItem.color);\r\n\r\n        return dataItem;\r\n      }\r\n\r\n      const color = this.defaultColors[index];\r\n      return { ...dataItem, color };\r\n    });\r\n  }\r\n\r\n  private verifyIfHasColorProperty<T extends PoColorArgs>(data: Array<T>): void {\r\n    const hasColorProperty = data.every(dataItem => dataItem.hasOwnProperty('color') && dataItem.color?.length > 0);\r\n    if (!hasColorProperty) {\r\n      this.defaultColors = this.getDefaultColors(data.length);\r\n    }\r\n  }\r\n\r\n  private verifyIfIsPoColorPalette(color: string): string {\r\n    if (poColorPalette.includes(color)) {\r\n      return `po-${color}`;\r\n    }\r\n    return color;\r\n  }\r\n\r\n  private getDefaultColors(length: number): Array<string> {\r\n    if (length === 1) {\r\n      return PoDefaultColors[0];\r\n    }\r\n\r\n    const colorsLength = PoDefaultColors.length;\r\n\r\n    if (length > colorsLength) {\r\n      const quantityDuplicates = length / colorsLength;\r\n      let colors = PoDefaultColors[colorsLength - 1];\r\n\r\n      for (let i = 0; i <= quantityDuplicates; i++) {\r\n        colors = colors.concat(PoDefaultColors[colorsLength]);\r\n      }\r\n\r\n      return colors;\r\n    }\r\n\r\n    return PoDefaultColors[length - 1];\r\n  }\r\n}\r\n","import { EventEmitter, Input, Output, Directive, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { convertToInt, isTypeof } from '../../utils/util';\r\n\r\nimport { PoChartContainerSize } from './interfaces/po-chart-container-size.interface';\r\nimport { PoChartGaugeSerie } from './po-chart-types/po-chart-gauge/po-chart-gauge-series.interface';\r\nimport { PoChartType } from './enums/po-chart-type.enum';\r\nimport { PoChartOptions } from './interfaces/po-chart-options.interface';\r\nimport { PoChartSerie } from './interfaces/po-chart-serie.interface';\r\nimport { PoColorService } from '../../services/po-color/po-color.service';\r\n\r\nconst poChartDefaultHeight = 400;\r\nconst poChartMinHeight = 200;\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-chart` é um componente para renderização de dados através de gráficos, com isso facilitando a compreensão e tornando a\r\n * visualização destes dados mais agradável.\r\n *\r\n * Através de suas principais propriedades é possível definir atributos, tais como tipo de gráfico, altura, título, cores customizadas, opções para os eixos, entre outros.\r\n *\r\n * O componente permite utilizar em conjunto séries do tipo linha e coluna.\r\n *\r\n * Além disso, também é possível definir uma ação que será executada ao clicar em determinado elemento do gráfico\r\n * e outra que será executada ao passar o *mouse* sobre o elemento.\r\n *\r\n * #### Guia de uso para Gráficos\r\n *\r\n * > Veja nosso [guia de uso para gráficos](/guides/guide-charts) para auxiliar na construção do seu gráfico,\r\n * informando em qual caso utilizar, o que devemos evitar e boas práticas relacionada a cores.\r\n */\r\n@Directive()\r\nexport abstract class PoChartBaseComponent implements OnChanges {\r\n  /** Define o título do gráfico. */\r\n  @Input('p-title') title?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado quando o usuário clicar sobre um elemento do gráfico.\r\n   *\r\n   * O evento emitirá o seguinte parâmetro:\r\n   * - *donut* e *pie*: um objeto contendo a categoria e valor da série.\r\n   * - *area*, *line*, *column* e *bar*: um objeto contendo o nome da série, valor e categoria do eixo do gráfico.\r\n   */\r\n  @Output('p-series-click')\r\n  seriesClick = new EventEmitter<PoChartSerie | PoChartGaugeSerie>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado quando o usuário passar o *mouse* sobre um elemento do gráfico.\r\n   *\r\n   * O evento emitirá o seguinte parâmetro de acordo com o tipo de gráfico:\r\n   * - *donut* e *pie*: um objeto contendo a categoria e valor da série.\r\n   * - *area*, *line*, *column* e *bar*: um objeto contendo a categoria, valor da série e categoria do eixo do gráfico.\r\n   */\r\n  @Output('p-series-hover')\r\n  seriesHover = new EventEmitter<PoChartSerie | PoChartGaugeSerie>();\r\n\r\n  // manipulação das séries tratadas internamente para preservar 'p-series';\r\n  chartSeries: Array<PoChartSerie | PoChartGaugeSerie> = [];\r\n  chartType: PoChartType;\r\n  svgContainerSize: PoChartContainerSize;\r\n\r\n  private _options: PoChartOptions;\r\n  private _categories: Array<string>;\r\n  private _height: number;\r\n  private _series: Array<PoChartSerie> | PoChartGaugeSerie;\r\n  private _type: PoChartType;\r\n\r\n  private defaultType: PoChartType;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura do gráfico.\r\n   *\r\n   * > O valor mínimo aceito nesta propriedade é 200.\r\n   *\r\n   * @default `400px`\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    const intValue = convertToInt(value);\r\n    let height: number;\r\n\r\n    if (isTypeof(value, 'number')) {\r\n      height = intValue <= poChartMinHeight ? poChartMinHeight : intValue;\r\n    } else {\r\n      height = this.setDefaultHeight();\r\n    }\r\n\r\n    this._height = height;\r\n\r\n    this.getSvgContainerSize();\r\n    this.rebuildComponentRef();\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height || this.setDefaultHeight();\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tipo de gráfico.\r\n   *\r\n   * É possível também combinar gráficos dos tipos linha e coluna. Para isso, opte pela declaração de `type` conforme a interface `PoChartSerie`.\r\n   *\r\n   * > Note que, se houver declaração de tipo de gráfico tanto em `p-type` quanto em `PochartSerie.type`, o valor `{ type }` da primeira série anulará o valor definido em `p-type`.\r\n   *\r\n   * Se não passado valor, o padrão será relativo à primeira série passada em `p-series`:\r\n   * - Se `p-series = [{ data: [1,2,3] }]`: será `PoChartType.Column`.\r\n   * - Se `p-series = [{ data: 1 }]`: será `PoChartType.Pie`.\r\n   *\r\n   * > Veja os valores válidos no *enum* `PoChartType`.\r\n   */\r\n  @Input('p-type') set type(value: PoChartType) {\r\n    // O Valor default definido em `p-series` de acordo com a primeira série passada.\r\n    this._type = (<any>Object).values(PoChartType).includes(value) ? value : undefined;\r\n\r\n    this.rebuildComponentRef();\r\n  }\r\n\r\n  get type(): PoChartType {\r\n    return this._type;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Define os elementos do gráfico que serão criados dinamicamente.\r\n   */\r\n  @Input('p-series') set series(value: Array<PoChartSerie> | PoChartGaugeSerie) {\r\n    this._series = value || [];\r\n\r\n    if (Array.isArray(this._series) && this._series.length) {\r\n      this.setTypeDefault(this._series[0]);\r\n    } else {\r\n      this.transformObjectToArrayObject(this.series as PoChartGaugeSerie);\r\n      this.rebuildComponentRef();\r\n    }\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define os nomes das categorias que serão plotadas no eixo X do gráfico caso seja do tipo `bar`, ou então nos eixos Y do grid de gráficos dos tipos `area`, `columnn` e `line`.\r\n   *\r\n   * > Gráficos do tipo `bar` dimensionam a área do gráfico de acordo com a largura do maior texto de categorias. No entanto, é uma boa prática optar por palavras curtas para que a leitura do gráfico não seja prejudicada.\r\n   *\r\n   * > Caso não seja especificado um valor para a categoria, será plotado um hífen na categoria referente a cada série.\r\n   */\r\n  @Input('p-categories') set categories(value: Array<string>) {\r\n    if (Array.isArray(value)) {\r\n      this._categories = value;\r\n    }\r\n  }\r\n\r\n  get categories() {\r\n    return this._categories;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as configurações usadas no `po-chart`.\r\n   *\r\n   * É possível, por exemplo, definir as configurações de exibição das legendas,\r\n   * configurar os eixos(*axis*) para os gráficos dos tipos `area`, `line`, `column` e `bar` da seguinte forma:\r\n   *\r\n   * ```\r\n   *  chartOptions: PoChartOptions = {\r\n   *    legend: true,\r\n   *    axis: {\r\n   *      minRange: 0,\r\n   *      maxRange: 100,\r\n   *      gridLines: 5,\r\n   *    },\r\n   *  };\r\n   * ```\r\n   */\r\n  @Input('p-options') set options(value: PoChartOptions) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._options = value;\r\n\r\n      if (this._options.hasOwnProperty('legend') && typeof this._options.legend === 'boolean') {\r\n        this.getSvgContainerSize();\r\n      }\r\n    }\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  constructor(protected colorService: PoColorService) {}\r\n\r\n  get isTypeCircular() {\r\n    return this.defaultType === PoChartType.Pie || this.defaultType === PoChartType.Donut;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const isArrayOfseries = Array.isArray(this.series) && this.series.length > 0;\r\n\r\n    if (\r\n      (changes.series && isArrayOfseries) ||\r\n      (changes.type && isArrayOfseries) ||\r\n      (changes.categories && isArrayOfseries)\r\n    ) {\r\n      this.validateSerieAndAddType(this.series as Array<PoChartSerie>);\r\n    }\r\n\r\n    if ((changes.type && !this.isTypeCircular) || (changes.categories && !this.isTypeCircular)) {\r\n      this.svgContainerSize = {\r\n        ...this.svgContainerSize,\r\n        axisXLabelWidth: this.calculateAxisXLabelArea()\r\n      };\r\n    }\r\n  }\r\n\r\n  onSeriesClick(event: any): void {\r\n    this.seriesClick.emit(event);\r\n  }\r\n\r\n  onSeriesHover(event: any): void {\r\n    this.seriesHover.emit(event);\r\n  }\r\n\r\n  private setDefaultHeight() {\r\n    return this.type === PoChartType.Gauge ? poChartMinHeight : poChartDefaultHeight;\r\n  }\r\n\r\n  private transformObjectToArrayObject(serie: PoChartGaugeSerie) {\r\n    this.chartSeries = typeof serie === 'object' && Object.keys(serie).length ? [{ ...serie }] : [];\r\n  }\r\n\r\n  private setTypeDefault(serie: PoChartSerie) {\r\n    const data = serie.data ?? serie.value;\r\n    const serieType = (<any>Object).values(PoChartType).includes(serie.type) ? serie.type : undefined;\r\n\r\n    this.defaultType = serieType ? serieType : Array.isArray(data) ? PoChartType.Column : PoChartType.Pie;\r\n  }\r\n\r\n  private validateSerieAndAddType(series: Array<PoChartSerie>): void {\r\n    const filteredSeries = series.filter(serie =>\r\n      this.isTypeCircular\r\n        ? typeof serie.data === 'number' || typeof serie.value === 'number'\r\n        : Array.isArray(serie.data)\r\n    );\r\n\r\n    this.chartSeries = this.appendType(this.appendColors(filteredSeries));\r\n  }\r\n\r\n  private appendColors(series: Array<PoChartSerie>) {\r\n    return this.colorService.getColors<PoChartSerie>(series);\r\n  }\r\n\r\n  private appendType(series: Array<PoChartSerie>) {\r\n    return series.map((serie, index) => {\r\n      if (index === 0) {\r\n        this.chartType = (<any>Object).values(PoChartType).includes(serie.type)\r\n          ? serie.type\r\n          : this.type || this.defaultType;\r\n      }\r\n\r\n      return { ...serie, type: serie.type || this.chartType };\r\n    });\r\n  }\r\n\r\n  abstract rebuildComponentRef(): void;\r\n\r\n  // válido para gráficos do tipo circular e que será refatorado.\r\n  protected abstract getSvgContainerSize(): void;\r\n  protected abstract calculateAxisXLabelArea(): number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoChartPadding } from '../helpers/po-chart-default-values.constant';\r\nimport { PoChartContainerSize } from '../interfaces/po-chart-container-size.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoChartSvgContainerService {\r\n  constructor() {}\r\n\r\n  /**\r\n   * Retorna um objeto do tipo PoChartContainerSize contendo as dimensões necessárias para plotagem do SVG.\r\n   *\r\n   * @param chartHeight\r\n   * @param chartWrapperWidth\r\n   * @param chartHeaderHeight\r\n   * @param chartLegendHeight\r\n   */\r\n  calculateSVGContainerMeasurements(\r\n    chartHeight: number = 0,\r\n    chartWrapperWidth: number = 0,\r\n    chartHeaderHeight: number = 0,\r\n    chartLegendHeight: number = 0\r\n  ): PoChartContainerSize {\r\n    const svgWidth = this.svgWidth(chartWrapperWidth);\r\n    const centerX = this.center(chartWrapperWidth);\r\n    const svgHeight = this.svgHeight(chartHeight, chartHeaderHeight, chartLegendHeight);\r\n    const centerY = this.center(svgHeight);\r\n    const svgPlottingAreaHeight = this.svgPlottingAreaHeight(svgHeight);\r\n\r\n    return {\r\n      svgWidth,\r\n      svgHeight,\r\n      centerX,\r\n      centerY,\r\n      svgPlottingAreaHeight\r\n    };\r\n  }\r\n\r\n  // Largura do container.\r\n  private svgWidth(chartWrapperWidth: number) {\r\n    const wrapperWidth = chartWrapperWidth - PoChartPadding * 2;\r\n\r\n    return wrapperWidth > 0 ? wrapperWidth : 0;\r\n  }\r\n\r\n  // O centro do container. Usado para gráficos do tipo circular.\r\n  private center(dimension: number) {\r\n    return dimension / 2;\r\n  }\r\n\r\n  // Altura do container\r\n  private svgHeight(chartHeight: number, chartHeaderHeight: number, chartLegendHeight: number) {\r\n    const subtractedHeights = chartHeight - chartHeaderHeight - chartLegendHeight - PoChartPadding * 2;\r\n\r\n    return subtractedHeights <= 0 ? 0 : subtractedHeights;\r\n  }\r\n\r\n  /**\r\n   * Altura da área de plotagem.\r\n   * Subtrai a altura do container SVG pelo padding superior + área para overflow de labels do eixo X.\r\n   */\r\n  private svgPlottingAreaHeight(svgHeight: number) {\r\n    return svgHeight - PoChartPadding - 8;\r\n  }\r\n}\r\n","const poChartAnimationDurationTime = 1500;\r\n\r\nexport const poChartAngleStepInterval = (Math.PI * 2) / Math.floor(poChartAnimationDurationTime / 60);\r\nexport const poChartCompleteCircle = 0.0001;\r\nexport const poChartGaugeStartAngle = -Math.PI;\r\nexport const poChartPadding: number = 24;\r\nexport const poChartStartAngle = -Math.PI / 2;\r\n\r\n// tamanho da largura da serie proporcional ao grafico do tipo Donut, o valor 0.27 fica proximo de 32px\r\nexport const poChartDonutSerieWidth = 0.27;\r\n\r\n// tamanho da largura da serie proporcional ao grafico do tipo Gauge, o valor 0.04 fica proximo de 8px\r\nexport const poChartGaugeSerieWidth = 0.06;\r\n","import { ElementRef, ViewChild, Directive } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { PoChartGaugeSerie } from './po-chart-gauge/po-chart-gauge-series.interface';\r\nimport { PoChartType } from '../enums/po-chart-type.enum';\r\n\r\nconst Padding: number = 24;\r\n\r\n/* eslint-disable @angular-eslint/directive-class-suffix */\r\n@Directive()\r\nexport abstract class PoChartDynamicTypeComponent {\r\n  @ViewChild('chartBody', { static: true }) chartBody: ElementRef;\r\n\r\n  @ViewChild('svgContainer', { static: true }) svgContainer: ElementRef;\r\n\r\n  centerX: number;\r\n  chartElementCategory: any;\r\n  chartElementDescription: any;\r\n  chartElementValue: any;\r\n  chartHeader: number;\r\n  chartLegend: number;\r\n  chartWrapper: number;\r\n  colors: Array<string>;\r\n  height: number;\r\n  innerRadius: number = 0;\r\n  onSerieClick: Subject<PoChartGaugeSerie> = new Subject();\r\n  onSerieHover: Subject<PoChartGaugeSerie> = new Subject();\r\n  svgElement: HTMLObjectElement;\r\n  svgHeight: number;\r\n  target: HTMLInputElement & EventTarget;\r\n  tooltipElement: HTMLObjectElement;\r\n  tooltipText: string;\r\n  totalValue: number;\r\n  type: PoChartType;\r\n\r\n  protected windowResizeListener: () => void;\r\n  protected windowScrollListener: () => void;\r\n  // eslint-disable-next-line\r\n  protected _series: Array<PoChartGaugeSerie> = [];\r\n\r\n  get isChartGaugeType(): boolean {\r\n    return this.type === PoChartType.Gauge;\r\n  }\r\n\r\n  calculateSVGContainerDimensions(chartWrapperElement: number, chartHeaderElement: number, chartLegendElement: number) {\r\n    const svgContainerHeightCalc = this.height - chartHeaderElement - chartLegendElement - Padding * 2;\r\n\r\n    this.svgHeight = svgContainerHeightCalc <= 0 ? 0 : svgContainerHeightCalc;\r\n    this.centerX = chartWrapperElement / 2;\r\n  }\r\n\r\n  calculateTotalValue() {\r\n    this.totalValue =\r\n      this.type === PoChartType.Gauge\r\n        ? 100\r\n        : this.series.reduce((previousValue, serie) => previousValue + (serie.data ? serie.data : serie.value), 0);\r\n  }\r\n\r\n  set series(value: Array<any>) {\r\n    this._series = this.getSeriesWithValue(value);\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  protected getSeriesWithValue(value) {\r\n    return value;\r\n  }\r\n}\r\n","/* eslint-disable */\r\n\r\nimport { Directive, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { convertNumberToDecimal } from '../../../../utils/util';\r\n\r\nimport {\r\n  poChartAngleStepInterval,\r\n  poChartCompleteCircle,\r\n  poChartDonutSerieWidth,\r\n  poChartGaugeSerieWidth,\r\n  poChartStartAngle\r\n} from './po-chart-circular.constant';\r\nimport { PoDefaultColorsTextBlack } from '../../../../services/po-color/po-colors.constant';\r\n\r\nimport { PoChartDynamicTypeComponent } from '../po-chart-dynamic-type.component';\r\nimport { PoChartGaugeSerie } from '../po-chart-gauge/po-chart-gauge-series.interface';\r\nimport { PoChartType } from '../../enums/po-chart-type.enum';\r\n\r\nconst poChartBlackColor = '#000000';\r\nconst poChartWhiteColor = '#ffffff';\r\n\r\n@Directive()\r\nexport class PoChartCircular extends PoChartDynamicTypeComponent implements OnDestroy, OnInit {\r\n  chartItemStartAngle = poChartStartAngle;\r\n  windowResizeEmitter: Subject<any> = new Subject();\r\n\r\n  private animationRunning: boolean;\r\n  private chartItemEndAngle: number;\r\n  private chartItemsEndAngleList: Array<number> = [];\r\n  private svgPathElementsList: Array<string> = [];\r\n  private svgTextElementsList: Array<string> = [];\r\n\r\n  constructor(protected el: ElementRef, private ngZone: NgZone, private renderer: Renderer2) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeWindowResizeListener();\r\n    this.removeWindowScrollListener();\r\n    this.animationRunning = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chartInitSetup();\r\n    this.setEventListeners();\r\n  }\r\n\r\n  removeTooltip() {\r\n    if (this.tooltipElement) {\r\n      this.renderer.addClass(this.tooltipElement, 'po-invisible');\r\n    }\r\n  }\r\n\r\n  protected drawPath(path, chartItemStartAngle, chartItemEndAngle) {\r\n    const sinAlpha = Math.sin(chartItemStartAngle);\r\n    const cosAlpha = Math.cos(chartItemStartAngle);\r\n\r\n    const sinBeta = Math.sin(chartItemEndAngle);\r\n    const cosBeta = Math.cos(chartItemEndAngle);\r\n\r\n    const startX = this.centerX + cosAlpha * this.centerX;\r\n    const startY = this.centerX + sinAlpha * this.centerX;\r\n\r\n    const endX = this.centerX + cosBeta * this.centerX;\r\n    const endY = this.centerX + sinBeta * this.centerX;\r\n\r\n    const startInnerX = this.centerX + cosAlpha * this.innerRadius;\r\n    const startInnerY = this.centerX + sinAlpha * this.innerRadius;\r\n\r\n    const endInnerX = this.centerX + cosBeta * this.innerRadius;\r\n    const endInnerY = this.centerX + sinBeta * this.innerRadius;\r\n\r\n    const halfGaugeCoordinates = [\r\n      'M',\r\n      startX,\r\n      startY,\r\n      'A',\r\n      this.centerX,\r\n      this.centerX,\r\n      0,\r\n      '0,1',\r\n      endX,\r\n      endY,\r\n      'A',\r\n      1,\r\n      1,\r\n      0,\r\n      '0,1',\r\n      endInnerX,\r\n      endInnerY,\r\n      'A',\r\n      this.innerRadius,\r\n      this.innerRadius,\r\n      0,\r\n      '0,0',\r\n      startInnerX,\r\n      startInnerY,\r\n      'A',\r\n      1,\r\n      1,\r\n      0,\r\n      '0,1',\r\n      startX,\r\n      startY,\r\n      'Z'\r\n    ].join(' ');\r\n\r\n    return path.setAttribute('d', halfGaugeCoordinates);\r\n  }\r\n\r\n  protected getSeriesWithValue(series: Array<PoChartGaugeSerie>) {\r\n    const newSeries = [];\r\n\r\n    series.forEach((serie: any, index) => {\r\n      const value = serie.data ?? serie.value;\r\n      if (value > 0) {\r\n        newSeries.push({ ...serie, color: this.colors[index] });\r\n      }\r\n    });\r\n\r\n    return newSeries;\r\n  }\r\n\r\n  private animationSetup() {\r\n    this.chartItemEndAngle = this.chartItemsEndAngleList[0];\r\n    this.animationRunning = true;\r\n    this.drawPathInit();\r\n  }\r\n\r\n  private appendGaugeBackgroundPathElement(svgPathsWrapper: any) {\r\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\r\n    this.renderer.setAttribute(svgPath, 'class', 'po-chart-gauge-base-path');\r\n    svgPathsWrapper.appendChild(svgPath);\r\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\r\n  }\r\n\r\n  private calculateAngleRadians() {\r\n    this.series.forEach((serie, index) => {\r\n      const data = serie.data ?? serie.value;\r\n      this.chartItemsEndAngleList[index] = this.calculateEndAngle(data, this.totalValue);\r\n    });\r\n  }\r\n\r\n  private calculateCurrentEndAngle(angleCurrentPosition: number) {\r\n    const isSerieDrawCompleted =\r\n      this.chartItemStartAngle + angleCurrentPosition > this.chartItemStartAngle + this.chartItemEndAngle;\r\n\r\n    if (isSerieDrawCompleted) {\r\n      return this.chartItemStartAngle + this.chartItemEndAngle - poChartCompleteCircle;\r\n    } else {\r\n      return this.chartItemStartAngle + angleCurrentPosition;\r\n    }\r\n  }\r\n\r\n  private calculateEndAngle(value: number, totalValue: number): number {\r\n    const endAngle = (value / totalValue) * (Math.PI * 2);\r\n\r\n    return this.isChartGaugeType ? endAngle / 2 : endAngle;\r\n  }\r\n\r\n  private calculateSVGDimensions() {\r\n    this.calculateSVGContainerDimensions(this.chartWrapper, this.chartHeader, this.chartLegend);\r\n\r\n    this.innerRadius = this.setInnerRadius(this.type);\r\n  }\r\n\r\n  private changeTooltipPosition(event: MouseEvent) {\r\n    if (this.tooltipElement && this.tooltipElement.classList.contains('po-invisible')) {\r\n      this.showTooltip();\r\n    }\r\n\r\n    const tooltipPositions = this.setTooltipPositions(event);\r\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\r\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\r\n  }\r\n\r\n  private chartInitSetup() {\r\n    this.calculateSVGDimensions();\r\n    this.calculateTotalValue();\r\n    this.calculateAngleRadians();\r\n    this.createSVGElements();\r\n    this.animationSetup();\r\n  }\r\n\r\n  private checkingIfScrollsWithPoPage() {\r\n    const poPageContent = document.getElementsByClassName('po-page-content');\r\n\r\n    return poPageContent.length ? poPageContent[0] : window;\r\n  }\r\n\r\n  private createPath(serie: PoChartGaugeSerie, svgPathsWrapper: any) {\r\n    const svgPath = this.renderer.createElement('svg:path', 'svg');\r\n\r\n    this.renderer.setAttribute(svgPath, 'class', 'po-path-item');\r\n    this.renderer.setAttribute(svgPath, 'fill', serie.color);\r\n\r\n    this.setElementAttributes(svgPath, serie);\r\n\r\n    svgPathsWrapper.appendChild(svgPath);\r\n\r\n    this.renderer.appendChild(this.svgElement, svgPathsWrapper);\r\n\r\n    this.svgPathElementsList.push(svgPath);\r\n  }\r\n\r\n  private createPaths() {\r\n    const svgPathsWrapper = this.renderer.createElement('svg:g', 'svg');\r\n\r\n    if (this.isChartGaugeType) {\r\n      this.appendGaugeBackgroundPathElement(svgPathsWrapper);\r\n      // Tratamento para evitar que o path desenhe os arcos referentes ao border radius do path.\r\n      if (this.isSerieValueEqualZero()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.series.forEach(serie => this.createPath(serie, svgPathsWrapper));\r\n  }\r\n\r\n  private createText(serie: PoChartGaugeSerie) {\r\n    const data = serie.value;\r\n\r\n    const svgG = this.renderer.createElement('svg:g', 'svg');\r\n    const svgText = this.renderer.createElement('svg:text', 'svg');\r\n\r\n    const fontSize = this.getFontSize();\r\n    const textColor = this.getTextColor(serie.color);\r\n\r\n    svgText.textContent = this.getPercentValue(data, this.totalValue) + '%';\r\n\r\n    this.renderer.setAttribute(svgText, 'class', 'po-path-item');\r\n    this.renderer.setAttribute(svgText, 'fill', textColor);\r\n    this.renderer.setAttribute(svgText, 'font-size', fontSize);\r\n    this.renderer.setAttribute(svgText, 'fill-opacity', '0');\r\n\r\n    this.setElementAttributes(svgText, serie);\r\n\r\n    this.renderer.appendChild(svgG, svgText);\r\n\r\n    this.renderer.appendChild(this.svgElement, svgG);\r\n    this.svgTextElementsList.push(svgText);\r\n  }\r\n\r\n  private createTexts() {\r\n    if (this.type === PoChartType.Donut) {\r\n      this.series.forEach(serie => this.createText(serie));\r\n    }\r\n  }\r\n\r\n  private createSVGElements() {\r\n    const viewBoxHeight = this.isChartGaugeType\r\n      ? this.centerX + this.centerX * poChartGaugeSerieWidth\r\n      : this.chartWrapper;\r\n    const preserveAspectRatio = this.isChartGaugeType ? 'xMidYMax' : 'xMidYMin';\r\n\r\n    this.svgElement = this.renderer.createElement('svg:svg', 'svg');\r\n\r\n    this.renderer.setAttribute(this.svgElement, 'viewBox', `0 0 ${this.chartWrapper} ${viewBoxHeight}`);\r\n    this.renderer.setAttribute(this.svgElement, 'preserveAspectRatio', `${preserveAspectRatio} meet`);\r\n    this.renderer.setAttribute(this.svgElement, 'class', 'po-chart-svg-element');\r\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\r\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\r\n\r\n    this.svgContainer.nativeElement.appendChild(this.svgElement);\r\n\r\n    this.createPaths();\r\n    this.createTexts();\r\n  }\r\n\r\n  private drawPathInit() {\r\n    if (!this.animationRunning) {\r\n      return;\r\n    } else {\r\n      this.ngZone.runOutsideAngular(() => this.drawSeries());\r\n    }\r\n  }\r\n\r\n  private drawSeries(currentSerieIndex: number = 0, angleCurrentPosition: number = 0) {\r\n    const isFinishedDrawingCurrentSeries = angleCurrentPosition > this.chartItemEndAngle;\r\n    const isFinishedDrawingAllSeries = currentSerieIndex === this.svgPathElementsList.length;\r\n\r\n    if (isFinishedDrawingAllSeries) {\r\n      return;\r\n    }\r\n\r\n    if (isFinishedDrawingCurrentSeries) {\r\n      this.chartItemStartAngle = this.chartItemStartAngle + this.chartItemEndAngle;\r\n      currentSerieIndex++;\r\n      this.chartItemEndAngle = this.chartItemsEndAngleList[currentSerieIndex];\r\n      angleCurrentPosition = 0;\r\n    } else {\r\n      angleCurrentPosition += poChartAngleStepInterval;\r\n\r\n      this.drawPath(\r\n        this.svgPathElementsList[currentSerieIndex],\r\n        this.chartItemStartAngle,\r\n        this.calculateCurrentEndAngle(angleCurrentPosition)\r\n      );\r\n\r\n      this.setTextProperties(\r\n        this.svgTextElementsList[currentSerieIndex],\r\n        this.chartItemStartAngle,\r\n        this.calculateCurrentEndAngle(angleCurrentPosition)\r\n      );\r\n    }\r\n\r\n    window.requestAnimationFrame(this.drawSeries.bind(this, currentSerieIndex, angleCurrentPosition));\r\n  }\r\n\r\n  private emitEventOnEnter(event: PoChartGaugeSerie) {\r\n    this.onSerieHover.next(event);\r\n  }\r\n\r\n  private getFontSize() {\r\n    const fontSizePorcent = 0.04;\r\n\r\n    const fontSize = fontSizePorcent * this.chartWrapper;\r\n\r\n    return `${fontSize.toFixed(0)}px`;\r\n  }\r\n\r\n  private getPercentValue(value: number, totalValue: number) {\r\n    const percentValue = (value / totalValue) * 100;\r\n\r\n    const floatPercentValue = convertNumberToDecimal(percentValue, 2);\r\n\r\n    return String(floatPercentValue).replace('.', ',');\r\n  }\r\n\r\n  private getTextColor(color: string) {\r\n    if (PoDefaultColorsTextBlack.includes(color)) {\r\n      return poChartBlackColor;\r\n    }\r\n\r\n    return poChartWhiteColor;\r\n  }\r\n\r\n  private getTooltipValue(value: number) {\r\n    if (this.type === PoChartType.Pie) {\r\n      return value.toString();\r\n    }\r\n\r\n    return this.getPercentValue(value, this.totalValue) + '%';\r\n  }\r\n\r\n  private isSerieValueEqualZero(): boolean {\r\n    return this.series.length && this.series[0].value === 0;\r\n  }\r\n\r\n  private onMouseClick() {\r\n    let serieOnClick: PoChartGaugeSerie;\r\n\r\n    const { color, ...serie } = this.series[0];\r\n    serieOnClick = serie;\r\n\r\n    this.onSerieClick.next(serieOnClick);\r\n  }\r\n\r\n  private onMouseEnter(event) {\r\n    let serieOnEnter: PoChartGaugeSerie;\r\n\r\n    const { color, ...serie } = this.series[0];\r\n\r\n    this.chartElementDescription = event.target.getAttributeNS(null, 'data-tooltip-category');\r\n    serieOnEnter = serie;\r\n\r\n    this.emitEventOnEnter(serieOnEnter);\r\n  }\r\n\r\n  private onWindowResize() {\r\n    this.calculateSVGDimensions();\r\n    this.renderer.setAttribute(this.svgElement, 'width', `${this.centerX}`);\r\n    this.renderer.setAttribute(this.svgElement, 'height', `${this.svgHeight}`);\r\n    this.windowResizeEmitter.next();\r\n  }\r\n\r\n  private removeWindowResizeListener() {\r\n    if (this.windowResizeListener) {\r\n      this.windowResizeListener();\r\n    }\r\n  }\r\n\r\n  private removeWindowScrollListener() {\r\n    if (this.windowScrollListener) {\r\n      this.windowScrollListener();\r\n    }\r\n  }\r\n\r\n  private setEventListeners() {\r\n    let chartSeries: Array<string> = this.el.nativeElement.querySelectorAll('.po-path-item');\r\n    chartSeries = Array.from(chartSeries);\r\n    chartSeries.forEach(serie => {\r\n      this.renderer.listen(serie, 'click', this.onMouseClick.bind(this));\r\n      this.renderer.listen(serie, 'mouseenter', this.onMouseEnter.bind(this));\r\n\r\n      if (!this.isChartGaugeType) {\r\n        this.renderer.listen(serie, 'mousemove', this.changeTooltipPosition.bind(this));\r\n        this.renderer.listen(serie, 'mouseleave', this.removeTooltip.bind(this));\r\n      }\r\n    });\r\n\r\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.onWindowResize.bind(this));\r\n    this.windowScrollListener = this.renderer.listen(\r\n      this.checkingIfScrollsWithPoPage(),\r\n      'scroll',\r\n      this.removeTooltip.bind(this)\r\n    );\r\n  }\r\n\r\n  private setInnerRadius(type: PoChartType) {\r\n    let serieWidth;\r\n\r\n    switch (type) {\r\n      case PoChartType.Donut: {\r\n        serieWidth = poChartDonutSerieWidth;\r\n\r\n        break;\r\n      }\r\n      case PoChartType.Gauge: {\r\n        serieWidth = poChartGaugeSerieWidth;\r\n        break;\r\n      }\r\n      case PoChartType.Pie: {\r\n        return 0;\r\n      }\r\n    }\r\n\r\n    return this.centerX - this.centerX * serieWidth;\r\n  }\r\n\r\n  private setTextProperties(text, startAngle: number, endAngle: number) {\r\n    // necessário text.getClientRects().length para contornar erro de console causado no Firefox\r\n    if (this.type === PoChartType.Donut && text.getClientRects().length) {\r\n      // utilizado para recuperar o angulo do meio, entre o inicio e fim para centralizar o texto\r\n      const centerAngle = (startAngle + endAngle) / 2;\r\n      const textBox = text.getBBox();\r\n\r\n      const halfTextWidth = textBox.width / 2;\r\n      const halfTextHeight = textBox.height / 2;\r\n\r\n      // radius interno (circulo branco) + a metade da diferença entre tamanho do centro e radius interno\r\n      const radius = this.innerRadius + (this.centerX - this.innerRadius) / 2;\r\n\r\n      const xCoordinate = radius * Math.cos(centerAngle) + this.centerX - halfTextWidth;\r\n      const yCoordinate = radius * Math.sin(centerAngle) + this.centerX + halfTextHeight / 2;\r\n      text.setAttribute('x', xCoordinate);\r\n      text.setAttribute('y', yCoordinate);\r\n      text.setAttribute('fill-opacity', '1');\r\n    }\r\n  }\r\n\r\n  private setTooltipPositions(event: MouseEvent) {\r\n    const displacement: number = 8;\r\n\r\n    return {\r\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\r\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\r\n    };\r\n  }\r\n\r\n  private setElementAttributes(svgElement, serie) {\r\n    const { tooltip } = serie;\r\n    const data = serie.data ?? serie.value;\r\n    const label = serie.label ?? (serie.description || serie.category);\r\n\r\n    this.renderer.setAttribute(svgElement, 'data-tooltip-value', `${data}`);\r\n\r\n    if (this.isChartGaugeType) {\r\n      this.renderer.setAttribute(svgElement, 'data-tooltip-description', label);\r\n    } else {\r\n      const tooltipValue = this.getTooltipValue(data);\r\n\r\n      this.renderer.setAttribute(svgElement, 'data-tooltip-category', label);\r\n      this.renderer.setAttribute(svgElement, 'data-tooltip-text', tooltip || `${label}: ${tooltipValue}`);\r\n    }\r\n  }\r\n\r\n  private showTooltip() {\r\n    this.renderer.removeClass(this.tooltipElement, 'po-invisible');\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { convertNumberToDecimal } from '../../../../../utils/util';\r\n\r\nimport { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';\r\nimport { poChartGaugeSerieWidth } from '../../po-chart-circular/po-chart-circular.constant';\r\n\r\n@Component({\r\n  selector: 'po-chart-gauge-text-content',\r\n  templateUrl: './po-chart-gauge-text-content.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoChartGaugeTextContentComponent implements AfterViewInit {\r\n  @ViewChild('description', { read: ElementRef }) descriptionElement: ElementRef;\r\n\r\n  serieValueConverted: string;\r\n  tooltip: string;\r\n\r\n  private _gaugeWidth: number;\r\n  private _serie: PoChartGaugeSerie;\r\n\r\n  @Input('p-gauge-width') set gaugeWidth(value: number) {\r\n    this._gaugeWidth = value;\r\n\r\n    this.checkTextDescriptionSize();\r\n  }\r\n\r\n  get gaugeWidth() {\r\n    return this._gaugeWidth;\r\n  }\r\n\r\n  @Input('p-serie') set serie(serie: PoChartGaugeSerie) {\r\n    if (serie) {\r\n      this.serieValueConverted = this.convertValueInPercentFormat(serie.value);\r\n      this._serie = { ...serie };\r\n    } else {\r\n      this._serie = undefined;\r\n    }\r\n  }\r\n\r\n  get serie() {\r\n    return this._serie;\r\n  }\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef) {}\r\n\r\n  get hasSerieDescription() {\r\n    return this.serie && this.serie.description;\r\n  }\r\n\r\n  get hasSerieValue() {\r\n    return this.serie && this.serie.value >= 0;\r\n  }\r\n\r\n  get maxDescriptionWidth() {\r\n    // Diferença contemplando a largura do path base e padding interno.\r\n    const subtractionArea = this.gaugeWidth * poChartGaugeSerieWidth * 2 * 2;\r\n    const descriptionWidth = this.gaugeWidth - subtractionArea;\r\n\r\n    return { 'max-width': `${descriptionWidth}px` };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.checkTextDescriptionSize();\r\n  }\r\n\r\n  private checkTextDescriptionSize() {\r\n    if (this.descriptionElement) {\r\n      // tooltip necessário para contornar comportamento inesperado do tooltip.\r\n      setTimeout(() => {\r\n        this.tooltip = this.isEllipsisActive();\r\n      });\r\n      this.changeDetection.detectChanges();\r\n    }\r\n  }\r\n\r\n  private convertValueInPercentFormat(value: number): string {\r\n    const decimalValue = String(convertNumberToDecimal(value, 1)).replace('.', ',');\r\n    return `${decimalValue}%`;\r\n  }\r\n\r\n  private isEllipsisActive() {\r\n    const isExceededWidth =\r\n      this.descriptionElement.nativeElement.offsetWidth < this.descriptionElement.nativeElement.scrollWidth;\r\n\r\n    return isExceededWidth ? this.serie.description : undefined;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ElementRef,\r\n  NgZone,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { PoChartCircular } from '../po-chart-circular/po-chart-circular';\r\nimport { PoChartGaugeSerie } from './po-chart-gauge-series.interface';\r\nimport { poChartGaugeStartAngle } from '../po-chart-circular/po-chart-circular.constant';\r\nimport { PoChartGaugeTextContentComponent } from './po-chart-gauge-text-content/po-chart-gauge-text-content.component';\r\n\r\n@Component({\r\n  selector: 'po-chart-gauge',\r\n  templateUrl: '../po-chart-dynamic-type.component.html'\r\n})\r\nexport class PoChartGaugeComponent extends PoChartCircular implements AfterViewInit {\r\n  @ViewChild('svgContainer', { static: true, read: ViewContainerRef }) svgContainerRef: ViewContainerRef;\r\n\r\n  chartItemStartAngle: number = poChartGaugeStartAngle;\r\n\r\n  protected _series: Array<PoChartGaugeSerie> = [];\r\n\r\n  set series(series: Array<PoChartGaugeSerie>) {\r\n    this._series = this.getGaugeSerie(series);\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  constructor(\r\n    private changeDetection: ChangeDetectorRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    el: ElementRef,\r\n    ngZone: NgZone,\r\n    renderer: Renderer2\r\n  ) {\r\n    super(el, ngZone, renderer);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.drawBasePath();\r\n    this.createComponent();\r\n  }\r\n\r\n  private createComponent() {\r\n    const factory = this.componentFactoryResolver.resolveComponentFactory(PoChartGaugeTextContentComponent);\r\n\r\n    const componentRef = this.svgContainerRef.createComponent(factory);\r\n    const instance = componentRef.instance;\r\n\r\n    instance.serie = this.series.length && this.series[0];\r\n    instance.gaugeWidth = this.getGaugeBaseWidth();\r\n\r\n    this.resizeListenerSubscription(instance);\r\n  }\r\n\r\n  private checkGaugeValueLimits(value: number) {\r\n    if (value <= 0) {\r\n      return 0;\r\n    } else if (value >= 100) {\r\n      return 100;\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  private drawBasePath() {\r\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\r\n\r\n    this.drawPath(basePath, this.chartItemStartAngle, 0);\r\n  }\r\n\r\n  private getGaugeBaseWidth() {\r\n    const basePath = this.el.nativeElement.querySelector('.po-chart-gauge-base-path');\r\n\r\n    if (basePath) {\r\n      return basePath.getBoundingClientRect().width;\r\n    }\r\n  }\r\n\r\n  private getGaugeSerie(series: Array<PoChartGaugeSerie> = []) {\r\n    const [serie] = series;\r\n\r\n    if (serie && typeof serie === 'object') {\r\n      return [\r\n        {\r\n          ...serie,\r\n          color: this.colors[0],\r\n          value: this.checkGaugeValueLimits(serie.value)\r\n        }\r\n      ];\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private resizeListenerSubscription(instance: PoChartGaugeTextContentComponent) {\r\n    this.windowResizeEmitter.subscribe(() => {\r\n      instance.gaugeWidth = this.getGaugeBaseWidth();\r\n      this.changeDetection.detectChanges();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  DoCheck,\r\n  ElementRef,\r\n  HostListener,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { PoChartAxisXLabelArea, PoChartPadding } from './helpers/po-chart-default-values.constant';\r\nimport { PoDefaultColors } from '../../services/po-color/po-colors.constant';\r\n\r\nimport { PoChartBaseComponent } from './po-chart-base.component';\r\nimport { PoChartSvgContainerService } from './services/po-chart-svg-container.service';\r\nimport { PoChartDynamicTypeComponent } from './po-chart-types/po-chart-dynamic-type.component';\r\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\r\nimport { PoChartType } from './enums/po-chart-type.enum';\r\nimport { PoChartContainerSize } from './interfaces/po-chart-container-size.interface';\r\nimport { PoColorService } from '../../services/po-color/po-color.service';\r\nimport { PoChartMathsService } from './services/po-chart-maths.service';\r\n\r\n/**\r\n * @docsExtends PoChartBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-chart-basic\" title=\"PO Chart Basic\">\r\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-basic/sample-po-chart-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-chart-labs\" title=\"PO Chart Labs\">\r\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-labs/sample-po-chart-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-chart-coffee-ranking\" title=\"PO Chart - Coffee Ranking\">\r\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html\"> </file>\r\n *  <file name=\"sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-chart',\r\n  templateUrl: './po-chart.component.html'\r\n})\r\nexport class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {\r\n  @ViewChild('chartContainer', { read: ViewContainerRef, static: true }) chartContainer: ViewContainerRef;\r\n\r\n  @ViewChild('chartHeader', { static: true }) chartHeader: ElementRef;\r\n\r\n  @ViewChild('chartLegend', { read: ElementRef }) chartLegend: ElementRef;\r\n\r\n  @ViewChild('chartWrapper', { static: true }) chartWrapper: ElementRef;\r\n\r\n  private calculatedComponentRefElement: boolean = false;\r\n  private calculatedSvgContainerElement: boolean = false;\r\n  private componentRef: ComponentRef<{}>;\r\n  private initialized: boolean = false;\r\n  private windowResizeListener: Subject<any> = new Subject();\r\n  private subscription = new Subscription();\r\n\r\n  private mappings = {\r\n    [PoChartType.Gauge]: PoChartGaugeComponent\r\n  };\r\n\r\n  constructor(\r\n    protected colorService: PoColorService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private containerService: PoChartSvgContainerService,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private elementRef: ElementRef,\r\n    private mathsService: PoChartMathsService,\r\n    private renderer: Renderer2\r\n  ) {\r\n    super(colorService);\r\n  }\r\n\r\n  get isChartGaugeType(): boolean {\r\n    return this.type === PoChartType.Gauge;\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  onResize = () => {\r\n    this.getSvgContainerSize();\r\n    this.windowResizeListener.next();\r\n  };\r\n\r\n  ngAfterViewInit() {\r\n    this.initialized = true;\r\n    this.getSvgContainerSize();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const charWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\r\n    const isDynamicChart = this.getComponentType(this.type);\r\n\r\n    // Permite que o chart seja calculado na primeira vez que o componente torna-se visível,\r\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\r\n    // Quando modificada a estrutura dos gráficos do tipo circular isto será melhorado.\r\n    if (charWrapperWidth && this.initialized) {\r\n      if (!isDynamicChart && !this.calculatedSvgContainerElement) {\r\n        this.getSvgContainerSize();\r\n        this.calculatedSvgContainerElement = true;\r\n      } else if (isDynamicChart && !this.calculatedComponentRefElement) {\r\n        this.dynamicComponentSetting();\r\n        this.calculatedComponentRefElement = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.removeWindowResizeListener();\r\n  }\r\n\r\n  resizeAction() {\r\n    this.getSvgContainerSize();\r\n    this.windowResizeListener.next();\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSvgContainerSize();\r\n  }\r\n\r\n  rebuildComponentRef() {\r\n    if (this.componentRef) {\r\n      this.componentRef.destroy();\r\n\r\n      if (this.isChartGaugeType) {\r\n        this.dynamicComponentSetting();\r\n      }\r\n    }\r\n  }\r\n\r\n  protected calculateAxisXLabelArea() {\r\n    const axisXLabels = this.chartType === PoChartType.Bar ? this.categories : this.chartSeries;\r\n\r\n    return this.getAxisXLabelArea(this.mathsService.getLongestDataValue(axisXLabels, this.chartType, this.options));\r\n  }\r\n\r\n  protected getSvgContainerSize() {\r\n    let axisXLabelWidth;\r\n    const { chartHeaderHeight, chartLegendHeight, chartWrapperWidth } = this.getChartMeasurements();\r\n\r\n    if (!this.isTypeCircular) {\r\n      axisXLabelWidth = this.calculateAxisXLabelArea();\r\n    }\r\n\r\n    this.svgContainerSize = {\r\n      ...this.containerService.calculateSVGContainerMeasurements(\r\n        this.height,\r\n        chartWrapperWidth,\r\n        chartHeaderHeight,\r\n        chartLegendHeight\r\n      ),\r\n      axisXLabelWidth\r\n    };\r\n  }\r\n\r\n  private chartLegendHeight(chartLegend: ElementRef) {\r\n    return chartLegend ? chartLegend.nativeElement.offsetHeight : 0;\r\n  }\r\n\r\n  private createComponent() {\r\n    const componentType = this.getComponentType(this.type);\r\n    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\r\n\r\n    this.componentRef = this.chartContainer.createComponent(factory);\r\n\r\n    const instance = <PoChartDynamicTypeComponent>this.componentRef.instance;\r\n\r\n    this.setComponentRefProperties(instance);\r\n\r\n    return instance;\r\n  }\r\n\r\n  private dynamicComponentSetting() {\r\n    const instance = this.createComponent();\r\n\r\n    this.setResizeListenerSubscribe(instance);\r\n    this.changeDetector.detectChanges();\r\n    this.setClickSubscribe(instance);\r\n    this.setHoverSubscribe(instance);\r\n  }\r\n\r\n  private getAxisXLabelArea(axisXLabel: any) {\r\n    const labelPoChartPadding = PoChartPadding / 3;\r\n    const spanElement = this.renderer.createElement('span');\r\n\r\n    this.renderer.addClass(spanElement, 'po-chart-axis-x-label');\r\n    spanElement.innerHTML = axisXLabel;\r\n\r\n    this.renderer.appendChild(this.elementRef.nativeElement, spanElement);\r\n    const axisXLabelWidth = Math.ceil(spanElement.offsetWidth) + labelPoChartPadding;\r\n    this.renderer.removeChild(this.elementRef.nativeElement, spanElement);\r\n\r\n    return axisXLabelWidth > PoChartAxisXLabelArea ? axisXLabelWidth : PoChartAxisXLabelArea;\r\n  }\r\n\r\n  private getComponentType(typeName) {\r\n    return this.mappings[typeName];\r\n  }\r\n\r\n  private getChartMeasurements() {\r\n    const chartWrapperWidth = this.chartWrapper.nativeElement.offsetWidth;\r\n    const chartHeaderHeight = this.chartHeader.nativeElement.offsetHeight;\r\n    const chartLegendHeight = this.chartLegendHeight(this.chartLegend);\r\n\r\n    return { chartWrapperWidth, chartHeaderHeight, chartLegendHeight };\r\n  }\r\n\r\n  private removeWindowResizeListener() {\r\n    if (this.onResize) {\r\n      this.onResize = () => {};\r\n    }\r\n  }\r\n\r\n  private setComponentRefProperties(instance: PoChartDynamicTypeComponent) {\r\n    const { chartHeaderHeight, chartLegendHeight, chartWrapperWidth } = this.getChartMeasurements();\r\n\r\n    instance.chartHeader = chartHeaderHeight;\r\n    instance.chartLegend = chartLegendHeight;\r\n    instance.chartWrapper = chartWrapperWidth;\r\n    instance.colors = PoDefaultColors[0];\r\n    instance.height = this.height;\r\n    instance.type = this.type;\r\n    instance.series = this.chartSeries || [];\r\n  }\r\n\r\n  private setClickSubscribe(instance: PoChartDynamicTypeComponent) {\r\n    this.subscription.add(\r\n      instance.onSerieClick.subscribe(event => {\r\n        this.onSeriesClick(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setHoverSubscribe(instance: PoChartDynamicTypeComponent) {\r\n    this.subscription.add(\r\n      instance.onSerieHover.subscribe(event => {\r\n        this.onSeriesHover(event);\r\n      })\r\n    );\r\n  }\r\n\r\n  private setResizeListenerSubscribe(instance: PoChartDynamicTypeComponent) {\r\n    this.subscription.add(\r\n      this.windowResizeListener.subscribe(() => {\r\n        const measuresForComponentRef = this.getChartMeasurements();\r\n\r\n        instance.chartWrapper = measuresForComponentRef.chartWrapperWidth;\r\n        instance.chartHeader = measuresForComponentRef.chartHeaderHeight;\r\n        instance.chartLegend = measuresForComponentRef.chartLegendHeight;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\r\n\r\nimport { PoChartType } from '../enums/po-chart-type.enum';\r\nimport { PoChartContainerSize } from '../interfaces/po-chart-container-size.interface';\r\nimport { PoChartOptions } from '../interfaces/po-chart-options.interface';\r\nimport { PoChartAxisOptions } from '../interfaces/po-chart-axis-options.interface';\r\nimport { PoChartMathsService } from '../services/po-chart-maths.service';\r\nimport { PoChartMinMaxValues } from '../interfaces/po-chart-min-max-values.interface';\r\nimport { PoChartSerie } from '../interfaces/po-chart-serie.interface';\r\n\r\n@Component({\r\n  selector: 'po-chart-container',\r\n  templateUrl: './po-chart-container.component.html'\r\n})\r\nexport class PoChartContainerComponent implements OnChanges {\r\n  @Input('p-categories') categories: Array<string>;\r\n\r\n  @Input('p-type') type: PoChartType;\r\n\r\n  @Input('p-container-size') containerSize: PoChartContainerSize;\r\n\r\n  @Output('p-serie-click') serieClick = new EventEmitter<any>();\r\n\r\n  @Output('p-serie-hover') serieHover = new EventEmitter<any>();\r\n\r\n  @ViewChild('svgELement', { static: true }) svgELement: ElementRef;\r\n\r\n  alignByTheCorners: boolean;\r\n  axisOptions: PoChartAxisOptions;\r\n  categoriesCoordinates: Array<number>;\r\n  range: PoChartMinMaxValues;\r\n  seriesByType;\r\n  svgSpace;\r\n  viewBox: string;\r\n\r\n  private _options: PoChartOptions;\r\n  private _series: Array<PoChartSerie> = [];\r\n\r\n  @Input('p-options') set options(value: PoChartOptions) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._options = value;\r\n\r\n      this.verifyAxisOptions(this._options);\r\n    }\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  @Input('p-series') set series(data: Array<PoChartSerie>) {\r\n    this._series = data;\r\n    this.setAlignByTheCorners(this._series);\r\n    this.setSeriesByType(this._series);\r\n    this.setRange(this._series, this.options);\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  get isTypeCircular() {\r\n    return this.type === PoChartType.Pie || this.type === PoChartType.Donut;\r\n  }\r\n\r\n  constructor(private mathsService: PoChartMathsService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.type || changes.containerSize) {\r\n      this.setViewBox();\r\n      this.setSvgSpace();\r\n    }\r\n  }\r\n\r\n  getCategoriesCoordinates(value: Array<number>): void {\r\n    this.categoriesCoordinates = value;\r\n  }\r\n\r\n  onSerieClick(event: any) {\r\n    this.serieClick.emit(event);\r\n  }\r\n\r\n  onSerieHover(event: any) {\r\n    this.serieHover.emit(event);\r\n  }\r\n\r\n  private getRange(series: Array<PoChartSerie>, options: PoChartOptions = {}): PoChartMinMaxValues {\r\n    const domain = this.mathsService.calculateMinAndMaxValues(series);\r\n    const minValue =\r\n      !options.axis?.minRange && domain.minValue > 0\r\n        ? 0\r\n        : options.axis?.minRange < domain.minValue\r\n        ? options.axis.minRange\r\n        : domain.minValue;\r\n    const maxValue = options.axis?.maxRange > domain.maxValue ? options.axis.maxRange : domain.maxValue;\r\n    const updatedDomainValues = { minValue, maxValue };\r\n\r\n    return { ...domain, ...updatedDomainValues };\r\n  }\r\n\r\n  private setSvgSpace() {\r\n    // Representa um ponto 2D dentro do viewport do SVG. Ele é a representação do cursor do mouse para comparação de coordenadas com cada dado de série.\r\n    const svgPoint = this.svgELement.nativeElement.createSVGPoint();\r\n    // Retorna um DOMMatrix representando as matrizes 2D e 3D transformadas a partir das coordenadas do elemento, em relação ao document, para coordenadas relativas ao viewport do SVG.\r\n    // É utilizado nos gráficos do tipo área para que seja possível equiparar as coordenadas do evento com cada dado de série, para assim ativar o ponto de dado equivalente.\r\n    const svgDomMatrix = this.svgELement.nativeElement.getScreenCTM()?.inverse();\r\n\r\n    this.svgSpace = { svgPoint, svgDomMatrix };\r\n  }\r\n\r\n  private setAlignByTheCorners(series: Array<PoChartSerie>): void {\r\n    this.alignByTheCorners = series.every(serie => serie.type === PoChartType.Area || serie.type === PoChartType.Bar);\r\n  }\r\n\r\n  private setRange(series: Array<PoChartSerie>, options: PoChartOptions = {}) {\r\n    if (!this.isTypeCircular) {\r\n      this.range = this.getRange(series, options);\r\n    }\r\n  }\r\n\r\n  private setSeriesByType(series: Array<PoChartSerie>) {\r\n    this.seriesByType = {\r\n      [PoChartType.Area]: series.filter(serie => serie.type === PoChartType.Area),\r\n      [PoChartType.Column]: series.filter(serie => serie.type === PoChartType.Column),\r\n      [PoChartType.Bar]: series.filter(serie => serie.type === PoChartType.Bar),\r\n      [PoChartType.Line]: series.filter(serie => serie.type === PoChartType.Line),\r\n      [PoChartType.Donut]: series.filter(serie => serie.type === PoChartType.Donut),\r\n      [PoChartType.Pie]: series.filter(serie => serie.type === PoChartType.Pie)\r\n    };\r\n  }\r\n\r\n  private setViewBox() {\r\n    const { svgWidth, svgHeight } = this.containerSize;\r\n    const viewBoxWidth = this.isTypeCircular ? svgHeight : svgWidth;\r\n    // Tratamento necessário para que não corte o vetor nas extremidades\r\n    const offsetXY = 1;\r\n\r\n    this.viewBox = `${offsetXY} -${offsetXY} ${viewBoxWidth} ${this.containerSize.svgHeight}`;\r\n  }\r\n\r\n  private verifyAxisOptions(options: PoChartOptions): void {\r\n    if (!this.isTypeCircular && options.hasOwnProperty('axis')) {\r\n      this.range = this.getRange(this.series, this.options);\r\n      this.axisOptions = {\r\n        ...this.axisOptions,\r\n        ...options.axis\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { PoChartType } from '../enums/po-chart-type.enum';\r\n\r\n@Component({\r\n  selector: 'po-chart-legend',\r\n  templateUrl: './po-chart-legend.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoChartLegendComponent {\r\n  @Input('p-type') type: PoChartType;\r\n\r\n  private _series: Array<any>;\r\n\r\n  @Input('p-series') set series(value: Array<any>) {\r\n    this._series = value;\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n}\r\n","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\n\r\nimport { PoChartLineBaseComponent } from './po-chart-line-base.component';\r\nimport { PoChartMathsService } from '../../services/po-chart-maths.service';\r\n\r\n@Component({\r\n  selector: '[po-chart-line]',\r\n  templateUrl: './po-chart-line.component.svg'\r\n})\r\nexport class PoChartLineComponent extends PoChartLineBaseComponent {\r\n  constructor(\r\n    protected mathsService: PoChartMathsService,\r\n    protected renderer: Renderer2,\r\n    protected elementRef: ElementRef\r\n  ) {\r\n    super(mathsService, renderer, elementRef);\r\n  }\r\n\r\n  onEnter(serieIndex: number) {\r\n    return null;\r\n  }\r\n  onLeave(serieIndex: number) {\r\n    return null;\r\n  }\r\n\r\n  onSeriePointHover(selectedItem: any) {\r\n    const { relativeTo, ...item } = selectedItem;\r\n\r\n    this.reorderSVGGroup(relativeTo);\r\n    this.pointHover.emit(item);\r\n  }\r\n\r\n  // É necessário reordenar os svgs on hover pois eventualmente os elemntos svg ficam por trás de outros. Não há z-index para svgElement.\r\n  private reorderSVGGroup(pathGroup: string) {\r\n    const pathGroupElement = this.elementRef.nativeElement.querySelectorAll(`.${pathGroup}`);\r\n\r\n    this.animate = false;\r\n    this.renderer.appendChild(this.chartLine.nativeElement, pathGroupElement[0]);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { PoChartBarCoordinates } from '../../../interfaces/po-chart-bar-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-bar-path]',\r\n  templateUrl: './po-chart-bar-path.component.svg'\r\n})\r\nexport class PoChartBarPathComponent {\r\n  @Input('p-color') color?: string;\r\n\r\n  @Input('p-coordinates') coordinates: Array<PoChartBarCoordinates>;\r\n\r\n  @Input('p-tooltip-position') tooltipPosition: string;\r\n\r\n  @Output('p-bar-click') barClick = new EventEmitter<any>();\r\n\r\n  @Output('p-bar-hover') barHover = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  onClick(item: PoChartBarCoordinates) {\r\n    const selectedItem = { label: item.label, data: item.data, category: item.category };\r\n\r\n    this.barClick.emit(selectedItem);\r\n  }\r\n\r\n  onMouseEnter(item: PoChartBarCoordinates) {\r\n    const selectedItem = { label: item.label, data: item.data, category: item.category };\r\n\r\n    this.barHover.emit(selectedItem);\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\nimport { InputBoolean } from '../../../../../decorators';\r\n\r\nimport { isIE } from '../../../../../utils/util';\r\n\r\nconst pathDashoffsetDefaultWidth = 0;\r\n\r\n@Component({\r\n  selector: '[po-chart-path]',\r\n  templateUrl: './po-chart-path.component.svg'\r\n})\r\nexport class PoChartPathComponent implements AfterViewInit {\r\n  @Input('p-is-active') @InputBoolean() isActive: boolean = true;\r\n\r\n  @Input('p-chart-line') @InputBoolean() chartLine: boolean = false;\r\n\r\n  @Input('p-coordinates') coordinates: string;\r\n\r\n  @ViewChild('chartPath', { static: true }) chartPath: ElementRef;\r\n\r\n  pathWidth: number;\r\n\r\n  private _animate: boolean;\r\n  private _color: string;\r\n\r\n  @Input('p-color') set color(value: string) {\r\n    this._color = value.includes('po-color') && this.chartLine ? value.replace('po-color', 'po-border-color') : value;\r\n  }\r\n\r\n  get color() {\r\n    return this._color;\r\n  }\r\n\r\n  @Input('p-animate') set animate(value: boolean) {\r\n    this._animate = value;\r\n\r\n    if (!this.animate) {\r\n      this.pathWidth = pathDashoffsetDefaultWidth;\r\n    }\r\n  }\r\n\r\n  get animate() {\r\n    return this._animate;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!isIE()) {\r\n      this.pathAnimation();\r\n    }\r\n  }\r\n\r\n  private pathAnimation() {\r\n    this.pathWidth = this.chartPath.nativeElement.getTotalLength();\r\n    this.changeDetector.detectChanges();\r\n    setTimeout(this.preventsAnimatingAgain.bind(this), 700);\r\n  }\r\n\r\n  // Redefine pathWidth para zero após o período da animação para que a linha se expanda normalmente on resize.\r\n  private preventsAnimatingAgain() {\r\n    this.pathWidth = pathDashoffsetDefaultWidth;\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\r\nimport { from, Observable, timer } from 'rxjs';\r\nimport { concatMap, mapTo, scan, tap } from 'rxjs/operators';\r\n\r\nimport { isIE } from '../../../../../utils/util';\r\nimport { InputBoolean } from '../../../../../decorators';\r\n\r\nimport { PoChartPointsCoordinates } from '../../../interfaces/po-chart-points-coordinates.interface';\r\n\r\nconst RADIUS_DEFAULT_SIZE = 5;\r\nconst RADIUS_HOVER_SIZE = 10;\r\nconst ANIMATION_DURATION_TIME = 700;\r\n\r\n@Component({\r\n  selector: '[po-chart-series-point]',\r\n  templateUrl: './po-chart-series-point.component.svg'\r\n})\r\nexport class PoChartSeriesPointComponent {\r\n  @Input('p-animate') animate: boolean;\r\n\r\n  @Input('p-is-active') @InputBoolean() isActive: boolean;\r\n\r\n  @Input('p-chart-line') @InputBoolean() chartLine: boolean = false;\r\n\r\n  // Referência para o svgPathGroup ao qual pertence o ponto. Necessário para reordenação dos svgElements no DOM para tratamento onHover\r\n  @Input('p-relative-to') relativeTo: string;\r\n\r\n  @Output('p-point-click') pointClick = new EventEmitter<any>();\r\n\r\n  @Output('p-point-hover') pointHover = new EventEmitter<any>();\r\n\r\n  coordinates$: Observable<Array<PoChartPointsCoordinates>>;\r\n  radius: number = RADIUS_DEFAULT_SIZE;\r\n  strokeColor: string;\r\n\r\n  private _color: string;\r\n  private _coordinates: Array<PoChartPointsCoordinates> = [];\r\n\r\n  private animationState: boolean = true;\r\n\r\n  @Input('p-color') set color(value: string) {\r\n    this.strokeColor = value.includes('po-color') ? value.replace('po-color', 'po-border-color') : value;\r\n    this._color = value;\r\n  }\r\n\r\n  get color() {\r\n    return this._color;\r\n  }\r\n\r\n  @Input('p-coordinates') set coordinates(value: Array<PoChartPointsCoordinates>) {\r\n    this._coordinates = value;\r\n\r\n    this.coordinates$ = this.displayPointsWithDelay(this._coordinates);\r\n  }\r\n\r\n  get coordinates() {\r\n    return this._coordinates;\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  onClick(point: PoChartPointsCoordinates) {\r\n    const selectedItem = { label: point.label, data: point.data, category: point.category };\r\n\r\n    this.pointClick.emit(selectedItem);\r\n  }\r\n\r\n  onMouseEnter(event: any, point: PoChartPointsCoordinates) {\r\n    this.setPointAttribute(event.target, true);\r\n\r\n    const selectedItem = { label: point.label, data: point.data, category: point.category };\r\n    this.pointHover.emit({ relativeTo: this.relativeTo, ...selectedItem });\r\n  }\r\n\r\n  onMouseLeave(event: any) {\r\n    this.setPointAttribute(event.target, false);\r\n  }\r\n\r\n  private displayPointsWithDelay(\r\n    coordinates: Array<PoChartPointsCoordinates>\r\n  ): Observable<Array<PoChartPointsCoordinates>> {\r\n    if (this.animationState && !isIE()) {\r\n      const animationTimer = ANIMATION_DURATION_TIME / coordinates.length;\r\n\r\n      return from(coordinates).pipe(\r\n        concatMap((item, index) => timer(index === 0 || !this.animate ? 0 : animationTimer).pipe(mapTo(item))),\r\n        scan((acc, curr: PoChartPointsCoordinates) => acc.concat(curr), []),\r\n        tap(() => (this.animationState = false))\r\n      );\r\n    } else {\r\n      return from([coordinates]);\r\n    }\r\n  }\r\n\r\n  private setPointAttribute(target: SVGElement, isHover: boolean) {\r\n    this.renderer.setAttribute(target, 'r', isHover ? RADIUS_HOVER_SIZE.toString() : RADIUS_DEFAULT_SIZE.toString());\r\n    if (this.color.includes('po-color')) {\r\n      this.renderer.setAttribute(\r\n        target,\r\n        'class',\r\n        isHover ? `${this.strokeColor} ${this.color}` : `po-chart-line-point po-chart-active-point ${this.strokeColor}`\r\n      );\r\n    } else {\r\n      this.renderer[isHover ? 'setStyle' : 'removeStyle'](target, 'fill', isHover ? this.color : undefined);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  Output,\r\n  QueryList,\r\n  ViewChildren\r\n} from '@angular/core';\r\n\r\nimport {\r\n  PoChartStartAngle,\r\n  PoChartCompleteCircle,\r\n  PoChartAngleStepInterval\r\n} from '../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartCircularLabelComponent } from './po-chart-circular-label/po-chart-circular-label.component';\r\nimport { PoChartCircularPathComponent } from './po-chart-circular-path/po-chart-circular-path.component';\r\nimport { PoChartContainerSize } from '../../interfaces/po-chart-container-size.interface';\r\nimport { PoChartLabelCoordinates } from '../../interfaces/po-chart-label-coordinates.interface';\r\nimport { PoChartOptions } from '../../interfaces/po-chart-options.interface';\r\nimport { PoChartPathCoordinates } from '../../interfaces/po-chart-path-coordinates.interface';\r\nimport { PoChartSerie } from '../../interfaces/po-chart-serie.interface';\r\n\r\n@Directive()\r\nexport abstract class PoChartCircularComponent {\r\n  @Input('p-container-size') containerSize: PoChartContainerSize;\r\n\r\n  @Output('p-circular-click') circularClick = new EventEmitter<any>();\r\n\r\n  @Output('p-circular-hover') circularHover = new EventEmitter<any>();\r\n\r\n  @ViewChildren('svgPaths') private svgPaths: QueryList<PoChartCircularPathComponent>;\r\n\r\n  @ViewChildren('svgLabels') private svgLabels: QueryList<PoChartCircularLabelComponent>;\r\n\r\n  canDisplayLabels: boolean = false;\r\n  seriesLabels: Array<PoChartLabelCoordinates> = [];\r\n  seriesList: Array<PoChartPathCoordinates>;\r\n  showLabels: boolean = false;\r\n\r\n  protected innerRadius: number;\r\n  protected totalValue: number;\r\n\r\n  private _options: PoChartOptions;\r\n  private _series: Array<PoChartSerie>;\r\n\r\n  private animate: boolean;\r\n\r\n  @Input('p-options') set options(value: PoChartOptions) {\r\n    if (!isNaN(value?.innerRadius)) {\r\n      this._options = value;\r\n      this.innerRadius = Math.min(Math.max(this._options.innerRadius, 0), 100);\r\n    }\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  @Input('p-series') set series(value: Array<PoChartSerie>) {\r\n    this._series = value;\r\n\r\n    this.animate = true;\r\n  }\r\n\r\n  get series() {\r\n    return this._series;\r\n  }\r\n\r\n  constructor(private ngZone: NgZone, private changeDetector: ChangeDetectorRef) {}\r\n\r\n  onSerieClick(selectedItem: any) {\r\n    this.circularClick.emit(selectedItem);\r\n  }\r\n\r\n  onSerieHover(selectedItem: any) {\r\n    this.circularHover.emit(selectedItem);\r\n  }\r\n\r\n  protected calculateAngle(data: number, totalValue: number) {\r\n    return (data / totalValue) * (Math.PI * 2);\r\n  }\r\n\r\n  protected drawSeries(series: Array<PoChartSerie> = [], height: number) {\r\n    this.seriesList = [];\r\n    this.showLabels = false;\r\n    this.totalValue = this.calculateTotalValue(series);\r\n    if (this.totalValue && this.totalValue > 0) {\r\n      this.seriesList = this.validateSeries(series);\r\n      this.changeDetector.detectChanges();\r\n\r\n      if (this.seriesList.length && this.svgPaths) {\r\n        this.initDrawPaths(this.seriesList, this.totalValue, height);\r\n      }\r\n    }\r\n  }\r\n\r\n  private calculateTotalValue(series: Array<PoChartSerie>) {\r\n    return series.reduce((previousValue, serie: any) => {\r\n      const data = serie.data ? serie.data : serie.value;\r\n\r\n      return previousValue + (data > 0 ? data : 0);\r\n    }, 0);\r\n  }\r\n\r\n  private calculateSerieCoordinates(series: Array<PoChartPathCoordinates>, totalValue: number, height: number) {\r\n    let startRadianAngle;\r\n    let endRadianAngle = PoChartStartAngle;\r\n\r\n    series.forEach((serie: any, index) => {\r\n      startRadianAngle = endRadianAngle;\r\n      endRadianAngle = startRadianAngle + this.calculateAngle(serie.data, totalValue) - PoChartCompleteCircle;\r\n\r\n      const coordinates = this.calculateCoordinates(height, startRadianAngle, endRadianAngle);\r\n\r\n      this.svgPaths.toArray()[index].applyCoordinates(coordinates);\r\n      this.showLabels = this.canDisplayLabels;\r\n    });\r\n  }\r\n\r\n  private calculateCoordinatesWithAnimation(\r\n    series: Array<PoChartPathCoordinates>,\r\n    totalValue: number,\r\n    height: number,\r\n    startRadianAngle: number,\r\n    endRadianAngle: number,\r\n    currentRadianAngle: number = 0,\r\n    seriesIndex: number = 0\r\n  ) {\r\n    const finishedCurrentSerie = currentRadianAngle > endRadianAngle;\r\n    const finishedAllSeries = seriesIndex === series.length;\r\n\r\n    if (finishedAllSeries) {\r\n      this.animate = false;\r\n      return;\r\n    }\r\n\r\n    if (finishedCurrentSerie) {\r\n      this.setSerieLabelCoordinates(seriesIndex);\r\n      currentRadianAngle = 0;\r\n      seriesIndex++;\r\n      startRadianAngle = startRadianAngle + endRadianAngle;\r\n      endRadianAngle =\r\n        seriesIndex < series.length ? this.calculateAngle(series[seriesIndex].data, totalValue) : undefined;\r\n    } else {\r\n      currentRadianAngle += PoChartAngleStepInterval;\r\n\r\n      const currentEndRadianAngle = this.calculateCurrentEndAngle(currentRadianAngle, startRadianAngle, endRadianAngle);\r\n      const coordinates = this.calculateCoordinates(height, startRadianAngle, currentEndRadianAngle);\r\n\r\n      this.svgPaths.toArray()[seriesIndex].applyCoordinates(coordinates);\r\n    }\r\n\r\n    window.requestAnimationFrame(\r\n      this.calculateCoordinatesWithAnimation.bind(\r\n        this,\r\n        series,\r\n        totalValue,\r\n        height,\r\n        startRadianAngle,\r\n        endRadianAngle,\r\n        currentRadianAngle,\r\n        seriesIndex\r\n      )\r\n    );\r\n  }\r\n\r\n  private calculateCurrentEndAngle(currentRadianAngle: number, startRadianAngle: number, endRadianAngle: number) {\r\n    const isSerieDrawCompleted = startRadianAngle + currentRadianAngle > startRadianAngle + endRadianAngle;\r\n\r\n    return isSerieDrawCompleted\r\n      ? startRadianAngle + endRadianAngle - PoChartCompleteCircle\r\n      : startRadianAngle + currentRadianAngle;\r\n  }\r\n\r\n  private initDrawPaths(seriesList: Array<PoChartPathCoordinates>, totalValue: number, height: number) {\r\n    if (!this.animate) {\r\n      this.calculateSerieCoordinates(seriesList, totalValue, height);\r\n    } else {\r\n      const startRadianAngle = PoChartStartAngle;\r\n      const endRadianAngle = this.calculateAngle(seriesList[0].data, totalValue);\r\n\r\n      this.ngZone.runOutsideAngular(() =>\r\n        this.calculateCoordinatesWithAnimation(seriesList, totalValue, height, startRadianAngle, endRadianAngle)\r\n      );\r\n    }\r\n  }\r\n\r\n  private setSerieLabelCoordinates(index: number) {\r\n    if (this.svgLabels.toArray().length) {\r\n      this.svgLabels.toArray()[index].applyCoordinates(this.seriesLabels[index]);\r\n    }\r\n  }\r\n\r\n  private validateSeries(series: Array<PoChartSerie>) {\r\n    return series.reduce((seriesList, serie: any) => {\r\n      const data = serie.data ?? serie.value;\r\n      if (data && data > 0) {\r\n        const color = serie.color;\r\n        const label = serie.label;\r\n        const tooltip = serie.tooltip;\r\n        const tooltipLabel = this.getTooltipLabel(data, label, tooltip);\r\n\r\n        seriesList = [...seriesList, { data, color, label, tooltipLabel }];\r\n      }\r\n\r\n      return seriesList;\r\n    }, []);\r\n  }\r\n\r\n  protected abstract calculateCoordinates(height, startRadianAngle, currentEndRadianAngle);\r\n  protected abstract getTooltipLabel(data, label, tooltip);\r\n}\r\n","import { ChangeDetectorRef, Component, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { PoChartCircularComponent } from '../po-chart-circular.component';\r\n\r\n@Component({\r\n  selector: '[po-chart-pie]',\r\n  templateUrl: '../po-chart-circular.component.svg'\r\n})\r\nexport class PoChartPieComponent extends PoChartCircularComponent implements OnChanges {\r\n  /* istanbul ignore next */\r\n  constructor(ngZone: NgZone, changeDetector: ChangeDetectorRef) {\r\n    super(ngZone, changeDetector);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.series || changes.containerSize) {\r\n      this.drawSeries(this.series, this.containerSize.svgHeight);\r\n    }\r\n  }\r\n\r\n  protected calculateCoordinates(height: number, startRadianAngle: number, endRadianAngle: number) {\r\n    const radius = height / 2;\r\n\r\n    const sinAlpha = Math.sin(startRadianAngle);\r\n    const cosAlpha = Math.cos(startRadianAngle);\r\n\r\n    const sinBeta = Math.sin(endRadianAngle);\r\n    const cosBeta = Math.cos(endRadianAngle);\r\n\r\n    const startX = radius + cosAlpha * radius;\r\n    const startY = radius + sinAlpha * radius;\r\n\r\n    const endX = radius + cosBeta * radius;\r\n    const endY = radius + sinBeta * radius;\r\n\r\n    const largeArc = endRadianAngle - startRadianAngle > Math.PI;\r\n\r\n    return [\r\n      'M',\r\n      startX,\r\n      startY,\r\n      'A',\r\n      radius,\r\n      radius,\r\n      0,\r\n      largeArc ? '1,1' : '0,1',\r\n      endX,\r\n      endY,\r\n      'L',\r\n      radius,\r\n      radius,\r\n      'Z'\r\n    ].join(' ');\r\n  }\r\n\r\n  protected getTooltipLabel(data: number, label?: string, tooltipLabel?: string) {\r\n    const dataLabel = label ? `${label}: ` : '';\r\n    const dataValue = data.toString();\r\n\r\n    return tooltipLabel || `${dataLabel}${dataValue}`;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { convertNumberToDecimal } from '../../../../../utils/util';\r\nimport { PoDefaultColorsTextBlack } from '../../../../../services/po-color/po-colors.constant';\r\nimport { PoChartDonutDefaultThickness, PoChartStartAngle } from '../../../helpers/po-chart-default-values.constant';\r\n\r\nimport { PoChartCircularComponent } from '../po-chart-circular.component';\r\n\r\n@Component({\r\n  selector: '[po-chart-donut]',\r\n  templateUrl: '../po-chart-circular.component.svg'\r\n})\r\nexport class PoChartDonutComponent extends PoChartCircularComponent implements OnChanges {\r\n  private readonly poChartBlackColor = '#000000';\r\n  private readonly poChartWhiteColor = '#ffffff';\r\n\r\n  /* istanbul ignore next */\r\n  constructor(ngZone: NgZone, changeDetector: ChangeDetectorRef) {\r\n    super(ngZone, changeDetector);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.series || changes.containerSize || changes.options) {\r\n      this.drawSeries(this.series, this.containerSize.svgHeight);\r\n      this.applySeriesLabels(this.seriesList, this.containerSize.svgHeight);\r\n    }\r\n  }\r\n\r\n  protected calculateCoordinates(height: number, startRadianAngle: number, endRadianAngle: number) {\r\n    const radius = height / 2;\r\n\r\n    const innerRadius = this.getInnerRadius(radius);\r\n\r\n    const sinAlpha = Math.sin(startRadianAngle);\r\n    const cosAlpha = Math.cos(startRadianAngle);\r\n\r\n    const sinBeta = Math.sin(endRadianAngle);\r\n    const cosBeta = Math.cos(endRadianAngle);\r\n\r\n    const startX = radius + cosAlpha * radius;\r\n    const startY = radius + sinAlpha * radius;\r\n\r\n    const endX = radius + cosBeta * radius;\r\n    const endY = radius + sinBeta * radius;\r\n\r\n    const startInnerX = radius + cosAlpha * innerRadius;\r\n    const startInnerY = radius + sinAlpha * innerRadius;\r\n\r\n    const endInnerX = radius + cosBeta * innerRadius;\r\n    const endInnerY = radius + sinBeta * innerRadius;\r\n\r\n    const largeArc = endRadianAngle - startRadianAngle > Math.PI;\r\n\r\n    this.verifyDisplayLabels(radius, innerRadius);\r\n\r\n    return [\r\n      'M',\r\n      startX,\r\n      startY,\r\n      'A',\r\n      radius,\r\n      radius,\r\n      0,\r\n      largeArc ? '1,1' : '0,1',\r\n      endX,\r\n      endY,\r\n      'L',\r\n      endInnerX,\r\n      endInnerY,\r\n      'A',\r\n      innerRadius,\r\n      innerRadius,\r\n      0,\r\n      largeArc ? '1,0' : '0,0',\r\n      startInnerX,\r\n      startInnerY,\r\n      'Z'\r\n    ].join(' ');\r\n  }\r\n\r\n  protected getTooltipLabel(data: number, label?: string, tooltipLabel?: string) {\r\n    const dataLabel = label ? `${label}: ` : '';\r\n    const dataValue = this.getPercentValue(data, this.totalValue) + '%';\r\n\r\n    return tooltipLabel || `${dataLabel}${dataValue}`;\r\n  }\r\n\r\n  private applySeriesLabels(seriesList: Array<any>, height: number) {\r\n    let startRadianAngle = PoChartStartAngle;\r\n    let endRadianAngle = PoChartStartAngle;\r\n\r\n    this.seriesLabels = seriesList.map(serie => {\r\n      startRadianAngle = endRadianAngle;\r\n      endRadianAngle = startRadianAngle + this.calculateAngle(serie.data, this.totalValue);\r\n\r\n      const label = this.getPercentValue(serie.data, this.totalValue) + '% ';\r\n      const color = this.getTextColor(serie.color);\r\n      const coordinates = this.calculateLabelCoordinates(height, startRadianAngle, endRadianAngle);\r\n\r\n      return { ...coordinates, label, color };\r\n    });\r\n  }\r\n\r\n  private calculateLabelCoordinates(height: number, startRadianAngle: number, endRadianAngle: number) {\r\n    const radius = height / 2;\r\n    const innerRadius = this.getInnerRadius(radius);\r\n\r\n    const sliceCenterAngle = (startRadianAngle + endRadianAngle) / 2;\r\n    const labelRadius = innerRadius + (radius - innerRadius) / 2;\r\n\r\n    const xCoordinate = labelRadius * Math.cos(sliceCenterAngle) + radius;\r\n    const yCoordinate = labelRadius * Math.sin(sliceCenterAngle) + radius;\r\n\r\n    return { xCoordinate, yCoordinate };\r\n  }\r\n\r\n  private getInnerRadius(radius: number): number {\r\n    const defaultInnerRadius = radius - PoChartDonutDefaultThickness;\r\n\r\n    return this.innerRadius >= 0 ? (this.innerRadius / 100) * radius : defaultInnerRadius;\r\n  }\r\n\r\n  private getPercentValue(value: number, totalValue: number) {\r\n    const percentValue = (value / totalValue) * 100;\r\n    const floatPercentValue = convertNumberToDecimal(percentValue, 2);\r\n\r\n    return String(floatPercentValue).replace('.', ',');\r\n  }\r\n\r\n  private getTextColor(color: string) {\r\n    if (PoDefaultColorsTextBlack.includes(color)) {\r\n      return this.poChartBlackColor;\r\n    }\r\n\r\n    return this.poChartWhiteColor;\r\n  }\r\n\r\n  private verifyDisplayLabels(radius: number, innerRadius: number): void {\r\n    this.canDisplayLabels = radius - innerRadius >= radius - (radius - PoChartDonutDefaultThickness);\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\r\n\r\nimport { PoChartLabelCoordinates } from '../../../interfaces/po-chart-label-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-circular-label]',\r\n  templateUrl: './po-chart-circular-label.component.svg'\r\n})\r\nexport class PoChartCircularLabelComponent {\r\n  @Input('p-serie') serie: PoChartLabelCoordinates;\r\n\r\n  @Input('p-show-label') showLabel: boolean;\r\n\r\n  @ViewChild('svgLabel', { read: ElementRef }) svgLabel: ElementRef;\r\n\r\n  constructor(private changeDetection: ChangeDetectorRef, private renderer: Renderer2) {}\r\n\r\n  applyCoordinates(coordinates: PoChartLabelCoordinates) {\r\n    this.renderer.setAttribute(this.svgLabel.nativeElement, 'x', coordinates.xCoordinate.toString());\r\n    this.renderer.setAttribute(this.svgLabel.nativeElement, 'y', coordinates.yCoordinate.toString());\r\n    this.showLabel = true;\r\n    this.changeDetection.detectChanges();\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\r\n\r\nimport { PoChartPathCoordinates } from '../../../interfaces/po-chart-path-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-chart-circular-path]',\r\n  templateUrl: './po-chart-circular-path.component.svg'\r\n})\r\nexport class PoChartCircularPathComponent {\r\n  @Input('p-serie') serie: PoChartPathCoordinates;\r\n\r\n  @Output('p-on-click') onClick = new EventEmitter<any>();\r\n\r\n  @Output('p-on-hover') onHover = new EventEmitter<any>();\r\n\r\n  @ViewChild('svgPath', { read: ElementRef }) svgPath: ElementRef;\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  applyCoordinates(coordinates: string) {\r\n    this.renderer.setAttribute(this.svgPath.nativeElement, 'd', coordinates);\r\n  }\r\n\r\n  onMouseClick() {\r\n    const { label, data } = this.serie;\r\n\r\n    this.onClick.emit({ label, data });\r\n  }\r\n\r\n  onMouseEnter() {\r\n    const { label, data } = this.serie;\r\n\r\n    this.onHover.emit({ label, data });\r\n  }\r\n}\r\n","import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[p-chart-tooltip]'\r\n})\r\nexport class PoChartTooltipDirective {\r\n  @Input('p-chart-tooltip') tooltip: string;\r\n\r\n  private lastTooltipText: string;\r\n  private tooltipElement;\r\n  private tooltipText;\r\n  private tooltipTextContent;\r\n\r\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event: MouseEvent) {\r\n    this.tooltipElement ? this.showTooltip() : this.createTooltip();\r\n    this.tooltipPosition(event);\r\n    this.lastTooltipText = this.tooltip;\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.hideTooltip();\r\n  }\r\n\r\n  @HostListener('mousemove', ['$event']) onMouseMove(event: MouseEvent) {\r\n    this.tooltipPosition(event);\r\n  }\r\n\r\n  private calculateTooltipPosition(event: MouseEvent) {\r\n    const displacement: number = 12;\r\n\r\n    return {\r\n      left: event.clientX - this.tooltipElement.offsetWidth / 2,\r\n      top: event.clientY - this.tooltipElement.offsetHeight - displacement\r\n    };\r\n  }\r\n\r\n  private createTooltip() {\r\n    const chartWrapper = this.elementRef.nativeElement.closest('.po-chart-wrapper');\r\n\r\n    this.tooltipElement = this.renderer.createElement('div');\r\n    this.renderer.addClass(this.tooltipElement, 'po-chart-tooltip');\r\n    this.renderer.addClass(this.tooltipElement, 'po-tooltip');\r\n\r\n    const divArrow = this.renderer.createElement('div');\r\n    this.renderer.addClass(divArrow, 'po-tooltip-arrow');\r\n    this.renderer.addClass(divArrow, 'po-arrow-bottom');\r\n\r\n    this.tooltipText = this.renderer.createElement('p');\r\n    this.renderer.addClass(this.tooltipText, 'po-tooltip-content');\r\n\r\n    this.tooltipTextContent = this.renderer.createText(this.tooltip);\r\n\r\n    this.renderer.appendChild(this.tooltipText, this.tooltipTextContent);\r\n    this.renderer.appendChild(this.tooltipElement, divArrow);\r\n    this.renderer.appendChild(this.tooltipElement, this.tooltipText);\r\n\r\n    this.renderer.appendChild(chartWrapper, this.tooltipElement);\r\n  }\r\n\r\n  private hideTooltip() {\r\n    this.renderer.addClass(this.tooltipElement, 'po-invisible');\r\n  }\r\n\r\n  private showTooltip() {\r\n    this.renderer.removeClass(this.tooltipElement, 'po-invisible');\r\n    this.updatetooltipTextContent();\r\n  }\r\n\r\n  private tooltipPosition(event: MouseEvent) {\r\n    const tooltipPositions = this.calculateTooltipPosition(event);\r\n\r\n    this.renderer.setStyle(this.tooltipElement, 'left', `${tooltipPositions.left}px`);\r\n    this.renderer.setStyle(this.tooltipElement, 'top', `${tooltipPositions.top}px`);\r\n  }\r\n\r\n  private updatetooltipTextContent() {\r\n    if (this.lastTooltipText !== this.tooltip) {\r\n      this.renderer.removeChild(this.tooltipText, this.tooltipTextContent);\r\n      this.tooltipTextContent = this.renderer.createText(this.tooltip);\r\n      this.renderer.appendChild(this.tooltipText, this.tooltipTextContent);\r\n    }\r\n  }\r\n}\r\n","/// <reference types=\"resize-observer-browser\" />\r\n\r\nimport { Directive, ElementRef, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[p-resize-observer]'\r\n})\r\nexport class PoResizeObserverDirective implements OnDestroy, OnInit {\r\n  @Output('p-resize-observer') resize = new EventEmitter();\r\n\r\n  private subscription = new Subscription();\r\n  private observer;\r\n  private chartWidthResize$ = new Subject();\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.isResizeObserverSupported) {\r\n      this.observer.unobserve(this.elementRef.nativeElement);\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.isResizeObserverSupported) {\r\n      this.observer = new window.ResizeObserver(() => {\r\n        this.chartWidthResize$.next();\r\n      });\r\n\r\n      this.observer.observe(this.elementRef.nativeElement);\r\n\r\n      this.subscription.add(\r\n        this.chartWidthResize$.pipe(debounceTime(20)).subscribe(_ => {\r\n          this.resize.emit();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private get isResizeObserverSupported(): boolean {\r\n    return typeof window.ResizeObserver === 'function';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoTooltipModule } from '../../directives/po-tooltip/po-tooltip.module';\r\n\r\nimport { PoChartAreaComponent } from './po-chart-container/po-chart-line/po-chart-area/po-chart-area.component';\r\nimport { PoChartAxisComponent } from './po-chart-container/po-chart-axis/po-chart-axis.component';\r\nimport { PoChartAxisPathComponent } from './po-chart-container/po-chart-axis/po-chart-axis-path/po-chart-axis-path.component';\r\nimport { PoChartAxisLabelComponent } from './po-chart-container/po-chart-axis/po-chart-axis-label/po-chart-axis-label.component';\r\nimport { PoChartBarComponent } from './po-chart-container/po-chart-bar/po-chart-bar.component';\r\nimport { PoChartColumnComponent } from './po-chart-container/po-chart-bar/po-chart-column/po-chart-column.component';\r\nimport { PoChartComponent } from './po-chart.component';\r\nimport { PoChartContainerComponent } from './po-chart-container/po-chart-container.component';\r\nimport { PoChartGaugeComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge.component';\r\nimport { PoChartGaugeTextContentComponent } from './po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component';\r\nimport { PoChartLegendComponent } from './po-chart-legend/po-chart-legend.component';\r\nimport { PoChartLineComponent } from './po-chart-container/po-chart-line/po-chart-line.component';\r\nimport { PoChartBarPathComponent } from './po-chart-container/po-chart-bar/po-chart-bar-path/po-chart-bar-path.component';\r\nimport { PoChartPathComponent } from './po-chart-container/po-chart-line/po-chart-path/po-chart-path.component';\r\nimport { PoChartSeriesPointComponent } from './po-chart-container/po-chart-line/po-chart-series-point/po-chart-series-point.component';\r\nimport { PoChartPieComponent } from './po-chart-container/po-chart-circular/po-chart-pie/po-chart-pie.component';\r\nimport { PoChartDonutComponent } from './po-chart-container/po-chart-circular/po-chart-donut/po-chart-donut.component';\r\nimport { PoChartCircularLabelComponent } from './po-chart-container/po-chart-circular/po-chart-circular-label/po-chart-circular-label.component';\r\nimport { PoChartCircularPathComponent } from './po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-circular-path.component';\r\nimport { PoChartTooltipDirective } from './po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-tooltip.directive';\r\nimport { PoResizeObserverDirective } from './directives/po-resize-observer.directive';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-chart`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoTooltipModule],\r\n  declarations: [\r\n    PoChartAreaComponent,\r\n    PoChartAxisComponent,\r\n    PoChartAxisPathComponent,\r\n    PoChartAxisLabelComponent,\r\n    PoChartComponent,\r\n    PoChartContainerComponent,\r\n    PoChartGaugeComponent,\r\n    PoChartGaugeTextContentComponent,\r\n    PoChartLegendComponent,\r\n    PoChartLineComponent,\r\n    PoChartPathComponent,\r\n    PoChartPieComponent,\r\n    PoChartDonutComponent,\r\n    PoChartSeriesPointComponent,\r\n    PoChartBarComponent,\r\n    PoChartColumnComponent,\r\n    PoChartBarPathComponent,\r\n    PoChartCircularPathComponent,\r\n    PoChartCircularLabelComponent,\r\n    PoChartTooltipDirective,\r\n    PoResizeObserverDirective\r\n  ],\r\n  exports: [PoChartComponent]\r\n})\r\nexport class PoChartModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, convertToInt } from '../../utils/util';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.\r\n * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais\r\n * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a\r\n * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),\r\n * assim possibilitando o tratamento para diferentes resoluções.\r\n */\r\n@Directive()\r\nexport class PoContainerBaseComponent {\r\n  private _height?: number;\r\n  private _noBorder?: boolean = false;\r\n  private _noPadding?: boolean = false;\r\n  private _noShadow?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura do `po-container`.\r\n   *\r\n   * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    this._height = convertToInt(value);\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita a borda e a sombra em torno do `po-container`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-border') set noBorder(value: boolean) {\r\n    this._noBorder = convertToBoolean(value);\r\n  }\r\n\r\n  get noBorder(): boolean {\r\n    return this._noBorder;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o espaçamento interno do `po-container`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-padding') set noPadding(value: boolean) {\r\n    this._noPadding = convertToBoolean(value);\r\n  }\r\n\r\n  get noPadding(): boolean {\r\n    return this._noPadding;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o sombreamento em torno do `po-container`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-shadow') set noShadow(value: boolean) {\r\n    this._noShadow = convertToBoolean(value);\r\n  }\r\n\r\n  get noShadow(): boolean {\r\n    return this._noShadow;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoContainerBaseComponent } from './po-container-base.component';\r\n\r\n/**\r\n * @docsExtends PoContainerBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-container-basic\" title=\"PO Container Basic\">\r\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-container-basic/sample-po-container-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-container-labs\" title=\"PO Container Labs\">\r\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-container-labs/sample-po-container-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-container-dashboard\" title=\"PO Container - Dashboard\">\r\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.html\"> </file>\r\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.component.ts\"> </file>\r\n *  <file name=\"sample-po-container-dashboard/sample-po-container-dashboard.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-container',\r\n  templateUrl: './po-container.component.html'\r\n})\r\nexport class PoContainerComponent extends PoContainerBaseComponent {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoContainerComponent } from './po-container.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-container`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [PoContainerComponent],\r\n  declarations: [PoContainerComponent]\r\n})\r\nexport class PoContainerModule {}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\nconst PO_DISCLAIMER_TYPES = ['default', 'danger'];\r\nconst PO_DISCLAIMER_DEFAULT_TYPE = 'default';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente po-disclaimer é responsável por representar tags.\r\n * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,\r\n * como por exemplo, no po-multi-select.\r\n *\r\n */\r\n@Directive()\r\nexport class PoDisclaimerBaseComponent {\r\n  /**\r\n   * Label que aparecerá dentro do po-disclaimer.\r\n   * Quando não for definido um label será apresentada a propriedade p-value.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Valor do po-disclaimer. */\r\n  @Input('p-value') value: string;\r\n\r\n  /** Nome da propriedade vinculada à este po-disclaimer. */\r\n  @Input('p-property') property?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao fechar o disclaimer.\r\n   * Para este evento será passado como parâmetro um objeto com value, label e property.\r\n   */\r\n  @Output('p-close-action') closeAction: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  showDisclaimer = true;\r\n\r\n  private _type: string = 'default';\r\n  private _hideClose?: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Esta propriedade esconde o botão para fechamento do po-disclaimer, ao utilizar esta propriedade\r\n   * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-hide-close') set hideClose(value: boolean) {\r\n    this._hideClose = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get hideClose(): boolean {\r\n    return this._hideClose;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.\r\n   *\r\n   * @default default\r\n   * @optional\r\n   */\r\n  @Input('p-type') set type(type: string) {\r\n    this._type = PO_DISCLAIMER_TYPES.includes(type) ? type : PO_DISCLAIMER_DEFAULT_TYPE;\r\n  }\r\n\r\n  get type(): string {\r\n    return this._type;\r\n  }\r\n\r\n  close(): void {\r\n    this.showDisclaimer = false;\r\n    this.closeAction.emit({ value: this.value, label: this.label, property: this.property });\r\n  }\r\n\r\n  getLabel() {\r\n    return this.label ? this.label : this.value;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { isKeyCodeEnter } from '../../utils/util';\r\n\r\nimport { PoDisclaimerBaseComponent } from './po-disclaimer-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoDisclaimerBaseComponent\r\n *\r\n * @examplePrivate\r\n *\r\n * <example-private name=\"po-disclaimer\" title=\"PO Disclaimer\">\r\n *   <file name=\"sample-po-disclaimer.component.html\"> </file>\r\n *   <file name=\"sample-po-disclaimer.component.ts\"> </file>\r\n * </example-private>\r\n */\r\n@Component({\r\n  selector: 'po-disclaimer',\r\n  templateUrl: './po-disclaimer.component.html'\r\n})\r\nexport class PoDisclaimerComponent extends PoDisclaimerBaseComponent {\r\n  onKeyPress(event: any) {\r\n    if (isKeyCodeEnter(event)) {\r\n      this.close();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoDisclaimerComponent } from './po-disclaimer.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-disclaimer.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoDisclaimerComponent],\r\n  exports: [PoDisclaimerComponent]\r\n})\r\nexport class PoDisclaimerModule {}\r\n","import { DoCheck, EventEmitter, Input, IterableDiffers, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, isKeyCodeEnter, uuid } from '../../utils/util';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../services/po-language/po-language.constant';\r\n\r\nimport { PoDisclaimer } from '../po-disclaimer/po-disclaimer.interface';\r\n\r\nexport const poDisclaimerGroupLiteralsDefault = {\r\n  en: { removeAll: 'Remove all' },\r\n  es: { removeAll: 'Eliminar todos' },\r\n  pt: { removeAll: 'Remover todos' },\r\n  ru: { removeAll: 'Удалить все' }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-disclaimer-group` é recomendado para manipular palavras-chave de filtros aplicados em uma pesquisa.\r\n *\r\n * À partir de dois *disclaimers* com o botão **fechar** habilitado, o componente renderiza de forma automática um novo e destacado\r\n * *disclaimer* que possibilita **remover todos**, mas que também pode ser desabilitado.\r\n *\r\n * Também é possível navegar entre os *disclaimers* através do teclado utilizando a tecla *tab* e, para remoção do *disclaimer* selecionado,\r\n * basta pressionar a tecla *enter*. Esta funcionalidade não se aplica caso a propriedade `hideClose` estiver habilitada.\r\n *\r\n * > Veja a integração destas funcionalidade no componente [po-page-list](/documentation/po-page-list).\r\n */\r\n@Directive()\r\nexport class PoDisclaimerGroupBaseComponent implements DoCheck {\r\n  /** Título do grupo de *disclaimers*. */\r\n  @Input('p-title') title?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será disparada quando a lista de *disclaimers* for modificada.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será disparada quando um *disclaimer* for removido da lista de *disclaimers* pelo usuário.\r\n   *\r\n   * Recebe como parâmetro um objeto conforme a interface `PoDisclaimerGroupRemoveAction`.\r\n   */\r\n  @Output('p-remove') remove: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será disparada quando todos os *disclaimers* forem removidos da lista de *disclaimers* pelo usuário,\r\n   * utilizando o botão \"remover todos\".\r\n   *\r\n   * Recebe como parâmetro uma lista contendo todos os `disclaimers` removidos.\r\n   */\r\n  @Output('p-remove-all') removeAll: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  literals;\r\n\r\n  private _disclaimers: Array<PoDisclaimer> = [];\r\n  private _hideRemoveAll: boolean = false;\r\n\r\n  private differ;\r\n  private previousDisclaimers: Array<PoDisclaimer> = [];\r\n\r\n  /** Lista de *disclaimers*. */\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Lista de *disclaimers*.\r\n   *\r\n   * Para que a lista de *disclaimers* seja atualizada dinamicamente deve-se passar uma nova referência do array de `PoDisclaimer`.\r\n   *\r\n   * Exemplo adicionando um *disclaimer* no array:\r\n   *\r\n   * ```\r\n   * this.disclaimers = [...this.disclaimers, disclaimer];\r\n   * ```\r\n   *\r\n   * ou\r\n   *\r\n   * ```\r\n   * this.disclaimers = this.disclaimers.concat(disclaimer);\r\n   * ```\r\n   */\r\n  @Input('p-disclaimers') set disclaimers(value: Array<PoDisclaimer>) {\r\n    this.previousDisclaimers = [...this.disclaimers];\r\n    this._disclaimers = this.checkDisclaimers(value);\r\n  }\r\n\r\n  get disclaimers() {\r\n    return this._disclaimers;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta o botão para remover todos os *disclaimers* do grupo.\r\n   *\r\n   * > Por padrão, o mesmo é exibido à partir de dois ou mais *disclaimers* com a opção `hideClose` habilitada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-remove-all')\r\n  set hideRemoveAll(value: boolean) {\r\n    this._hideRemoveAll = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get hideRemoveAll() {\r\n    return this._hideRemoveAll;\r\n  }\r\n\r\n  constructor(differs: IterableDiffers, languageService: PoLanguageService) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.differ = differs.find([]).create(null);\r\n\r\n    this.literals = {\r\n      ...poDisclaimerGroupLiteralsDefault[poLocaleDefault],\r\n      ...poDisclaimerGroupLiteralsDefault[language]\r\n    };\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.checkChanges();\r\n  }\r\n\r\n  onCloseAction(disclaimer) {\r\n    this.removeDisclaimer(disclaimer);\r\n\r\n    this.emitChangeDisclaimers();\r\n    this.remove.emit({\r\n      removedDisclaimer: { ...disclaimer },\r\n      currentDisclaimers: [...this.disclaimers]\r\n    });\r\n  }\r\n\r\n  isRemoveAll() {\r\n    return !this.hideRemoveAll && this.disclaimers.filter(c => !c.hideClose).length > 1;\r\n  }\r\n\r\n  onKeyPress(event: any) {\r\n    if (isKeyCodeEnter(event)) {\r\n      this.removeAllItems();\r\n    }\r\n  }\r\n\r\n  removeAllItems() {\r\n    const removeItems = [];\r\n\r\n    this.disclaimers.forEach(disclaimer => {\r\n      if (!disclaimer.hideClose) {\r\n        removeItems.push(disclaimer);\r\n      }\r\n    });\r\n\r\n    removeItems.forEach(disclaimer => this.removeDisclaimer(disclaimer));\r\n\r\n    this.emitChangeDisclaimers();\r\n    this.removeAll.emit([...removeItems]);\r\n  }\r\n\r\n  private removeDisclaimer(disclaimer: any) {\r\n    const itemIndex = this.disclaimers.findIndex(d => d['$id'] === disclaimer['$id']);\r\n    this.disclaimers.splice(itemIndex, 1);\r\n  }\r\n\r\n  private checkChanges() {\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(this.disclaimers);\r\n\r\n      if (changes && this.disclaimersAreChanged(this.disclaimers)) {\r\n        this.emitChangeDisclaimers();\r\n      }\r\n    }\r\n  }\r\n\r\n  private checkDisclaimers(disclaimers: Array<PoDisclaimer>) {\r\n    if (Array.isArray(disclaimers)) {\r\n      for (let i = 0; i < disclaimers.length; i++) {\r\n        const disclaimer = disclaimers[i];\r\n\r\n        if (disclaimer.value || disclaimer.value === 0 || disclaimer.value === false) {\r\n          disclaimer['$id'] = uuid();\r\n        } else {\r\n          disclaimers.splice(i, 1);\r\n          i--;\r\n        }\r\n      }\r\n\r\n      return disclaimers;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private disclaimersAreChanged(disclaimers: Array<PoDisclaimer>): boolean {\r\n    const currentValues: Array<PoDisclaimer> = disclaimers;\r\n\r\n    if (currentValues.length !== this.previousDisclaimers.length) {\r\n      return true;\r\n    }\r\n\r\n    return currentValues.some(\r\n      (disclaimer, index) =>\r\n        disclaimer.value !== this.previousDisclaimers[index].value ||\r\n        disclaimer.property !== this.previousDisclaimers[index].property\r\n    );\r\n  }\r\n\r\n  private emitChangeDisclaimers() {\r\n    setTimeout(() => {\r\n      this.change.emit(this.disclaimers);\r\n    });\r\n    this.previousDisclaimers = [...this._disclaimers];\r\n  }\r\n}\r\n","import { Component, IterableDiffers } from '@angular/core';\r\n\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\nimport { PoDisclaimerGroupBaseComponent } from './po-disclaimer-group-base.component';\r\n\r\n/**\r\n * @docsExtends PoDisclaimerGroupBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-disclaimer-group-basic\" title=\"PO Disclaimer Group Basic\">\r\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-disclaimer-group-basic/sample-po-disclaimer-group-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-disclaimer-group-labs\" title=\"PO Disclaimer Group Labs\">\r\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-disclaimer-group-labs/sample-po-disclaimer-group-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-disclaimer-group-sw-planets\" title=\"PO Disclaimer Group - Star Wars Planets\">\r\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.html\"> </file>\r\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.component.ts\"> </file>\r\n *   <file name=\"sample-po-disclaimer-group-sw-planets/sample-po-disclaimer-group-sw-planets.service.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-disclaimer-group',\r\n  templateUrl: './po-disclaimer-group.component.html'\r\n})\r\nexport class PoDisclaimerGroupComponent extends PoDisclaimerGroupBaseComponent {\r\n  constructor(differs: IterableDiffers, languageService: PoLanguageService) {\r\n    super(differs, languageService);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Este é um componente interno utilizado pelo po-disclaimer-group, se comporta como um botão e recebe uma ação para remover todos os\r\n * po-disclaimers do grupo.\r\n */\r\n@Component({\r\n  selector: 'po-disclaimer-remove',\r\n  templateUrl: './po-disclaimer-remove.component.html'\r\n})\r\nexport class PoDisclaimerRemoveComponent {\r\n  /** Texto exibido.  */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Ação para remover todos.  */\r\n  @Output('p-remove-all-action') removeAllAction = new EventEmitter();\r\n\r\n  // Emite a ação de remover todos.\r\n  removeAction() {\r\n    this.removeAllAction.emit();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoDisclaimerModule } from '../po-disclaimer/po-disclaimer.module';\r\n\r\nimport { PoDisclaimerGroupComponent } from './po-disclaimer-group.component';\r\nimport { PoDisclaimerRemoveComponent } from './po-disclaimer-remove/po-disclaimer-remove.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-disclaimer-group.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoDisclaimerModule],\r\n  declarations: [PoDisclaimerGroupComponent, PoDisclaimerRemoveComponent],\r\n  exports: [PoDisclaimerGroupComponent]\r\n})\r\nexport class PoDisclaimerGroupModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n *\r\n * Este componente apresenta uma linha demarcadora de blocos e pode conter um *label*. Seu uso é indicado para definição\r\n * e organização de informações em uma tela e sua característica é semelhante à tag `<hr>`.\r\n */\r\n@Directive()\r\nexport class PoDividerBaseComponent {\r\n  /** Valor do rótulo a ser exibido. */\r\n  @Input('p-label') label?: string;\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { PoDividerBaseComponent } from './po-divider-base.component';\r\n\r\n/**\r\n * @docsExtends PoDividerBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-divider-basic\" title=\"PO Divider Basic\" >\r\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-divider-basic/sample-po-divider-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-divider-labs\" title=\"PO Divider Labs\" >\r\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-divider-labs/sample-po-divider-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-divider-user-detail\" title=\"PO Divider - User Detail\" >\r\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.html\"> </file>\r\n *  <file name=\"sample-po-divider-user-detail/sample-po-divider-user-detail.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-divider',\r\n  templateUrl: './po-divider.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoDividerComponent extends PoDividerBaseComponent {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoDividerComponent } from './po-divider.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-divider.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoDividerComponent],\r\n  exports: [PoDividerComponent]\r\n})\r\nexport class PoDividerModule {}\r\n","import { ElementRef, Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\r\n\r\nimport { PoPopupAction } from './po-popup-action.interface';\r\n\r\nconst poPopupDefaultPosition = 'bottom-left';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-popup` é um container pequeno recomendado para ações de navegação:\r\n * Ele abre sobreposto aos outros componentes.\r\n *\r\n * É possível escolher as posições do `po-popup` em relação ao componente alvo, para isto veja a propriedade `p-position`.\r\n *\r\n * Também é possível informar um _template_ _header_ para o `po-popup`, que será exibido acima das ações.\r\n * Para funcionar corretamente é preciso adicionar a propriedade `p-popup-header-template` no elemento que servirá de template, por exemplo:\r\n *\r\n * ```\r\n * <po-popup [p-target]=\"target\">\r\n *   <div p-popup-header-template>\r\n *     <div>\r\n *       Dev PO\r\n *     </div>\r\n *     <div>\r\n *       dev.po@po-ui.com.br\r\n *     </div>\r\n *   </div>\r\n * </po-popup >\r\n * ```\r\n */\r\n@Directive()\r\nexport class PoPopupBaseComponent {\r\n  arrowDirection: string = 'top-right';\r\n  showPopup: boolean = false;\r\n\r\n  protected oldTarget;\r\n  protected param;\r\n  protected clickoutListener: () => void;\r\n  protected resizeListener: () => void;\r\n\r\n  private _actions: Array<PoPopupAction>;\r\n  private _customPositions?: Array<string>;\r\n  private _hideArrow: boolean = false;\r\n  private _isCornerAlign: boolean = false;\r\n  private _position?: string = poPopupDefaultPosition;\r\n  private _target: any;\r\n\r\n  /** Lista de ações que serão exibidas no componente. */\r\n  @Input('p-actions') set actions(value: Array<PoPopupAction>) {\r\n    this._actions = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get actions() {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta a seta do componente *popup*.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\r\n    this._hideArrow = convertToBoolean(value);\r\n  }\r\n\r\n  get hideArrow(): boolean {\r\n    return this._hideArrow;\r\n  }\r\n\r\n  // Define se o `po-popup` será alinhado pelos cantos do elemento target.\r\n  @Input('p-is-corner-align') set isCornerAlign(value: boolean) {\r\n    this._isCornerAlign = convertToBoolean(value);\r\n  }\r\n\r\n  get isCornerAlign(): boolean {\r\n    return this._isCornerAlign;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a posição inicial que o `po-popup` abrirá em relação ao componente alvo. Sugere-se que seja\r\n   * usada a orientação `bottom-left` (abaixo e a esquerda), porém o mesmo é flexível e será rotacionado\r\n   * automaticamente para se adequar a tela, caso necessário.\r\n   *\r\n   * > Caso seja definido um `p-custom-positions` o componente irá abrir na posição definida na propriedade `p-position`\r\n   * e caso não caiba na posição inicial ele irá rotacionar seguindo a ordem de posições definidas no `p-custom-positions`.\r\n   *\r\n   * Posições válidas:\r\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\r\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\r\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\r\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\r\n   * - `bottom-left`: Posiciona o po-popup abaixo e à esquerda do componente alvo.\r\n   * - `bottom-right`: Posiciona o po-popup abaixo e à direita do componente alvo.\r\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\r\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\r\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\r\n   * - `top`: Posiciona o po-popup acima do componente alvo.\r\n   * - `top-right`: Posiciona o po-popup acima e à direita do componente alvo.\r\n   * - `top-left`: Posiciona o po-popup acima e à esquerda do componente alvo.\r\n   *\r\n   * @default `bottom-left`\r\n   */\r\n  @Input('p-position') set position(value: string) {\r\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : poPopupDefaultPosition;\r\n  }\r\n\r\n  get position(): string {\r\n    return this._position;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define as posições e a sequência que o `po-popup` poderá rotacionar. A sequência será definida pela ordem passada\r\n   * no *array*. Caso não seja definido, o `po-popup` irá rotacionar em todas as posições válidas.\r\n   *\r\n   * > O componente sempre irá abrir na posição definida no `p-position` e caso não caiba na posição definida o mesmo\r\n   * irá rotacionar seguindo a ordem definida pelo `p-custom-position`.\r\n   *\r\n   * Posições válidas:\r\n   * - `right`: Posiciona o po-popup no lado direito do componente alvo.\r\n   * - `right-bottom`: Posiciona o po-popup no lado direito inferior do componente alvo.\r\n   * - `right-top`: Posiciona o po-popup no lado direito superior do componente alvo.\r\n   * - `bottom`: Posiciona o po-popup abaixo do componente alvo.\r\n   * - `bottom-left`: Posiciona o po-popup abaixo e à esquerda do componente alvo.\r\n   * - `bottom-right`: Posiciona o po-popup abaixo e à direita do componente alvo.\r\n   * - `left`: Posiciona o po-popup no lado esquerdo do componente alvo.\r\n   * - `left-top`: Posiciona o po-popup no lado esquerdo superior do componente alvo.\r\n   * - `left-bottom`: Posiciona o po-popup no lado esquerdo inferior do componente alvo.\r\n   * - `top`: Posiciona o po-popup acima do componente alvo.\r\n   * - `top-right`: Posiciona o po-popup acima e à direita do componente alvo.\r\n   * - `top-left`: Posiciona o po-popup acima e à esquerda do componente alvo.\r\n   */\r\n  @Input('p-custom-positions') set customPositions(value: Array<string>) {\r\n    this._customPositions = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get customPositions() {\r\n    return this._customPositions;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Para utilizar o `po-popup` deve-se colocar uma variável local no componente que disparará o evento\r\n   * de abertura no mesmo e com isso, invocará a função `toggle`, por exemplo:\r\n   *\r\n   * ```\r\n   * <span #icon class=\"po-icon po-icon-credit-payment\" (click)=\"popup.toggle()\">\r\n   *   Credit Actions\r\n   * </span>\r\n   *\r\n   * <po-popup #popup\r\n   *   [p-actions]=\"actions\"\r\n   *   [p-target]=\"icon\">\r\n   * </po-popup>\r\n   * ```\r\n   *\r\n   * Caso o elemento alvo for um componente, será preciso obter o `ElementRef` do mesmo e passá-lo à propriedade, por exemplo:\r\n   *\r\n   * ```\r\n   * // component.html\r\n   *\r\n   * <po-button #poButton\r\n   *   p-label=\"Open Popover\"\r\n   *   (p-click)=\"popup.toggle()\">\r\n   * </po-button>\r\n   *\r\n   * <po-popup #popup\r\n   *   [p-actions]=\"actions\"\r\n   *   [p-target]=\"poButtonRef\">\r\n   * </po-popup>\r\n   *\r\n   * // component.ts\r\n   *\r\n   * @ViewChild('poButton', { read: ElementRef }) poButtonRef: ElementRef;\r\n   * ```\r\n   */\r\n  @Input('p-target') set target(value: any) {\r\n    this._target = value instanceof ElementRef ? value.nativeElement : value;\r\n  }\r\n\r\n  get target() {\r\n    return this._target;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../utils/util';\r\nimport { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';\r\n\r\nimport { PoPopupAction } from './po-popup-action.interface';\r\nimport { PoPopupBaseComponent } from './po-popup-base.component';\r\n\r\n/**\r\n *\r\n * @docsExtends PoPopupBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-popup-basic\" title=\"PO Popup - Basic\">\r\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-popup-basic/sample-po-popup-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-popup-labs\" title=\"PO Popup - Labs\">\r\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-popup-labs/sample-po-popup-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-popup-email\" title=\"PO Popup Email\">\r\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.html\"> </file>\r\n *   <file name=\"sample-po-popup-email/sample-po-popup-email.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-popup',\r\n  templateUrl: './po-popup.component.html',\r\n  providers: [PoControlPositionService]\r\n})\r\nexport class PoPopupComponent extends PoPopupBaseComponent {\r\n  @ViewChild('popupRef', { read: ElementRef }) popupRef: ElementRef;\r\n\r\n  constructor(\r\n    viewContainerRef: ViewContainerRef,\r\n    private renderer: Renderer2,\r\n    private router: Router,\r\n    private poControlPosition: PoControlPositionService,\r\n    public changeDetector: ChangeDetectorRef\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Fecha o componente *popup*.\r\n   *\r\n   * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.\r\n   */\r\n  close() {\r\n    this.removeListeners();\r\n\r\n    this.showPopup = false;\r\n  }\r\n\r\n  onActionClick(popupAction: PoPopupAction) {\r\n    const actionNoDisabled = popupAction && !this.returnBooleanValue(popupAction, 'disabled');\r\n\r\n    if (popupAction && popupAction.action && actionNoDisabled) {\r\n      this.close();\r\n      popupAction.action(this.param || popupAction);\r\n    }\r\n\r\n    if (popupAction && popupAction.url && actionNoDisabled) {\r\n      this.close();\r\n      return this.openUrl(popupAction.url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abre o componente *popup*.\r\n   *\r\n   * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.\r\n   */\r\n  open(param?) {\r\n    this.oldTarget = this.target;\r\n    this.param = param;\r\n    this.showPopup = true;\r\n    this.changeDetector.detectChanges();\r\n    this.validateInitialContent();\r\n  }\r\n\r\n  returnBooleanValue(popupAction: any, property: string) {\r\n    return isTypeof(popupAction[property], 'function')\r\n      ? popupAction[property](this.param || popupAction)\r\n      : popupAction[property];\r\n  }\r\n\r\n  /**\r\n   * Responsável por abrir e fechar o *popup*.\r\n   *\r\n   * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.\r\n   *\r\n   * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.\r\n   */\r\n  toggle(param?) {\r\n    this.showPopup && this.oldTarget === this.target ? this.close() : this.open(param);\r\n  }\r\n\r\n  private clickedOutDisabledItem(event) {\r\n    const containsItemDisabled =\r\n      this.elementContains(event.target, 'po-popup-item-disabled') ||\r\n      this.elementContains(event.target.parentElement, 'po-popup-item-disabled');\r\n\r\n    return !containsItemDisabled;\r\n  }\r\n\r\n  private clickedOutHeaderTemplate(event) {\r\n    const popupHeaderTemplate = this.popupRef && this.popupRef.nativeElement.querySelector('[p-popup-header-template]');\r\n    return !(popupHeaderTemplate && popupHeaderTemplate.contains(event.target));\r\n  }\r\n\r\n  private clickedOutTarget(event) {\r\n    return this.target && !this.target.contains(event.target);\r\n  }\r\n\r\n  private closePopupOnClickout(event: MouseEvent) {\r\n    if (this.clickedOutTarget(event) && this.clickedOutDisabledItem(event) && this.clickedOutHeaderTemplate(event)) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  private elementContains(element: HTMLElement, className: string) {\r\n    return element && element.classList.contains(className);\r\n  }\r\n\r\n  private hasContentToShow() {\r\n    return !!(this.popupRef.nativeElement && this.popupRef.nativeElement.clientHeight);\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.close();\r\n    });\r\n\r\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.closePopupOnClickout(event);\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onScroll = ({ target }): void => {\r\n    if (this.showPopup && target.className !== 'po-popup-container') {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  private openUrl(url: string) {\r\n    if (isExternalLink(url)) {\r\n      return openExternalLink(url);\r\n    }\r\n\r\n    if (url) {\r\n      return this.router.navigate([url]);\r\n    }\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private setPosition() {\r\n    this.poControlPosition.setElements(\r\n      this.popupRef.nativeElement,\r\n      8,\r\n      this.target,\r\n      this.customPositions,\r\n      false,\r\n      this.isCornerAlign\r\n    );\r\n    this.poControlPosition.adjustPosition(this.position);\r\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\r\n  }\r\n\r\n  private validateInitialContent() {\r\n    if (this.hasContentToShow()) {\r\n      this.setPosition();\r\n      this.initializeListeners();\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoIconModule } from '../po-icon/po-icon.module';\r\n\r\nimport { PoPopupComponent } from './po-popup.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-popup.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoIconModule],\r\n  declarations: [PoPopupComponent],\r\n  exports: [PoPopupComponent],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoPopupModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from './../../utils/util';\r\n\r\nimport { PoDropdownAction } from './po-dropdown-action.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-dropdown` pode ser utilizado como um agrupador de ações e / ou opções.\r\n *\r\n * > Caso não haja configuração de rotas em sua aplicação, se faz necessário importar o `RouterModule`\r\n * no módulo principal para o correto funcionamento deste componente:\r\n *\r\n * ```\r\n * import { RouterModule } from '@angular/router';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     ...\r\n *     RouterModule.forRoot([]),\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent\r\n *   ],\r\n *   exports: [],\r\n *   providers: [],\r\n *   bootstrap: [\r\n *     AppComponent\r\n *   ]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n * > Para maiores dúvidas referente à configuração de rotas, acesse em nosso portal /Guias /Começando\r\n * [/Configurando as rotas do po-menu](/guides/getting-started).\r\n */\r\n\r\n@Directive()\r\nexport class PoDropdownBaseComponent {\r\n  /** Adiciona um rótulo ao `dropdown`. */\r\n  @Input('p-label') label: string;\r\n\r\n  icon: string = 'po-icon-arrow-down';\r\n  open: boolean = false;\r\n\r\n  private _actions: Array<PoDropdownAction>;\r\n  private _disabled: boolean = false;\r\n\r\n  /** Lista de ações que serão exibidas no componente. */\r\n  @Input('p-actions') set actions(value: Array<PoDropdownAction>) {\r\n    this._actions = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get actions() {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o campo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n}\r\n","import { Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\r\n\r\nimport { isKeyCodeEnter } from './../../utils/util';\r\n\r\nimport { PoDropdownBaseComponent } from './po-dropdown-base.component';\r\n\r\n/**\r\n * @docsExtends PoDropdownBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dropdown-basic\" title=\"PO Dropdown Basic\" >\r\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-dropdown-basic/sample-po-dropdown-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dropdown-labs\" title=\"PO Dropdown Labs\" >\r\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-dropdown-labs/sample-po-dropdown-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dropdown-social-network\" title=\"PO Dropdown - Social Network\" >\r\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.html\"> </file>\r\n *  <file name=\"sample-po-dropdown-social-network/sample-po-dropdown-social-network.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-dropdown',\r\n  templateUrl: './po-dropdown.component.html'\r\n})\r\nexport class PoDropdownComponent extends PoDropdownBaseComponent {\r\n  @ViewChild('dropdownRef', { read: ElementRef, static: true }) dropdownRef: ElementRef;\r\n  @ViewChild('popupRef') popupRef: any;\r\n\r\n  private clickoutListener: () => void;\r\n  private resizeListener: () => void;\r\n\r\n  constructor(private renderer: Renderer2) {\r\n    super();\r\n  }\r\n\r\n  onKeyDown(event: any) {\r\n    if (isKeyCodeEnter(event)) {\r\n      this.toggleDropdown();\r\n    }\r\n  }\r\n\r\n  toggleDropdown(): void {\r\n    this.dropdownRef && !this.open && !this.disabled ? this.showDropdown() : this.hideDropdown();\r\n  }\r\n\r\n  private checkClickArea(event: MouseEvent) {\r\n    return this.dropdownRef && this.dropdownRef.nativeElement.contains(event.target);\r\n  }\r\n\r\n  private hideDropdown() {\r\n    this.icon = 'po-icon-arrow-down';\r\n    this.removeListeners();\r\n    this.popupRef.close();\r\n    this.open = false;\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnDropdown(event);\r\n    });\r\n\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.hideDropdown();\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onScroll = ({ target }): void => {\r\n    if (this.open && target.className !== 'po-popup-container') {\r\n      this.hideDropdown();\r\n    }\r\n  };\r\n\r\n  private removeListeners() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private showDropdown() {\r\n    this.icon = 'po-icon-arrow-up';\r\n    this.initializeListeners();\r\n    this.popupRef.open();\r\n    this.open = true;\r\n  }\r\n\r\n  private wasClickedOnDropdown(event: MouseEvent) {\r\n    const clickedOnDropdown = this.checkClickArea(event);\r\n\r\n    if (!clickedOnDropdown) {\r\n      this.hideDropdown();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPopupModule } from '../po-popup/po-popup.module';\r\n\r\nimport { PoDropdownComponent } from './po-dropdown.component';\r\n/**\r\n * @description\r\n * Módulo do componente po-dropdown.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoPopupModule],\r\n  declarations: [PoDropdownComponent],\r\n  exports: [PoDropdownComponent]\r\n})\r\nexport class PoDropdownModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente de uso interno, responsável por gerar uma margem inferior nos componentes que utilizam o po-field-container.\r\n * Essa margem inferior pode conter uma mensagem de erro.\r\n */\r\n@Component({\r\n  selector: 'po-field-container-bottom',\r\n  templateUrl: './po-field-container-bottom.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoFieldContainerBottomComponent {\r\n  /**\r\n   * Mensagem que será apresentada quando o pattern ou a máscara não for satisfeita.\r\n   * Obs: Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\r\n   */\r\n  @Input('p-error-pattern') errorPattern?: string = '';\r\n}\r\n","export const poFieldContainerLiterals = {\r\n  en: {\r\n    optional: '(Optional)'\r\n  },\r\n  es: {\r\n    optional: '(Opcional)'\r\n  },\r\n  pt: {\r\n    optional: '(Opcional)'\r\n  },\r\n  ru: {\r\n    optional: '(Пожеланию)'\r\n  }\r\n};\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poFieldContainerLiterals } from './po-field-container-literals';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * Componente de uso interno, responsável por atribuir uma label para o campo\r\n */\r\n@Component({\r\n  selector: 'po-field-container',\r\n  templateUrl: './po-field-container.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoFieldContainerComponent {\r\n  /** Label do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help: string;\r\n\r\n  literals;\r\n\r\n  private _optional: boolean = false;\r\n\r\n  /** Indica se o campo será opcional. */\r\n  @Input('p-optional') set optional(value: boolean) {\r\n    this._optional = convertToBoolean(value);\r\n  }\r\n\r\n  get optional() {\r\n    return this._optional;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poFieldContainerLiterals[language]\r\n    };\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoFieldContainerBottomComponent } from './po-field-container-bottom/po-field-container-bottom.component';\r\nimport { PoFieldContainerComponent } from './po-field-container.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-field-container`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [PoFieldContainerBottomComponent, PoFieldContainerComponent],\r\n  declarations: [PoFieldContainerBottomComponent, PoFieldContainerComponent]\r\n})\r\nexport class PoFieldContainerModule {}\r\n","export function requiredFailed(required: boolean, disabled: boolean, value: string | Array<any> | number | boolean) {\r\n  const valid =\r\n    (typeof value === 'string' && value) ||\r\n    (typeof value === 'object' && value && value.length) ||\r\n    (typeof value === 'number' && (value || value === 0)) ||\r\n    (typeof value === 'boolean' && value);\r\n  return required && !disabled && !valid;\r\n}\r\n\r\nexport function maxlengpoailed(maxlength: number, value: string | number) {\r\n  const validMaxlength = maxlength || maxlength === 0;\r\n  const validValue = (value || value === 0) && value.toString();\r\n  return validMaxlength && validValue && validValue.length > Number(maxlength);\r\n}\r\n\r\nexport function minlengpoailed(minlength: number, value: string | number) {\r\n  const validMinlength = minlength || minlength === 0;\r\n  const validValue = (value || value === 0) && value.toString();\r\n  return validMinlength && validValue && validValue.length < Number(minlength);\r\n}\r\n\r\nexport function patternFailed(pattern: string, value: string) {\r\n  let reg;\r\n  try {\r\n    reg = new RegExp(pattern);\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n  return pattern && value && !reg.test(value);\r\n}\r\n\r\nexport function minFailed(min: number, value: number) {\r\n  const validValue = value || value === 0;\r\n  const validMin = min || min === 0;\r\n  return validValue && validMin && value < min;\r\n}\r\n\r\nexport function maxFailed(max: number, value: number) {\r\n  const validValue = value || value === 0;\r\n  const validMax = max || max === 0;\r\n  return validValue && validMax && value > max;\r\n}\r\n\r\nexport function dateFailed(value: string) {\r\n  return value && isNaN(Date.parse(value));\r\n}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, convertToInt, uuid } from './../../../utils/util';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\r\nimport { PoCheckboxGroupOptionView } from './interfaces/po-checkbox-group-option-view.interface';\r\n\r\nconst poCheckboxGroupColumnsDefaultLength: number = 6;\r\nconst poCheckboxGroupColumnsTotalLength: number = 12;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-checkbox-group` exibe uma lista de múltipla escolha onde o usuário pode marcar e desmarcar,\r\n * utilizando a tecla de espaço ou o clique do mouse, várias opções.\r\n *\r\n * > Para seleção única, utilize o [**PO Radio Group**](/documentation/po-radio-group).\r\n *\r\n * Por padrão, o po-checkbox-group retorna um array com os valores dos itens selecionados para o model.\r\n *\r\n * ```\r\n * favorites = ['PO', 'Angular'];\r\n * ```\r\n *\r\n * Na maioria das situações, o array com os objetos setados já atende as necessidades mas, caso o desenvolvedor\r\n * tenha necessidade de usar um valor indeterminado (`null`), ou seja, nem marcado (`true`) e nem desmarcado (`false`),\r\n * deve setar a propriedade `p-indeterminate` como `true`.\r\n *\r\n * Nesse caso, o po-checkbox-group vai retornar um objeto com todas as opções disponíveis e seus valores.\r\n *\r\n * ```\r\n * favorites = {\r\n *  PO: true,\r\n *  Angular: true,\r\n *  VueJS: false,\r\n *  React: null // indeterminado\r\n * };\r\n * ```\r\n */\r\n@Directive()\r\nexport class PoCheckboxGroupBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Nome dos checkboxes */\r\n  @Input('name') name: string;\r\n\r\n  /** Texto de apoio do campo */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** Label do campo */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função para atualizar o `ngModel` do componente, necessário quando não for utilizado dentro da tag form.\r\n   *\r\n   * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n   * two-way binding no componente deve se utilizar da seguinte forma:\r\n   *\r\n   * ```\r\n   * <po-checkbox-group ... [ngModel]=\"checkboxgroupModel\" (ngModelChange)=\"checkboxgroupModel = $event\"> </po-checkbox-group>\r\n   * ```\r\n   *\r\n   */\r\n  @Output('ngModelChange') ngModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do campo\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  checkboxGroupOptionsView: Array<PoCheckboxGroupOptionView>;\r\n  checkedOptions: any = {};\r\n  checkedOptionsList: any = [];\r\n  mdColumns: number = poCheckboxGroupColumnsDefaultLength;\r\n  propagateChange: any;\r\n  validatorChange: any;\r\n\r\n  private _columns: number = poCheckboxGroupColumnsDefaultLength;\r\n  private _disabled?: boolean = false;\r\n  private _indeterminate?: boolean = false;\r\n  private _options?: Array<PoCheckboxGroupOption>;\r\n  private _required?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Possibilita definir a quantidade de colunas para exibição dos itens do *checkbox*.\r\n   * - É possível exibir as opções entre `1` e `4` colunas.\r\n   * - Para resolução `sm` a colunagem invariavelmente passa para `1` coluna.\r\n   * - Quando se trata de resolução `md` e o valor estabelecido para colunas for superior a `2`,\r\n   * o *grid system* será composto por `2` colunas.\r\n   * - Para evitar a quebra de linha, prefira a utilização de `1` coluna para opções com textos grandes.\r\n   *\r\n   * @default `2`\r\n   *\r\n   */\r\n  @Input('p-columns') set columns(value: number) {\r\n    const columns = convertToInt(value, poCheckboxGroupColumnsDefaultLength);\r\n\r\n    this._columns = this.getGridSystemColumns(columns, 4);\r\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita todos os itens do checkbox.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.validateModel(this.checkIndeterminate());\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caso exista a necessidade de usar o valor indeterminado (`null`) dentro da lista de opções, é necessário setar\r\n   * a propriedade `p-indeterminate` como `true`, por padrão essa propriedade vem desabilitada (`false`).\r\n   *\r\n   * Quando essa propriedade é setada como `true`, o *po-checkbox-group* passa a devolver um objeto completo para o\r\n   * `ngModel`, diferente do array que contém apenas os valores selecionados.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\r\n    this._indeterminate = convertToBoolean(indeterminate);\r\n  }\r\n\r\n  get indeterminate() {\r\n    return this._indeterminate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Lista de opções que serão exibidas\r\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoCheckboxGroupOption\r\n   */\r\n  @Input('p-options') set options(value: Array<PoCheckboxGroupOption>) {\r\n    this._options = Array.isArray(value) ? value : [];\r\n    this.removeDuplicatedOptions();\r\n    this.setCheckboxGroupOptionsView(this.options);\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.checkIndeterminate());\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  changeValue() {\r\n    const value = this.checkIndeterminate();\r\n\r\n    if (this.propagateChange) {\r\n      this.propagateChange(value);\r\n    } else {\r\n      this.ngModelChange.emit(value);\r\n    }\r\n\r\n    this.change.emit(value);\r\n  }\r\n\r\n  checkIndeterminate() {\r\n    return this.indeterminate ? this.checkedOptions : this.checkedOptionsList;\r\n  }\r\n\r\n  checkOption(value: PoCheckboxGroupOption) {\r\n    if (!this._disabled && !value.disabled) {\r\n      this.checkOptionModel(value);\r\n      this.changeValue();\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {}\r\n\r\n  writeValue(optionsModel: any) {\r\n    if (optionsModel && this.checkedOptions !== optionsModel) {\r\n      this.generateCheckOptions(optionsModel);\r\n    } else {\r\n      this.checkedOptionsList = [];\r\n      this.checkedOptions = {};\r\n    }\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (\r\n      (!this.indeterminate && requiredFailed(this.required, this.disabled, abstractControl.value)) ||\r\n      this.isInvalidIndeterminate()\r\n    ) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  private checkColumnsRange(columns, maxColumns): boolean {\r\n    const minColumns = 1;\r\n\r\n    return columns >= minColumns && columns <= maxColumns;\r\n  }\r\n\r\n  private checkOptionModel(optionChecked: PoCheckboxGroupOption) {\r\n    this.checkedOptions[optionChecked.value] = !this.checkedOptions[optionChecked.value];\r\n\r\n    if (!this.indeterminate && this.checkedOptionsList.includes(optionChecked.value)) {\r\n      this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(optionChecked.value), 1);\r\n    } else if (!this.indeterminate) {\r\n      this.checkedOptionsList.push(optionChecked.value);\r\n    }\r\n  }\r\n\r\n  private generateCheckOptions(optionsModel: any) {\r\n    this.checkedOptions = {};\r\n\r\n    if (optionsModel instanceof Array) {\r\n      this.checkedOptionsList = optionsModel;\r\n\r\n      this.options.forEach((option: PoCheckboxGroupOption) => {\r\n        this.checkedOptions[option.value] = optionsModel.includes(option.value);\r\n      });\r\n    } else {\r\n      this.options.forEach((option: PoCheckboxGroupOption) => {\r\n        optionsModel[option.value] = optionsModel[option.value] === undefined ? false : optionsModel[option.value];\r\n        this.checkedOptions = optionsModel;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\r\n    const gridSystemColumns = poCheckboxGroupColumnsTotalLength / columns;\r\n\r\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poCheckboxGroupColumnsDefaultLength;\r\n  }\r\n\r\n  private isInvalidIndeterminate() {\r\n    if (this.indeterminate && this.required && this.checkedOptions) {\r\n      return (<any>Object).values(this.checkedOptions).every(value => value === false);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private removeDuplicatedOptions() {\r\n    this.options.forEach((option, index) => {\r\n      const duplicatedIndex = this.options.findIndex((optionFind: any) => optionFind.value === option.value) === index;\r\n      if (!duplicatedIndex) {\r\n        this.options.splice(this.options.indexOf(option), 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  private setCheckboxGroupOptionsView(optionsList: Array<PoCheckboxGroupOption>) {\r\n    this.checkboxGroupOptionsView = optionsList.map(option => ({ ...option, id: uuid() }));\r\n  }\r\n}\r\n","import {\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  QueryList,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoCheckboxGroupBaseComponent } from './po-checkbox-group-base.component';\r\nimport { PoCheckboxGroupOption } from './interfaces/po-checkbox-group-option.interface';\r\n\r\n/**\r\n * @docsExtends PoCheckboxGroupBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-checkbox-group-basic\" title=\"PO Checkbox Group Basic\">\r\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-checkbox-group-basic/sample-po-checkbox-group-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-checkbox-group-labs\" title=\"PO Checkbox Group Labs\">\r\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-checkbox-group-labs/sample-po-checkbox-group-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-checkbox-group-password-policy\" title=\"PO Checkbox Group – Security policy\">\r\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.html\"> </file>\r\n *  <file name=\"sample-po-checkbox-group-password-policy/sample-po-checkbox-group-password-policy.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-checkbox-group',\r\n  templateUrl: './po-checkbox-group.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoCheckboxGroupComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoCheckboxGroupComponent extends PoCheckboxGroupBaseComponent implements AfterViewChecked, AfterViewInit {\r\n  @ViewChildren('checkboxLabel') checkboxLabels: QueryList<ElementRef>;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoCheckboxGroupComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoCheckboxGroupComponent, { static: true }) checkbox: PoCheckboxGroupComponent;\r\n   *\r\n   * focusCheckbox() {\r\n   *   this.checkbox.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (this.checkboxLabels && !this.disabled) {\r\n      const checkboxLabel = this.checkboxLabels.find((_, index) => !this.options[index].disabled);\r\n\r\n      if (checkboxLabel) {\r\n        checkboxLabel.nativeElement.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent, option: PoCheckboxGroupOption) {\r\n    const spaceBar = 32;\r\n\r\n    if (event.which === spaceBar || event.keyCode === spaceBar) {\r\n      this.checkOption(option);\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  trackByFn(index) {\r\n    return index;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoFieldContainerModule } from '../po-field-container/po-field-container.module';\r\n\r\nimport { PoCheckboxGroupComponent } from './po-checkbox-group.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-checkbox-group`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, PoFieldContainerModule],\r\n  exports: [PoCheckboxGroupComponent],\r\n  declarations: [PoCheckboxGroupComponent]\r\n})\r\nexport class PoCheckboxGroupModule {}\r\n","import { ElementRef, EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * Este componente é de uso interno utilizado por componentes de entrada de dados com o objetivo de resetar as informações do model.\r\n *\r\n * Por padrão limpa o valor do campo e executa o método onChangePropagate, caso tenha a necessidade de tratar a função de limpar o campo,\r\n * deve implementar a interface PoClean.\r\n */\r\n@Directive()\r\nexport abstract class PoCleanBaseComponent {\r\n  /** Nesta propriedade deve-se informar o elementRef do campo de entrada que utilizará o po-clean. */\r\n  @Input('p-element-ref') inputRef: ElementRef;\r\n\r\n  /** Valor que será atribuído ao campo quando for clicado no po-clean. */\r\n  @Input('p-default-value') defaultValue?: string = '';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   *\r\n   * Evento disparado quando executada ação do po-clean.\r\n   * Este evento deve ser usado para avisar para o componente que está usando o po-clean, que o botão foi disparado,\r\n   * e provavelmente será preciso emitir o evento para atualizar o model.\r\n   */\r\n  @Output('p-change-event') changeEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  clear() {\r\n    this.setInputValue(this.defaultValue);\r\n    this.changeEvent.emit(this.defaultValue);\r\n  }\r\n\r\n  showIcon() {\r\n    return this.defaultValue !== this.getInputValue();\r\n  }\r\n\r\n  abstract setInputValue(value: string): void;\r\n\r\n  abstract getInputValue(): string;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoCleanBaseComponent } from './po-clean-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoCleanBaseComponent\r\n *\r\n * @examplePrivate\r\n *\r\n * <example-private name=\"po-clean-labs\" title=\"PO Clean Labs\">\r\n *   <file name=\"sample-po-clean-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-clean-labs.component.ts\"> </file>\r\n * </example-private>\r\n */\r\n@Component({\r\n  selector: 'po-clean',\r\n  templateUrl: './po-clean.component.html'\r\n})\r\nexport class PoCleanComponent extends PoCleanBaseComponent {\r\n  setInputValue(value?: string) {\r\n    if (this.inputRef && this.inputRef.nativeElement) {\r\n      this.inputRef.nativeElement.value = value;\r\n    }\r\n  }\r\n\r\n  getInputValue() {\r\n    if (this.inputRef && this.inputRef.nativeElement) {\r\n      return this.inputRef.nativeElement.value;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoCleanComponent } from './po-clean.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-clean`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [PoCleanComponent],\r\n  declarations: [PoCleanComponent]\r\n})\r\nexport class PoCleanModule {}\r\n","/**\r\n * Para usar o po-mask é preciso instanciar esta classe passando a máscara como\r\n * primeiro parâmetro, e no segundo parâmetro, deve se informado true, caso queira\r\n * que o model seja formatado ou false para o que o model seja limpo.\r\n */\r\nexport class PoMask {\r\n  mask: string = '';\r\n  formatModel: boolean = false;\r\n  // controle de posição\r\n  initialPosition: number = 0;\r\n  finalPosition: number = 0;\r\n\r\n  pattern: string = '';\r\n  get getPattern(): string {\r\n    return this.pattern;\r\n  }\r\n\r\n  valueToInput: string;\r\n  get getValueToInput(): string {\r\n    return this.valueToInput;\r\n  }\r\n  set setValueToInput(value: string) {\r\n    this.valueToInput = value;\r\n  }\r\n\r\n  valueToModel: string;\r\n  get getValueToModel(): string {\r\n    return this.valueToModel;\r\n  }\r\n  set setValueToModel(value: string) {\r\n    this.valueToModel = value;\r\n  }\r\n\r\n  formattingEnds: boolean;\r\n\r\n  constructor(mask: string, formatModel: boolean) {\r\n    this.mask = mask;\r\n    this.formatModel = formatModel;\r\n    this.pattern = this.getRegexFromMask(mask);\r\n  }\r\n\r\n  keyup($event: any) {\r\n    if (this.mask) {\r\n      const value = $event.target.value;\r\n      // formata o valor quando for colado com control + v e reposiciona o cursor\r\n      if ($event.keyCode === 17 || $event.keyCode === 91) {\r\n        $event.target.value = this.controlFormatting(value);\r\n        this.resetPositions($event);\r\n      }\r\n\r\n      $event.preventDefault();\r\n\r\n      switch ($event.keyCode) {\r\n        case 37: // seta esquerda\r\n          if (this.initialPosition > 0) {\r\n            this.initialPosition--;\r\n          }\r\n          this.setPositionNotShiftKey($event);\r\n          this.setSelectionRange($event);\r\n          break;\r\n\r\n        case 39: // seta direita\r\n          if (this.initialPosition < value.toString().length) {\r\n            this.initialPosition++;\r\n          }\r\n          this.setPositionNotShiftKey($event);\r\n          this.setSelectionRange($event);\r\n          break;\r\n\r\n        case 35: // end\r\n          this.finalPosition = value.toString().length;\r\n          if ($event.shiftKey) {\r\n            this.setPositions($event);\r\n          } else {\r\n            this.initialPosition = this.finalPosition;\r\n            this.setPositions($event);\r\n          }\r\n          break;\r\n\r\n        case 36: // HOME\r\n          if ($event.shiftKey) {\r\n            this.finalPosition = this.initialPosition;\r\n            this.initialPosition = 0;\r\n            this.setPositions($event);\r\n          } else {\r\n            this.initialPosition = 0;\r\n            this.finalPosition = 0;\r\n            this.setPositions($event);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  setPositionNotShiftKey($event: any) {\r\n    if (!$event.shiftKey) {\r\n      this.finalPosition = this.initialPosition;\r\n    }\r\n  }\r\n\r\n  setSelectionRange($event: any) {\r\n    if (this.initialPosition > this.finalPosition) {\r\n      $event.target.setSelectionRange(this.finalPosition, this.initialPosition);\r\n    } else {\r\n      $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\r\n    }\r\n  }\r\n\r\n  keydown($event: any) {\r\n    if (this.mask) {\r\n      let value: string = $event.target.value;\r\n      if ($event.keyCode === 9) {\r\n        return;\r\n      }\r\n\r\n      if (!$event.ctrlKey && !$event.metaKey) {\r\n        $event.preventDefault();\r\n      }\r\n\r\n      // Não faz nada quando for digitado CTRL ou COMMAND e V\r\n      // Já está sendo tratado no evento keyup\r\n      if (\r\n        $event.ctrlKey ||\r\n        ($event.metaKey && $event.keyCode !== 86) ||\r\n        ($event.keyCode >= 37 && $event.keyCode <= 40) ||\r\n        $event.keyCode === 16 ||\r\n        $event.keyCode === 9\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Valida a tecla digitada\r\n      if (this.isKeyValid($event.keyCode)) {\r\n        if (this.finalPosition === null) {\r\n          this.finalPosition = this.initialPosition;\r\n        }\r\n        this.revertPositions(this.initialPosition, this.finalPosition);\r\n\r\n        switch ($event.keyCode) {\r\n          case 8: // backspace\r\n            this.getPosition($event);\r\n            if (this.initialPosition < 0) {\r\n              this.initialPosition = 0;\r\n              this.setPositions($event);\r\n            }\r\n            if (this.initialPosition === this.finalPosition) {\r\n              this.checkMaskBefore($event, -1);\r\n              if (this.initialPosition !== 0) {\r\n                value = value.slice(0, this.initialPosition - 1) + value.slice(this.finalPosition);\r\n                value = this.controlFormatting(value);\r\n                $event.target.value = value;\r\n                this.changePosition($event, -1);\r\n                this.checkMaskBefore($event, -1);\r\n                this.setPositions($event);\r\n                this.resetPositions($event);\r\n              }\r\n            } else {\r\n              this.clearRangeSelection(value, $event, true);\r\n            }\r\n            this.setPositions($event);\r\n            break;\r\n\r\n          case 46: // delete\r\n            this.getPosition($event);\r\n            if (this.initialPosition === this.finalPosition) {\r\n              this.checkMaskAfter($event, 1);\r\n              value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition + 1);\r\n              value = this.controlFormatting(value);\r\n              $event.target.value = value;\r\n              this.setPositions($event);\r\n              this.resetPositions($event);\r\n            } else {\r\n              this.clearRangeSelection(value, $event, false);\r\n            }\r\n            this.setPositions($event);\r\n            break;\r\n\r\n          default:\r\n            // qualquer outra tecla válida\r\n            this.getPosition($event);\r\n            value = value.slice(0, this.initialPosition) + $event.key + value.slice(this.finalPosition);\r\n            value = this.controlFormatting(value);\r\n            $event.target.value = value;\r\n            this.changePosition($event, 1);\r\n            this.checkMaskBefore($event, 1);\r\n            this.setPositions($event);\r\n            this.resetPositions($event);\r\n            this.setPositions($event);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clearRangeSelection(value: string, $event: any, isBackspace: boolean) {\r\n    value = value.slice(0, this.initialPosition) + value.slice(this.finalPosition);\r\n    value = this.controlFormatting(value);\r\n    $event.target.value = value;\r\n\r\n    if (isBackspace) {\r\n      this.checkMaskBefore($event, -1);\r\n    }\r\n\r\n    this.setPositions($event);\r\n    this.resetPositions($event);\r\n  }\r\n\r\n  // passa a posição do click para o controle de posição\r\n  click($event: any) {\r\n    this.initialPosition = $event.target.selectionStart;\r\n    this.finalPosition = $event.target.selectionEnd;\r\n  }\r\n\r\n  blur($event: any) {\r\n    // Se houver algum valor definido na máscara\r\n    if (this.mask) {\r\n      // pega o valor do campo, formata e passa para o model\r\n      let value = $event.target.value;\r\n      value = this.controlFormatting(value);\r\n      $event.target.value = value;\r\n    }\r\n  }\r\n\r\n  revertPositions(initialPosition: number, finalPosition: number) {\r\n    if (initialPosition > finalPosition) {\r\n      // inverte o controle de posição caso o inicial esteja maior que o final\r\n      const tempPosition = initialPosition;\r\n      this.initialPosition = finalPosition;\r\n      this.finalPosition = tempPosition;\r\n    }\r\n  }\r\n\r\n  // reseta o controle de posição\r\n  resetPositions($event: any) {\r\n    this.initialPosition = $event.target.selectionStart;\r\n    this.finalPosition = this.initialPosition;\r\n  }\r\n\r\n  // posiciona o cursor de acordo com o controle de posição\r\n  setPositions($event: any) {\r\n    $event.target.setSelectionRange(this.initialPosition, this.finalPosition);\r\n  }\r\n\r\n  // muda a posição do cursor e atualiza o controle de posição\r\n  changePosition($event: any, value: number) {\r\n    this.initialPosition = this.initialPosition + value;\r\n    this.finalPosition = this.finalPosition + value;\r\n    this.setPositions($event);\r\n  }\r\n\r\n  getPosition($event: any) {\r\n    this.initialPosition = $event.target.selectionStart;\r\n    this.finalPosition = $event.target.selectionEnd;\r\n    this.setPositions($event);\r\n  }\r\n\r\n  // Método responsável por controlar a formatação e aplicar todas as máscara possíveis\r\n  // quando houver valores opcionais (?)\r\n  controlFormatting(value: string) {\r\n    // Se o valor for vazio, retorna vazio\r\n    if (!value) {\r\n      this.valueToInput = '';\r\n      this.valueToModel = '';\r\n      return '';\r\n    }\r\n    let valueProcessed;\r\n    let maskTmp = this.mask;\r\n\r\n    // Array que será usado para armazenar todas as máscaras possíveis para\r\n    // quando houver um valor opcional (?)\r\n    const arrMasks: Array<any> = [];\r\n    let contMasks = 0;\r\n\r\n    // Enquanto houver algum 9? na máscara\r\n    while (this.hasOptionalNumber(maskTmp)) {\r\n      arrMasks.push(maskTmp);\r\n      maskTmp = this.replaceOptionalNumber(maskTmp);\r\n    }\r\n    arrMasks.push(maskTmp);\r\n\r\n    // Inverte o array\r\n    arrMasks.reverse();\r\n\r\n    // Informa que a formatação ainda não chegou ao fim\r\n    this.formattingEnds = false;\r\n\r\n    while (!this.formattingEnds) {\r\n      // Seta a formatação como terminada\r\n      // Então o método formatValue irá setar como não terminado caso haja\r\n      this.formattingEnds = true;\r\n\r\n      // Se não existe mais nenhuma máscara possível, então encerra a formatação\r\n      if (!arrMasks[contMasks]) {\r\n        break;\r\n      }\r\n\r\n      // Chama a formatação passando a máscara e o valor\r\n      valueProcessed = this.formatValue(value, arrMasks[contMasks]);\r\n      contMasks++;\r\n    }\r\n\r\n    return valueProcessed;\r\n  }\r\n\r\n  // Função que formata a máscara com o valor passado\r\n  formatValue(value: string, mask: string) {\r\n    // Remove as marcas de valor opciona (?)\r\n    mask = mask.replace(/\\?/g, '');\r\n\r\n    // Substitui todos os caracteres que não são fixos da máscara por _\r\n    const guide = mask.replace(this.listValidKeys(), '_');\r\n\r\n    // Contador usado para percorrer o guide\r\n    let contGuide: number = 0;\r\n\r\n    // String final formatada\r\n    let valueProcessed: string = '';\r\n\r\n    // Remove do valor todos os caracteres fixos como ()/-+\r\n    value = this.removeFormattingValue(value);\r\n\r\n    // Percorre todo o valor e coloca a formatação de acordo com a máscara\r\n    for (let i = 0; i < value.length; i++) {\r\n      const charValue = value[i];\r\n\r\n      // Se o guide acabou, seta a formatação como não terminada para que o método controlFormatting\r\n      // tente formatar com outra possível máscara\r\n      if (!guide[contGuide]) {\r\n        this.formattingEnds = false;\r\n        break;\r\n      }\r\n\r\n      // Percorre o Guide enquanto tem caracteres fixos\r\n      while (this.isFixedCharacterGuide(guide[contGuide]) && guide[contGuide]) {\r\n        valueProcessed += guide[contGuide];\r\n        contGuide++;\r\n      }\r\n\r\n      // É um caracter válido de acordo com a máscara\r\n      if (this.isKeyValidMask(charValue, mask[contGuide])) {\r\n        valueProcessed += charValue;\r\n        contGuide++;\r\n      } else {\r\n        // Se não é um caracter válido, deve interromper.\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (this.formatModel) {\r\n      this.valueToInput = valueProcessed;\r\n      this.valueToModel = valueProcessed;\r\n    } else {\r\n      this.valueToInput = valueProcessed;\r\n      this.valueToModel = this.removeFormattingValue(valueProcessed);\r\n    }\r\n    return valueProcessed;\r\n  }\r\n  // verifica se tem algum caracter de mascara antes do cursor\r\n  checkMaskBefore($event: any, position: number) {\r\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition - 1))) {\r\n      this.changePosition($event, position);\r\n      this.checkMaskBefore($event, position);\r\n    }\r\n  }\r\n\r\n  // verifica se tem algum caracter de mascara depois do cursor\r\n  checkMaskAfter($event: any, position: number) {\r\n    if (this.isFixedCharacterGuide($event.target.value.toString().charAt(this.initialPosition))) {\r\n      this.changePosition($event, position);\r\n      this.checkMaskAfter($event, position);\r\n    }\r\n  }\r\n\r\n  // Retorna a máscara sem um valor opcional\r\n  replaceOptionalNumber(mask: string) {\r\n    let i = 9;\r\n    while (i >= 0) {\r\n      if (mask.indexOf(i + '?') > -1) {\r\n        return mask.replace(i + '?', '');\r\n      }\r\n      i--;\r\n    }\r\n    return mask;\r\n  }\r\n\r\n  // Verifica se contém caracteres permitidos somente na máscara \\/() +-\r\n  isFixedCharacterGuide(key: any) {\r\n    return this.testRegex(key, this.getFixedCharacterGuide());\r\n  }\r\n\r\n  // Retorna caracteres permitidos somente na máscara \\/() +-\r\n  getFixedCharacterGuide() {\r\n    return /[\\\\\\/() +-.\\:]/g;\r\n  }\r\n\r\n  // Caracteres permitidos de serem digitados\r\n  listValidKeys() {\r\n    return /[a-zA-Z0-9]/g;\r\n  }\r\n\r\n  // Se é um dígito válido\r\n  isKeyValid(keyCode: any) {\r\n    return this.isKeyCodeValid(keyCode);\r\n  }\r\n\r\n  // Verifica se a tecla digitada é permitida\r\n  // Permite apenas números, letras, backspace e del\r\n  isKeyCodeValid(keyCode: number) {\r\n    return (\r\n      (keyCode >= 48 && keyCode <= 57) ||\r\n      (keyCode >= 65 && keyCode <= 90) ||\r\n      (keyCode >= 96 && keyCode <= 105) ||\r\n      keyCode === 8 ||\r\n      keyCode === 9 ||\r\n      keyCode === 46\r\n    );\r\n  }\r\n\r\n  // Se está de acordo com a máscara\r\n  isKeyValidMask(key: any, keyMask: any) {\r\n    return this.testRegex(key, this.replaceMask(keyMask));\r\n  }\r\n\r\n  // Retorna se a chave foi aprovada pela expressão regular\r\n  testRegex(key: any, regex: any) {\r\n    return regex.test(key);\r\n  }\r\n\r\n  // Remove a formatacão do valor\r\n  // É possível ser melhorado para remover pontualmente os caracteres fixos de acordo com a máscara\r\n  removeFormattingValue(value: string) {\r\n    return value.replace(this.getFixedCharacterGuide(), '');\r\n  }\r\n\r\n  // Verifica se contém valor opcional na máscara 0-9?\r\n  hasOptionalNumber(mask: string) {\r\n    return mask.match(/\\d\\?/g);\r\n  }\r\n\r\n  // Retorna a expressão regular correspondente ao comando passado\r\n  replaceMask(char: string) {\r\n    let regex = /./;\r\n    switch (char) {\r\n      case '0':\r\n        regex = /[0]/;\r\n        break;\r\n      case '1':\r\n        regex = /[0-1]/;\r\n        break;\r\n      case '2':\r\n        regex = /[0-2]/;\r\n        break;\r\n      case '3':\r\n        regex = /[0-3]/;\r\n        break;\r\n      case '4':\r\n        regex = /[0-4]/;\r\n        break;\r\n      case '5':\r\n        regex = /[0-5]/;\r\n        break;\r\n      case '6':\r\n        regex = /[0-6]/;\r\n        break;\r\n      case '7':\r\n        regex = /[0-7]/;\r\n        break;\r\n      case '8':\r\n        regex = /[0-8]/;\r\n        break;\r\n      case '9':\r\n        regex = /[0-9]/;\r\n        break;\r\n      case ' ':\r\n        regex = /\\s/;\r\n        break;\r\n      case '@':\r\n        regex = /[a-zA-Z]/;\r\n        break;\r\n      case 'w':\r\n        regex = /[a-zA-Z0-9]/;\r\n        break;\r\n    }\r\n    return regex;\r\n  }\r\n\r\n  getRegexFromMask(mask: string) {\r\n    if (mask) {\r\n      let pattern;\r\n      if (this.formatModel) {\r\n        pattern = mask.replace(/\\\\/g, '\\\\\\\\');\r\n        pattern = pattern.replace(/\\+/g, '\\\\+');\r\n        pattern = pattern.replace(/\\./g, '\\\\.');\r\n        pattern = pattern.replace(/-/g, '-');\r\n        pattern = pattern.replace(/\\(/g, '\\\\(');\r\n        pattern = pattern.replace(/\\)/g, '\\\\)');\r\n        pattern = pattern.replace(/\\//g, '\\\\/');\r\n        pattern = pattern.replace(/\\s/g, '\\\\s');\r\n        pattern = pattern.replace(/:/g, '\\\\:');\r\n        pattern = pattern.replace(/\\@(?!\\s)/g, '\\\\w');\r\n        pattern = pattern.replace(/\\d/g, '\\\\w');\r\n      } else {\r\n        pattern = mask.replace(/\\\\/g, '');\r\n        pattern = pattern.replace(/\\+/g, '');\r\n        pattern = pattern.replace(/\\./g, '');\r\n        pattern = pattern.replace(/-/g, '');\r\n        pattern = pattern.replace(/\\(/g, '');\r\n        pattern = pattern.replace(/\\)/g, '');\r\n        pattern = pattern.replace(/\\//g, '');\r\n        pattern = pattern.replace(/\\s/g, '');\r\n        pattern = pattern.replace(/:/g, '');\r\n        pattern = pattern.replace(/\\@/g, '\\\\w');\r\n        pattern = pattern.replace(/\\d/g, '\\\\w');\r\n      }\r\n      return pattern;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoDatepickerComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* que define o padrão de formatação das datas.\r\n *\r\n * > Caso um formato padrão seja definido, o mesmo não será mais alterado de acordo com o formato de entrada.\r\n */\r\nexport enum PoDatepickerIsoFormat {\r\n  /** Padrão **E8601DAw** (*yyyy-mm-dd*). */\r\n  Basic = 'basic',\r\n\r\n  /** Padrão **E8601DZw** (*yyyy-mm-ddThh:mm:ss+|-hh:mm*). */\r\n  Extended = 'extended'\r\n}\r\n","import { EventEmitter, Input, OnInit, Output, Directive } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\n\r\nimport {\r\n  convertDateToISODate,\r\n  convertDateToISOExtended,\r\n  convertIsoToDate,\r\n  convertToBoolean,\r\n  formatYear,\r\n  getShortBrowserLanguage,\r\n  isTypeof,\r\n  setYearFrom0To100,\r\n  validateDateRange\r\n} from '../../../utils/util';\r\nimport { dateFailed, requiredFailed } from './../validators';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { PoMask } from '../po-input/po-mask';\r\n\r\nimport { PoDatepickerIsoFormat } from './enums/po-datepicker-iso-format.enum';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\n\r\nconst poDatepickerFormatDefault: string = 'dd/mm/yyyy';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-datepicker` é um componente específico para manipulação de datas permitindo a digitação e / ou seleção.\r\n *\r\n * O formato de exibição da data, ou seja, o formato que é apresentado ao usuário é o dd/mm/yyyy,\r\n * mas podem ser definidos outros padrões (veja mais na propriedade `p-format`).\r\n *\r\n * O idioma padrão do calendário será exibido de acordo com o navegador, caso tenha necessidade de alterar\r\n * use a propriedade `p-locale`.\r\n *\r\n * O datepicker aceita três formatos de data: o E8601DZw (yyyy-mm-ddThh:mm:ss+|-hh:mm), o E8601DAw (yyyy-mm-dd) e o\r\n * Date padrão do Javascript.\r\n *\r\n * > Por padrão, o formato de saída do *model* se ajustará conforme o formato de entrada. Se por acaso precisar controlar o valor de saída,\r\n * a propriedade `p-iso-format` provê esse controle independentemente do formato de entrada. Veja abaixo os formatos disponíveis:\r\n *\r\n * - Formato de entrada e saída (E8601DZw) - `'2017-11-28T00:00:00-02:00'`;\r\n *\r\n * - Formato de entrada e saída (E8601DAw) - `'2017-11-28'`;\r\n *\r\n * - Formato de entrada (Date) - `new Date(2017, 10, 28)` e saída (E8601DAw) - `'2017-11-28'`;\r\n *\r\n * **Importante:**\r\n *\r\n * - Para utilizar datas com ano inferior a 100, verificar o comportamento do [`new Date`](https://www.w3schools.com/js/js_dates.asp)\r\n * e utilizar o método [`setFullYear`](https://www.w3schools.com/jsref/jsref_setfullyear.asp).\r\n * - Caso a data esteja inválida, o `model` receberá **'Data inválida'**.\r\n * - Caso o `input` esteja passando um `[(ngModel)]`, mas não tenha um `name`, então irá ocorrer um erro\r\n * do próprio Angular (`[ngModelOptions]=\"{standalone: true}\"`).\r\n *\r\n * Exemplo:\r\n *\r\n * ```\r\n * <po-datepicker\r\n *   [(ngModel)]=\"pessoa.nome\"\r\n *   [ngModelOptions]=\"{standalone: true}\"\r\n * </po-datepicker>\r\n * ```\r\n *\r\n * > Não esqueça de importar o `FormsModule` em seu módulo, tal como para utilizar o `input default`.\r\n */\r\n@Directive()\r\nexport abstract class PoDatepickerBaseComponent implements ControlValueAccessor, OnInit, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /* Nome do componente datepicker. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * Mensagem apresentada quando a data for inválida ou fora do período.\r\n   *\r\n   * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja obrigatório.\r\n   */\r\n  @Input('p-error-pattern') errorPattern?: string = '';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao sair do campo.\r\n   */\r\n  @Output('p-blur') onblur: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do campo.\r\n   */\r\n  @Output('p-change') onchange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  protected firstStart = true;\r\n  protected hour: string = 'T00:00:01-00:00';\r\n  protected isExtendedISO: boolean = false;\r\n  protected objMask: any;\r\n  protected onChangeModel: any = null;\r\n  protected validatorChange: any;\r\n  protected onTouchedModel: any = null;\r\n\r\n  private _format?: string = poDatepickerFormatDefault;\r\n  private _isoFormat: PoDatepickerIsoFormat;\r\n  private _maxDate: Date;\r\n  private _minDate: Date;\r\n  private _noAutocomplete?: boolean = false;\r\n  private _placeholder?: string = '';\r\n  private shortLanguage: string;\r\n  private previousValue: any;\r\n  private _date: Date;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\r\n    this._noAutocomplete = convertToBoolean(value);\r\n  }\r\n\r\n  get noAutocomplete() {\r\n    return this._noAutocomplete;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Mensagem que aparecerá enquanto o campo não estiver preenchido.\r\n   */\r\n  @Input('p-placeholder') set placeholder(placeholder: string) {\r\n    this._placeholder = isTypeof(placeholder, 'string') ? placeholder : '';\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /** Desabilita o campo. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  disabled?: boolean = false;\r\n  @Input('p-disabled') set setDisabled(disabled: string) {\r\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\r\n\r\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\r\n  }\r\n\r\n  /** Torna o elemento somente leitura. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  readonly?: boolean = false;\r\n  @Input('p-readonly') set setReadonly(readonly: string) {\r\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\r\n  }\r\n\r\n  /** Faz com que o campo seja obrigatório. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  required?: boolean = false;\r\n  @Input('p-required') set setRequired(required: string) {\r\n    this.required = required === '' ? true : convertToBoolean(required);\r\n\r\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\r\n  }\r\n\r\n  /** Habilita ação para limpar o campo. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  clean?: boolean = false;\r\n  @Input('p-clean') set setClean(clean: string) {\r\n    this.clean = clean === '' ? true : convertToBoolean(clean);\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma data mínima para o `po-datepicker`.\r\n   */\r\n  @Input('p-min-date') set minDate(value: string | Date) {\r\n    if (value instanceof Date) {\r\n      const year = value.getFullYear();\r\n\r\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\r\n      setYearFrom0To100(date, year);\r\n\r\n      this._minDate = date;\r\n    } else {\r\n      this._minDate = convertIsoToDate(value, true, false);\r\n    }\r\n\r\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\r\n  }\r\n\r\n  get minDate() {\r\n    return this._minDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma data máxima para o `po-datepicker`.\r\n   */\r\n  @Input('p-max-date') set maxDate(value: string | Date) {\r\n    if (value instanceof Date) {\r\n      const year = value.getFullYear();\r\n\r\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\r\n      setYearFrom0To100(date, year);\r\n\r\n      this._maxDate = date;\r\n    } else {\r\n      this._maxDate = convertIsoToDate(value, false, true);\r\n    }\r\n\r\n    this.validateModel(convertDateToISOExtended(this.date, this.hour));\r\n  }\r\n\r\n  get maxDate() {\r\n    return this._maxDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Formato de exibição da data.\r\n   *\r\n   * Valores válidos:\r\n   *  - `dd/mm/yyyy`\r\n   *  - `mm/dd/yyyy`\r\n   *  - `yyyy/mm/dd`\r\n   *\r\n   * @default `dd/mm/yyyy`\r\n   */\r\n  @Input('p-format') set format(value: string) {\r\n    if (value) {\r\n      value = value.toLowerCase();\r\n      if (value.match(/dd/) && value.match(/mm/) && value.match(/yyyy/)) {\r\n        this._format = value;\r\n        this.objMask = this.buildMask();\r\n        this.refreshValue(this.date);\r\n        return;\r\n      }\r\n    }\r\n    this._format = poDatepickerFormatDefault;\r\n    this.objMask = this.buildMask();\r\n  }\r\n\r\n  get format() {\r\n    return this._format;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Padrão de formatação para saída do *model*, independentemente do formato de entrada.\r\n   *\r\n   * > Veja os valores válidos no *enum* `PoDatepickerIsoFormat`.\r\n   */\r\n  @Input('p-iso-format') set isoFormat(value: PoDatepickerIsoFormat) {\r\n    if (Object.values(PoDatepickerIsoFormat).includes(value)) {\r\n      this._isoFormat = value;\r\n      this.isExtendedISO = value === PoDatepickerIsoFormat.Extended;\r\n    }\r\n  }\r\n\r\n  get isoFormat() {\r\n    return this._isoFormat;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Idioma do Datepicker.\r\n   *\r\n   * > O locale padrão sera recuperado com base no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  _locale?: string;\r\n  @Input('p-locale') set locale(value: string) {\r\n    if (value) {\r\n      this._locale = value.length >= 2 ? value : poLocaleDefault;\r\n    } else {\r\n      this._locale = this.shortLanguage;\r\n    }\r\n  }\r\n  get locale() {\r\n    return this._locale || this.shortLanguage;\r\n  }\r\n\r\n  constructor(private languageService: PoLanguageService) {\r\n    this.shortLanguage = this.languageService.getShortLanguage();\r\n  }\r\n\r\n  set date(value: any) {\r\n    this._date = typeof value === 'string' ? convertIsoToDate(value, false, false) : value;\r\n  }\r\n\r\n  get date() {\r\n    return this._date;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Classe de máscara\r\n    this.objMask = this.buildMask();\r\n  }\r\n\r\n  // Converte um objeto string em Date\r\n  getDateFromString(dateString: string) {\r\n    const day = parseInt(dateString.substring(this.format.indexOf('d'), this.format.indexOf('d') + 2), 10);\r\n    const month = parseInt(dateString.substring(this.format.indexOf('m'), this.format.indexOf('m') + 2), 10) - 1;\r\n    const year = parseInt(dateString.substring(this.format.indexOf('y'), this.format.indexOf('y') + 4), 10);\r\n\r\n    const date = new Date(year, month, day);\r\n\r\n    setYearFrom0To100(date, year);\r\n\r\n    return date.getFullYear() === year && date.getMonth() === month && date.getDate() === day ? date : null;\r\n  }\r\n\r\n  // Formata a data.\r\n  formatToDate(value: Date) {\r\n    let dateFormatted = this.format;\r\n\r\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\r\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\r\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\r\n\r\n    return dateFormatted;\r\n  }\r\n\r\n  // Método responsável por controlar o modelo.\r\n  controlModel(date: Date) {\r\n    this.date = date;\r\n    if (date && this.isExtendedISO) {\r\n      this.callOnChange(convertDateToISOExtended(this.date, this.hour));\r\n    } else if (date && !this.isExtendedISO) {\r\n      this.callOnChange(convertDateToISODate(this.date));\r\n    } else {\r\n      date === undefined ? this.callOnChange('') : this.callOnChange('Data inválida');\r\n    }\r\n  }\r\n\r\n  // Executa a função onChange\r\n  callOnChange(value: any, retry: boolean = true) {\r\n    if (this.onChangeModel && value !== this.previousValue) {\r\n      this.onChangeModel(value);\r\n      this.previousValue = value;\r\n    } else if (retry) {\r\n      setTimeout(() => this.callOnChange(value, false));\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnChange(func: any): void {\r\n    this.onChangeModel = func;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnTouched(func: any): void {\r\n    this.onTouchedModel = func;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    // Verifica se já possui algum error pattern padrão.\r\n    this.errorPattern =\r\n      this.errorPattern !== 'Data inválida' && this.errorPattern !== 'Data fora do período' ? this.errorPattern : '';\r\n\r\n    if (dateFailed(c.value)) {\r\n      this.errorPattern = this.errorPattern || 'Data inválida';\r\n\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (requiredFailed(this.required, this.disabled, c.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.date && !validateDateRange(this.date, this._minDate, this._maxDate)) {\r\n      this.errorPattern = this.errorPattern || 'Data fora do período';\r\n\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\r\n  protected buildMask() {\r\n    let mask = this.format.toUpperCase();\r\n\r\n    mask = mask.replace(/DD/g, '99');\r\n    mask = mask.replace(/MM/g, '99');\r\n    mask = mask.replace(/YYYY/g, '9999');\r\n\r\n    return new PoMask(mask, true);\r\n  }\r\n\r\n  abstract writeValue(value: any): void;\r\n\r\n  abstract refreshValue(value: Date): void;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { formatYear, isMobile, setYearFrom0To100 } from '../../../utils/util';\r\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\r\n\r\nimport { PoCalendarComponent } from '../../po-calendar/po-calendar.component';\r\nimport { PoDatepickerBaseComponent } from './po-datepicker-base.component';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nconst poCalendarContentOffset = 8;\r\nconst poCalendarPositionDefault = 'bottom-left';\r\n\r\n/**\r\n * @docsExtends PoDatepickerBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-datepicker-basic\" title=\"PO Datepicker Basic\">\r\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts\"> </file>\r\n *  <file name=\"sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-labs\" title=\"PO Datepicker Labs\">\r\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-airfare\" title=\"PO Datepicker - Airfare\">\r\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-airfare-reactive-form\" title=\"PO Datepicker - Airfare Reactive Form\">\r\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-datepicker',\r\n  templateUrl: './po-datepicker.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoDatepickerComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoDatepickerComponent),\r\n      multi: true\r\n    },\r\n    PoControlPositionService\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('calendar', { static: true }) calendar: PoCalendarComponent;\r\n  @ViewChild('dialogPicker', { read: ElementRef, static: true }) dialogPicker: ElementRef;\r\n  @ViewChild('iconDatepicker', { read: ElementRef, static: true }) iconDatepicker: ElementRef;\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n\r\n  /** Rótulo do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  el: ElementRef;\r\n  hour: string;\r\n  visible: boolean = false;\r\n\r\n  eventListenerFunction: () => void;\r\n  eventResizeListener: () => void;\r\n\r\n  private clickListener;\r\n  private readonly dateRegex = new RegExp(\r\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' + '(?:0[1-9]|1[0-2])-' + '(?:0[1-9]|[12]\\\\d|3[01])$'\r\n  );\r\n  private readonly isoRegex = new RegExp(\r\n    '^(?:[0-9])\\\\d{1}(?:[0-9])\\\\d{1}-' +\r\n      '(?:0[1-9]|1[0-2])-' +\r\n      '(?:0[1-9]|[12]\\\\d|3[01])' +\r\n      'T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:Z|-0[1-9]|-1\\\\d|-2[0-3]|' +\r\n      '-00:?(?:0[1-9]|[0-5]\\\\d)|\\\\+[01]\\\\d|\\\\+2[0-3])' +\r\n      '(?:|:?[0-5]\\\\d)$'\r\n  );\r\n  private timeoutChange: any;\r\n  private valueBeforeChange: string;\r\n\r\n  get autocomplete() {\r\n    return this.noAutocomplete ? 'off' : 'on';\r\n  }\r\n\r\n  constructor(\r\n    private controlPosition: PoControlPositionService,\r\n    languageService: PoLanguageService,\r\n    private renderer: Renderer2,\r\n    el: ElementRef\r\n  ) {\r\n    super(languageService);\r\n    this.el = el;\r\n  }\r\n\r\n  @HostListener('keyup', ['$event'])\r\n  onKeyup($event: any) {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    this.objMask.keyup($event);\r\n    // Controla a atualização do model, verificando se a data é valida\r\n    if (this.objMask.valueToModel || this.objMask.valueToModel === '') {\r\n      if (this.objMask.valueToModel.length >= 10) {\r\n        this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value));\r\n        this.date = this.getDateFromString(this.inputEl.nativeElement.value);\r\n      } else {\r\n        this.date = undefined;\r\n        this.controlModel(this.date);\r\n      }\r\n    } else {\r\n      this.date = undefined;\r\n    }\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown($event?: any) {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    this.objMask.keydown($event);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setDialogPickerStyleDisplay('none');\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoDatepickerComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;\r\n   *\r\n   * focusDatepicker() {\r\n   *   this.datepicker.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  togglePicker() {\r\n    if (this.disabled || this.readonly) {\r\n      return;\r\n    }\r\n\r\n    if (!this.visible) {\r\n      this.setCalendarPosition();\r\n      this.initializeListeners();\r\n      this.visible = true;\r\n    } else {\r\n      this.inputEl.nativeElement.disabled = false;\r\n      this.closeCalendar();\r\n    }\r\n  }\r\n\r\n  dateSelected() {\r\n    if (!this.verifyMobile()) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n\r\n    this.inputEl.nativeElement.value = this.formatToDate(this.date);\r\n    this.controlModel(this.date);\r\n    this.controlChangeEmitter();\r\n    this.closeCalendar();\r\n  }\r\n\r\n  // Esconde Picker quando for clicado fora\r\n  wasClickedOnPicker(event: any): void {\r\n    if (!this.dialogPicker || !this.iconDatepicker) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      (!this.dialogPicker.nativeElement.contains(event.target) || this.hasOverlayClass(event.target)) &&\r\n      !this.iconDatepicker.nativeElement.contains(event.target) &&\r\n      !this.hasAttrCalendar(event.target)\r\n    ) {\r\n      this.closeCalendar();\r\n    }\r\n  }\r\n\r\n  hasInvalidClass() {\r\n    return (\r\n      this.el.nativeElement.classList.contains('ng-invalid') &&\r\n      this.el.nativeElement.classList.contains('ng-dirty') &&\r\n      this.inputEl.nativeElement.value !== ''\r\n    );\r\n  }\r\n\r\n  getErrorPattern() {\r\n    return this.errorPattern !== '' && this.hasInvalidClass() ? this.errorPattern : '';\r\n  }\r\n\r\n  clear() {\r\n    this.valueBeforeChange = this.formatToDate(this.date);\r\n    this.date = undefined;\r\n    this.controlModel(this.date);\r\n\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  eventOnBlur($event: any) {\r\n    this.onTouchedModel?.();\r\n    const date = this.inputEl.nativeElement.value;\r\n    const newDate = date ? this.getDateFromString(date) : undefined;\r\n    this.objMask.blur($event);\r\n    this.onblur.emit();\r\n\r\n    if (this.objMask.valueToModel) {\r\n      if (this.objMask.valueToModel.length >= 10) {\r\n        this.controlModel(newDate);\r\n        this.date = newDate;\r\n      } else {\r\n        this.date = null;\r\n        this.controlModel(this.date);\r\n      }\r\n    } else {\r\n      this.date = undefined;\r\n      this.callOnChange(this.date);\r\n    }\r\n\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  eventOnClick($event) {\r\n    if (this.verifyMobile()) {\r\n      $event.target.blur();\r\n\r\n      // abre o calendar quando clicar no input somente no mobile\r\n      setTimeout(() => this.togglePicker(), 0);\r\n    } else {\r\n      // Atualiza a posição do cursor ao clicar\r\n      this.objMask.click($event);\r\n    }\r\n  }\r\n\r\n  formatToDate(value: Date) {\r\n    if (!value) {\r\n      return undefined;\r\n    }\r\n\r\n    let dateFormatted = this.format;\r\n\r\n    dateFormatted = dateFormatted.replace('dd', ('0' + value.getDate()).slice(-2));\r\n    dateFormatted = dateFormatted.replace('mm', ('0' + (value.getMonth() + 1)).slice(-2));\r\n    dateFormatted = dateFormatted.replace('yyyy', formatYear(value.getFullYear()));\r\n\r\n    return dateFormatted;\r\n  }\r\n\r\n  refreshValue(value: Date) {\r\n    if (value) {\r\n      this.inputEl.nativeElement.value = this.formatToDate(value);\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  writeValue(value: any) {\r\n    if (this.inputEl && value) {\r\n      if (value instanceof Date) {\r\n        const dateString = value.toString();\r\n        this.hour =\r\n          'T' + dateString.substring(16, 24) + dateString.substring(28, 31) + ':' + dateString.substring(31, 33);\r\n        this.date = value;\r\n        this.inputEl.nativeElement.value = this.formatToDate(value);\r\n      } else if (this.isValidDateIso(value) || this.isValidExtendedIso(value)) {\r\n        if (this.isValidExtendedIso(value)) {\r\n          this.hour = value.substring(10, 25);\r\n        }\r\n\r\n        if (this.isoFormat === undefined) {\r\n          this.isExtendedISO = this.isValidExtendedIso(value);\r\n        }\r\n\r\n        const day = parseInt(value.substring(8, 10), 10);\r\n        const month = parseInt(value.substring(5, 7), 10) - 1;\r\n        const year = parseInt(value.substring(0, 4), 10);\r\n\r\n        const dateTemp = new Date(year, month, day);\r\n\r\n        setYearFrom0To100(dateTemp, year);\r\n\r\n        this.date = dateTemp;\r\n        this.inputEl.nativeElement.value = this.formatToDate(dateTemp);\r\n      } else {\r\n        this.inputEl.nativeElement.value = '';\r\n        this.date = undefined;\r\n      }\r\n      this.controlModel(this.date);\r\n    } else if (this.inputEl) {\r\n      this.inputEl.nativeElement.value = '';\r\n      this.date = undefined;\r\n      this.callOnChange(this.date, false);\r\n    }\r\n\r\n    this.valueBeforeChange = this.formatToDate(this.date);\r\n  }\r\n\r\n  isValidDateIso(value: string) {\r\n    return this.dateRegex.test(value);\r\n  }\r\n\r\n  isValidExtendedIso(value) {\r\n    return this.isoRegex.test(value);\r\n  }\r\n\r\n  hasOverlayClass(element: any) {\r\n    return element.classList.contains('po-datepicker-calendar-overlay');\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  verifyMobile() {\r\n    return isMobile();\r\n  }\r\n\r\n  private closeCalendar() {\r\n    this.visible = false;\r\n    this.removeListeners();\r\n    this.setDialogPickerStyleDisplay('none');\r\n  }\r\n\r\n  private controlChangeEmitter() {\r\n    const dateModelFormatted = this.formatToDate(this.date);\r\n\r\n    if (dateModelFormatted !== this.valueBeforeChange) {\r\n      this.valueBeforeChange = dateModelFormatted;\r\n\r\n      clearTimeout(this.timeoutChange);\r\n      this.timeoutChange = setTimeout(() => {\r\n        this.onchange.emit(dateModelFormatted);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  private hasAttrCalendar(element: any) {\r\n    const attrCalendar = 'attr-calendar';\r\n\r\n    return (\r\n      (element && element.hasAttribute(attrCalendar)) ||\r\n      (element.parentElement && element.parentElement.hasAttribute(attrCalendar))\r\n    );\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnPicker(event);\r\n    });\r\n\r\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.closeCalendar();\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onScroll = (): void => {\r\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\r\n  };\r\n\r\n  private removeListeners() {\r\n    if (this.clickListener) {\r\n      this.clickListener();\r\n    }\r\n\r\n    if (this.eventResizeListener) {\r\n      this.eventResizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private setDialogPickerStyleDisplay(value) {\r\n    this.dialogPicker.nativeElement.style.display = value;\r\n  }\r\n\r\n  private setCalendarPosition() {\r\n    this.setDialogPickerStyleDisplay('block');\r\n\r\n    this.controlPosition.setElements(\r\n      this.dialogPicker.nativeElement,\r\n      poCalendarContentOffset,\r\n      this.inputEl,\r\n      ['top-left', 'top-right', 'bottom-left', 'bottom-right'],\r\n      false,\r\n      true\r\n    );\r\n\r\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoCalendarModule } from '../../po-calendar/po-calendar.module';\r\nimport { PoFieldContainerModule } from '../po-field-container/po-field-container.module';\r\nimport { PoCleanModule } from '../po-clean/po-clean.module';\r\n\r\nimport { PoDatepickerComponent } from './po-datepicker.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-datepicker`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, PoFieldContainerModule, PoCleanModule, PoCalendarModule],\r\n  exports: [PoDatepickerComponent],\r\n  declarations: [PoDatepickerComponent]\r\n})\r\nexport class PoDatepickerModule {}\r\n","export const poModalLiterals = {\r\n  en: {\r\n    close: 'Close'\r\n  },\r\n  es: {\r\n    close: 'Cerrar'\r\n  },\r\n  pt: {\r\n    close: 'Fechar'\r\n  },\r\n  ru: {\r\n    close: 'близко'\r\n  }\r\n};\r\n","import { Input, EventEmitter, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from './../../utils/util';\r\nimport { PoModalAction } from './po-modal-action.interface';\r\n\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poModalLiterals } from './po-modal.literals';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.\r\n *\r\n * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.\r\n *\r\n * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,\r\n * `po-table` e os demais componentes do PO.\r\n *\r\n * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como\r\n * definir um estado de carregando e / ou desabilitado e / ou definir o botão com o tipo *danger*. Também é possível utilizar\r\n * o componente [`PoModalFooter`](/documentation/po-modal-footer).\r\n *\r\n * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.\r\n */\r\n@Directive()\r\nexport class PoModalBaseComponent {\r\n  /** Título da modal. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da primeira ação.\r\n   * Caso esta propriedade não seja definida ou esteja incompleta, automaticamente será adicionado um botão de ação com\r\n   * a função de fechar a modal.\r\n   */\r\n  @Input('p-primary-action') primaryAction?: PoModalAction;\r\n\r\n  /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da segunda ação. */\r\n  @Input('p-secondary-action') secondaryAction?: PoModalAction;\r\n\r\n  language;\r\n  literals;\r\n\r\n  // Controla se a modal fica oculto ou visível, por padrão é oculto\r\n  isHidden = true;\r\n\r\n  // Event emmiter para quando a modal é fechada pelo 'X'.\r\n  public onXClosed = new EventEmitter<boolean>();\r\n\r\n  private _hideClose?: boolean = false;\r\n  private _size?: string = 'md';\r\n\r\n  /**\r\n   * Define o tamanho da modal.\r\n   *\r\n   * Valores válidos:\r\n   *  - `sm` (pequeno)\r\n   *  - `md` (médio)\r\n   *  - `lg` (grande)\r\n   *  - `xl` (extra grande)\r\n   *  - `auto` (automático)\r\n   *\r\n   * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.\r\n   * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.\r\n   *\r\n   * > Todas as opções de tamanho possuem uma largura máxima de **768px**.\r\n   */\r\n  @Input('p-size') set size(value: string) {\r\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\r\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * Define o fechamento da modal ao clicar fora da mesma.\r\n   * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  clickOut?: boolean = false;\r\n  @Input('p-click-out') set setClickOut(value: boolean | string) {\r\n    this.clickOut = value === '' ? false : convertToBoolean(value);\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta o ícone de fechar do cabeçalho da modal.\r\n   *\r\n   * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-close') set hideClose(value: boolean) {\r\n    this._hideClose = convertToBoolean(value);\r\n  }\r\n\r\n  get hideClose() {\r\n    return this._hideClose;\r\n  }\r\n\r\n  constructor(poLanguageService: PoLanguageService) {\r\n    this.language = poLanguageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poModalLiterals[this.language]\r\n    };\r\n  }\r\n\r\n  /** Função para fechar a modal. */\r\n  close(xClosed = false): void {\r\n    this.isHidden = true;\r\n    if (xClosed) {\r\n      this.onXClosed.emit(xClosed);\r\n    }\r\n  }\r\n\r\n  /** Função para abrir a modal. */\r\n  open(): void {\r\n    this.validPrimaryAction();\r\n\r\n    this.isHidden = false;\r\n  }\r\n\r\n  validPrimaryAction() {\r\n    if (!this.primaryAction) {\r\n      this.primaryAction = {\r\n        action: () => this.close(),\r\n        label: this.literals.close\r\n      };\r\n    }\r\n\r\n    if (!this.primaryAction['action']) {\r\n      this.primaryAction['action'] = () => this.close();\r\n    }\r\n    if (!this.primaryAction['label']) {\r\n      this.primaryAction['label'] = this.literals.close;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal-footer` pode ser utilizado para incluir os botões de ações no rodapé da [`PoModal`](/documentation/po-modal), bem como para dar liberdade ao desenvolvedor de incluir outros itens necessários.\r\n * > Como boa prática, deve-se observar a utilização de apenas um botão primário.\r\n *\r\n * ```\r\n * <po-modal p-title=\"Title Modal\" #modal>\r\n *  <po-modal-footer>\r\n *    <po-button p-label=\"Close\" (p-click)=\"modal.close()\"> </po-button>\r\n *    <po-button p-label=\"Clean\" (p-click)=\"clean()\"> </po-button>\r\n *    <po-button p-label=\"Confirm\" p-type=\"primary\" (p-click)=\"confirm()\"> </po-button>\r\n *  </po-modal-footer>\r\n * </po-modal>\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'po-modal-footer',\r\n  templateUrl: './po-modal-footer.component.html'\r\n})\r\nexport class PoModalFooterComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o alinhamento padrão, à direita, dos botões de ações que ficam no rodapé da [`PoModal`](/documentation/po-modal).\r\n   *\r\n   * > Caso a propriedade esteja habilitada, o alinhamento deverá ser a esquerda e pode ser personalizado.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-disabled-align') disabledAlign?: boolean = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoActiveOverlayService {\r\n  activeOverlay: Array<string> = [];\r\n}\r\n","import { Component, ContentChild, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { PoModalBaseComponent } from './po-modal-base.component';\r\nimport { PoModalFooterComponent } from './po-modal-footer/po-modal-footer.component';\r\nimport { uuid } from '../../utils/util';\r\n\r\nimport { PoActiveOverlayService } from '../../services/po-active-overlay/po-active-overlay.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\n/**\r\n * @docsExtends PoModalBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-modal-basic\" title=\"PO Modal Basic\">\r\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-basic/sample-po-modal-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-labs\" title=\"PO Modal Labs\">\r\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-labs/sample-po-modal-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-modal-fruits-salad\" title=\"PO Modal - Fruits Salad\">\r\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html\"> </file>\r\n *  <file name=\"sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-modal',\r\n  templateUrl: './po-modal.component.html'\r\n})\r\nexport class PoModalComponent extends PoModalBaseComponent {\r\n  @ViewChild('modalContent', { read: ElementRef }) modalContent: ElementRef;\r\n  @ContentChild(PoModalFooterComponent) modalFooter: PoModalFooterComponent;\r\n\r\n  private firstElement;\r\n  private focusFunction;\r\n  private focusableElements = 'input, select, textarea, button:not([disabled]), a';\r\n  private id: string = uuid();\r\n  private sourceElement;\r\n\r\n  constructor(private poActiveOverlayService: PoActiveOverlayService, poLanguageService: PoLanguageService) {\r\n    super(poLanguageService);\r\n  }\r\n\r\n  close(xClosed = false) {\r\n    this.poActiveOverlayService.activeOverlay.pop();\r\n\r\n    super.close(xClosed);\r\n\r\n    this.removeEventListeners();\r\n\r\n    if (this.sourceElement) {\r\n      this.sourceElement.focus();\r\n    }\r\n  }\r\n\r\n  closeModalOnEscapeKey(event) {\r\n    if (!this.hideClose) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  getPrimaryActionButtonType() {\r\n    return this.primaryAction.danger ? 'danger' : 'primary';\r\n  }\r\n\r\n  getSecondaryActionButtonType() {\r\n    return this.secondaryAction && this.secondaryAction.danger && !this.primaryAction.danger ? 'danger' : 'default';\r\n  }\r\n\r\n  onClickOut(event) {\r\n    if (this.clickOut && !this.modalContent.nativeElement.contains(event.target)) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  open() {\r\n    this.sourceElement = document.activeElement;\r\n    super.open();\r\n    this.handleFocus();\r\n  }\r\n\r\n  private handleFocus(): any {\r\n    this.poActiveOverlayService.activeOverlay.push(this.id);\r\n\r\n    setTimeout(() => {\r\n      if (this.modalContent) {\r\n        this.initFocus();\r\n        document.addEventListener('focus', this.focusFunction, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initFocus() {\r\n    this.focusFunction = (event: any) => {\r\n      const modalElement = this.modalContent.nativeElement;\r\n\r\n      if (\r\n        !modalElement.contains(event.target) &&\r\n        this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length - 1] === this.id\r\n      ) {\r\n        event.stopPropagation();\r\n        this.firstElement.focus();\r\n      }\r\n    };\r\n\r\n    this.setFirstElement();\r\n\r\n    if (this.hideClose) {\r\n      this.firstElement.focus();\r\n    } else {\r\n      const firstFieldElement =\r\n        this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1] || this.modalContent.nativeElement;\r\n      firstFieldElement.focus();\r\n    }\r\n  }\r\n\r\n  private removeEventListeners() {\r\n    document.removeEventListener('focus', this.focusFunction, true);\r\n  }\r\n\r\n  private setFirstElement() {\r\n    this.firstElement =\r\n      this.modalContent.nativeElement.querySelector(this.focusableElements) || this.modalContent.nativeElement;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoButtonModule } from './../po-button/po-button.module';\r\nimport { PoModalComponent } from './po-modal.component';\r\nimport { PoModalFooterComponent } from './po-modal-footer/po-modal-footer.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-modal\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoButtonModule],\r\n  declarations: [PoModalComponent, PoModalFooterComponent],\r\n  exports: [PoModalComponent, PoModalFooterComponent]\r\n})\r\nexport class PoModalModule {}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-progress-bar',\r\n  templateUrl: './po-progress-bar.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoProgressBarComponent {\r\n  @Input('p-indeterminate') indeterminate: boolean;\r\n\r\n  @Input('p-value') value: number;\r\n\r\n  get valueScale() {\r\n    return `${this.value / 100}`;\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoProgressComponent\r\n *\r\n * @description\r\n *\r\n * *Enum* `PoProgressStatus` para os status de barra de progresso.\r\n */\r\nexport enum PoProgressStatus {\r\n  /** Define o status `default` para a barra de progresso. */\r\n  Default = 'default',\r\n\r\n  /** Define o status de `error` para a barra de progresso. */\r\n  Error = 'error',\r\n\r\n  /** Define o status de `success` para a barra de progresso. */\r\n  Success = 'success'\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, convertToInt } from '../../utils/util';\r\n\r\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\r\n\r\nconst poProgressMaxValue = 100;\r\nconst poProgressMinValue = 0;\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente de barra de progresso que possibilita exibir visualmente o progresso/carregamento de uma tarefa.\r\n *\r\n * Este componente pode ser utilizado no *upload* de arquivos, uma atualização no sistema ou o processamento de uma imagem.\r\n */\r\n@Directive()\r\nexport class PoProgressBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Informação adicional que aparecerá abaixo da barra de progresso ao lado direito.\r\n   */\r\n  @Input('p-info') info?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ícone que aparecerá ao lado do texto da propriedade `p-info`.\r\n   *\r\n   * Exemplo: `po-icon-ok`.\r\n   */\r\n  @Input('p-info-icon') infoIcon?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Status da barra de progresso que indicará visualmente ao usuário\r\n   * o andamento, por exemplo, se a mesma foi concluída com sucesso.\r\n   *\r\n   * @default `PoProgressStatus.Default`\r\n   */\r\n  @Input('p-status') status: PoProgressStatus = PoProgressStatus.Default;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Texto principal que aparecerá abaixo da barra de progresso no lado esquerdo.\r\n   */\r\n  @Input('p-text') text?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento que será disparado ao clicar no ícone de cancelamento (\"x\") na parte inferior da barra de progresso.\r\n   *\r\n   * Ao ser disparado, a função receberá como parâmetro o status atual da barra de progresso.\r\n   *\r\n   * > Se nenhuma função for passada para o evento ou a barra de progresso estiver com o status `PoProgressStatus.Success`,\r\n   * o ícone de cancelamento não será exibido.\r\n   */\r\n  @Output('p-cancel') cancel: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento que será disparado ao clicar no ícone de tentar novamente na parte inferior da barra de progresso.\r\n   *\r\n   * > o ícone será exibido apenas se informar uma função neste evento e o status da barra de progresso for\r\n   * `PoProgressStatus.Error`.\r\n   */\r\n  @Output('p-retry') retry: EventEmitter<any> = new EventEmitter();\r\n\r\n  private _indeterminate?: boolean;\r\n  private _value?: number = 0;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita o modo indeterminado na barra de progresso, que mostra uma animação fixa sem um valor estabelecido.\r\n   *\r\n   * Esta opção pode ser utilizada quando não souber quanto tempo levará para que um processo seja concluído.\r\n   *\r\n   * > Caso esta propriedade e a `p-value` seja habilitada, a propriedade `p-value` será ignorada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-indeterminate') set indeterminate(indeterminate: boolean) {\r\n    this._indeterminate = convertToBoolean(indeterminate);\r\n  }\r\n\r\n  get indeterminate(): boolean {\r\n    return this._indeterminate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor que representará o progresso.\r\n   *\r\n   * > Os valores aceitos são números inteiros de `0` à `100`.\r\n   *\r\n   * @default `0`\r\n   */\r\n  @Input('p-value') set value(value: number) {\r\n    const integerValue = convertToInt(value, poProgressMinValue);\r\n    const isProgressRangeValue = this.isProgressRangeValue(integerValue);\r\n\r\n    this._value = isProgressRangeValue ? integerValue : poProgressMinValue;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  private isProgressRangeValue(value: number): boolean {\r\n    return value >= poProgressMinValue && value <= poProgressMaxValue;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { PoProgressBaseComponent } from './po-progress-base.component';\r\nimport { PoProgressStatus } from './enums/po-progress-status.enum';\r\n\r\n/**\r\n * @docsExtends PoProgressBaseComponent\r\n *\r\n * @example\r\n * <example name=\"po-progress-basic\" title=\"PO Progress Basic\">\r\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-progress-basic/sample-po-progress-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-progress-labs\" title=\"PO Progress Labs\">\r\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-progress-labs/sample-po-progress-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-progress-publication\" title=\"PO Progress - Publication\">\r\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.html\"> </file>\r\n *   <file name=\"sample-po-progress-publication/sample-po-progress-publication.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-progress',\r\n  templateUrl: './po-progress.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoProgressComponent extends PoProgressBaseComponent {\r\n  get isAllowCancel(): boolean {\r\n    return !!this.cancel.observers.length && this.status !== PoProgressStatus.Success;\r\n  }\r\n\r\n  get isAllowProgressInfo(): boolean {\r\n    return !!(this.info || this.infoIcon || this.isAllowCancel || this.isAllowRetry);\r\n  }\r\n\r\n  get isAllowRetry(): boolean {\r\n    return !!this.retry.observers.length && this.status === PoProgressStatus.Error;\r\n  }\r\n\r\n  get statusClass(): string {\r\n    if (this.status === PoProgressStatus.Success) {\r\n      return 'po-progress-success';\r\n    }\r\n\r\n    if (this.status === PoProgressStatus.Error) {\r\n      return 'po-progress-error';\r\n    }\r\n\r\n    return 'po-progress-default';\r\n  }\r\n\r\n  emitCancellation() {\r\n    this.cancel.emit(this.status);\r\n  }\r\n\r\n  emitRetry() {\r\n    this.retry.emit();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoProgressBarComponent } from './po-progress-bar/po-progress-bar.component';\r\nimport { PoProgressComponent } from './po-progress.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-progress`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [PoProgressComponent],\r\n  declarations: [PoProgressBarComponent, PoProgressComponent]\r\n})\r\nexport class PoProgressModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoActiveOverlayService } from './po-active-overlay.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `po-active-overlay`.\r\n */\r\n@NgModule({\r\n  providers: [PoActiveOverlayService],\r\n  bootstrap: []\r\n})\r\nexport class PoActiveOverlayModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\r\n\r\n@Injectable()\r\nexport class PoColorPaletteService {\r\n  getColor(value: { color?: string; type?: string }): string {\r\n    return (<any>Object).values(PoColorPaletteEnum).includes(value.color)\r\n      ? value.color\r\n      : this.getColorFromType(value.type || value.color);\r\n  }\r\n\r\n  private getColorFromType(type: string): PoColorPaletteEnum {\r\n    switch (type) {\r\n      case 'danger':\r\n        return PoColorPaletteEnum.Color07;\r\n      case 'success':\r\n        return PoColorPaletteEnum.Color11;\r\n      case 'warning':\r\n        return PoColorPaletteEnum.Color08;\r\n      default:\r\n        return PoColorPaletteEnum.Color01;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoColorPaletteService } from './po-color-palette.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `po-color-palette`.\r\n */\r\n@NgModule({\r\n  providers: [PoColorPaletteService],\r\n  bootstrap: []\r\n})\r\nexport class PoColorPaletteModule {}\r\n","import { Injectable, ComponentRef, ComponentFactoryResolver, ApplicationRef, Injector } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoComponentInjectorService {\r\n  constructor(\r\n    private componentResolver: ComponentFactoryResolver,\r\n    private applicationRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  // Cria um dinamicamente no ApplicationRef\r\n  createComponentInApplication(component: any): ComponentRef<any> {\r\n    const componentRef = this.componentResolver.resolveComponentFactory(component).create(this.injector);\r\n    this.applicationRef.attachView(componentRef.hostView);\r\n    const domElem = (<any>componentRef.hostView).rootNodes[0];\r\n    document.body.appendChild(domElem);\r\n    return componentRef;\r\n  }\r\n\r\n  // Destrói o componente e remove do ApplicationRef\r\n  destroyComponentInApplication(componentRef: any) {\r\n    this.applicationRef.detachView(componentRef.hostView);\r\n    componentRef.destroy();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoComponentInjectorService } from './po-component-injector.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n  providers: [PoComponentInjectorService],\r\n  bootstrap: []\r\n})\r\nexport class PoComponentInjectorModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoControlPositionService } from './po-control-position.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço po-control-position.\r\n */\r\n@NgModule({\r\n  providers: [PoControlPositionService]\r\n})\r\nexport class PoControlPositionModule {}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoDialogService\r\n *\r\n * @description\r\n * Enums para as ações do componente po-dialog-base.service.\r\n */\r\nexport enum PoDialogType {\r\n  // Enum para alert\r\n  Alert,\r\n  // Enum para confirm\r\n  Confirm\r\n}\r\n","import { Component, ComponentRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { poLocaleDefault } from '../po-language/po-language.constant';\r\n\r\nimport { PoLanguageService } from '../po-language/po-language.service';\r\n\r\nimport { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';\r\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\r\nimport { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';\r\nimport { PoDialogType } from './po-dialog.enum';\r\nimport { PoModalAction } from '../../components/po-modal/po-modal-action.interface';\r\nimport { PoModalComponent } from '../../components/po-modal/po-modal.component';\r\n\r\nexport const poDialogAlertLiteralsDefault = {\r\n  en: <PoDialogAlertLiterals>{ ok: 'Ok' },\r\n  es: <PoDialogAlertLiterals>{ ok: 'Ok' },\r\n  pt: <PoDialogAlertLiterals>{ ok: 'Ok' },\r\n  ru: <PoDialogAlertLiterals>{ ok: 'Ок' }\r\n};\r\n\r\nexport const poDialogConfirmLiteralsDefault = {\r\n  en: <PoDialogConfirmLiterals>{ cancel: 'Cancel', confirm: 'Confirm' },\r\n  es: <PoDialogConfirmLiterals>{ cancel: 'Cancelar', confirm: 'Confirmar' },\r\n  pt: <PoDialogConfirmLiterals>{ cancel: 'Cancelar', confirm: 'Confirmar' },\r\n  ru: <PoDialogConfirmLiterals>{ cancel: 'отменить', confirm: 'подтвердить' }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que serve como container do po-dialog.service\r\n */\r\n\r\n@Component({\r\n  templateUrl: './po-dialog.component.html'\r\n})\r\nexport class PoDialogComponent implements OnDestroy, OnInit {\r\n  // ViewChild para o uso do po-modal.component\r\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\r\n\r\n  // Title do poModal\r\n  title: string;\r\n\r\n  // Message do poModal\r\n  message: string;\r\n\r\n  // Objeto primary do poModal\r\n  primaryAction: PoModalAction = { label: 'ok', action: () => {} };\r\n\r\n  // Objeto secondary do poModal\r\n  secondaryAction: PoModalAction;\r\n\r\n  // Callback executado ao fechar o poModal\r\n  closeAction: Function;\r\n\r\n  // Literais usadas nos botão de alerta do poModal\r\n  literalsAlert: PoDialogAlertLiterals;\r\n\r\n  // Literais usadas nos botões de confirmação do poModal\r\n  literalsConfirm: PoDialogConfirmLiterals;\r\n\r\n  // Atributo para armazenar a referencia do componente criado via serviço.\r\n  private componentRef: ComponentRef<PoDialogComponent>;\r\n  private closeSubscription: Subscription;\r\n  private language: string;\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.closeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.closeSubscription = this.poModal.onXClosed.subscribe(close => this.close(true));\r\n  }\r\n\r\n  // Fecha o poModal\r\n  close(xClosed = false): void {\r\n    if (xClosed && this.closeAction) {\r\n      this.closeAction();\r\n    }\r\n\r\n    this.poModal.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    if (this.componentRef) {\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  // Insere os valores recebidos de this.open para o poModal\r\n  configDialog(primaryLabel?, primaryAction?, secondaryLabel?, secondaryAction?, closeAction?) {\r\n    this.primaryAction = {\r\n      label: primaryLabel,\r\n      action: () => {\r\n        if (primaryAction) {\r\n          primaryAction();\r\n        }\r\n        this.close();\r\n      }\r\n    };\r\n\r\n    if (secondaryLabel) {\r\n      this.secondaryAction = {\r\n        label: secondaryLabel,\r\n        action: () => {\r\n          if (secondaryAction) {\r\n            secondaryAction();\r\n          }\r\n          this.close();\r\n        }\r\n      };\r\n    }\r\n\r\n    this.closeAction = closeAction;\r\n  }\r\n\r\n  // Insere os valores recebidos de po-dialog.service de acordo com o tipo de diálago solicitado\r\n  open(\r\n    dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions,\r\n    dialogType: PoDialogType,\r\n    componentRef?: ComponentRef<PoDialogComponent>\r\n  ): void {\r\n    this.title = dialogOptions.title;\r\n    this.message = dialogOptions.message;\r\n\r\n    this.componentRef = componentRef;\r\n\r\n    this.setDialogLiterals(dialogOptions, dialogType);\r\n\r\n    switch (dialogType) {\r\n      case PoDialogType.Confirm: {\r\n        this.configDialog(\r\n          this.literalsConfirm.confirm,\r\n          (<PoDialogConfirmOptions>dialogOptions).confirm,\r\n          this.literalsConfirm.cancel,\r\n          (<PoDialogConfirmOptions>dialogOptions).cancel,\r\n          (<PoDialogConfirmOptions>dialogOptions).close\r\n        );\r\n        break;\r\n      }\r\n      case PoDialogType.Alert: {\r\n        this.configDialog(this.literalsAlert.ok, (<PoDialogAlertOptions>dialogOptions).ok);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.poModal.open();\r\n  }\r\n\r\n  private setDialogLiterals(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType) {\r\n    const alertLiterals = poDialogAlertLiteralsDefault;\r\n    const confirmLiterals = poDialogConfirmLiteralsDefault;\r\n    const literals = dialogOptions.literals;\r\n\r\n    if (dialogType === PoDialogType.Alert) {\r\n      this.literalsAlert = { ...alertLiterals[poLocaleDefault], ...alertLiterals[this.language], ...literals };\r\n    } else {\r\n      this.literalsConfirm = {\r\n        ...confirmLiterals[poLocaleDefault],\r\n        ...confirmLiterals[this.language],\r\n        ...literals\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\r\nimport { PoDialogType } from './po-dialog.enum';\r\n\r\n/**\r\n * @description\r\n *\r\n * O po-dialog é um serviço para exibição de caixas de diálogo, é possível customiza-los passando alguns parâmetros de acordo com a\r\n * necessidade do desenvolvedor.\r\n */\r\n\r\nexport abstract class PoDialogBaseService {\r\n  /** Exibe um diálogo de confirmação, é possível definir ações para as opções de confirmação e cancelamento. */\r\n  confirm(confirmOptions: PoDialogConfirmOptions): void {\r\n    this.openDialog(PoDialogType.Confirm, confirmOptions);\r\n  }\r\n\r\n  /** Exibe um diálogo de alerta. */\r\n  alert(alertOptions: PoDialogAlertOptions): void {\r\n    this.openDialog(PoDialogType.Alert, alertOptions);\r\n  }\r\n\r\n  // Usado para chamar um diálogo\r\n  abstract openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void;\r\n}\r\n","import { Injectable, ComponentRef } from '@angular/core';\r\n\r\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\r\nimport { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';\r\nimport { PoDialogBaseService } from './po-dialog-base.service';\r\nimport { PoDialogComponent } from './po-dialog.component';\r\nimport { PoDialogType } from './po-dialog.enum';\r\n\r\n/**\r\n * @docsExtends PoDialogBaseService\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dialog-basic\" title=\"PO Dialog Basic\">\r\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dialog-basic/sample-po-dialog-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dialog-labs\" title=\"PO Dialog Labs\">\r\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-dialog-labs/sample-po-dialog-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dialog-cancel-credit-card\" title=\"PO Dialog - Cancel Credit Card\">\r\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.html\"> </file>\r\n *  <file name=\"sample-po-dialog-cancel-credit-card/sample-po-dialog-cancel-credit-card.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Injectable()\r\nexport class PoDialogService extends PoDialogBaseService {\r\n  constructor(private poComponentInjector: PoComponentInjectorService) {\r\n    super();\r\n  }\r\n\r\n  openDialog(dialogType: PoDialogType, dialogOptions: PoDialogAlertOptions | PoDialogConfirmOptions): void {\r\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoDialogComponent);\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    componentRef.instance.open(dialogOptions, dialogType, componentRef);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\r\nimport { PoDialogComponent } from './po-dialog.component';\r\nimport { PoDialogService } from './po-dialog.service';\r\n\r\n@NgModule({\r\n  declarations: [PoDialogComponent],\r\n  imports: [PoModalModule],\r\n  exports: [PoDialogComponent],\r\n  providers: [PoDialogService]\r\n})\r\nexport class PoDialogModule {}\r\n","import { PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * @description\r\n *\r\n * O pipe po-i18n é responsável por tratar literais parâmetrizadas, dando mais flexibilidade as literais de tradução.\r\n * O número de parâmetros inseridos nas literais deve coincidir com a quantia de parâmetros passados por parâmetro,\r\n * os parâmetros serão substituidos de acordo com a ordem informada.\r\n *\r\n * Para inserir um parâmetro em uma literal, o mesmo deverá ser inserido entre chaves dentro da literal e posicionado\r\n * de acordo como deve ser exibido após a sua transformação.\r\n *\r\n * ```\r\n * const i18nPT = {\r\n *   pagination: 'Página {1} de {2} páginas.',\r\n *   totalPages: 'Total de {totalPages} encontradas.'\r\n * };\r\n * ```\r\n *\r\n * É possível passar um valor ou um array de valores para o pipe, caso seja passado um array, os valores devem obedecer a ordem\r\n * informada na literal.\r\n *\r\n * ```\r\n * {{ i18nPT.pagination | poI18n:[1,10] }}\r\n * {{ i18nPT.totalPages | poI18n:10 }}\r\n * ```\r\n */\r\nexport class PoI18nBasePipe implements PipeTransform {\r\n  transform(value: string, args: any): string {\r\n    if (!value) {\r\n      return '';\r\n    }\r\n\r\n    if (!(args instanceof Array)) {\r\n      args = [args];\r\n    }\r\n\r\n    for (const arg of args) {\r\n      value = value.replace(/(\\{\\w*\\})+/, arg);\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { PoI18nBasePipe } from './po-i18n-base.pipe';\r\n\r\n/**\r\n * @docsExtends PoI18nBasePipe\r\n *\r\n * @example\r\n * <example name='po-i18n-pipe-labs' title='PO i18n Pipe Labs' >\r\n *  <file name='sample-po-i18n-pipe-labs.component.html'> </file>\r\n *  <file name='sample-po-i18n-pipe-labs.component.ts'> </file>\r\n *  <file name='sample-po-i18n-pipe.component.html'> </file>\r\n *  <file name='sample-po-i18n-pipe.component.ts'> </file>\r\n * </example>\r\n */\r\n@Pipe({\r\n  name: 'poI18n'\r\n})\r\nexport class PoI18nPipe extends PoI18nBasePipe implements PipeTransform {}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * Enums para a orientação da notificação, do componente po-toaster-base.component.\r\n */\r\nexport enum PoToasterOrientation {\r\n  /** Orientção do componente fica no rodapé */\r\n  Bottom,\r\n  /** Orientção do componente fica no topo */\r\n  Top\r\n}\r\n","import { PoToasterOrientation } from './po-toaster-orientation.enum';\r\nimport { PoToasterType } from './po-toaster-type.enum';\r\nimport { PoToaster } from './po-toaster.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente po-toaster foi construído para exibir notificações para o usuário.\r\n */\r\nexport abstract class PoToasterBaseComponent {\r\n  /** Disponibiliza uma ação para a notificação. */\r\n  action: Function;\r\n\r\n  /** Permite alterar o label do botão quando houver uma ação definida. */\r\n  actionLabel: string;\r\n\r\n  /** Mensagem a ser exibida na notificação. */\r\n  message: string;\r\n\r\n  /** Orientação da notificação, a mesma pode ser exibida na parte superior ou inferior da página. */\r\n  orientation: PoToasterOrientation = PoToasterOrientation.Bottom;\r\n\r\n  /** ComponentRef */\r\n  componentRef: any;\r\n\r\n  /** Posição para notificação aparecer na tela. */\r\n  position: number;\r\n\r\n  /** Tipo de notificação. */\r\n  type: PoToasterType;\r\n\r\n  /** Fecha a notificação. */\r\n  abstract close(): void;\r\n\r\n  /**\r\n   * Altera a posição da notificação.\r\n   *\r\n   * @param number value\r\n   */\r\n  abstract changePosition(value: number): void;\r\n\r\n  /**\r\n   * Configura o componente po-toaster de acordo com as definições do usuário.\r\n   *\r\n   * @param PoToaster poToaster\r\n   * @param ComponentRef comp\r\n   */\r\n  abstract configToaster(poToaster: PoToaster): void;\r\n}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * Enums para os tipos de notificação, do componente po-toaster-base.component.\r\n */\r\nexport enum PoToasterType {\r\n  /** Enum para informações do tipo \"Erro\" */\r\n  Error,\r\n  /** Enum para informações do tipo \"Informação\" */\r\n  Information,\r\n  /** Enum para informações do tipo \"Sucesso\" */\r\n  Success,\r\n  /** Enum para informações do tipo \"Atenção\" */\r\n  Warning\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { poLocaleDefault } from '../../po-language/po-language.constant';\r\n\r\nimport { PoLanguageService } from '../../po-language/po-language.service';\r\n\r\nimport { PoToasterBaseComponent } from './po-toaster-base.component';\r\nimport { PoToaster } from './po-toaster.interface';\r\nimport { PoToasterType } from './po-toaster-type.enum';\r\nimport { PoToasterOrientation } from './po-toaster-orientation.enum';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoToasterBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-toaster',\r\n  templateUrl: './po-toaster.component.html'\r\n})\r\nexport class PoToasterComponent extends PoToasterBaseComponent implements AfterViewInit, OnDestroy {\r\n  /* Componente toaster */\r\n  @ViewChild('toaster') toaster: ElementRef;\r\n  alive: boolean = true;\r\n  /* Ícone do Toaster */\r\n  private icon: string;\r\n  /* Margem do Toaster referênte à sua orientação e posição*/\r\n  private margin: number = 20;\r\n  /* Observable para monitorar o Close to Toaster */\r\n  private observableOnClose = new Subject<any>();\r\n  /* Posição do Toaster*/\r\n  private toasterPosition: string = 'po-toaster-bottom';\r\n  /* Tipo do Toaster */\r\n  private toasterType: string;\r\n\r\n  constructor(\r\n    languageService: PoLanguageService,\r\n    public changeDetector: ChangeDetectorRef,\r\n    private elementeRef?: ElementRef,\r\n    private renderer?: Renderer2\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.alive = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => this.renderer.addClass(this.toaster.nativeElement, 'po-toaster-visible'));\r\n  }\r\n\r\n  /* Muda a posição do Toaster na tela*/\r\n  changePosition(position: number): void {\r\n    this.elementeRef.nativeElement.style.display = 'table';\r\n\r\n    this.margin = 6 + 44 * position + position * 6;\r\n\r\n    if (this.orientation === PoToasterOrientation.Top) {\r\n      this.toaster.nativeElement.style.top = this.margin + 'px';\r\n    } else {\r\n      this.toaster.nativeElement.style.bottom = this.margin + 'px';\r\n    }\r\n  }\r\n\r\n  /* Fecha o componente Toaster */\r\n  close(): void {\r\n    this.observableOnClose.next(true);\r\n  }\r\n\r\n  setFadeOut() {\r\n    this.renderer.removeClass(this.toaster.nativeElement, 'po-toaster-visible');\r\n    this.renderer.addClass(this.toaster.nativeElement, 'po-toaster-invisible');\r\n  }\r\n\r\n  /* Configura o Toaster com os atributos passados para ele */\r\n  configToaster(poToaster: PoToaster) {\r\n    this.type = poToaster.type;\r\n    this.message = poToaster.message;\r\n    this.orientation = poToaster.orientation;\r\n    this.position = poToaster.position;\r\n    this.action = poToaster.action;\r\n    this.actionLabel = poToaster.actionLabel;\r\n    this.componentRef = poToaster.componentRef;\r\n\r\n    /* Muda a orientação do Toaster */\r\n    if (this.orientation === PoToasterOrientation.Top) {\r\n      this.toasterPosition = 'po-toaster-top';\r\n    }\r\n\r\n    /* Muda a posição do Toaster */\r\n    this.changePosition(this.position);\r\n\r\n    /* Switch para o tipo de Toaster */\r\n    switch (this.type) {\r\n      case PoToasterType.Error: {\r\n        this.toasterType = 'po-toaster-error';\r\n        this.icon = 'po-icon-warning';\r\n        break;\r\n      }\r\n      case PoToasterType.Information: {\r\n        this.toasterType = 'po-toaster-info';\r\n        this.icon = 'po-icon-info';\r\n        break;\r\n      }\r\n      case PoToasterType.Success: {\r\n        this.toasterType = 'po-toaster-success';\r\n        this.icon = 'po-icon-ok';\r\n        break;\r\n      }\r\n      case PoToasterType.Warning: {\r\n        this.toasterType = 'po-toaster-warning';\r\n        this.icon = 'po-icon-warning';\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  getIcon() {\r\n    return this.icon;\r\n  }\r\n\r\n  getToasterPosition() {\r\n    return this.toasterPosition;\r\n  }\r\n\r\n  getToasterType() {\r\n    return this.toasterType;\r\n  }\r\n\r\n  onButtonClose(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.action && !this.actionLabel) {\r\n      this.poToasterAction(event);\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  /* Chama a função passada pelo atributo `action` */\r\n  poToasterAction(event): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.action(this);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\r\n\r\n@NgModule({\r\n  declarations: [PoToasterComponent],\r\n  imports: [CommonModule],\r\n  exports: [],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoNotificationModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoActiveOverlayModule } from './po-active-overlay/po-active-overlay.module';\r\nimport { PoColorPaletteModule } from './po-color-palette/po-color-palette.module';\r\nimport { PoComponentInjectorModule } from './po-component-injector/po-component-injector.module';\r\nimport { PoControlPositionModule } from './po-control-position/po-control-position.module';\r\nimport { PoDateTimeModule } from './po-date/po-date.module';\r\nimport { PoDialogModule } from './po-dialog/po-dialog.module';\r\nimport { PoI18nPipe } from './po-i18n/po-i18n.pipe';\r\nimport { PoLanguageModule } from './po-language/po-language.module';\r\nimport { PoNotificationModule } from './po-notification/po-notification.module';\r\n\r\n@NgModule({\r\n  declarations: [PoI18nPipe],\r\n  imports: [\r\n    PoActiveOverlayModule,\r\n    PoColorPaletteModule,\r\n    PoComponentInjectorModule,\r\n    PoControlPositionModule,\r\n    PoDateTimeModule,\r\n    PoDialogModule,\r\n    PoLanguageModule,\r\n    PoNotificationModule\r\n  ],\r\n  exports: [\r\n    PoActiveOverlayModule,\r\n    PoColorPaletteModule,\r\n    PoComponentInjectorModule,\r\n    PoControlPositionModule,\r\n    PoDateTimeModule,\r\n    PoDialogModule,\r\n    PoI18nPipe,\r\n    PoNotificationModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoServicesModule {}\r\n","import { ElementRef, EventEmitter, Input, Directive, Output } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PO_CONTROL_POSITIONS } from './../../services/po-control-position/po-control-position.constants';\r\n\r\nconst PO_POPOVER_DEFAULT_POSITION = 'right';\r\nconst PO_POPOVER_DEFAULT_TRIGGER = 'click';\r\nconst PO_POPOVER_TRIGGERS = ['click', 'hover'];\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:\r\n * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.\r\n *\r\n * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva\r\n * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).\r\n *\r\n * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).\r\n *\r\n * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,\r\n * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,\r\n * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.\r\n *\r\n * Também é possível escolher entre os dois eventos que podem abrir o *popover*.\r\n * Os eventos permitidos são: `click` e `hover`.\r\n *\r\n */\r\n@Directive()\r\nexport class PoPopoverBaseComponent {\r\n  /**\r\n   * @description\r\n   *\r\n   * ElementRef do componente de origem responsável por abrir o popover.\r\n   * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\r\n   * de abertura, exemplo:\r\n   *\r\n   * ```\r\n   * <po-button\r\n   *   p-label=\"Open Popover\">\r\n   * </po-button>\r\n   *\r\n   * <po-popover\r\n   *   [p-target]=\"poButton\"\r\n   *   [p-title]=\"PO Popover\">\r\n   * </po-popover>\r\n   * ```\r\n   *\r\n   * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do\r\n   * HTML que irá disparar o evento. Exemplo:\r\n   *\r\n   * ```\r\n   * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;\r\n   * ```\r\n   *\r\n   * Pode-se tambem informar diretamente o HTMLElement, para não ter que utilizar o ViewChild.\r\n   * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento\r\n   * de abertura, exemplo:\r\n   *\r\n   * ```\r\n   * <button #target>\r\n   *   Abrir popover\r\n   * </button>\r\n   *\r\n   * <po-popover\r\n   *     [p-target]=\"target\"\r\n   *     p-trigger=\"click\" >\r\n   * </po-popover>\r\n   * ```\r\n   *\r\n   *\r\n   *\r\n   */\r\n  @Input('p-target') target: ElementRef | HTMLElement;\r\n\r\n  /** Título do popover. */\r\n  @Input('p-title') title?: string;\r\n\r\n  /** Evento disparado ao fechar o popover. */\r\n  @Output('p-close') closePopover = new EventEmitter<any>();\r\n\r\n  // Controla se o popover fica oculto ou visível, por padrão é oculto.\r\n  isHidden: boolean = true;\r\n\r\n  protected clickoutListener: () => void;\r\n  protected mouseEnterListener: () => void;\r\n  protected mouseLeaveListener: () => void;\r\n  protected resizeListener: () => void;\r\n\r\n  private _hideArrow: boolean = false;\r\n  private _position?: string = PO_POPOVER_DEFAULT_POSITION;\r\n  private _trigger?: string = PO_POPOVER_DEFAULT_TRIGGER;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita a seta do componente *popover*.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-arrow') set hideArrow(value: boolean) {\r\n    this._hideArrow = convertToBoolean(value);\r\n  }\r\n\r\n  get hideArrow(): boolean {\r\n    return this._hideArrow;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja\r\n   * usada a orientação \"right\" (direita), porém o mesmo é flexível e será rotacionado\r\n   * automaticamente para se adequar a tela, caso necessário.\r\n   *\r\n   * Posições válidas:\r\n   * - `right`: Posiciona o po-popover no lado direito do componente alvo.\r\n   * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.\r\n   * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.\r\n   * - `bottom`: Posiciona o po-popover abaixo do componente alvo.\r\n   * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.\r\n   * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.\r\n   * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.\r\n   * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.\r\n   * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.\r\n   * - `top`: Posiciona o po-popover acima do componente alvo.\r\n   * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.\r\n   * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.\r\n   *\r\n   *\r\n   * @default right\r\n   */\r\n  @Input('p-position') set position(value: string) {\r\n    this._position = PO_CONTROL_POSITIONS.includes(value) ? value : PO_POPOVER_DEFAULT_POSITION;\r\n  }\r\n\r\n  get position(): string {\r\n    return this._position;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Define o evento que abrirá o po-popover.\r\n   *\r\n   * Valores válidos:\r\n   *  - `click`: Abre ao clicar no componente alvo.\r\n   *  - `hover`: Abre ao passar o mouse sobre o componente alvo.\r\n   *\r\n   * @default click\r\n   * @optional\r\n   */\r\n  @Input('p-trigger') set trigger(value: string) {\r\n    this._trigger = PO_POPOVER_TRIGGERS.includes(value) ? value : PO_POPOVER_DEFAULT_TRIGGER;\r\n  }\r\n\r\n  get trigger(): string {\r\n    return this._trigger;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { PoControlPositionService } from './../../services/po-control-position/po-control-position.service';\r\nimport { PoPopoverBaseComponent } from './po-popover-base.component';\r\n\r\n/**\r\n *\r\n * @docsExtends PoPopoverBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-popover-basic\" title=\"PO Popover Basic\">\r\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-popover-basic/sample-po-popover-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-popover-labs\" title=\"PO Popover Labs\">\r\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-popover-labs/sample-po-popover-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-popover-credit-card\" title=\"PO Popover - Credit Card\">\r\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.html\"> </file>\r\n *   <file name=\"sample-po-popover-credit-card/sample-po-popover-credit-card.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-popover',\r\n  templateUrl: './po-popover.component.html',\r\n  providers: [PoControlPositionService]\r\n})\r\nexport class PoPopoverComponent extends PoPopoverBaseComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('popoverElement', { read: ElementRef, static: true }) popoverElement: ElementRef;\r\n\r\n  arrowDirection = 'left';\r\n  timeoutResize;\r\n  targetElement;\r\n  eventListenerFunction: () => void;\r\n\r\n  constructor(private renderer: Renderer2, private poControlPosition: PoControlPositionService) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.targetElement = this.target instanceof ElementRef ? this.target.nativeElement : this.target;\r\n    this.initEventListenerFunction();\r\n\r\n    this.setElementsControlPosition();\r\n\r\n    this.setRendererListenInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  close(): void {\r\n    this.isHidden = true;\r\n    this.closePopover.emit();\r\n  }\r\n\r\n  debounceResize() {\r\n    clearTimeout(this.timeoutResize);\r\n    this.timeoutResize = setTimeout(() => {\r\n      this.setPopoverPosition();\r\n    }, 200);\r\n  }\r\n\r\n  open(): void {\r\n    this.addScrollEventListener();\r\n\r\n    this.isHidden = false;\r\n    this.setOpacity(0);\r\n\r\n    setTimeout(() => {\r\n      this.setElementsControlPosition();\r\n      this.setPopoverPosition();\r\n      this.setOpacity(1);\r\n    });\r\n  }\r\n\r\n  setOpacity(value: number): void {\r\n    this.popoverElement.nativeElement.style.opacity = value;\r\n  }\r\n\r\n  setPopoverPosition() {\r\n    this.poControlPosition.adjustPosition(this.position);\r\n    this.arrowDirection = this.poControlPosition.getArrowDirection();\r\n  }\r\n\r\n  setRendererListenInit() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: Event) => {\r\n      if (!this.isHidden) {\r\n        this.debounceResize();\r\n      }\r\n    });\r\n\r\n    if (this.trigger === 'hover') {\r\n      this.mouseEnterListener = this.renderer.listen(this.targetElement, 'mouseenter', (event: MouseEvent) => {\r\n        this.open();\r\n      });\r\n\r\n      this.mouseLeaveListener = this.renderer.listen(this.targetElement, 'mouseleave', (event: MouseEvent) => {\r\n        this.close();\r\n      });\r\n    } else {\r\n      this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n        this.togglePopup(event);\r\n      });\r\n    }\r\n  }\r\n\r\n  togglePopup(event): void {\r\n    if (\r\n      !this.isHidden &&\r\n      !this.popoverElement.nativeElement.contains(event.target) &&\r\n      !this.targetElement.contains(event.target)\r\n    ) {\r\n      this.close();\r\n    } else if (this.targetElement.contains(event.target)) {\r\n      this.popoverElement.nativeElement.hidden ? this.open() : this.close();\r\n    }\r\n  }\r\n\r\n  private addScrollEventListener() {\r\n    window.addEventListener('scroll', this.eventListenerFunction, true);\r\n  }\r\n\r\n  private initEventListenerFunction() {\r\n    this.eventListenerFunction = () => {\r\n      this.setPopoverPosition();\r\n    };\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n    if (this.mouseEnterListener) {\r\n      this.mouseEnterListener();\r\n    }\r\n    if (this.mouseLeaveListener) {\r\n      this.mouseLeaveListener();\r\n    }\r\n\r\n    this.resizeListener();\r\n\r\n    window.removeEventListener('scroll', this.eventListenerFunction, true);\r\n  }\r\n\r\n  private setElementsControlPosition() {\r\n    const popoverOffset = 8;\r\n    this.poControlPosition.setElements(this.popoverElement.nativeElement, popoverOffset, this.target);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPopoverComponent } from './po-popover.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-popover.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoPopoverComponent],\r\n  exports: [PoPopoverComponent]\r\n})\r\nexport class PoPopoverModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { isTypeof } from '../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Pipe responsável por apresentar um horário baseado no formato de entrada definido na API do PO UI.\r\n */\r\n@Pipe({\r\n  name: 'po_time'\r\n})\r\nexport class PoTimePipe implements PipeTransform {\r\n  transform(time: string, format?: string): string {\r\n    const hourRegex = /^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\\.]?([0-9]{1,6})?$/g;\r\n\r\n    if (isTypeof(time, 'string') && hourRegex.test(time)) {\r\n      const amountOfF = format ? format.lastIndexOf('f') - format.indexOf('f') + 1 : 0;\r\n\r\n      const miliseconds = this.addDotMiliseconds(time.substring(9, 9 + amountOfF), amountOfF);\r\n      const formatMiliseconds: string = this.getFormatMiliseconds(amountOfF);\r\n\r\n      return this.formatValue(time, format, formatMiliseconds, miliseconds);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private addDotMiliseconds(miliseconds: string, amountOfF: number): string {\r\n    if (miliseconds && amountOfF) {\r\n      miliseconds = '.' + miliseconds;\r\n    }\r\n    return miliseconds;\r\n  }\r\n\r\n  private formatValue(time: string, format: string, formatMiliseconds: string, miliseconds: string): string {\r\n    if (time && format) {\r\n      const hour = time.substring(0, 2);\r\n      const minutes = time.substring(3, 5);\r\n      const seconds = time.substring(6, 8);\r\n\r\n      format = format.replace('HH', hour);\r\n      format = format.replace('mm', minutes);\r\n      format = format.replace('ss', seconds);\r\n      format = format.replace(`.${formatMiliseconds}`, miliseconds);\r\n\r\n      return format;\r\n    } else {\r\n      return time;\r\n    }\r\n  }\r\n\r\n  private getFormatMiliseconds(amountOfF: number): string {\r\n    let formatMiliseconds: string = '';\r\n\r\n    for (let i = 0; i < amountOfF; i++) {\r\n      formatMiliseconds += 'f';\r\n    }\r\n\r\n    return formatMiliseconds;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoTimePipe } from './po-time.pipe';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do pipe `po-time`.\r\n */\r\n@NgModule({\r\n  declarations: [PoTimePipe],\r\n  imports: [],\r\n  exports: [PoTimePipe],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoTimeModule {}\r\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\r\nimport { PoTableColumnIcon } from './po-table-column-icon.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por exibir ícones nas colunas.\r\n */\r\n@Component({\r\n  selector: 'po-table-column-icon',\r\n  templateUrl: './po-table-column-icon.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTableColumnIconComponent {\r\n  /** Definição da coluna que utiliza os icones. */\r\n  @Input('p-column') column: PoTableColumn;\r\n\r\n  /** Dados da linha da tabela. */\r\n  @Input('p-row') row: any;\r\n\r\n  private _icons: Array<PoTableColumnIcon> = [];\r\n\r\n  /** Lista de colunas com ícones. */\r\n  @Input('p-icons') set icons(icons: Array<PoTableColumnIcon> | Array<string> | string) {\r\n    this._icons = this.convertToColumnIcon(icons);\r\n  }\r\n\r\n  get icons() {\r\n    return this._icons;\r\n  }\r\n\r\n  click(columnIcon: PoTableColumnIcon, event): void {\r\n    const isAbleAction = !this.isDisabled(columnIcon);\r\n\r\n    if (isAbleAction) {\r\n      if (columnIcon.action) {\r\n        columnIcon.action(this.row, columnIcon);\r\n      } else if (this.column.action) {\r\n        this.column.action(this.row, columnIcon);\r\n      }\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  getColor(column: PoTableColumnIcon): string {\r\n    const color = typeof column.color === 'function' ? column.color(this.row, column) : column.color;\r\n\r\n    if (color) {\r\n      return `po-text-${color}`;\r\n    }\r\n  }\r\n\r\n  getIcon(column: PoTableColumnIcon) {\r\n    return column.icon || column.value;\r\n  }\r\n\r\n  isClickable(columnIcon: PoTableColumnIcon): boolean {\r\n    return !!(!this.isDisabled(columnIcon) && (columnIcon.action || this.column.action));\r\n  }\r\n\r\n  isDisabled(column: PoTableColumnIcon): boolean {\r\n    return column.disabled ? column.disabled(this.row) : false;\r\n  }\r\n\r\n  trackByFunction(index) {\r\n    return index;\r\n  }\r\n\r\n  private convertToColumnIcon(rowIcons: Array<PoTableColumnIcon> | Array<string> | string): Array<PoTableColumnIcon> {\r\n    if (Array.isArray(rowIcons)) {\r\n      return (<any>rowIcons).map(rowIcon => (typeof rowIcon === 'string' ? { value: rowIcon } : rowIcon));\r\n    }\r\n\r\n    if (typeof rowIcons === 'string') {\r\n      return [{ value: rowIcons }];\r\n    }\r\n\r\n    return [];\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\r\nimport { PoTableColumnLabel } from './po-table-column-label.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a criação da representação da legenda, em formato de texto .\r\n */\r\n\r\n@Component({\r\n  selector: 'po-table-column-label',\r\n  templateUrl: './po-table-column-label.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTableColumnLabelComponent {\r\n  private _value: PoTableColumnLabel;\r\n\r\n  /** Objeto com os dados do label */\r\n  @Input('p-value') set value(value: PoTableColumnLabel) {\r\n    if (value) {\r\n      value.color = this.poColorPaletteService.getColor(value);\r\n    }\r\n\r\n    this._value = value;\r\n  }\r\n  get value(): PoTableColumnLabel {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(private poColorPaletteService: PoColorPaletteService) {}\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { isExternalLink } from '../../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por exibir link nas colunas.\r\n */\r\n@Component({\r\n  selector: 'po-table-column-link',\r\n  templateUrl: './po-table-column-link.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTableColumnLinkComponent {\r\n  @Input('p-action') action: Function;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-link') link: string;\r\n\r\n  @Input('p-row') row;\r\n\r\n  @Input('p-value') value: string;\r\n\r\n  get type() {\r\n    if (this.disabled) {\r\n      return 'disabled';\r\n    }\r\n\r\n    if (this.action) {\r\n      return 'action';\r\n    }\r\n\r\n    if (isExternalLink(this.link)) {\r\n      return 'externalLink';\r\n    }\r\n\r\n    return 'internalLink';\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { capitalizeFirstLetter, convertToInt } from '../../../utils/util';\r\nimport { PoCheckboxGroupOption } from '../../po-field/po-checkbox-group/interfaces/po-checkbox-group-option.interface';\r\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\nimport { PoTableColumn } from '../interfaces/po-table-column.interface';\r\n\r\nconst PoTableColumnManagerMaxColumnsDefault = 99999;\r\n\r\nexport const poTableColumnManagerLiteralsDefault = {\r\n  en: {\r\n    columnsManager: 'Columns manager',\r\n    restoreDefault: 'Restore default'\r\n  },\r\n  es: {\r\n    columnsManager: 'Gerente de columna',\r\n    restoreDefault: 'Restaurar por defecto'\r\n  },\r\n  pt: {\r\n    columnsManager: 'Gerenciador de colunas',\r\n    restoreDefault: 'Restaurar padrão'\r\n  },\r\n  ru: {\r\n    columnsManager: 'менеджер колонок',\r\n    restoreDefault: 'сброс настроек'\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'po-table-column-manager',\r\n  templateUrl: './po-table-column-manager.component.html'\r\n})\r\nexport class PoTableColumnManagerComponent implements OnChanges, OnDestroy {\r\n  @ViewChild(PoPopoverComponent) popover: PoPopoverComponent;\r\n\r\n  @Input('p-columns') columns: Array<PoTableColumn> = [];\r\n\r\n  @Input('p-target') target: ElementRef;\r\n\r\n  @Input('p-last-visible-columns-selected') lastVisibleColumnsSelected: Array<PoTableColumn> = [];\r\n\r\n  @Output('p-visible-columns-change') visibleColumnsChange = new EventEmitter<Array<PoTableColumn>>();\r\n\r\n  // Evento disparado ao fechar o popover do gerenciador de colunas após alterar as colunas visíveis.\r\n  // O po-table envia como parâmetro um array de string com as colunas visíveis atualizadas. Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\r\n  @Output('p-change-visible-columns') changeVisibleColumns = new EventEmitter<Array<string>>();\r\n\r\n  literals;\r\n  columnsOptions: Array<PoCheckboxGroupOption> = [];\r\n  visibleColumns: Array<string> = [];\r\n\r\n  private _maxColumns: number = PoTableColumnManagerMaxColumnsDefault;\r\n  private defaultColumns: Array<PoTableColumn> = [];\r\n  private resizeListener: () => void;\r\n  private restoreDefaultEvent: boolean;\r\n  private lastEmittedValue: Array<string>;\r\n\r\n  @Input('p-max-columns') set maxColumns(value: number) {\r\n    this._maxColumns = convertToInt(value, PoTableColumnManagerMaxColumnsDefault);\r\n  }\r\n\r\n  get maxColumns() {\r\n    return this._maxColumns;\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, languageService: PoLanguageService) {\r\n    const language = languageService.getShortLanguage();\r\n\r\n    this.literals = {\r\n      ...poTableColumnManagerLiteralsDefault[poLocaleDefault],\r\n      ...poTableColumnManagerLiteralsDefault[language]\r\n    };\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const { columns, maxColumns, target } = changes;\r\n\r\n    if (target && target.firstChange) {\r\n      this.initializeListeners();\r\n    }\r\n\r\n    if (columns) {\r\n      this.onChangeColumns(columns);\r\n    }\r\n\r\n    if (maxColumns) {\r\n      this.updateValues(this.columns);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  // aqui chegam os eventos do checkbox e do close do popover que também é disparado no resize\r\n  checkChanges(event: Array<string> = [], emit: boolean = false) {\r\n    this.verifyToEmitChange(event);\r\n\r\n    if (emit) {\r\n      // controla emissões para o dev\r\n      this.verifyToEmitVisibleColumns();\r\n    }\r\n  }\r\n\r\n  restore() {\r\n    this.restoreDefaultEvent = true;\r\n    const defaultColumns = this.getVisibleColumns(this.defaultColumns);\r\n\r\n    this.checkChanges(defaultColumns, this.restoreDefaultEvent);\r\n  }\r\n\r\n  private verifyToEmitChange(event: Array<string>) {\r\n    const newColumns = [...event];\r\n\r\n    if (this.allowsChangeVisibleColumns()) {\r\n      this.emitChangesToSelectedColumns(newColumns);\r\n    }\r\n  }\r\n\r\n  private emitChangesToSelectedColumns(newColumns: Array<string>) {\r\n    this.visibleColumns = [...newColumns];\r\n    const visibleTableColumns = this.getVisibleTableColumns(this.visibleColumns);\r\n\r\n    // emite alteração nas colunas selecionadas, porém não emite para o dev.\r\n    this.visibleColumnsChange.emit(visibleTableColumns);\r\n  }\r\n\r\n  private allowsChangeVisibleColumns(): boolean {\r\n    const visibleTableColumns = this.getVisibleTableColumns(this.visibleColumns);\r\n\r\n    return this.stringify(visibleTableColumns) !== this.stringify(this.columns);\r\n  }\r\n\r\n  private verifyToEmitVisibleColumns() {\r\n    if (this.restoreDefaultEvent) {\r\n      // veio do restore default\r\n      this.verifyRestoreValues();\r\n    } else {\r\n      // foi disparado no close popover;\r\n      this.verifyOnClose();\r\n    }\r\n  }\r\n\r\n  private verifyRestoreValues() {\r\n    const defaultColumns = [...this.defaultColumns];\r\n    const defaultVisibleColumns = this.getVisibleColumns(defaultColumns);\r\n\r\n    if (this.allowsChangeSelectedColumns(defaultVisibleColumns)) {\r\n      this.emitChangeOnRestore(defaultVisibleColumns);\r\n    }\r\n\r\n    this.restoreDefaultEvent = false;\r\n  }\r\n\r\n  private emitChangeOnRestore(defaultVisibleColumns: Array<string>) {\r\n    this.visibleColumns = [...defaultVisibleColumns];\r\n    const visibleTableColumns = this.getVisibleTableColumns(this.visibleColumns);\r\n\r\n    this.visibleColumnsChange.emit(visibleTableColumns);\r\n  }\r\n\r\n  private allowsChangeSelectedColumns(defaultVisibleColumns: Array<string>) {\r\n    const visibleColumns = this.getVisibleColumns(this.columns);\r\n\r\n    return !this.isEqualArrays(defaultVisibleColumns, visibleColumns);\r\n  }\r\n\r\n  private verifyOnClose() {\r\n    if (this.allowsEmission()) {\r\n      this.emitVisibleColumns();\r\n    }\r\n  }\r\n\r\n  private emitVisibleColumns() {\r\n    this.lastEmittedValue = [...this.visibleColumns];\r\n    this.changeVisibleColumns.emit(this.visibleColumns);\r\n  }\r\n\r\n  private allowsEmission(): boolean {\r\n    const updatedVisibleColumns = this.visibleColumns ? [...this.visibleColumns] : [];\r\n    const lastEmittedValue = this.lastEmittedValue ? [...this.lastEmittedValue] : [];\r\n    const lastVisibleColumnsSelected = this.lastVisibleColumnsSelected ? [...this.lastVisibleColumnsSelected] : [];\r\n    const lastVisibleColumns = this.getVisibleColumns(lastVisibleColumnsSelected);\r\n\r\n    return (\r\n      this.isUpdate(updatedVisibleColumns, lastEmittedValue) ||\r\n      this.isFirstTime(updatedVisibleColumns, lastVisibleColumns)\r\n    );\r\n  }\r\n\r\n  private isFirstTime(updatedVisibleColumns: Array<string>, lastVisibleColumns: Array<string>): boolean {\r\n    return !this.lastEmittedValue && !this.isEqualArrays(updatedVisibleColumns, lastVisibleColumns);\r\n  }\r\n\r\n  private isUpdate(updatedVisibleColumns: Array<string>, lastEmittedValue: Array<string>): boolean {\r\n    return this.lastEmittedValue && !this.isEqualArrays(updatedVisibleColumns, lastEmittedValue);\r\n  }\r\n\r\n  private isEqualArrays(first: Array<string>, second: Array<string>): boolean {\r\n    const one = first ? [...first] : [];\r\n    const two = second ? [...second] : [];\r\n    const firstSort = one.slice().sort();\r\n    const secondSort = two.slice().sort();\r\n    const firstString = JSON.stringify(firstSort);\r\n    const secondString = JSON.stringify(secondSort);\r\n\r\n    return firstString === secondString;\r\n  }\r\n\r\n  // desabilitará as colunas, que não estiverem selecionadas, após exeder o numero maximo de colunas.\r\n  private disableColumnsOptions(columns: Array<PoCheckboxGroupOption> = []) {\r\n    return columns.map(column => ({\r\n      ...column,\r\n      disabled: this.isDisableColumn(column.value)\r\n    }));\r\n  }\r\n\r\n  private getColumnTitleLabel(column: PoTableColumn) {\r\n    return column.label || capitalizeFirstLetter(column.property);\r\n  }\r\n\r\n  /** Retorna um Array de column.property das colunas que são visiveis. */\r\n  private getVisibleColumns(columns: Array<PoTableColumn>): Array<string> {\r\n    let visibleColumns = [];\r\n\r\n    columns.forEach(column => {\r\n      if (this.isVisibleColumn(column, visibleColumns)) {\r\n        visibleColumns = [...visibleColumns, column.property];\r\n      }\r\n    });\r\n\r\n    return visibleColumns;\r\n  }\r\n\r\n  private isVisibleColumn(column: PoTableColumn, visibleColumns: Array<string>): boolean {\r\n    return column.visible !== false && visibleColumns.length < this.maxColumns && column.type !== 'detail';\r\n  }\r\n\r\n  /** Retorna um Array PoTableColumn a partir das colunas visiveis no gerenciador de colunas. */\r\n  private getVisibleTableColumns(visibleColumns: Array<string>): Array<PoTableColumn> {\r\n    const columns = this.columns ? [...this.columns] : [];\r\n\r\n    return columns.map(column => ({\r\n      ...column,\r\n      visible: visibleColumns.includes(column.property) || column.type === 'detail'\r\n    }));\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      if (this.popover && !this.popover.isHidden) {\r\n        this.popover.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  private isDisableColumn(property: string): boolean {\r\n    return this.visibleColumns.length >= this.maxColumns ? !this.visibleColumns.includes(property) : false;\r\n  }\r\n\r\n  private mapTableColumnsToCheckboxOptions(columns: Array<PoTableColumn> = []) {\r\n    const tableColumns = [...columns];\r\n    const columnsOptions = [];\r\n\r\n    tableColumns.forEach(column => {\r\n      if (column.type !== 'detail') {\r\n        columnsOptions.push({\r\n          value: column.property,\r\n          label: this.getColumnTitleLabel(column),\r\n          disabled: this.isDisableColumn(column.property)\r\n        });\r\n      }\r\n    });\r\n\r\n    return columnsOptions;\r\n  }\r\n\r\n  private onChangeColumns(columns: SimpleChange) {\r\n    const { currentValue = [], previousValue = [] } = columns;\r\n\r\n    // atualizara o defaultColumns, quando for a primeira vez ou quando o defaultColumns for diferente do currentValue\r\n    if (!this.lastVisibleColumnsSelected && this.stringify(this.defaultColumns) !== this.stringify(currentValue)) {\r\n      this.defaultColumns = [...currentValue];\r\n    }\r\n\r\n    // verifica se o valor anterior é diferente do atual para atualizar as columnsOptions apenas quando for necessario\r\n    if (this.stringify(previousValue) !== this.stringify(currentValue)) {\r\n      this.updateValues(currentValue);\r\n    }\r\n  }\r\n\r\n  private updateValues(currentValue: Array<PoTableColumn>) {\r\n    const visibleColumns = this.getVisibleColumns(currentValue);\r\n    this.visibleColumns = [...visibleColumns];\r\n\r\n    const columnsOptions = this.mapTableColumnsToCheckboxOptions(currentValue);\r\n    this.columnsOptions = this.disableColumnsOptions(columnsOptions);\r\n\r\n    this.checkChanges(visibleColumns, false);\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n  }\r\n\r\n  private stringify(columns: Array<PoTableColumn>) {\r\n    // não faz o stringify da propriedade icon e searchService, pois pode conter objeto complexo e disparar um erro.\r\n    return JSON.stringify(columns, (key, value) => {\r\n      if (key !== 'icon' && key !== 'searchService') {\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoTableComponent\r\n *\r\n * @description\r\n * Tipos de ordenação das colunas da tabela.\r\n */\r\nexport enum PoTableColumnSortType {\r\n  /** Ordenação ascendente */\r\n  Ascending = 'ascending',\r\n\r\n  /** Ordenação descendente */\r\n  Descending = 'descending'\r\n}\r\n","import { debounceTime } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { isTypeof } from '../../../utils/util';\r\nimport { PoTableFilter } from '../interfaces/po-table-filter.interface';\r\nimport { PoTableFilteredItemsParams } from '../interfaces/po-table-filtered-items-params.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoTableService implements PoTableFilter {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-No-Message': 'true'\r\n  });\r\n\r\n  private url: string;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getFilteredItems(filteredParams?: PoTableFilteredItemsParams): Observable<any> {\r\n    const params = this.validateParams(filteredParams);\r\n\r\n    return this.http.get(this.url, { headers: this.headers, params });\r\n  }\r\n\r\n  setUrl(url: string) {\r\n    this.url = url;\r\n  }\r\n\r\n  scrollListener(componentListner: HTMLElement): Observable<any> {\r\n    return fromEvent(componentListner, 'scroll').pipe(debounceTime(100));\r\n  }\r\n\r\n  private validateParams(params: any) {\r\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\r\n  }\r\n}\r\n","import {\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  Directive,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { capitalizeFirstLetter, convertToBoolean, isTypeof, sortValues } from '../../utils/util';\r\nimport { PoDateService } from '../../services/po-date/po-date.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../services/po-language/po-language.constant';\r\n\r\nimport { PoTableAction } from './interfaces/po-table-action.interface';\r\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\r\nimport { PoTableColumnSort } from './interfaces/po-table-column-sort.interface';\r\nimport { PoTableColumnSortType } from './enums/po-table-column-sort-type.enum';\r\nimport { PoTableLiterals } from './interfaces/po-table-literals.interface';\r\nimport { InputBoolean } from '../../decorators';\r\nimport { PoTableService } from './services/po-table.service';\r\nimport { PoTableResponseApi } from './interfaces/po-table-response-api.interface';\r\nimport { PoTableFilteredItemsParams } from './interfaces/po-table-filtered-items-params.interface';\r\n\r\nexport type QueryParamsType = string | number | boolean;\r\n\r\nexport const poTableContainer = ['border', 'shadow'];\r\nexport const poTableContainerDefault = 'border';\r\n\r\nexport const poTableLiteralsDefault = {\r\n  en: <PoTableLiterals>{\r\n    noColumns: 'Columns are not defined',\r\n    noData: 'No data found',\r\n    noVisibleColumn: 'No visible column',\r\n    loadingData: 'Loading',\r\n    loadMoreData: 'Load more data',\r\n    seeCompleteSubtitle: 'See complete subtitle',\r\n    completeSubtitle: 'Complete subtitle',\r\n    columnsManager: 'Columns manager'\r\n  },\r\n  es: <PoTableLiterals>{\r\n    noColumns: 'Columnas no definidas',\r\n    noData: 'Datos no encontrados',\r\n    noVisibleColumn: 'Sin columnas visibles',\r\n    loadingData: 'Cargando datos',\r\n    loadMoreData: 'Cargar más resultados',\r\n    seeCompleteSubtitle: 'Ver subtitulo completo',\r\n    completeSubtitle: 'Subtitulo completo',\r\n    columnsManager: 'Gerente de columna'\r\n  },\r\n  pt: <PoTableLiterals>{\r\n    noColumns: 'Nenhuma definição de colunas',\r\n    noData: 'Nenhum dado encontrado',\r\n    noVisibleColumn: 'Nenhuma coluna visível',\r\n    loadingData: 'Carregando',\r\n    loadMoreData: 'Carregar mais resultados',\r\n    seeCompleteSubtitle: 'Ver legenda completa',\r\n    completeSubtitle: 'Legenda completa',\r\n    columnsManager: 'Gerenciador de colunas'\r\n  },\r\n  ru: <PoTableLiterals>{\r\n    noColumns: 'Нет определения столбца',\r\n    noData: 'Данные не найдены',\r\n    noVisibleColumn: 'нет видимых столбцов',\r\n    loadingData: 'погрузка',\r\n    loadMoreData: 'загрузка',\r\n    seeCompleteSubtitle: 'Посмотреть полный субтитр',\r\n    completeSubtitle: 'Полный заголовок',\r\n    columnsManager: 'менеджер колонок'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * Este componente de tabela é utilizado para exibição de dados com diferentes tipos como por exemplo textos, data, horas e números com\r\n * formato personalizado.\r\n *\r\n * Também é possivel criar tabelas com ordenação de dados, linhas com detalhes, coluna para seleção de linhas, coluna com ações e também\r\n * carregamento por demanda através do botão **Carregar mais resultados**.\r\n *\r\n * > As linhas de detalhes podem também ser customizadas através do [`p-table-row-template`](/documentation/po-table-row-template).\r\n *\r\n * > As colunas podem ser customizadas através dos templates [`p-table-column-template`](/documentation/po-table-column-template)\r\n * e [`p-table-cell-template`](/documentation/po-table-cell-template).\r\n *\r\n * O componente permite gerenciar a exibição das colunas dinamicamente. Esta funcionalidade pode ser acessada através do ícone de engrenagem\r\n * no canto superior direito do cabeçalho da tabela.\r\n *\r\n * Caso a largura de todas as colunas forem definidas e o total ultrapassar o tamanho tabela, será exibido um *scroll* na horizontal para a\r\n * completa visualização dos dados.\r\n */\r\n@Directive()\r\nexport abstract class PoTableBaseComponent implements OnChanges, OnDestroy {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Se verdadeiro, habilita a quebra de texto ao transborda-lo dentro de qualquer coluna.\r\n   * > Quando ocorrer a quebra de texto, ao passar o mouse no conteúdo da célula,\r\n   * o mesmo será exibido através do [`po-tooltip`](/documentation/po-tooltip).\r\n   */\r\n  @Input('p-hide-text-overflow') @InputBoolean() hideTextOverflow: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite que o gerenciador de colunas, responsável pela definição de quais colunas serão exibidas, seja escondido.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-columns-manager') @InputBoolean() hideColumnsManager?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite fechar um detalhe ou row template automaticamente, ao abrir outro item.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-collapse') @InputBoolean() autoCollapse?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite que seja adicionado o estado de carregamento no botão \"Carregar mais resultados\".\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-loading-show-more') @InputBoolean() loadingShowMore?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita em todas as colunas a opção de ordenação de dados. Caso a coluna seja do tipo 'data' ou 'dateTime' a\r\n   * mesma deve respeitar os tipos de entrada definidos para que sejam ordenadas.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-sort') @InputBoolean() sort: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Se verdadeiro, torna habilitado o botão \"Carregar mais resultados\".\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-show-more-disabled') @InputBoolean() showMoreDisabled?: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Habilita ou desabilita o estilo listrado da tabela (`striped`).\r\n   * > Recomendado para tabelas com maior número de dados, facilitando a sua visualização na tabela.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-striped') @InputBoolean() striped?: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Esconde o *checkbox* para seleção de todas as linhas.\r\n   *\r\n   * > Sempre receberá *true* caso a seleção de apenas uma linha esteja ativa.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-all') @InputBoolean() hideSelectAll: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Define que somente uma linha da tabela pode ser selecionada.\r\n   *\r\n   * > Esta definição não se aplica aos itens filhos, os mesmos possuem comportamento independente do item pai.\r\n   */\r\n  @Input('p-single-select') @InputBoolean() singleSelect?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma quantidade máxima de colunas que serão exibidas na tabela.\r\n   *\r\n   * Quando chegar no valor informado, as colunas que não estiverem selecionadas ficarão\r\n   * desabilitadas e caso houver mais colunas visíveis do que o permitido, as excedentes\r\n   * serão ignoradas por ordem de posição.\r\n   */\r\n  @Input('p-max-columns') maxColumns?: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento executado quando todas as linhas são selecionadas por meio do *checkbox* que seleciona todas as linhas.\r\n   */\r\n  @Output('p-all-selected') allSelected: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento executado quando a seleção das linhas é desmarcada por meio do *checkbox* que seleciona todas as linhas.\r\n   */\r\n  @Output('p-all-unselected') allUnselected: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado ao colapsar uma linha do `po-table`.\r\n   *\r\n   * > Como parâmetro o componente envia o item colapsado.\r\n   */\r\n  @Output('p-collapsed') collapsed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado ao expandir uma linha do `po-table`.\r\n   *\r\n   * > Como parâmetro o componente envia o item expandido.\r\n   */\r\n  @Output('p-expanded') expanded: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado ao selecionar uma linha do `po-table`.\r\n   */\r\n  @Output('p-selected') selected: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Recebe uma ação de clique para o botão \"Carregar mais resultados\", caso nenhuma ação for definida o mesmo\r\n   * não é visível.\r\n   *\r\n   * Recebe um objeto `{ column, type }` onde:\r\n   *\r\n   * - column (`PoTableColumn`): objeto da coluna que está ordenada.\r\n   * - type (`PoTableColumnSortType`): tipo da ordenação.\r\n   */\r\n  @Output('p-show-more') showMore: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento executado ao ordenar colunas da tabela.\r\n   *\r\n   * Recebe um objeto `{ column, type }` onde:\r\n   *\r\n   * - column (`PoTableColumn`): objeto da coluna que foi clicada/ordenada.\r\n   * - type (`PoTableColumnSortType`): tipo da ordenação.\r\n   */\r\n  @Output('p-sort-by') sortBy: EventEmitter<PoTableColumnSort> = new EventEmitter<PoTableColumnSort>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento executado ao desmarcar a seleção de uma linha do `po-table`.\r\n   */\r\n  @Output('p-unselected') unselected: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Evento disparado ao fechar o popover do gerenciador de colunas após alterar as colunas visíveis.\r\n   *\r\n   * O componente envia como parâmetro um array de string com as colunas visíveis atualizadas.\r\n   * Por exemplo: [\"idCard\", \"name\", \"hireStatus\", \"age\"].\r\n   */\r\n  @Output('p-change-visible-columns') changeVisibleColumns = new EventEmitter<Array<string>>();\r\n\r\n  allColumnsWidthPixels: boolean;\r\n  columnMasterDetail: PoTableColumn;\r\n  hasMainColumns: boolean = false;\r\n  mainColumns: Array<PoTableColumn> = [];\r\n  selectAll = false;\r\n  sortedColumn = { property: <PoTableColumn>null, ascending: true };\r\n  subtitleColumns: Array<PoTableColumn> = [];\r\n  page = 1;\r\n  pageSize = 10;\r\n  hasService?: boolean = false;\r\n\r\n  private _actions?: Array<PoTableAction> = [];\r\n  private _columns: Array<PoTableColumn> = [];\r\n  private _container?: string;\r\n  private _height?: number;\r\n  private _hideDetail?: boolean = false;\r\n  private _items: Array<PoTableColumn>;\r\n  private _literals: PoTableLiterals;\r\n  private _loading?: boolean = false;\r\n  private _selectable?: boolean;\r\n  private language: string = poLocaleDefault;\r\n  private _serviceApi: string;\r\n  private poTableServiceSubscription: Subscription;\r\n  private sortStore: PoTableColumnSort;\r\n  private _infiniteScrollDistance?: number = 100;\r\n  private _infiniteScroll?: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Lista de itens da tabela.\r\n   * > Se falso, será inicializado como um *array* vazio.\r\n   */\r\n  @Input('p-items') set items(items: Array<any>) {\r\n    this._items = Array.isArray(items) ? items : [];\r\n\r\n    // when haven't items, selectAll should be unchecked.\r\n    if (!this.hasItems) {\r\n      this.selectAll = false;\r\n    } else if (!this.hasColumns) {\r\n      this.columns = this.getDefaultColumns(items[0]);\r\n    }\r\n\r\n    // timeout necessario para os itens serem refletidos na tabela\r\n    setTimeout(() => this.checkInfiniteScroll());\r\n  }\r\n\r\n  get items() {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista das colunas da tabela, deve receber um *array* de objetos que implementam a interface `PoTableColumn`.\r\n   * Por padrão receberá como valor a primeira coluna da lista de itens da tabela.\r\n   * > Caso não encontre valor, a mensagem 'Nenhuma definição de colunas' será exibida.\r\n   *\r\n   */\r\n  @Input('p-columns') set columns(columns: Array<PoTableColumn>) {\r\n    this._columns = columns || [];\r\n\r\n    if (this._columns.length) {\r\n      this.setColumnLink();\r\n      this.calculateWidthHeaders();\r\n    } else if (this.hasItems) {\r\n      this._columns = this.getDefaultColumns(this.items[0]);\r\n    }\r\n\r\n    this.onChangeColumns();\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Adiciona um contorno arredondado ao `po-table`, as opções são:\r\n   * - `border`: com bordas/linhas.\r\n   * - `shadow`: com sombras.\r\n   *\r\n   * @default `border`\r\n   */\r\n  @Input('p-container') set container(value: string) {\r\n    this._container = poTableContainer.includes(value) ? value : poTableContainerDefault;\r\n  }\r\n\r\n  get container(): string {\r\n    return this._container;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura da tabela em *pixels* e fixa o cabeçalho.\r\n   */\r\n  @Input('p-height') set height(height: number) {\r\n    this._height = height;\r\n    this.calculateWidthHeaders();\r\n  }\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita a visualização da lista de detalhes de cada linha da coluna.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-detail') set hideDetail(hideDetail: boolean) {\r\n    this._hideDetail = hideDetail != null && hideDetail.toString() === '' ? true : convertToBoolean(hideDetail);\r\n    this.calculateWidthHeaders();\r\n  }\r\n\r\n  get hideDetail() {\r\n    return this._hideDetail;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-table`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoTableLiterals = {\r\n   *    loadMoreData: 'Buscar mais dados',\r\n   *    loadingData: 'Processando',\r\n   *    noColumns: 'Sem colunas',\r\n   *    noData: 'Sem dados',\r\n   *    seeCompleteSubtitle: 'Mostrar legenda completa',\r\n   *    completeSubtitle: 'Todas legendas'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoTableLiterals = {\r\n   *    noData: 'Sem dados'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-table\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-table>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoTableLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poTableLiteralsDefault[poLocaleDefault],\r\n        ...poTableLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poTableLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poTableLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Bloqueia a interação do usuário com os dados da _table_.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-loading') set loading(loading: boolean) {\r\n    this._loading = convertToBoolean(loading);\r\n    this.calculateWidthHeaders();\r\n  }\r\n\r\n  get loading() {\r\n    return this._loading;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma lista de ações.\r\n   *\r\n   * Quando houver apenas uma ação definida ela será exibida diretamente na coluna, caso contrário, o componente\r\n   * se encarrega de agrupá-las exibindo o ícone [**po-icon-more**](/guides/icons) que listará as ações ao ser clicado.\r\n   *\r\n   * **A coluna de ações não será exibida quando:**\r\n   *  - a lista conter valores inválidos ou indefinidos.\r\n   *  - tenha uma única ação e a mesma não for visível.\r\n   */\r\n  @Input('p-actions') set actions(actions: Array<PoTableAction>) {\r\n    this._actions = actions;\r\n    this.calculateWidthHeaders();\r\n  }\r\n\r\n  get actions() {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a seleção de linhas na tabela e, caso a propriedade `p-single-select` esteja definida será possível\r\n   * selecionar apenas uma única linha.\r\n   *\r\n   * **Importante:**\r\n   *  - As linhas de detalhe definidas em `PoTableDetail` possuem comportamento independente da linha mestre;\r\n   *  - Cada linha possui por padrão a propriedade dinâmica `$selected`, na qual é possível validar se a linha\r\n   * está selecionada, por exemplo: `item.$selected` ou `item['$selected']`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-selectable') set selectable(value: boolean) {\r\n    this._selectable = <any>value === '' ? true : convertToBoolean(value);\r\n    this.calculateWidthHeaders();\r\n  }\r\n\r\n  get selectable() {\r\n    return this._selectable;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Se verdadeiro, ativa a funcionalidade de scroll infinito para a tabela e o botão \"Carregar Mais\" deixará de ser exibido. Ao chegar no fim da tabela\r\n   * executará a função `p-show-more`.\r\n   *\r\n   * **Regras de utilização:**\r\n   *  - O scroll infinito só funciona para tabelas que utilizam a propriedade `p-height` e que possuem o scroll já na carga inicial dos dados.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-infinite-scroll') set infiniteScroll(value: boolean) {\r\n    this._infiniteScroll = convertToBoolean(value && this.height > 0);\r\n  }\r\n\r\n  get infiniteScroll() {\r\n    return this._infiniteScroll;\r\n  }\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o percentual necessário para disparar o evento `p-show-more`, que é responsável por carregar mais dados na tabela. Caso o valor informado seja maior que 100 ou menor\r\n   * que 0, o valor padrão será 100%\r\n   *\r\n   * **Exemplos:**\r\n   *  - p-infinite-scroll-distance = 80: Quando atingir 80%  do scroll da tabela, o `p-show-more` será disparado.\r\n   */\r\n  @Input('p-infinite-scroll-distance') set infiniteScrollDistance(value: number) {\r\n    this._infiniteScrollDistance = value > 100 || value < 0 ? 100 : value;\r\n  }\r\n\r\n  get infiniteScrollDistance() {\r\n    return this._infiniteScrollDistance;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * URL da API responsável por retornar os registros.\r\n   *\r\n   * Ao realizar a busca de mais registros via paginação (Carregar mais resultados), será enviado os parâmetros `page` e `pageSize`, conforme abaixo:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=10\r\n   * ```\r\n   *\r\n   * Caso utilizar ordenação, a coluna ordenada será enviada através do parâmetro `order`, por exemplo:\r\n   * - Coluna decrescente:\r\n   * ```\r\n   *  url + ?page=1&pageSize=10&order=-name\r\n   * ```\r\n   *\r\n   * - Coluna ascendente:\r\n   * ```\r\n   *  url + ?page=1&pageSize=10&order=name\r\n   * ```\r\n   *\r\n   * > Esta URL deve retornar e receber os dados no padrão de [API do PO UI](https://po-ui.io/guides/api).\r\n   */\r\n  @Input('p-service-api') set serviceApi(service: string) {\r\n    this._serviceApi = service;\r\n    this.setService(this.serviceApi);\r\n    this.hasService = !!service;\r\n    this.showMoreDisabled = !this.hasService;\r\n    this.page = 1;\r\n    this.initializeData();\r\n  }\r\n\r\n  get serviceApi() {\r\n    return this._serviceApi;\r\n  }\r\n\r\n  get hasColumns(): boolean {\r\n    return this.columns && this.columns.length > 0;\r\n  }\r\n\r\n  get hasItems(): boolean {\r\n    return !!(this.items && this.items.length);\r\n  }\r\n\r\n  get nameColumnDetail() {\r\n    return this.columnMasterDetail ? this.columnMasterDetail.property : null;\r\n  }\r\n\r\n  get validColumns() {\r\n    const typesValid = [\r\n      'string',\r\n      'number',\r\n      'boolean',\r\n      'date',\r\n      'time',\r\n      'dateTime',\r\n      'currency',\r\n      'subtitle',\r\n      'link',\r\n      'label',\r\n      'icon',\r\n      'cellTemplate',\r\n      'columnTemplate'\r\n    ];\r\n    return this.columns.filter(col => !col.type || typesValid.includes(col.type));\r\n  }\r\n\r\n  private get sortType(): PoTableColumnSortType {\r\n    return this.sortedColumn.ascending ? PoTableColumnSortType.Ascending : PoTableColumnSortType.Descending;\r\n  }\r\n\r\n  constructor(\r\n    private poDate: PoDateService,\r\n    languageService: PoLanguageService,\r\n    private poTableService: PoTableService\r\n  ) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.poTableServiceSubscription?.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.singleSelect || this.hideSelectAll) {\r\n      this.selectAll = false;\r\n      this.hideSelectAll = true;\r\n    }\r\n\r\n    if (changes.height) {\r\n      this.calculateHeightTableContainer(this.height);\r\n    }\r\n  }\r\n\r\n  selectAllRows() {\r\n    if (!this.hideSelectAll) {\r\n      this.selectAll = !this.selectAll;\r\n\r\n      this.items.forEach(item => {\r\n        item.$selected = this.selectAll;\r\n      });\r\n\r\n      this.emitSelectAllEvents(this.selectAll, [...this.items]);\r\n    }\r\n  }\r\n\r\n  selectRow(row: any) {\r\n    row.$selected = !row.$selected;\r\n\r\n    this.emitSelectEvents(row);\r\n\r\n    this.configAfterSelectRow(this.items, row);\r\n  }\r\n\r\n  selectDetailRow(row: any) {\r\n    this.emitSelectEvents(row);\r\n  }\r\n\r\n  getClassColor(row, column) {\r\n    return column.color ? `po-text-${this.getColumnColor(row, column)}` : '';\r\n  }\r\n\r\n  toggleDetail(row: any) {\r\n    const rowShowDetail = row.$showDetail;\r\n    if (this.autoCollapse) {\r\n      this.collapseAllItems(this.items);\r\n    }\r\n\r\n    this.setShowDetail(row, !rowShowDetail);\r\n    this.emitExpandEvents(row);\r\n  }\r\n\r\n  toggleRowAction(row: any) {\r\n    const toggleShowAction = row.$showAction;\r\n\r\n    this.items.forEach(item => {\r\n      if (item.$showAction) {\r\n        item.$showAction = false;\r\n      }\r\n    });\r\n    row.$showAction = !toggleShowAction;\r\n  }\r\n\r\n  sortColumn(column: PoTableColumn) {\r\n    if (!this.sort || column.type === 'detail' || column.sortable === false) {\r\n      return;\r\n    }\r\n\r\n    this.sortedColumn.ascending = this.sortedColumn.property === column ? !this.sortedColumn.ascending : true;\r\n\r\n    this.sortArray(column, this.sortedColumn.ascending);\r\n    this.sortBy.emit({ column, type: this.sortType });\r\n    if (this.hasService && this.sort) {\r\n      this.sortStore = { column, type: this.sortType };\r\n    }\r\n\r\n    this.sortedColumn.property = column;\r\n  }\r\n\r\n  onShowMore(): void {\r\n    const sort = this.sortedColumn.property ? { column: this.sortedColumn.property, type: this.sortType } : undefined;\r\n\r\n    if (this.hasService) {\r\n      this.page++;\r\n      this.loading = true;\r\n      this.loadingShowMore = true;\r\n\r\n      this.poTableServiceSubscription = this.getFilteredItems().subscribe(data => {\r\n        this.items = [...this.items, ...data.items];\r\n        this.showMoreDisabled = !data.hasNext;\r\n        this.loading = false;\r\n        this.loadingShowMore = false;\r\n      });\r\n    }\r\n\r\n    this.showMore.emit(sort);\r\n  }\r\n\r\n  getFilteredItems(queryParams?: { [key: string]: QueryParamsType }): Observable<PoTableResponseApi> {\r\n    const filteredParams: PoTableFilteredItemsParams = this.getFilteredParams(queryParams);\r\n\r\n    return this.poTableService.getFilteredItems(filteredParams);\r\n  }\r\n\r\n  setTableResponseProperties(data: PoTableResponseApi) {\r\n    this.items = data.items || [];\r\n    this.showMoreDisabled = !data.hasNext;\r\n    this.loading = false;\r\n  }\r\n\r\n  initializeData(params?: { [key: string]: QueryParamsType }): void {\r\n    if (this.hasService) {\r\n      this.loading = true;\r\n      this.getFilteredItems(params).subscribe(data => {\r\n        this.setTableResponseProperties(data);\r\n      });\r\n    }\r\n  }\r\n\r\n  protected getDefaultColumns(item: any) {\r\n    const keys = Object.keys(item);\r\n\r\n    return keys\r\n      .filter(key => typeof item[key] !== 'object')\r\n      .map(key => ({ label: capitalizeFirstLetter(key), property: key }));\r\n  }\r\n\r\n  protected setShowDetail(rowIdentifier: any | number, isShowDetail: boolean) {\r\n    const isRowIndex = typeof rowIdentifier === 'number' && this.items[rowIdentifier];\r\n\r\n    const row = isRowIndex ? this.items[rowIdentifier] : rowIdentifier;\r\n\r\n    row.$showDetail = isShowDetail;\r\n  }\r\n\r\n  private collapseAllItems(items: Array<{ [key: string]: any }>) {\r\n    for (const item of items) {\r\n      if (item.$showDetail) {\r\n        this.setShowDetail(item, false);\r\n        this.emitExpandEvents(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  private configAfterSelectRow(rows: Array<any>, row) {\r\n    if (this.singleSelect) {\r\n      this.unselectOtherRows(rows, row);\r\n    } else if (!this.hideSelectAll) {\r\n      this.selectAll = this.isEverySelected(rows);\r\n    }\r\n  }\r\n\r\n  private emitExpandEvents(row: any) {\r\n    row.$showDetail ? this.expanded.emit(row) : this.collapsed.emit(row);\r\n  }\r\n\r\n  private emitSelectAllEvents(selectAll: boolean, rows: any) {\r\n    selectAll ? this.allSelected.emit(rows) : this.allUnselected.emit(rows);\r\n  }\r\n\r\n  private emitSelectEvents(row: any) {\r\n    row.$selected ? this.selected.emit(row) : this.unselected.emit(row);\r\n  }\r\n\r\n  private getColumnColor(row, column) {\r\n    const columnColor = column.color;\r\n\r\n    return isTypeof(columnColor, 'function') ? columnColor(row, column.property) : columnColor;\r\n  }\r\n\r\n  // Retorna a coluna da lista de colunas que é do tipo detail\r\n  private getColumnMasterDetail() {\r\n    return this.columns.find(col => col.type === 'detail');\r\n  }\r\n\r\n  // Colunas que são inseridas no <head> da tabela\r\n  private getMainColumns() {\r\n    return this.validColumns.filter(col => col.visible !== false);\r\n  }\r\n\r\n  // Retorna as colunas com status\r\n  private getSubtitleColumns() {\r\n    return this.columns.filter(col => col.type === 'subtitle');\r\n  }\r\n\r\n  private isEverySelected(items: Array<any>): boolean {\r\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\r\n    const everyChecked = item => item.$selected;\r\n\r\n    if (items.every(everyChecked)) {\r\n      return true;\r\n    }\r\n\r\n    if (items.some(someCheckedOrIndeterminate)) {\r\n      return null;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private onChangeColumns() {\r\n    this.setMainColumns();\r\n    this.setColumnMasterDetail();\r\n    this.setSubtitleColumns();\r\n  }\r\n\r\n  private setColumnLink() {\r\n    this.columns.forEach(column => {\r\n      if (column['type'] === 'link' && !column['link']) {\r\n        column['link'] = 'link';\r\n      }\r\n    });\r\n  }\r\n\r\n  private setColumnMasterDetail() {\r\n    this.columnMasterDetail = this.getColumnMasterDetail();\r\n  }\r\n\r\n  private setMainColumns() {\r\n    this.mainColumns = this.getMainColumns();\r\n\r\n    this.hasMainColumns = !!this.mainColumns.length;\r\n\r\n    this.allColumnsWidthPixels = this.verifyWidthColumnsPixels();\r\n  }\r\n\r\n  private setSubtitleColumns() {\r\n    this.subtitleColumns = this.getSubtitleColumns();\r\n  }\r\n\r\n  private sortArray(column: PoTableColumn, ascending: boolean) {\r\n    this.items.sort((leftSide, rightSide): number =>\r\n      sortValues(leftSide[column.property], rightSide[column.property], ascending)\r\n    );\r\n  }\r\n\r\n  private unselectOtherRows(rows: Array<any>, row) {\r\n    rows.forEach(item => {\r\n      if (item !== row) {\r\n        item.$selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private verifyWidthColumnsPixels() {\r\n    return this.hasMainColumns ? this.mainColumns.every(column => column.width && column.width.includes('px')) : false;\r\n  }\r\n\r\n  private setService(service: string) {\r\n    if (service && isTypeof(service, 'string')) {\r\n      this.poTableService.setUrl(service);\r\n    }\r\n  }\r\n\r\n  private getFilteredParams(queryParams?: { [key: string]: QueryParamsType }) {\r\n    const { page, pageSize, sortStore } = this;\r\n\r\n    const filteredParams = {};\r\n    const order = this.getOrderParam(sortStore);\r\n    const params = { page, pageSize, order, ...queryParams };\r\n\r\n    for (const key in params) {\r\n      if (params.hasOwnProperty(key) && params[key] !== undefined) {\r\n        filteredParams[key] = params[key];\r\n      }\r\n    }\r\n    return filteredParams;\r\n  }\r\n\r\n  private getOrderParam(sort: PoTableColumnSort = { type: undefined }) {\r\n    const { column, type } = sort;\r\n\r\n    if (!column) {\r\n      return;\r\n    }\r\n\r\n    if (type === PoTableColumnSortType.Descending) {\r\n      return `-${column.property}`;\r\n    }\r\n\r\n    return `${column.property}`;\r\n  }\r\n\r\n  protected abstract calculateHeightTableContainer(height);\r\n\r\n  protected abstract calculateWidthHeaders();\r\n\r\n  protected abstract checkInfiniteScroll();\r\n}\r\n","/**\r\n * @usedBy PoTableRowTemplateDirective\r\n *\r\n * @description\r\n * Define a posição da arrow que expande o * row template* na tabela, será exibida na esquerda ou direita.\r\n */\r\nexport enum PoTableRowTemplateArrowDirection {\r\n  /** Posiciona a *arrow* na esquerda. (Padrão) */\r\n  Left = 'LEFT',\r\n\r\n  /** Posiciona a *arrow* na direita */\r\n  Right = 'RIGHT'\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\nimport { PoTableRowTemplateArrowDirection } from '../enums/po-table-row-template-arrow-direction.enum';\r\n\r\n/**\r\n * @usedBy PoTableComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que seja apresentada informações adicionais a respeito de uma determinada linha de\r\n * dados, de forma que possam ser exibidas e ocultadas através do botão de acionamento.\r\n *\r\n * > Quando utilizada, sobrepõe as funcionalidade básicas do *master-detail*.\r\n *\r\n * Em seu uso, deve-se utilizar como parâmetro a referência da _linha_ e/ou _índice_, sendo por padrão linha. Caso não seja declarado,\r\n * o componente não exibirá conteúdo.\r\n *  - Linha: `row` determina o item da linha corrente.\r\n *  - Índice: `rowIndex` determina o índice da linha corrente.\r\n *\r\n * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *     <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isShow\">\r\n *       <detail-row [row]=\"rowItem\"></detail-row>\r\n *     </ng-template>\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *     <div *p-table-row-template=\"let rowItem, let i=rowIndex\">\r\n *       <detail-row [row]=\"rowItem\"></detail-row>\r\n *     </div>\r\n * ...\r\n *\r\n * ```\r\n *\r\n * A diretiva **p-table-row-template**, possibilita também que determinada linha apresente ou não seu _template_. Para isto,\r\n * é necessário atribuir a referência da função que faz esta verificação, à propriedade `p-table-row-template-show`,\r\n * a mesma deve retornar um valor do tipo *boolean*. Veja o exemplo a seguir:\r\n *\r\n * ```\r\n * ...\r\n * @Component({\r\n *    selector: 'app-root',\r\n *    templateUrl: `\r\n *      ...\r\n *      <po-table\r\n *        [p-columns]=\"columns\"\r\n *        [p-items]=\"items\">\r\n *          <ng-template p-table-row-template let-rowItem let-i=\"rowIndex\" [p-table-row-template-show]=\"isUndelivered\">\r\n *            <detail-row [row]=\"rowItem\"> </detail-row>\r\n *          </div>\r\n *      ...\r\n *    `\r\n * })\r\n * export class AppComponent {\r\n *    public dataTable = [{\r\n *      code: 1200,\r\n *      product: 'Rice',\r\n *      costumer: 'Supermarket 1',\r\n *      quantity: 3,\r\n *      status: 'delivered',\r\n *      license_plate: 'MDJD9191',\r\n *      batch_product: 18041822,\r\n *      driver: 'José Oliveira'\r\n *    }, {\r\n *      code: 1355,\r\n *      product: 'Bean',\r\n *      costumer: 'Supermarket 2',\r\n *      quantity: 1,\r\n *      status: 'transport',\r\n *      license_plate: 'XXA5454',\r\n *      batch_product: 18041821,\r\n *      driver: 'Francisco Pereira'\r\n *    }];\r\n *\r\n *    isUndelivered(row, index: number) {\r\n *      return row.status !== 'delivered';\r\n *    }\r\n * }\r\n * ```\r\n * > No exemplo acima, somente será disponibilizado os detalhes de informações nas linhas cujo o valor de `status`\r\n * não correspondam à *delivered*.\r\n */\r\n@Directive({\r\n  selector: '[p-table-row-template]'\r\n})\r\nexport class PoTableRowTemplateDirective {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que deve retornar um valor booleano, informando se apresentará o template da linha.\r\n   * Serão passados o objeto da linha e o indice da mesma por parâmetro, para que seja possível\r\n   * tomar uma decisão a partir do objeto da linha corrente.\r\n   *\r\n   * Caso não ser utilizado esta propriedade, serão apresentados todos os detalhes das linhas.\r\n   *\r\n   * @default `true`\r\n   */\r\n  @Input('p-table-row-template-show') poTableRowTemplateShow: (row: any, index: number) => boolean;\r\n\r\n  private _tableRowTemplateArrowDirection: PoTableRowTemplateArrowDirection = PoTableRowTemplateArrowDirection.Left;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Propriedade responsável por informar a posição do colapse que abrirá os detalhes da linha.\r\n   *\r\n   * @default `'LEFT'`\r\n   */\r\n  @Input('p-table-row-template-arrow-direction') set tableRowTemplateArrowDirection(\r\n    value: PoTableRowTemplateArrowDirection\r\n  ) {\r\n    value = value?.toUpperCase() as PoTableRowTemplateArrowDirection;\r\n    this._tableRowTemplateArrowDirection = (<any>Object).values(PoTableRowTemplateArrowDirection).includes(value)\r\n      ? value\r\n      : PoTableRowTemplateArrowDirection.Left;\r\n  }\r\n\r\n  get tableRowTemplateArrowDirection() {\r\n    return this._tableRowTemplateArrowDirection;\r\n  }\r\n\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n/**\r\n * @usedBy PoTableComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que seja possível alterar o conteúdo das células de uma coluna, para que os valores possam ser exibidos\r\n * de acordo com a necessidade do usuário.\r\n *\r\n * Em seu uso, deve-se apenas adicionar a diretiva **p-table-cell-template** à tag `ng-template`.\r\n *\r\n * Retorno:\r\n *  - `column`: conteúdo da coluna corrente.\r\n *  - `row`: conteúdo da linha corrente\r\n *\r\n * Modo de uso:\r\n *\r\n * ```\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *     <ng-template p-table-cell-template let-column=\"column\" let-row=\"row\">\r\n *      <div *ngIf=\"column.property === 'status' && row.status === 'CANCELED'\">\r\n *        <h1 [style.background]=\"'red'\">CANCELADA</h1>\r\n *        <span (click)=\"onClick()\"><small>clique aqui</small></span>\r\n *      </div>\r\n *      <h1 *ngIf=\"column.property === 'status' && row.status === 'FINISHED'\" [style.background]=\"'green'\">FINALIZADA</h1>\r\n *      <h1 *ngIf=\"column.property === 'status' && row.status === 'OPENED'\" [style.background]=\"'orange'\">ABERTA</h1>\r\n *      <h1 *ngIf=\"column.property === 'status2'\">Conteúdo do status 2</h1>\r\n *      <h1 *ngIf=\"column.property === 'status3'\">Conteúdo do status 3</h1>\r\n *    </ng-template>\r\n * ...\r\n * ```\r\n * > No exemplo acima, o usuário tem como retorno `row` e a `column` corrente, neste caso ele tem total liberdade para manipular os objetos.\r\n *\r\n * Abaixo, a declaração dos dados de entrada do PO-TABLE para o uso da directiva.\r\n * ```\r\n * ...\r\n * export class AppComponent {\r\n *\r\n *    items = [{\r\n *      code: 1200,\r\n *      product: 'Rice',\r\n *      status: 'CANCELED',\r\n *      status2: '',\r\n *      status3: ''\r\n *      },{\r\n *      code: 1355,\r\n *      product: 'Bean',\r\n *      status: 'FINISHED',\r\n *      status2: '',\r\n *      status3: ''\r\n *      }];\r\n *\r\n *    columns = [\r\n *       { property: 'code', label: 'ID' },\r\n *       { property: 'product', label: 'PRODUTO' },\r\n *       { property: 'status', label: 'STATUS', type: 'cellTemplate' },\r\n *       { property: 'status2', label: 'STATUS 2', type: 'cellTemplate' },\r\n *       { property: 'status3', label: 'STATUS 3', type: 'cellTemplate' }\r\n *    ];\r\n * }\r\n * ...\r\n * ```\r\n * > Observação: Sempre adicionar o **type** da coluna que deseja manipular com a directiva como `cellTemplate`\r\n */\r\n@Directive({\r\n  selector: '[p-table-cell-template]'\r\n})\r\nexport class PoTableCellTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do cell template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoTableComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que seja possível alterar o conteúdo das células de uma coluna, para que os valores possam ser exibidos\r\n * de acordo com a necessidade do usuário.\r\n *\r\n * Em seu uso, deve-se utilizar como parâmetro de entrada o input [p-property], o qual é responsável por informar ao PO-TABLE qual a coluna que\r\n * será adicionado o conteúdo do template.\r\n *\r\n * Retorno:\r\n *  - value: valor referente ao conteúdo da linha corrente.\r\n *\r\n * Modo de uso:\r\n * ```html\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *   <ng-template p-table-column-template [p-property]=\"targetProperty\" let-value>\r\n *     <span [innerText]=\"value\"></span>\r\n *   </ng-template>\r\n * </po-table>\r\n * ...\r\n * ```\r\n * > No exemplo acima, todas as células correspondentes a coluna `status` terão o conteúdo alterado para `<h1>${value}</h1>`,\r\n * sendo que `value` refere-se ao conteúdo da linha.\r\n *\r\n * ```html\r\n * ...\r\n * <po-table\r\n *   [p-columns]=\"columns\"\r\n *   [p-items]=\"items\">\r\n *   <ng-template  p-table-column-template [p-property]=\"targetProperty\" let-value>\r\n *     <span *ngIf=\"value === 'FINISHED'\" [style.background]=\"'silver'\" [innerText]=\"value\"></span>\r\n *     <span *ngIf=\"value === 'OPENED'\" [style.background]=\"'gray'\" [innerText]=\"value\"></span>\r\n *   </ng-template>\r\n * </po-table>\r\n * ...\r\n * ```\r\n * > Agora, neste exemplo, com o valor da linha corrente retornado (value), é feito uma validação para\r\n * definir o template exato para adicionar a uma específica célula.\r\n *\r\n * Abaixo, a declaração dos dados de entrada do PO-TABLE para o uso da directiva.\r\n * ```typescript\r\n * ...\r\n * export class AppComponent {\r\n *\r\n *    targetProperty= 'status';\r\n *\r\n *    items = [{\r\n *      code: 1200,\r\n *      product: 'Rice',\r\n *      status: 'CANCELED'\r\n *      },{\r\n *      code: 1355,\r\n *      product: 'Bean',\r\n *      status: 'FINISHED'\r\n *    }];\r\n *\r\n *    columns = [\r\n *      { property: 'code', label: 'ID' },\r\n *      { property: 'product', label: 'PRODUTO' },\r\n *      { property: 'status', label: 'STATUS', type: 'columnTemplate' }\r\n *    ];\r\n * }\r\n * ...\r\n * ```\r\n * > Observação: Sempre adicionar o **type** da coluna que deseja manipular com a directiva como `columnTemplate`\r\n */\r\n\r\n@Directive({\r\n  selector: '[p-table-column-template]'\r\n})\r\nexport class PoTableColumnTemplateDirective {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Variável responsável por armazenar a property da coluna da tabela que será adicionado o template.\r\n   *\r\n   * Caso não seja informada esta propriedade, serão apresentados normalmente os dados da coluna.\r\n   */\r\n  @Input('p-property') targetProperty: string;\r\n\r\n  // Necessário manter templateRef para o funcionamento do column template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Observable, Subscriber, Subscription } from 'rxjs';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  DoCheck,\r\n  ElementRef,\r\n  IterableDiffers,\r\n  OnDestroy,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewContainerRef,\r\n  ContentChildren,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PoDateService } from '../../services/po-date/po-date.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\r\n\r\nimport { PoTableAction } from './interfaces/po-table-action.interface';\r\nimport { PoTableBaseComponent, QueryParamsType } from './po-table-base.component';\r\nimport { PoTableColumn } from './interfaces/po-table-column.interface';\r\nimport { PoTableColumnLabel } from './po-table-column-label/po-table-column-label.interface';\r\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\r\nimport { PoTableSubtitleColumn } from './po-table-subtitle-footer/po-table-subtitle-column.interface';\r\nimport { PoTableCellTemplateDirective } from './po-table-cell-template/po-table-cell-template.directive';\r\nimport { PoTableColumnTemplateDirective } from './po-table-column-template/po-table-column-template.directive';\r\nimport { PoTableRowTemplateArrowDirection } from './enums/po-table-row-template-arrow-direction.enum';\r\nimport { PoTableService } from './services/po-table.service';\r\n\r\n/**\r\n * @docsExtends PoTableBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-table-basic\" title=\"PO Table Basic\">\r\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-basic/sample-po-table-basic.component.html\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-labs\" title=\"PO Table Labs\">\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.component.po.ts\"> </file>\r\n *  <file name=\"sample-po-table-labs/sample-po-table-labs.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-with-api\" title=\"PO Table using API\">\r\n *  <file name=\"sample-po-table-with-api/sample-po-table-with-api.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-with-api/sample-po-table-with-api.component.html\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-transport\" title=\"PO Table - Transport\">\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.component.html\"> </file>\r\n *  <file name=\"sample-po-table-transport/sample-po-table-transport.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-airfare\" title=\"PO Table - Airfare\">\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.component.html\"> </file>\r\n *  <file name=\"sample-po-table-airfare/sample-po-table-airfare.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-table-components\" title=\"PO Table - Po Field Components\">\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.enum.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.html\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.service.ts\"> </file>\r\n *  <file name=\"sample-po-table-components/sample-po-table-components.component.css\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-table',\r\n  templateUrl: './po-table.component.html',\r\n  providers: [PoDateService]\r\n})\r\nexport class PoTableComponent extends PoTableBaseComponent implements AfterViewInit, DoCheck, OnDestroy {\r\n  @ContentChild(PoTableRowTemplateDirective, { static: true }) tableRowTemplate: PoTableRowTemplateDirective;\r\n  @ContentChild(PoTableCellTemplateDirective) tableCellTemplate: PoTableCellTemplateDirective;\r\n\r\n  @ContentChildren(PoTableColumnTemplateDirective) tableColumnTemplates: QueryList<PoTableColumnTemplateDirective>;\r\n\r\n  @ViewChild('noColumnsHeader', { read: ElementRef }) noColumnsHeader;\r\n  @ViewChild('popup') poPopupComponent: PoPopupComponent;\r\n  @ViewChild('tableFooter', { read: ElementRef, static: false }) tableFooterElement;\r\n  @ViewChild('tableWrapper', { read: ElementRef, static: false }) tableWrapperElement;\r\n  @ViewChild('poTableTbody', { read: ElementRef, static: false }) poTableTbody;\r\n\r\n  @ViewChildren('actionsIconElement', { read: ElementRef }) actionsIconElement: QueryList<any>;\r\n  @ViewChildren('actionsElement', { read: ElementRef }) actionsElement: QueryList<any>;\r\n  @ViewChildren('headersTable') headersTable: QueryList<any>;\r\n\r\n  heightTableContainer: number;\r\n  popupTarget;\r\n  tableOpacity: number = 0;\r\n  tooltipText: string;\r\n  lastVisibleColumnsSelected: Array<PoTableColumn>;\r\n\r\n  private _columnManagerTarget: ElementRef;\r\n  private differ;\r\n  private footerHeight;\r\n  private initialized = false;\r\n  private timeoutResize;\r\n  private visibleElement = false;\r\n  private scrollEvent$: Observable<any>;\r\n  private subscriptionScrollEvent: Subscription;\r\n\r\n  private clickListener: () => void;\r\n  private resizeListener: () => void;\r\n\r\n  @ViewChild('columnManagerTarget') set columnManagerTarget(value: ElementRef) {\r\n    this._columnManagerTarget = value;\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  get columnManagerTarget() {\r\n    return this._columnManagerTarget;\r\n  }\r\n\r\n  constructor(\r\n    poDate: PoDateService,\r\n    differs: IterableDiffers,\r\n    renderer: Renderer2,\r\n    poLanguageService: PoLanguageService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private decimalPipe: DecimalPipe,\r\n    private router: Router,\r\n    private defaultService: PoTableService\r\n  ) {\r\n    super(poDate, poLanguageService, defaultService);\r\n\r\n    this.differ = differs.find([]).create(null);\r\n\r\n    // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas não sofrem\r\n    // alteração de largura, pois o ngDoCheck não é executado.\r\n    this.clickListener = renderer.listen('document', 'click', () => {});\r\n\r\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\r\n      this.debounceResize();\r\n    });\r\n  }\r\n\r\n  get hasRowTemplateWithArrowDirectionRight() {\r\n    return this.tableRowTemplate?.tableRowTemplateArrowDirection === PoTableRowTemplateArrowDirection.Right;\r\n  }\r\n\r\n  get columnCount() {\r\n    const columnCount =\r\n      this.mainColumns.length +\r\n      (this.actions.length > 0 ? 1 : 0) +\r\n      (this.selectable ? 1 : 0) +\r\n      (!this.hideDetail && this.columnMasterDetail !== undefined ? 1 : 0);\r\n\r\n    return columnCount || 1;\r\n  }\r\n\r\n  get columnCountForMasterDetail() {\r\n    // caso tiver ações será utilizado a sua coluna para exibir o columnManager\r\n    const columnManager = this.actions.length ? 0 : 1;\r\n\r\n    return this.mainColumns.length + 1 + (this.actions.length > 0 ? 1 : 0) + (this.selectable ? 1 : 0) + columnManager;\r\n  }\r\n\r\n  get detailHideSelect() {\r\n    const masterDetail = this.columnMasterDetail;\r\n    return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;\r\n  }\r\n\r\n  get hasVisibleActions() {\r\n    return !!this.visibleActions.length;\r\n  }\r\n\r\n  get firstAction(): PoTableAction {\r\n    return this.visibleActions && this.visibleActions[0];\r\n  }\r\n\r\n  get hasFooter(): boolean {\r\n    return this.hasItems && this.hasVisibleSubtitleColumns;\r\n  }\r\n\r\n  get hasMasterDetailColumn(): boolean {\r\n    return (\r\n      this.hasMainColumns && this.hasItems && !this.hideDetail && !!(this.columnMasterDetail || this.hasRowTemplate)\r\n    );\r\n  }\r\n\r\n  get hasRowTemplate(): boolean {\r\n    return !!this.tableRowTemplate;\r\n  }\r\n\r\n  get hasSelectableColumn(): boolean {\r\n    return this.selectable && this.hasItems && this.hasMainColumns;\r\n  }\r\n\r\n  get hasValidColumns() {\r\n    return !!this.validColumns.length;\r\n  }\r\n\r\n  get hasVisibleSubtitleColumns() {\r\n    return this.subtitleColumns.some(column => column.visible !== false);\r\n  }\r\n\r\n  get isSingleAction() {\r\n    return this.visibleActions.length === 1;\r\n  }\r\n\r\n  get visibleActions() {\r\n    return this.actions && this.actions.filter(action => action && action.visible !== false);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initialized = true;\r\n  }\r\n\r\n  showMoreInfiniteScroll({ target }): void {\r\n    const scrollPosition = target.offsetHeight + target.scrollTop;\r\n    if (!this.showMoreDisabled && scrollPosition >= target.scrollHeight * (this.infiniteScrollDistance / 110)) {\r\n      this.onShowMore();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.checkChangesItems();\r\n    this.verifyCalculateHeightTableContainer();\r\n    // Permite que os cabeçalhos sejam calculados na primeira vez que o componente torna-se visível,\r\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\r\n    if (this.tableWrapperElement?.nativeElement.offsetWidth && !this.visibleElement && this.initialized) {\r\n      this.debounceResize();\r\n      this.checkInfiniteScroll();\r\n      this.visibleElement = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  /**\r\n   * Método responsável por realizar busca no serviço de dados podendo informar filtros e com o retorno, atualiza a tabela.\r\n   *\r\n   * Caso não seja informado parâmetro, nada será adicionado ao GET, conforme abaixo:\r\n   * ```\r\n   * url + ?page=1&pageSize=10\r\n   * ```\r\n   * > Obs: os parâmetros `page` e `pageSize` sempre serão chamados independente de ser enviados outros parâmetros.\r\n   *\r\n   * Caso sejam informados os parâmetros `{ name: 'JOHN', age: '23' }`, todos serão adicionados ao GET, conforme abaixo:\r\n   * ```\r\n   * url + ?page=1&pageSize=10&name=JOHN&age=23\r\n   * ```\r\n   *\r\n   * @param { { key: value } } queryParams Formato do objeto a ser enviado.\r\n   * > Pode ser utilizada qualquer string como key, e qualquer string ou number como value.\r\n   */\r\n  applyFilters(queryParams?: { [key: string]: QueryParamsType }) {\r\n    this.page = 1;\r\n    this.initializeData(queryParams);\r\n  }\r\n\r\n  /**\r\n   * Método que colapsa uma linha com detalhe quando executada.\r\n   *\r\n   * @param { number } rowIndex Índice da linha que será colapsada.\r\n   * > Ao reordenar os dados da tabela, o valor contido neste índice será alterado conforme a ordenação.\r\n   */\r\n  collapse(rowIndex: number) {\r\n    this.setShowDetail(rowIndex, false);\r\n  }\r\n\r\n  /**\r\n   * Método que expande uma linha com detalhe quando executada.\r\n   *\r\n   * @param { number } rowIndex Índice da linha que será expandida.\r\n   * > Ao reordenar os dados da tabela, o valor contido neste índice será alterado conforme a ordenação.\r\n   */\r\n  expand(rowIndex: number) {\r\n    this.setShowDetail(rowIndex, true);\r\n  }\r\n\r\n  /**\r\n   * Retorna as linhas do `po-table` que estão selecionadas.\r\n   */\r\n  getSelectedRows() {\r\n    return this.items.filter(item => item.$selected);\r\n  }\r\n\r\n  /**\r\n   * Retorna as linhas do `po-table` que não estão selecionadas.\r\n   */\r\n  getUnselectedRows() {\r\n    return this.items.filter(item => !item.$selected);\r\n  }\r\n\r\n  /**\r\n   * Desmarca as linhas que estão selecionadas.\r\n   */\r\n  unselectRows() {\r\n    const columnDetail = this.nameColumnDetail;\r\n\r\n    this.items.forEach(item => {\r\n      const detailItems = columnDetail ? item[columnDetail] : null;\r\n\r\n      if (Array.isArray(detailItems)) {\r\n        detailItems.forEach(detailItem => {\r\n          detailItem.$selected = false;\r\n        });\r\n      }\r\n\r\n      item.$selected = false;\r\n    });\r\n\r\n    this.selectAll = false;\r\n  }\r\n\r\n  checkDisabled(row, column: PoTableColumn) {\r\n    return column.disabled ? column.disabled(row) : false;\r\n  }\r\n\r\n  containsMasterDetail(row) {\r\n    return row[this.nameColumnDetail] && row[this.nameColumnDetail].length;\r\n  }\r\n\r\n  executeTableAction(row: any, tableAction: any) {\r\n    if (!row.disabled && !this.validateTableAction(row, tableAction)) {\r\n      tableAction.action(row);\r\n      this.toggleRowAction(row);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Desmarca uma linha que está selecionada.\r\n   */\r\n  unselectRowItem(itemfn: { [key: string]: any } | ((item) => boolean)) {\r\n    this.toggleSelect(itemfn, false);\r\n\r\n    if (this.items.every(item => !item.$selected)) {\r\n      this.selectAll = false;\r\n    } else {\r\n      this.selectAll = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Seleciona uma linha do 'po-table'.\r\n   */\r\n  selectRowItem(itemfn: { [key: string]: any } | ((item) => boolean)) {\r\n    this.toggleSelect(itemfn, true);\r\n\r\n    if (this.items.every(item => item.$selected)) {\r\n      this.selectAll = true;\r\n    } else {\r\n      this.selectAll = null;\r\n    }\r\n  }\r\n\r\n  formatNumber(value: any, format: string) {\r\n    if (!format) {\r\n      return value;\r\n    }\r\n\r\n    return this.decimalPipe.transform(value, format);\r\n  }\r\n\r\n  getBooleanLabel(rowValue: any, columnBoolean: PoTableColumn): string {\r\n    if (rowValue || rowValue === false || rowValue === 0) {\r\n      rowValue = convertToBoolean(rowValue);\r\n\r\n      if (columnBoolean.boolean) {\r\n        return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'Não';\r\n      } else {\r\n        return rowValue ? 'Sim' : 'Não';\r\n      }\r\n    }\r\n\r\n    return rowValue;\r\n  }\r\n\r\n  getColumnIcons(row: any, column: PoTableColumn) {\r\n    const rowIcons = row[column.property];\r\n\r\n    if (column.icons) {\r\n      if (Array.isArray(rowIcons)) {\r\n        return this.mergeCustomIcons(rowIcons, column.icons);\r\n      } else {\r\n        return this.findCustomIcon(rowIcons, column);\r\n      }\r\n    }\r\n\r\n    return rowIcons;\r\n  }\r\n\r\n  getColumnLabel(row: any, columnLabel: PoTableColumn): PoTableColumnLabel {\r\n    return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);\r\n  }\r\n\r\n  getSubtitleColumn(row: any, subtitleColumn: PoTableColumn): PoTableSubtitleColumn {\r\n    return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);\r\n  }\r\n\r\n  isShowMasterDetail(row) {\r\n    return (\r\n      !this.hideDetail &&\r\n      this.nameColumnDetail &&\r\n      row.$showDetail &&\r\n      this.containsMasterDetail(row) &&\r\n      !this.hasRowTemplate\r\n    );\r\n  }\r\n\r\n  isShowRowTemplate(row, index: number): boolean {\r\n    if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {\r\n      return this.tableRowTemplate.poTableRowTemplateShow(row, index);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  onClickLink(event, row, column: PoTableColumn) {\r\n    if (!this.checkDisabled(row, column)) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  onChangeVisibleColumns(columns: Array<string>) {\r\n    this.changeVisibleColumns.emit(columns);\r\n  }\r\n\r\n  onVisibleColumnsChange(columns: Array<PoTableColumn>) {\r\n    this.columns = columns;\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  tooltipMouseEnter(event: any, column?: PoTableColumn, row?: any) {\r\n    this.tooltipText = undefined;\r\n\r\n    if (this.hideTextOverflow && event.target.offsetWidth < event.target.scrollWidth && event.target.innerText.trim()) {\r\n      return (this.tooltipText = event.target.innerText);\r\n    }\r\n\r\n    if (column) {\r\n      this.checkingIfColumnHasTooltip(column, row);\r\n    }\r\n  }\r\n\r\n  tooltipMouseLeave() {\r\n    this.tooltipText = undefined;\r\n  }\r\n\r\n  togglePopup(row, targetRef) {\r\n    this.popupTarget = targetRef;\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.poPopupComponent.toggle(row);\r\n  }\r\n\r\n  trackBy(index: number) {\r\n    return index;\r\n  }\r\n\r\n  validateTableAction(row: any, tableAction: any) {\r\n    if (typeof tableAction.disabled === 'function') {\r\n      return tableAction.disabled(row);\r\n    } else {\r\n      return tableAction.disabled;\r\n    }\r\n  }\r\n\r\n  onOpenColumnManager() {\r\n    this.lastVisibleColumnsSelected = [...this.columns];\r\n  }\r\n\r\n  /**\r\n   * Método que remove um item da tabela.\r\n   *\r\n   * @param { number | { key: value } } item Índice da linha ou o item que será removido.\r\n   * > Ao remover o item, a linha que o representa será excluída da tabela.\r\n   */\r\n  removeItem(item: number | { [key: string]: any }) {\r\n    if (item instanceof Object) {\r\n      this.items = this.items.filter(filterItem => filterItem !== item);\r\n    } else if (typeof item === 'number') {\r\n      const index: number = item;\r\n      this.items.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Método que atualiza um item da tabela.\r\n   *\r\n   * @param { number | { key: value } } item Índice da linha ou o item que será atualizado.\r\n   * @param { { key: value } } updatedItem Item que foi atualizado.\r\n   * > Ao atualizar o item, a informação será alterada na tabela.\r\n   */\r\n  updateItem(item: number | { [key: string]: any }, updatedItem: { [key: string]: any }) {\r\n    if (typeof item === 'number') {\r\n      this.items.splice(item, 1, updatedItem);\r\n    } else {\r\n      const index = this.items.findIndex(indexItem => indexItem === item);\r\n      this.items.splice(index, 1, updatedItem);\r\n    }\r\n  }\r\n\r\n  public getTemplate(column: PoTableColumn): TemplateRef<any> {\r\n    const template: PoTableColumnTemplateDirective = this.tableColumnTemplates.find(\r\n      tableColumnTemplate => tableColumnTemplate.targetProperty === column.property\r\n    );\r\n    if (!template) {\r\n      console.warn(\r\n        `Não foi possível encontrar o template para a coluna: ${column.property}, por gentileza informe a propriedade [p-property]`\r\n      );\r\n      return null;\r\n    }\r\n    return template.templateRef;\r\n  }\r\n\r\n  protected calculateHeightTableContainer(height) {\r\n    const value = parseFloat(height);\r\n    this.heightTableContainer = value ? value - this.getHeightTableFooter() : undefined;\r\n    this.setTableOpacity(1);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  protected calculateWidthHeaders() {\r\n    setTimeout(() => {\r\n      if (this.height) {\r\n        this.headersTable.forEach(header => {\r\n          const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');\r\n          if (divHeader) {\r\n            divHeader.style.width = `${header.nativeElement.offsetWidth}px`;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  protected checkInfiniteScroll(): void {\r\n    if (this.hasInfiniteScroll()) {\r\n      if (this.poTableTbody.nativeElement.scrollHeight > this.height) {\r\n        this.includeInfiniteScroll();\r\n      } else {\r\n        this.infiniteScroll = false;\r\n      }\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  private checkChangesItems() {\r\n    const changesItems = this.differ.diff(this.items);\r\n\r\n    if (changesItems && this.selectAll) {\r\n      this.selectAll = null;\r\n    }\r\n\r\n    if (changesItems && !this.hasColumns && this.hasItems) {\r\n      this.columns = this.getDefaultColumns(this.items[0]);\r\n    }\r\n  }\r\n\r\n  private checkingIfColumnHasTooltip(column, row) {\r\n    if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {\r\n      return (this.tooltipText = column.tooltip);\r\n    }\r\n\r\n    if (column.type === 'label') {\r\n      const columnLabel = this.getColumnLabel(row, column);\r\n      return (this.tooltipText = columnLabel?.tooltip);\r\n    }\r\n  }\r\n\r\n  private debounceResize() {\r\n    clearTimeout(this.timeoutResize);\r\n    this.timeoutResize = setTimeout(() => {\r\n      this.calculateWidthHeaders();\r\n\r\n      // show the table\r\n      this.setTableOpacity(1);\r\n    });\r\n  }\r\n\r\n  private findCustomIcon(rowIcons, column: PoTableColumn) {\r\n    const customIcon = column.icons.find(icon => rowIcons === icon.value);\r\n    return customIcon ? [customIcon] : undefined;\r\n  }\r\n\r\n  private getHeightTableFooter() {\r\n    return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;\r\n  }\r\n\r\n  private hasInfiniteScroll(): boolean {\r\n    return (\r\n      this.infiniteScroll &&\r\n      this.hasItems &&\r\n      !this.subscriptionScrollEvent &&\r\n      this.height &&\r\n      this.poTableTbody.nativeElement.scrollHeight\r\n    );\r\n  }\r\n\r\n  private includeInfiniteScroll(): void {\r\n    this.scrollEvent$ = this.defaultService.scrollListener(this.poTableTbody.nativeElement);\r\n    this.subscriptionScrollEvent = this.scrollEvent$.subscribe(event => this.showMoreInfiniteScroll(event));\r\n  }\r\n\r\n  private mergeCustomIcons(rowIcons: Array<string>, customIcons: Array<any>) {\r\n    const mergedIcons = [];\r\n\r\n    rowIcons.forEach(columnValue => {\r\n      const foundCustomIcon = customIcons.find(\r\n        customIcon => columnValue === customIcon.icon || columnValue === customIcon.value\r\n      );\r\n      foundCustomIcon ? mergedIcons.push(foundCustomIcon) : mergedIcons.push(columnValue);\r\n    });\r\n\r\n    return mergedIcons;\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n\r\n    if (this.clickListener) {\r\n      this.clickListener();\r\n    }\r\n\r\n    if (this.subscriptionScrollEvent) {\r\n      this.subscriptionScrollEvent.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setTableOpacity(value: number) {\r\n    this.tableOpacity = value;\r\n  }\r\n\r\n  private verifyChangeHeightInFooter() {\r\n    return this.footerHeight !== this.getHeightTableFooter();\r\n  }\r\n\r\n  private verifyCalculateHeightTableContainer() {\r\n    if (this.height && this.verifyChangeHeightInFooter()) {\r\n      this.footerHeight = this.getHeightTableFooter();\r\n      this.calculateHeightTableContainer(this.height);\r\n    }\r\n  }\r\n\r\n  private toggleSelect(compare, selectValue: boolean) {\r\n    if (typeof compare !== 'function') {\r\n      this.items.forEach(item => {\r\n        if (item === compare) {\r\n          item.$selected = selectValue;\r\n        }\r\n      });\r\n    } else {\r\n      this.items.forEach(item => {\r\n        if (compare(item)) {\r\n          item.$selected = selectValue;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\n\r\nimport { capitalizeFirstLetter, isTypeof } from '../../../utils/util';\r\n\r\nimport { PoTableDetail } from './po-table-detail.interface';\r\nimport { PoTableDetailColumn } from './po-table-detail-column.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por apresentar o detalhe de cada linha da tabela.\r\n */\r\n@Component({\r\n  selector: 'po-table-detail',\r\n  templateUrl: './po-table-detail.component.html'\r\n})\r\nexport class PoTableDetailComponent {\r\n  /**\r\n   * Lista de itens do _detail_ da tabela.\r\n   */\r\n  @Input('p-items') items: Array<any>;\r\n\r\n  /**\r\n   * Define se a tabela possui a opção de `selectable` habilitada.\r\n   */\r\n  @Input('p-selectable') isSelectable?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.\r\n   */\r\n  @Output('p-select-row') selectRow: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  private _detail: PoTableDetail;\r\n\r\n  /**\r\n   * Configuração da linha de detalhes.\r\n   */\r\n  @Input('p-detail') set detail(value: PoTableDetail) {\r\n    this._detail = this.returnPoTableDetailObject(value);\r\n  }\r\n\r\n  get detail() {\r\n    return this._detail;\r\n  }\r\n\r\n  constructor(private decimalPipe: DecimalPipe) {}\r\n\r\n  get detailColumns(): Array<PoTableDetailColumn> {\r\n    return this.detail?.columns || [];\r\n  }\r\n\r\n  get typeHeaderInline(): boolean {\r\n    return (this.detail && !this.detail['typeHeader']) || this.detail['typeHeader'] === 'inline';\r\n  }\r\n\r\n  get typeHeaderTop(): boolean {\r\n    return this.detail && this.detail['typeHeader'] === 'top';\r\n  }\r\n\r\n  formatNumberDetail(value: any, format: string) {\r\n    if (!format) {\r\n      return value;\r\n    }\r\n\r\n    return this.decimalPipe.transform(value, format);\r\n  }\r\n\r\n  getColumnTitleLabel(detail: PoTableDetailColumn) {\r\n    return detail.label || capitalizeFirstLetter(detail.property);\r\n  }\r\n\r\n  onSelectRow(item) {\r\n    item.$selected = !item.$selected;\r\n    this.selectRow.emit(item);\r\n  }\r\n\r\n  private returnPoTableDetailObject(value: any) {\r\n    if (value && isTypeof(value, 'object')) {\r\n      if (value.columns) {\r\n        value.columns.forEach(column => (column.property = column.property || column.column));\r\n      }\r\n\r\n      if (Array.isArray(value)) {\r\n        return { columns: value };\r\n      }\r\n\r\n      if (value.columns) {\r\n        return value;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por exibir um ícone na tabela.\r\n */\r\n@Component({\r\n  selector: 'po-table-icon',\r\n  templateUrl: './po-table-icon.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTableIconComponent {\r\n  /** Define se o ícone é clicável. */\r\n  @Input('p-clickable') clickable: boolean;\r\n\r\n  /** Cor do ícone. */\r\n  @Input('p-color') color: string;\r\n\r\n  /** Desabilitado. */\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  /** Classe css do ícone. */\r\n  @Input('p-icon') icon: string | TemplateRef<void>;\r\n\r\n  /** Texto do tooltip. */\r\n  @Input('p-icon-tooltip') iconTooltip: string;\r\n\r\n  /** Output click. */\r\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter();\r\n\r\n  tooltip: string;\r\n\r\n  private get allowTooltip() {\r\n    return !this.disabled && this.iconTooltip;\r\n  }\r\n\r\n  onClick(event) {\r\n    if (this.clickable) {\r\n      this.click.emit(event);\r\n    }\r\n  }\r\n\r\n  tooltipMouseEnter() {\r\n    if (this.allowTooltip) {\r\n      this.tooltip = this.iconTooltip;\r\n    }\r\n  }\r\n\r\n  tooltipMouseLeave() {\r\n    this.tooltip = undefined;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoTableSubtitleColumn } from '../po-table-subtitle-footer/po-table-subtitle-column.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a criação de um botão e modal para visualização de todas as legendas.\r\n */\r\n@Component({\r\n  selector: 'po-table-show-subtitle',\r\n  templateUrl: './po-table-show-subtitle.component.html'\r\n})\r\nexport class PoTableShowSubtitleComponent {\r\n  /** Objeto com os dados da legenda. */\r\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\r\n\r\n  /** Propriedade que recebe as literais definidas no `po-table`. */\r\n  @Input('p-literals') literals;\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { PoColorPaletteService } from './../../../services/po-color-palette/po-color-palette.service';\r\nimport { PoTableSubtitleColumn } from './../po-table-subtitle-footer/po-table-subtitle-column.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a criação da representação da legenda, em formato de círculo.\r\n */\r\n@Component({\r\n  selector: 'po-table-subtitle-circle',\r\n  templateUrl: './po-table-subtitle-circle.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTableSubtitleCircleComponent {\r\n  /** Esconde a tooltip. */\r\n  @Input('p-hide-title')\r\n  hideTitle: boolean = false;\r\n\r\n  private _subtitle: PoTableSubtitleColumn;\r\n\r\n  /** Objeto com os dados da legenda. */\r\n  @Input('p-subtitle') set subtitle(subtitle: PoTableSubtitleColumn) {\r\n    if (subtitle) {\r\n      subtitle.color = this.poColorPaletteService.getColor(subtitle);\r\n    }\r\n    this._subtitle = subtitle;\r\n  }\r\n  get subtitle(): PoTableSubtitleColumn {\r\n    return this._subtitle;\r\n  }\r\n\r\n  constructor(private poColorPaletteService: PoColorPaletteService) {}\r\n}\r\n","import { AfterViewInit, Component, DoCheck, ElementRef, Input, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { PoTableSubtitleColumn } from './po-table-subtitle-column.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a criação de um conjunto de legendas.\r\n */\r\n@Component({\r\n  selector: 'po-table-subtitle-footer',\r\n  templateUrl: './po-table-subtitle-footer.component.html'\r\n})\r\nexport class PoTableSubtitleFooterComponent implements AfterViewInit, DoCheck, OnDestroy {\r\n  /** Propriedade que recebe as literais definidas no `po-table`. */\r\n  @Input('p-literals') literals;\r\n\r\n  /** Propriedade que recebe as legendas definidas no `PoTableSubtitleCircleComponent`. */\r\n  @Input('p-subtitles') subtitles: Array<PoTableSubtitleColumn>;\r\n\r\n  showSubtitle: boolean;\r\n\r\n  protected resizeListener: () => void;\r\n\r\n  private isVisible: boolean;\r\n  private timeoutResize;\r\n\r\n  constructor(private element: ElementRef, public renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeResizeListener();\r\n    this.debounceResize();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.isVisible && this.getContainerSize() > 0) {\r\n      this.toggleShowCompleteSubtitle();\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeResizeListener();\r\n  }\r\n\r\n  private debounceResize() {\r\n    clearTimeout(this.timeoutResize);\r\n    this.timeoutResize = setTimeout(() => {\r\n      this.toggleShowCompleteSubtitle();\r\n    });\r\n  }\r\n\r\n  private getContainerSize() {\r\n    return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;\r\n  }\r\n\r\n  private getItemsSize() {\r\n    const items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');\r\n\r\n    return Array.from(items)\r\n      .map(item => item['offsetWidth'])\r\n      .reduce((a, b) => a + b, 16);\r\n  }\r\n\r\n  private initializeResizeListener() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\r\n      this.debounceResize();\r\n    });\r\n  }\r\n\r\n  private removeResizeListener() {\r\n    this.resizeListener();\r\n  }\r\n\r\n  private toggleShowCompleteSubtitle() {\r\n    const containerSize = this.getContainerSize();\r\n    const itemsSize = this.getItemsSize();\r\n\r\n    this.showSubtitle = itemsSize > containerSize;\r\n  }\r\n}\r\n","import { CommonModule, DecimalPipe } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoButtonModule } from './../po-button/po-button.module';\r\nimport { PoCheckboxGroupModule } from '../po-field/po-checkbox-group/po-checkbox-group.module';\r\nimport { PoContainerModule } from '../po-container/po-container.module';\r\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\r\nimport { PoModalModule } from '../po-modal/po-modal.module';\r\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\r\nimport { PoPopupModule } from './../po-popup/po-popup.module';\r\nimport { PoTimeModule } from '../../pipes/po-time/index';\r\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\r\nimport { PoIconModule } from './../po-icon/po-icon.module';\r\n\r\nimport { PoTableColumnIconComponent } from './po-table-column-icon/po-table-column-icon.component';\r\nimport { PoTableColumnLabelComponent } from './po-table-column-label/po-table-column-label.component';\r\nimport { PoTableColumnLinkComponent } from './po-table-column-link/po-table-column-link.component';\r\nimport { PoTableColumnManagerComponent } from './po-table-column-manager/po-table-column-manager.component';\r\nimport { PoTableComponent } from './po-table.component';\r\nimport { PoTableDetailComponent } from './po-table-detail/po-table-detail.component';\r\nimport { PoTableIconComponent } from './po-table-icon/po-table-icon.component';\r\nimport { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';\r\nimport { PoTableShowSubtitleComponent } from './po-table-show-subtitle/po-table-show-subtitle.component';\r\nimport { PoTableSubtitleCircleComponent } from './po-table-subtitle-circle/po-table-subtitle-circle.component';\r\nimport { PoTableSubtitleFooterComponent } from './po-table-subtitle-footer/po-table-subtitle-footer.component';\r\nimport { PoTableCellTemplateDirective } from './po-table-cell-template/po-table-cell-template.directive';\r\nimport { PoTableColumnTemplateDirective } from './po-table-column-template/po-table-column-template.directive';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-table\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PoButtonModule,\r\n    PoCheckboxGroupModule,\r\n    PoContainerModule,\r\n    PoLoadingModule,\r\n    PoModalModule,\r\n    PoPopoverModule,\r\n    PoPopupModule,\r\n    PoTimeModule,\r\n    PoTooltipModule,\r\n    PoIconModule\r\n  ],\r\n  declarations: [\r\n    PoTableComponent,\r\n    PoTableColumnIconComponent,\r\n    PoTableColumnLabelComponent,\r\n    PoTableColumnLinkComponent,\r\n    PoTableColumnManagerComponent,\r\n    PoTableDetailComponent,\r\n    PoTableIconComponent,\r\n    PoTableRowTemplateDirective,\r\n    PoTableShowSubtitleComponent,\r\n    PoTableSubtitleCircleComponent,\r\n    PoTableSubtitleFooterComponent,\r\n    PoTableCellTemplateDirective,\r\n    PoTableColumnTemplateDirective\r\n  ],\r\n  exports: [\r\n    PoTableComponent,\r\n    PoTableRowTemplateDirective,\r\n    PoTableCellTemplateDirective,\r\n    PoTableColumnTemplateDirective\r\n  ],\r\n  providers: [DecimalPipe]\r\n})\r\nexport class PoTableModule {}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Enum que contém os valores numéricos dos *keyCodes*.\r\n */\r\nexport enum PoKeyCodeEnum {\r\n  /** Seta para baixo */\r\n  arrowDown = 40,\r\n\r\n  /** Seta para cima */\r\n  arrowUp = 38,\r\n\r\n  /** Backspace */\r\n  backspace = 8,\r\n\r\n  /** Delete */\r\n  delete = 46,\r\n\r\n  /** Enter */\r\n  enter = 13,\r\n\r\n  /** Esc */\r\n  esc = 27,\r\n\r\n  /** Tecla K */\r\n  keyK = 75,\r\n\r\n  /** Tecla L */\r\n  keyL = 76,\r\n\r\n  /** Espaço */\r\n  space = 32,\r\n\r\n  /** Tab */\r\n  tab = 9\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, uuid } from './../../../utils/util';\r\nimport { InputBoolean } from '../../../decorators';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-checkbox` exibe uma caixa de opção com um texto ao lado, na qual é possível marcar e desmarcar através tanto\r\n * no *click* do *mouse* quanto por meio da tecla *space* quando estiver com foco.\r\n *\r\n * Cada opção poderá receber um estado de marcado, desmarcado, indeterminado e desabilitado, como também uma ação que será disparada quando\r\n * ocorrer mudanças do valor.\r\n *\r\n * > O *model* deste componente aceitará valores igual à `true`, `false` ou `null` para quando for indeterminado.\r\n */\r\n@Directive()\r\nexport abstract class PoCheckboxBaseComponent implements ControlValueAccessor {\r\n  /** Define o nome do *checkbox*. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Texto de exibição do *checkbox*. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado quando o valor do *checkbox* for alterado.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  checkboxValue: boolean | null;\r\n  id = uuid();\r\n  propagateChange: any;\r\n  onTouched;\r\n\r\n  private _disabled?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o estado do *checkbox* como desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  changeValue() {\r\n    if (this.propagateChange) {\r\n      this.propagateChange(this.checkboxValue);\r\n    }\r\n\r\n    this.change.emit(this.checkboxValue);\r\n  }\r\n\r\n  checkOption(value: boolean | null) {\r\n    if (!this.disabled) {\r\n      this.changeModelValue(!value);\r\n      this.changeValue();\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    if (value !== this.checkboxValue) {\r\n      this.changeModelValue(value);\r\n    }\r\n  }\r\n\r\n  protected abstract changeModelValue(value: boolean | null);\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\r\n\r\nimport { PoCheckboxBaseComponent } from './po-checkbox-base.component';\r\n\r\n/**\r\n * @docsExtends PoCheckboxBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-checkbox-basic\" title=\"PO Checkbox Basic\">\r\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-checkbox-basic/sample-po-checkbox-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-checkbox-labs\" title=\"PO Checkbox Labs\">\r\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-checkbox-labs/sample-po-checkbox-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-checkbox-acceptance-term\" title=\"PO Checkbox - Acceptance Term\">\r\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.html\"> </file>\r\n *   <file name=\"sample-po-checkbox-acceptance-term/sample-po-checkbox-acceptance-term.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-checkbox',\r\n  templateUrl: './po-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoCheckboxComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoCheckboxComponent extends PoCheckboxBaseComponent implements AfterViewInit {\r\n  @ViewChild('checkboxLabel', { static: true }) checkboxLabel: ElementRef;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao *checkbox*.\r\n   *\r\n   * Para utilizá-la é necessário capturar a referência do componente no DOM através do `ViewChild`, como por exemplo:\r\n   *\r\n   * ```\r\n   * ...\r\n   * import { ViewChild } from '@angular/core';\r\n   * import { PoCheckboxComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoCheckboxComponent, { static: true }) checkbox: PoCheckboxComponent;\r\n   *\r\n   * focusCheckbox() {\r\n   *   this.checkbox.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (this.checkboxLabel && !this.disabled) {\r\n      this.checkboxLabel.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouched?.();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent, value: boolean) {\r\n    if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {\r\n      this.checkOption(value);\r\n\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  protected changeModelValue(value: boolean | null) {\r\n    this.checkboxValue = typeof value === 'boolean' || value === null ? value : false;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoComboComponent\r\n *\r\n * @description\r\n *\r\n * Define o tipo de busca usado no po-combo.\r\n */\r\nexport enum PoComboFilterMode {\r\n  /** Verifica se o texto *inicia* com o valor pesquisado. Caso não seja especificado um tipo, será esse o utilizado. */\r\n  startsWith,\r\n  /** Verifica se o texto *contém* o valor pesquisado. */\r\n  contains,\r\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\r\n  endsWith\r\n}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, OnInit, Output, Directive, TemplateRef } from '@angular/core';\r\n\r\nimport { convertToBoolean, isTypeof, validValue } from '../../../utils/util';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\r\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\r\nimport { PoComboFilterService } from './po-combo-filter.service';\r\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\r\nimport { PoComboLiterals } from './interfaces/po-combo-literals.interface';\r\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\r\nimport { PoComboOptionGroup } from './interfaces/po-combo-option-group.interface';\r\n\r\nconst PO_COMBO_DEBOUNCE_TIME_DEFAULT = 400;\r\nconst PO_COMBO_FIELD_LABEL_DEFAULT = 'label';\r\nconst PO_COMBO_FIELD_VALUE_DEFAULT = 'value';\r\n\r\nexport const poComboLiteralsDefault = {\r\n  en: <PoComboLiterals>{\r\n    noData: 'No data found'\r\n  },\r\n  es: <PoComboLiterals>{\r\n    noData: 'Datos no encontrados'\r\n  },\r\n  pt: <PoComboLiterals>{\r\n    noData: 'Nenhum dado encontrado'\r\n  },\r\n  ru: <PoComboLiterals>{\r\n    noData: 'Данные не найдены'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-combo` exibe uma lista de opções com fácil seleção e filtragem.\r\n *\r\n * Além da exibição padrão, nele é possível listar as opões em agrupamentos.\r\n *\r\n * É possível selecionar e navegar entre as opções da lista tanto através do *mouse* quanto do teclado. No teclado navegue com\r\n * as setas e pressione *Enter* na opção que desejar.\r\n *\r\n * Com ele também é possível definir uma lista à partir da requisição de um serviço definido em `p-filter-service`.\r\n *\r\n * Em `p-filter-mode`, o filtro poderá ser configurado para buscar opões que correspondam ao início, fim ou que contenha o valor digitado.\r\n *\r\n * O `po-combo` guarda o último valor caso o usuário desista de uma busca, deixando o campo ou pressionando *Esc*. Caso seja digitado no\r\n * campo de busca a descrição completa de um item, então a seleção será automaticamente efetuada ao deixar o campo ou pressionando *Enter*.\r\n */\r\n@Directive()\r\nexport abstract class PoComboBaseComponent implements ControlValueAccessor, OnInit, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Label no componente. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** Nome do componente. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Nesta propriedade deve ser informada a URL do serviço em que será realizado o filtro para carregamento da lista de\r\n   * itens no componente.\r\n   * Caso haja a necessidade de customização, então pode ser informado um serviço implementando a interface PoComboFilter.\r\n   *\r\n   * Caso utilizado uma URL, o serviço deve ser retornado no padrão API TOTVS e utiliza as propriedades\r\n   * `p-field-label` e `p-field-value` para a construção da lista de itens.\r\n   *\r\n   * Quando utilizada uma URL de serviço, então será concatenada nesta URL o valor que deseja-se filtrar da seguinte forma:\r\n   * ```\r\n   * url + ?filter=Peter\r\n   * ```\r\n   *\r\n   * Se for definida a propriedade `p-filter-params`, a mesma também será concatenada. Por exemplo, para o\r\n   * parâmetro `{ age: 23 }` a URL ficaria:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\r\n   * ```\r\n   */\r\n  @Input('p-filter-service') filterService: PoComboFilter | string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o ícone que será exibido no início do campo.\r\n   *\r\n   * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-combo p-icon=\"po-icon-user\" p-label=\"PO combo\"></po-combo>\r\n   * ```\r\n   * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-combo p-icon=\"fa fa-podcast\" p-label=\"PO combo\"></po-combo>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-combo [p-icon]=\"template\" p-label=\"combo template ionic\"></po-combo>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   */\r\n  @Input('p-icon') icon?: string | TemplateRef<void>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /** Se verdadeiro, o campo receberá um botão para ser limpo. */\r\n  @Input('p-clean') @InputBoolean() clean?: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Se verdadeiro, o evento `p-change` receberá como argumento o `PoComboOption` referente à opção selecionada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-emit-object-value') @InputBoolean() emitObjectValue?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Se verdadeiro, desabilitará a busca de um item via TAB.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled-tab-filter') @InputBoolean() disabledTabFilter?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Deve ser informada uma função que será disparada quando houver alterações no ngModel. A função receberá como argumento o model modificado.\r\n   *\r\n   * > Pode-se optar pelo recebimento do objeto selecionado ao invés do model através da propriedade `p-emit-object-value`.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da tag form.\r\n   *\r\n   * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n   * two-way binding no componente deve se utilizar da seguinte forma:\r\n   *\r\n   * ```\r\n   * <po-combo ... [ngModel]=\"comboModel\" (ngModelChange)=\"comboModel = $event\"> </po-combo>\r\n   * ```\r\n   *\r\n   */\r\n  @Output('ngModelChange') ngModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  cacheOptions: Array<PoComboOption | PoComboGroup> = [];\r\n  defaultService: PoComboFilterService;\r\n  firstInWriteValue: boolean = true;\r\n  isFirstFilter: boolean = true;\r\n  isFiltering: boolean = false;\r\n  keyupSubscribe: any;\r\n  onModelChange: any;\r\n  previousSearchValue: string = '';\r\n  selectedOption: PoComboOption | PoComboGroup;\r\n  selectedValue: any;\r\n  selectedView: any;\r\n  service: PoComboFilterService;\r\n  visibleOptions: Array<PoComboOption | PoComboGroup> = [];\r\n\r\n  protected cacheStaticOptions: Array<PoComboOption | PoComboGroup> = [];\r\n  protected comboOptionsList: Array<PoComboOption | PoComboGroup> = [];\r\n  protected onModelTouched: any = null;\r\n\r\n  private _changeOnEnter?: boolean = false;\r\n  private _debounceTime?: number = 400;\r\n  private _disabled?: boolean = false;\r\n  private _disabledInitFilter?: boolean = false;\r\n  private _fieldLabel?: string = 'label';\r\n  private _fieldValue?: string = 'value';\r\n  private _filterMinlength?: number = 0;\r\n  private _filterMode?: PoComboFilterMode = PoComboFilterMode.startsWith;\r\n  private _filterParams?: any;\r\n  private _literals?: PoComboLiterals;\r\n  private _options: Array<PoComboOption | PoComboOptionGroup> = [];\r\n  private _placeholder: string = '';\r\n  private _required?: boolean = false;\r\n  private _sort?: boolean = false;\r\n  private language: string;\r\n\r\n  // utilizado para fazer o controle de atualizar o model.\r\n  // não deve forçar a atualização se o gatilho for o writeValue para não deixar o campo dirty.\r\n  private fromWriteValue: boolean = false;\r\n\r\n  private validatorChange: any;\r\n\r\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\r\n  @Input('p-placeholder') set placeholder(value: string) {\r\n    this._placeholder = value || '';\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro após cada pressionamento de tecla.\r\n   * Será utilizada apenas quando houver serviço (`p-filter-service`).\r\n   *\r\n   * @default `400`\r\n   */\r\n  @Input('p-debounce-time') set debounceTime(value: number) {\r\n    const parsedValue = parseInt(<any>value, 10);\r\n\r\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : PO_COMBO_DEBOUNCE_TIME_DEFAULT;\r\n  }\r\n\r\n  get debounceTime(): number {\r\n    return this._debounceTime;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Desabilita o filtro inicial no serviço, que é executado no primeiro clique no campo.\r\n   *\r\n   * @default `false`\r\n   *\r\n   */\r\n  @Input('p-disabled-init-filter') set disabledInitFilter(value: boolean) {\r\n    this._disabledInitFilter = convertToBoolean(value);\r\n  }\r\n\r\n  get disabledInitFilter(): boolean {\r\n    return this._disabledInitFilter;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Deve ser informado o nome da propriedade do objeto que será utilizado para a conversão dos itens apresentados na lista do componente\r\n   * (`p-options`), esta propriedade será responsável pelo valor de cada item da lista.\r\n   *\r\n   * Necessário quando informar o serviço como URL e o mesmo não estiver retornando uma lista de objetos no padrão da interface\r\n   * PoComboOption.\r\n   *\r\n   * @default `value`\r\n   */\r\n  @Input('p-field-value') set fieldValue(value: string) {\r\n    this._fieldValue = value || PO_COMBO_FIELD_VALUE_DEFAULT;\r\n\r\n    if (isTypeof(this.filterService, 'string') && this.service) {\r\n      this.service.fieldValue = this._fieldValue;\r\n    }\r\n  }\r\n\r\n  get fieldValue() {\r\n    return this._fieldValue;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Deve ser informado o nome da propriedade do objeto que será utilizado para a conversão dos itens apresentados na lista do componente\r\n   * (`p-options`), esta propriedade será responsável pelo texto de apresentação de cada item da lista.\r\n   *\r\n   * Necessário quando informar o serviço como URL e o mesmo não estiver retornando uma lista de objetos no padrão da interface\r\n   * PoComboOption.\r\n   *\r\n   * @default `label`\r\n   */\r\n  @Input('p-field-label') set fieldLabel(value: string) {\r\n    this._fieldLabel = value || PO_COMBO_FIELD_LABEL_DEFAULT;\r\n\r\n    if (isTypeof(this.filterService, 'string') && this.service) {\r\n      this.service.fieldLabel = this._fieldLabel;\r\n    }\r\n  }\r\n\r\n  get fieldLabel() {\r\n    return this._fieldLabel;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Valor mínimo de caracteres para realizar o filtro no serviço.\r\n   *\r\n   * @default `0`\r\n   */\r\n  @Input('p-filter-minlength') set filterMinlength(value: number) {\r\n    const parseValue = typeof value === 'string' ? parseInt(value, 10) : value;\r\n\r\n    this._filterMinlength = Number.isInteger(parseValue) ? parseValue : 0;\r\n  }\r\n\r\n  get filterMinlength() {\r\n    return this._filterMinlength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.selectedValue);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Indica que o evento `p-change` só será disparado ao clicar ou pressionar a tecla \"Enter\" sobre uma opção selecionada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-change-on-enter') set changeOnEnter(changeOnEnter: boolean) {\r\n    this._changeOnEnter = convertToBoolean(changeOnEnter);\r\n  }\r\n\r\n  get changeOnEnter() {\r\n    return this._changeOnEnter;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Indica que o campo será desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = convertToBoolean(disabled);\r\n\r\n    this.validateModel(this.selectedValue);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /** Indica que a lista definida na propriedade p-options será ordenada pela descrição. */\r\n  @Input('p-sort') set sort(sort: boolean) {\r\n    this._sort = convertToBoolean(sort);\r\n    this.comboListDefinitions();\r\n  }\r\n\r\n  get sort() {\r\n    return this._sort;\r\n  }\r\n\r\n  /**\r\n   * Nesta propriedade define a lista de opções do `po-combo`.\r\n   *\r\n   * > A lista pode ser definida em dois formatos, simples ou com agrupamentos.\r\n   * - Utilize `PoComboOption` para lista de opções simples.\r\n   * - Utilize `PoComboOptionGroup` para lista de opções com agrupamento.\r\n   *\r\n   * **Importante:**\r\n   * - A lista deve seguir as definições descritas nas respectivas interfaces, caso contrário não exibirá a(as) opção(ões) fora dos padrões.\r\n   * - O componente interpretará o formato da lista de acordo com a interface utilizada e só exibirá as opções correspondentes à ela.\r\n   * - Um agrupamento só será exibido se houver pelo menos uma opção válida.\r\n   */\r\n  @Input('p-options') set options(options: Array<PoComboOption | PoComboOptionGroup>) {\r\n    this._options = Array.isArray(options) ? options : [];\r\n\r\n    this.comboListDefinitions();\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o modo de pesquisa utilizado no filtro da lista de seleção: `startsWith`, `contains` ou `endsWith`.\r\n   *\r\n   * > Quando utilizar a propriedade `p-filter-service` esta propriedade será ignorada.\r\n   *\r\n   * @default `startsWith`\r\n   */\r\n  @Input('p-filter-mode') set filterMode(filterMode: PoComboFilterMode) {\r\n    this._filterMode = filterMode in PoComboFilterMode ? filterMode : PoComboFilterMode.startsWith;\r\n    switch (this._filterMode.toString()) {\r\n      case 'startsWith':\r\n        this._filterMode = PoComboFilterMode.startsWith;\r\n        break;\r\n      case 'contains':\r\n        this._filterMode = PoComboFilterMode.contains;\r\n        break;\r\n      case 'endsWith':\r\n        this._filterMode = PoComboFilterMode.endsWith;\r\n        break;\r\n    }\r\n  }\r\n\r\n  get filterMode(): PoComboFilterMode {\r\n    return this._filterMode;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor que será repassado como parâmetro para a URL ou aos métodos do serviço que implementam a interface *PoComboFilter*.\r\n   *\r\n   * > Caso a lista contenha agrupamentos, os mesmos só serão exibidos se houver no mínimo uma opção que corresponda à pesquisa.\r\n   */\r\n  @Input('p-filter-params') set filterParams(filterParams: any) {\r\n    this._filterParams = filterParams || filterParams === 0 || filterParams === false ? filterParams : undefined;\r\n  }\r\n\r\n  get filterParams() {\r\n    return this._filterParams;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-combo`.\r\n   *\r\n   * Para utilizar basta passar a literal que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoComboLiterals = {\r\n   *    noData: 'Nenhum valor'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar a literal customizada, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-combo\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-combo>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoComboLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poComboLiteralsDefault[poLocaleDefault],\r\n        ...poComboLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poComboLiteralsDefault[this.language];\r\n    }\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poComboLiteralsDefault[this.language];\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  get isOptionGroupList(): boolean {\r\n    return this._options.length && this._options[0].hasOwnProperty('options');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.updateComboList();\r\n  }\r\n\r\n  onInitService() {\r\n    if (this.filterService) {\r\n      this.setService(this.filterService);\r\n      this.initInputObservable();\r\n    }\r\n  }\r\n\r\n  setService(service: PoComboFilter | string) {\r\n    if (service) {\r\n      if (isTypeof(service, 'object')) {\r\n        this.service = <PoComboFilterService>service;\r\n      } else {\r\n        this.service = this.defaultService;\r\n        this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  compareMethod(search: string, option: PoComboOption | PoComboGroup, filterMode: PoComboFilterMode) {\r\n    switch (filterMode) {\r\n      case PoComboFilterMode.startsWith:\r\n        return this.startsWith(search, option);\r\n      case PoComboFilterMode.contains:\r\n        return this.contains(search, option);\r\n      case PoComboFilterMode.endsWith:\r\n        return this.endsWith(search, option);\r\n    }\r\n  }\r\n\r\n  startsWith(search: string, option: PoComboOption | PoComboGroup) {\r\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\r\n  }\r\n\r\n  contains(search: string, option: PoComboOption | PoComboGroup) {\r\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n  }\r\n\r\n  endsWith(search: string, option: PoComboOption | PoComboGroup) {\r\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\r\n  }\r\n\r\n  getOptionFromValue(value: any, options: any) {\r\n    return options ? options.find((option: any) => this.isEqual(option.value, value)) : null;\r\n  }\r\n\r\n  getOptionFromLabel(label: any, options: any) {\r\n    if (options) {\r\n      return options.find((option: any) => option.label.toString().toLowerCase() === label.toString().toLowerCase());\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  updateSelectedValue(option: PoComboOption | PoComboGroup, isUpdateModel: boolean = true) {\r\n    const optionLabel = (option && option.label) || '';\r\n\r\n    this.updateInternalVariables(option);\r\n\r\n    // atualiza o valor do input quando for changeOnEnter apenas se for para atualizar o model.\r\n    if (this.changeOnEnter && isUpdateModel) {\r\n      this.setInputValue(optionLabel);\r\n    } else if (!this.changeOnEnter) {\r\n      this.setInputValue(optionLabel);\r\n    }\r\n\r\n    if (isUpdateModel) {\r\n      const optionValue = (option && option.value) || undefined;\r\n\r\n      this.updateModel(optionValue);\r\n    }\r\n  }\r\n\r\n  callModelChange(value: any) {\r\n    // Caso o componente estiver dentro de um form, terá acesso ao método onModelChange.\r\n    return this.onModelChange ? this.onModelChange(value) : this.ngModelChange.emit(value);\r\n  }\r\n\r\n  isEqual(value: any, inputValue: any): boolean {\r\n    if ((value || value === 0) && inputValue) {\r\n      return value.toString() === inputValue.toString();\r\n    }\r\n\r\n    if ((value === null && inputValue !== null) || (value === undefined && inputValue !== undefined)) {\r\n      value = `${value}`; // Transformando em string\r\n    }\r\n\r\n    return value === inputValue;\r\n  }\r\n\r\n  searchForLabel(search: string, options: Array<PoComboOption | PoComboGroup>, filterMode: PoComboFilterMode) {\r\n    if (search && options && options.length) {\r\n      const newOptions: Array<PoComboOption | PoComboGroup> = [];\r\n      let addedOptionsGroupTitle: boolean = false;\r\n      let optionsGroupTitle: PoComboGroup;\r\n\r\n      options.forEach(option => {\r\n        if ('options' in option) {\r\n          addedOptionsGroupTitle = false;\r\n          return (optionsGroupTitle = option);\r\n        }\r\n\r\n        if (option.label && (this.compareMethod(search, option, filterMode) || this.service)) {\r\n          if (this.isOptionGroupList && !addedOptionsGroupTitle) {\r\n            newOptions.push(optionsGroupTitle);\r\n            addedOptionsGroupTitle = true;\r\n          }\r\n\r\n          newOptions.push(option);\r\n        }\r\n      });\r\n\r\n      this.selectedView = newOptions[this.isOptionGroupList ? 1 : 0];\r\n      this.updateComboList(newOptions);\r\n    } else {\r\n      this.updateComboList();\r\n    }\r\n  }\r\n\r\n  updateComboList(options?: Array<PoComboOption | PoComboGroup>) {\r\n    const copyOptions = options || [...this.comboOptionsList];\r\n\r\n    const newOptions = !options && this.selectedValue ? [{ ...this.selectedOption }] : copyOptions;\r\n\r\n    this.visibleOptions = newOptions;\r\n\r\n    if (!this.selectedView && this.visibleOptions.length) {\r\n      this.selectedView = copyOptions.find(option => option.value !== undefined);\r\n    }\r\n  }\r\n\r\n  getNextOption(value: any, options: Array<PoComboOption | PoComboGroup>, reverse: boolean = false) {\r\n    const optionsList = reverse ? options.slice(0).reverse() : options.slice(0);\r\n    let optionFound = null;\r\n    let found = false;\r\n\r\n    for (const option of optionsList) {\r\n      if (option.value && !optionFound) {\r\n        optionFound = option;\r\n      }\r\n      if (option.value && found) {\r\n        return option;\r\n      }\r\n      if (this.isEqual(option.value, value)) {\r\n        found = true;\r\n      }\r\n    }\r\n\r\n    return optionFound;\r\n  }\r\n\r\n  getIndexSelectedView() {\r\n    for (let i = 0; i < this.visibleOptions.length; i++) {\r\n      if (this.compareObjects(this.visibleOptions[i], this.selectedView)) {\r\n        return i;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  compareObjects(obj1: any, obj2: any) {\r\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n  }\r\n\r\n  verifyValidOption() {\r\n    const inputValue = this.getInputValue();\r\n\r\n    const optionFound = this.getOptionFromLabel(inputValue, this.comboOptionsList);\r\n\r\n    if (!this.service) {\r\n      this.updateComboList([...this.cacheStaticOptions]);\r\n    }\r\n\r\n    if (optionFound && optionFound.value !== this.selectedValue) {\r\n      this.updateSelectedValue(optionFound);\r\n\r\n      this.previousSearchValue = optionFound.label;\r\n    } else if (this.selectedValue && this.selectedOption && this.selectedOption.label !== inputValue) {\r\n      this.updateSelectedValueWithOldOption();\r\n\r\n      this.previousSearchValue = this.selectedOption.label;\r\n      return;\r\n    } else if (inputValue && !optionFound) {\r\n      const isInputValueDiffSelectedLabel = !!(this.selectedOption && this.selectedOption.label !== inputValue);\r\n\r\n      this.updateSelectedValue(null, isInputValueDiffSelectedLabel || this.changeOnEnter);\r\n\r\n      this.previousSearchValue = '';\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Recebe as alterações do model\r\n  writeValue(value: any) {\r\n    this.fromWriteValue = true;\r\n\r\n    if (validValue(value) && !this.service && this.comboOptionsList && this.comboOptionsList.length) {\r\n      const option = this.getOptionFromValue(value, this.comboOptionsList);\r\n      this.updateSelectedValue(option);\r\n      this.updateComboList();\r\n      return;\r\n    }\r\n\r\n    // Se houver serviço busca pelo model.\r\n    if (value && this.service) {\r\n      return this.getObjectByValue(value);\r\n    } else {\r\n      this.updateSelectedValue(null);\r\n      this.updateComboList();\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  clear(value) {\r\n    this.callModelChange(value);\r\n    this.updateSelectedValue(null);\r\n    this.updateComboList();\r\n  }\r\n\r\n  protected configAfterSetFilterService(service: PoComboFilter | string) {\r\n    if (service) {\r\n      this.comboOptionsList = [];\r\n      this.unsubscribeKeyupObservable();\r\n      this.onInitService();\r\n    } else {\r\n      this.service = undefined;\r\n      this.comboOptionsList = this.cacheStaticOptions;\r\n    }\r\n\r\n    this.visibleOptions = [];\r\n    this.isFirstFilter = true;\r\n  }\r\n\r\n  protected unsubscribeKeyupObservable() {\r\n    if (this.keyupSubscribe) {\r\n      this.keyupSubscribe.unsubscribe();\r\n    }\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  private comboListDefinitions() {\r\n    this.comboOptionsList = this.options.length > 0 ? this.listingComboOptions(this.options) : this.options;\r\n    this.cacheStaticOptions = this.comboOptionsList;\r\n\r\n    this.updateComboList();\r\n  }\r\n\r\n  private compareOptions(optionA: any, optionB: any) {\r\n    const labelA = optionA.label.toString().toLowerCase();\r\n    const labelB = optionB.label.toString().toLowerCase();\r\n\r\n    return labelA < labelB ? -1 : labelA > labelB ? 1 : 0;\r\n  }\r\n\r\n  private hasDuplicatedOption(\r\n    options: Array<PoComboOption | PoComboGroup>,\r\n    currentOption: string,\r\n    accumulatedGroupOptions?: Array<PoComboGroup>\r\n  ) {\r\n    return (\r\n      options.some(option => option.label === currentOption) ||\r\n      (accumulatedGroupOptions && accumulatedGroupOptions.some(option => option.label === currentOption))\r\n    );\r\n  }\r\n\r\n  private listingComboOptions(comboOptions: Array<PoComboOption | PoComboOptionGroup>) {\r\n    const comboOptionsList = comboOptions.concat();\r\n    const verifiedComboOptionsList = this.verifyComboOptions(comboOptionsList);\r\n\r\n    this.sortOptions(verifiedComboOptionsList);\r\n\r\n    if (this.isOptionGroupList && verifiedComboOptionsList.length > 0) {\r\n      return this.verifyComboOptionsGroup(verifiedComboOptionsList);\r\n    }\r\n\r\n    return verifiedComboOptionsList;\r\n  }\r\n\r\n  private sortOptions(comboOptionsList: Array<PoComboGroup>) {\r\n    if (comboOptionsList.length > 0 && this.sort) {\r\n      return comboOptionsList.sort(this.compareOptions);\r\n    }\r\n  }\r\n\r\n  private validateValue(currentOption: PoComboGroup, verifyingOptionsGroup: boolean = false) {\r\n    const { label, options, value } = currentOption;\r\n\r\n    if (this.isOptionGroupList) {\r\n      return (\r\n        (validValue(label) && options && options.length > 0) || (verifyingOptionsGroup === true && validValue(value))\r\n      );\r\n    }\r\n\r\n    return validValue(value) && !options;\r\n  }\r\n\r\n  private verifyComboOptions(\r\n    comboOptions: Array<PoComboOption | PoComboOptionGroup>,\r\n    verifyingOptionsGroup: boolean = false,\r\n    accumulatedGroupOptions?: Array<PoComboGroup>\r\n  ) {\r\n    return comboOptions.reduce((accumulatedOptions, currentOption) => {\r\n      if (\r\n        !this.verifyIfHasLabel(currentOption) ||\r\n        this.hasDuplicatedOption(accumulatedOptions, currentOption.label, accumulatedGroupOptions) ||\r\n        !this.validateValue(currentOption, verifyingOptionsGroup)\r\n      ) {\r\n        return accumulatedOptions;\r\n      }\r\n\r\n      accumulatedOptions.push(currentOption);\r\n      return accumulatedOptions;\r\n    }, []);\r\n  }\r\n\r\n  private verifyComboOptionsGroup(comboOptionsList: Array<PoComboOptionGroup>) {\r\n    return comboOptionsList.reduce((accumulatedGroupOptions, currentOption) => {\r\n      const { options, label } = currentOption;\r\n      const verifiedComboOptionsGroupList = this.verifyComboOptions(options, true, accumulatedGroupOptions);\r\n\r\n      if (verifiedComboOptionsGroupList.length > 0) {\r\n        this.sortOptions(verifiedComboOptionsGroupList);\r\n\r\n        accumulatedGroupOptions.push({ label: label, options: true }, ...verifiedComboOptionsGroupList);\r\n      }\r\n\r\n      return accumulatedGroupOptions;\r\n    }, []);\r\n  }\r\n\r\n  private verifyIfHasLabel(currentOption: PoComboGroup = {}) {\r\n    const { label, options, value } = currentOption;\r\n\r\n    if ((this.isOptionGroupList && options && !label) || (!label && !value) || (!this.isOptionGroupList && options)) {\r\n      return false;\r\n    }\r\n\r\n    if (!currentOption.label) {\r\n      currentOption.label = currentOption.value.toString();\r\n      return true;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private updateInternalVariables(option: PoComboOption | PoComboGroup) {\r\n    if (option) {\r\n      this.selectedView = option;\r\n      this.selectedOption = option;\r\n    } else {\r\n      this.selectedView = undefined;\r\n      this.selectedOption = undefined;\r\n    }\r\n  }\r\n\r\n  private updateModel(value: any): void {\r\n    if (value !== this.selectedValue) {\r\n      if (!this.fromWriteValue) {\r\n        this.callModelChange(value);\r\n      }\r\n\r\n      this.change.emit(this.emitObjectValue ? this.selectedOption : value);\r\n    }\r\n\r\n    this.selectedValue = value;\r\n    this.fromWriteValue = false;\r\n  }\r\n\r\n  private updateSelectedValueWithOldOption() {\r\n    const oldOption = this.getOptionFromValue(this.selectedValue, this.comboOptionsList);\r\n\r\n    if (oldOption && oldOption.label) {\r\n      return this.updateSelectedValue(oldOption);\r\n    }\r\n  }\r\n\r\n  abstract setInputValue(value: any): void;\r\n\r\n  abstract applyFilter(value: string): void;\r\n\r\n  abstract getObjectByValue(value: string): void;\r\n\r\n  abstract getInputValue(): string;\r\n\r\n  abstract initInputObservable(): void;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { PoComboFilter } from './interfaces/po-combo-filter.interface';\r\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\r\nimport { PoResponse } from './interfaces/po-response.interface';\r\nimport { validateObjectType } from '../../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço padrão utilizado para filtrar os dados do componente po-combo.\r\n */\r\n@Injectable()\r\nexport class PoComboFilterService implements PoComboFilter {\r\n  fieldLabel: string = 'label';\r\n  fieldValue: string = 'value';\r\n\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-No-Message': 'true'\r\n  });\r\n\r\n  private _url: string;\r\n  private messages = [];\r\n\r\n  get url(): string {\r\n    return this._url;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getFilteredData(param: any, filterParams?: any): Observable<Array<PoComboOption>> {\r\n    const value = param.value;\r\n    const filterParamsValidated = validateObjectType(filterParams);\r\n\r\n    const params = { ...filterParamsValidated, filter: value };\r\n\r\n    return this.http\r\n      .get(`${this.url}`, { responseType: 'json', params, headers: this.headers })\r\n      .pipe(map((response: PoResponse) => this.parseToArrayComboOption(response.items)));\r\n  }\r\n\r\n  getObjectByValue(value: string | number, filterParams?: any): Observable<PoComboOption> {\r\n    const filterParamsValidated = validateObjectType(filterParams);\r\n\r\n    return this.http\r\n      .get(`${this.url}/${value}`, { params: filterParamsValidated, headers: this.headers })\r\n      .pipe(map(item => this.parseToComboOption(item)));\r\n  }\r\n\r\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\r\n    this._url = url;\r\n    this.fieldLabel = fieldLabel;\r\n    this.fieldValue = fieldValue;\r\n  }\r\n\r\n  private parseToArrayComboOption(items: Array<any>): Array<PoComboOption> {\r\n    if (items && items.length > 0) {\r\n      const parsedOptions = items.map(item => this.parseToComboOption(item));\r\n\r\n      this.displayMessages();\r\n\r\n      return parsedOptions;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private parseToComboOption(item: any): PoComboOption {\r\n    if (!item?.[this.fieldValue]) {\r\n      this.addMessage(item, this.fieldValue);\r\n\r\n      return { value: '' };\r\n    }\r\n\r\n    const label = item[this.fieldLabel];\r\n    const value = item[this.fieldValue];\r\n\r\n    return { label, value };\r\n  }\r\n\r\n  private addMessage(item, property: string) {\r\n    this.messages.push(`Cannot read property \"${property}\" of ${JSON.stringify(item)},\r\n      see [p-field-value] property at https://po-ui.io/documentation/po-combo`);\r\n  }\r\n\r\n  private displayMessages() {\r\n    if (this.messages.length) {\r\n      this.messages.forEach(message => console.error(message));\r\n\r\n      this.messages = [];\r\n    }\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoComboComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista de opções do componente.\r\n *\r\n * > Quando utilizada em dispositivos *mobile* será exibido o componente nativo.\r\n *\r\n * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-combo-option-template` com `ng-template`\r\n * dentro da *tag* `po-combo`.\r\n *\r\n * Para obter a referência do item atual utilize `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.\r\n *\r\n * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-combo\r\n *   name=\"combo\"\r\n *   [(ngModel)]=\"combo\"\r\n *   [p-options]=\"options\">\r\n *     <ng-template p-combo-option-template let-option>\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </ng-template>\r\n * </po-combo>\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-combo\r\n *   name=\"combo\"\r\n *   [(ngModel)]=\"combo\"\r\n *   [p-options]=\"options\">\r\n *     <div *p-combo-option-template=\"let option\">\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </div>\r\n * </po-combo>\r\n * ...\r\n *\r\n * ```\r\n * Para o caso de personalização de opções com agrupamentos, deve-se seguir a mesma orientação acima. Porém, cabe ao desenvolvedor\r\n * a responsabilidade de estilização dos elementos da lista, tais como título e links dos grupos. Abaixo há um exemplo de aplicação:\r\n *\r\n * ```\r\n * ...\r\n * <ng-template p-combo-option-template let-option>\r\n *   <ng-container *ngIf=\"option.options; then optionsGroupTitle; else optionsGroupList\"></ng-container>\r\n *   <ng-template #optionsGroupTitle>\r\n *     <p class=\"po-combo-item-title\" [innerHtml]=\"option.label\"></p>\r\n *   </ng-template>\r\n *   <ng-template #optionsGroupList>\r\n *     <div class=\"po-combo-item\">\r\n *       <div class=\"po-row\">\r\n *         <po-avatar class=\"po-md-1\" p-size=\"sm\"></po-avatar>\r\n *         <div class=\"po-md-11\" [innerHtml]=\"option.label\"></div>\r\n *       </div>\r\n *     </div>\r\n *   </ng-template>\r\n * </ng-template>\r\n * ...\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-combo-option-template]'\r\n})\r\nexport class PoComboOptionTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  forwardRef,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\r\n\r\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\r\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { PoComboBaseComponent } from './po-combo-base.component';\r\nimport { PoComboFilterMode } from './po-combo-filter-mode.enum';\r\nimport { PoComboFilterService } from './po-combo-filter.service';\r\nimport { PoComboGroup } from './interfaces/po-combo-group.interface';\r\nimport { PoComboOption } from './interfaces/po-combo-option.interface';\r\nimport { PoComboOptionTemplateDirective } from './po-combo-option-template/po-combo-option-template.directive';\r\n\r\nconst poComboContainerOffset = 8;\r\nconst poComboContainerPositionDefault = 'bottom';\r\n\r\n/**\r\n * @docsExtends PoComboBaseComponent\r\n *\r\n * @description\r\n * Utilizando po-combo com serviço, é possivel digitar um valor no campo de entrada e pressionar a tecla 'tab' para que o componente\r\n * faça uma requisição à URL informada passando o valor digitado no campo. Se encontrado o valor, então o mesmo será selecionado, caso\r\n * não seja encontrado, então a lista de itens voltará para o estado inicial.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-combo-basic\" title=\"PO Combo Basic\">\r\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-basic/sample-po-combo-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-labs\" title=\"PO Combo Labs\">\r\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-labs/sample-po-combo-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-scheduling\" title=\"PO Combo - Scheduling\">\r\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.component.ts\"> </file>\r\n *   <file name=\"sample-po-combo-scheduling/sample-po-combo-scheduling.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-transfer\" title=\"PO Combo - Banking Transfer\">\r\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-transfer/sample-po-combo-transfer.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-heroes\" title=\"PO Combo - Heroes\">\r\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-heroes/sample-po-combo-heroes.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-heroes-reactive-form\" title=\"PO Combo - Heroes Reactive Form\">\r\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-heroes-reactive-form/sample-po-combo-heroes-reactive-form.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-combo-hotels\" title=\"PO Combo - Booking Hotel\">\r\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.html\"> </file>\r\n *   <file name=\"sample-po-combo-hotels/sample-po-combo-hotels.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-combo',\r\n  templateUrl: './po-combo.component.html',\r\n  providers: [\r\n    PoComboFilterService,\r\n    PoControlPositionService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoComboComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoComboComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoComboComponent extends PoComboBaseComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ContentChild(PoComboOptionTemplateDirective, { static: true }) comboOptionTemplate: PoComboOptionTemplateDirective;\r\n\r\n  @ViewChild('containerElement', { read: ElementRef }) containerElement: ElementRef;\r\n  @ViewChild('contentElement', { read: ElementRef }) contentElement: ElementRef;\r\n  @ViewChild('iconArrow', { read: ElementRef, static: true }) iconElement: ElementRef;\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n\r\n  comboIcon: string = 'po-icon-arrow-down';\r\n  comboOpen: boolean = false;\r\n  differ: any;\r\n  isProcessingValueByTab: boolean = false;\r\n  scrollTop = 0;\r\n  service: PoComboFilterService;\r\n  shouldMarkLetters: boolean = true;\r\n\r\n  private _isServerSearching: boolean = false;\r\n\r\n  private clickoutListener: () => void;\r\n  private eventResizeListener: () => void;\r\n\r\n  private filterSubscription: Subscription;\r\n  private getSubscription: Subscription;\r\n\r\n  constructor(\r\n    public element: ElementRef,\r\n    public differs: IterableDiffers,\r\n    public defaultService: PoComboFilterService,\r\n    public renderer: Renderer2,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private controlPosition: PoControlPositionService,\r\n    private sanitized: DomSanitizer,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(languageService);\r\n\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  set isServerSearching(value: boolean) {\r\n    if (value) {\r\n      this._isServerSearching = value;\r\n\r\n      this.changeDetector.detectChanges();\r\n\r\n      this.setContainerPosition();\r\n      this.initializeListeners();\r\n    } else {\r\n      this._isServerSearching = value;\r\n    }\r\n  }\r\n\r\n  get isServerSearching() {\r\n    return this._isServerSearching;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.debounceTime) {\r\n      this.unsubscribeKeyupObservable();\r\n      this.initInputObservable();\r\n    }\r\n\r\n    if (changes.filterService) {\r\n      this.configAfterSetFilterService(this.filterService);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n\r\n    if (this.filterSubscription) {\r\n      this.filterSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.getSubscription) {\r\n      this.getSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoComboComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoComboComponent, { static: true }) combo: PoComboComponent;\r\n   *\r\n   * focusCombo() {\r\n   *   this.combo.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onModelTouched?.();\r\n  }\r\n\r\n  onKeyDown(event?: any) {\r\n    const key = event.keyCode;\r\n    const inputValue = event.target.value;\r\n\r\n    // busca um registro quando acionar o tab\r\n    if (this.service && key === PoKeyCodeEnum.tab && inputValue && !this.disabledTabFilter) {\r\n      this.controlComboVisibility(false);\r\n      return this.getObjectByValue(inputValue);\r\n    }\r\n\r\n    // Teclas \"up\" e \"down\"\r\n    if (key === PoKeyCodeEnum.arrowUp || key === PoKeyCodeEnum.arrowDown) {\r\n      event.preventDefault();\r\n\r\n      if (this.comboOpen) {\r\n        if (key === PoKeyCodeEnum.arrowUp) {\r\n          this.selectPreviousOption();\r\n        } else {\r\n          this.selectNextOption();\r\n        }\r\n      }\r\n\r\n      this.controlComboVisibility(true);\r\n      this.isFiltering = this.changeOnEnter ? this.isFiltering : false;\r\n      this.shouldMarkLetters = this.changeOnEnter ? this.shouldMarkLetters : false;\r\n      return;\r\n    }\r\n\r\n    // Teclas \"tab\" ou \"esc\"\r\n    if (key === PoKeyCodeEnum.tab || key === PoKeyCodeEnum.esc) {\r\n      if (key === PoKeyCodeEnum.esc && this.comboOpen) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n\r\n      this.controlComboVisibility(false);\r\n      this.verifyValidOption();\r\n      this.isProcessingValueByTab = true;\r\n      if (!this.service) {\r\n        // caso for changeOnEnter e nao ter selectedValue deve limpar o selectedView para reinicia-lo.\r\n        this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Tecla \"enter\"\r\n    if (key === PoKeyCodeEnum.enter && this.selectedView && this.comboOpen) {\r\n      const isUpdateModel = this.selectedView.value !== this.selectedValue || inputValue !== this.selectedView.label;\r\n\r\n      this.controlComboVisibility(false);\r\n\r\n      this.updateSelectedValue(this.selectedView, isUpdateModel);\r\n      this.isFiltering = false;\r\n\r\n      if (!this.service) {\r\n        this.updateComboList([...this.cacheStaticOptions]);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (key === PoKeyCodeEnum.enter) {\r\n      this.controlComboVisibility(true);\r\n    }\r\n  }\r\n\r\n  onKeyUp(event?: any) {\r\n    const key = event.keyCode || event.which;\r\n    const inputValue = event.target.value;\r\n\r\n    const isValidKey = key !== PoKeyCodeEnum.arrowUp && key !== PoKeyCodeEnum.arrowDown && key !== PoKeyCodeEnum.enter;\r\n\r\n    if (isValidKey) {\r\n      if (inputValue) {\r\n        if (!this.service && this.previousSearchValue !== inputValue) {\r\n          this.shouldMarkLetters = true;\r\n          this.isFiltering = true;\r\n          this.searchForLabel(inputValue, this.comboOptionsList, this.filterMode);\r\n        }\r\n      } else {\r\n        // quando apagar rapido o campo e conter serviço, valor, não disparava o keyup observable\r\n        // necessario este tratamento para retornar a lista 'default'.\r\n        const useDefaultOptionsService =\r\n          this.service && this.selectedValue && this.selectedOption.label === this.previousSearchValue;\r\n\r\n        this.updateSelectedValue(null);\r\n\r\n        if (!this.service) {\r\n          this.updateComboList();\r\n        } else if (useDefaultOptionsService) {\r\n          this.updateComboList([...this.cacheOptions]);\r\n        }\r\n\r\n        this.isFiltering = false;\r\n      }\r\n\r\n      // caso o valor pesquisado for diferente do anterior deve abrir o combo\r\n      if (this.previousSearchValue !== inputValue) {\r\n        this.changeDetector.detectChanges();\r\n\r\n        this.controlComboVisibility(true);\r\n      }\r\n    }\r\n\r\n    this.previousSearchValue = inputValue;\r\n  }\r\n\r\n  initInputObservable() {\r\n    if (this.service) {\r\n      const keyupObservable = fromEvent(this.inputEl.nativeElement, 'keyup').pipe(\r\n        filter((e: any) => this.isValidCharacterToSearch(e.keyCode)),\r\n        map((e: any) => e.currentTarget.value),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.shouldMarkLetters = false;\r\n        }),\r\n        debounceTime(this.debounceTime)\r\n      );\r\n\r\n      this.keyupSubscribe = keyupObservable.subscribe(value => {\r\n        if (value.length >= this.filterMinlength || !value) {\r\n          this.controlApplyFilter(value);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  controlApplyFilter(value) {\r\n    if (!this.isProcessingValueByTab && (!this.selectedOption || value !== this.selectedOption.label)) {\r\n      this.applyFilter(value);\r\n    }\r\n    this.isProcessingValueByTab = false;\r\n  }\r\n\r\n  applyFilter(value: string) {\r\n    this.controlComboVisibility(false);\r\n    this.isServerSearching = true;\r\n\r\n    const param = { property: this.fieldLabel, value };\r\n\r\n    this.filterSubscription = this.service.getFilteredData(param, this.filterParams).subscribe(\r\n      items => this.setOptionsByApplyFilter(value, items),\r\n      error => this.onErrorFilteredData()\r\n    );\r\n  }\r\n\r\n  setOptionsByApplyFilter(value, items) {\r\n    this.shouldMarkLetters = true;\r\n    this.isServerSearching = false;\r\n    this.options = items;\r\n\r\n    this.searchForLabel(value, items, this.filterMode);\r\n\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.controlComboVisibility(true);\r\n\r\n    if (this.isFirstFilter) {\r\n      this.isFirstFilter = !this.isFirstFilter;\r\n\r\n      this.cacheOptions = this.comboOptionsList;\r\n    }\r\n  }\r\n\r\n  getObjectByValue(value) {\r\n    if (this.selectedValue !== value && this.selectedOption?.label !== value) {\r\n      this.isProcessingValueByTab = true;\r\n\r\n      this.getSubscription = this.service.getObjectByValue(value, this.filterParams).subscribe(\r\n        item => this.updateOptionByFilteredValue(item),\r\n        error => this.onErrorGetObjectByValue()\r\n      );\r\n    }\r\n  }\r\n\r\n  updateOptionByFilteredValue(item) {\r\n    if (item) {\r\n      this.options = [item];\r\n      this.onOptionClick(item);\r\n    } else {\r\n      this.updateSelectedValue(null);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.isProcessingValueByTab = false;\r\n    }, this.debounceTime);\r\n  }\r\n\r\n  selectPreviousOption() {\r\n    const currentViewValue = this.selectedView && this.selectedView.value;\r\n\r\n    if (currentViewValue) {\r\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions, true);\r\n\r\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\r\n    } else if (this.visibleOptions.length) {\r\n      const visibleOption = this.visibleOptions[this.visibleOptions.length - 1];\r\n\r\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\r\n    }\r\n  }\r\n\r\n  selectNextOption() {\r\n    const currentViewValue = this.selectedView && this.selectedView.value;\r\n\r\n    if (currentViewValue) {\r\n      const nextOption = this.getNextOption(currentViewValue, this.visibleOptions);\r\n\r\n      this.updateSelectedValue(nextOption, nextOption && nextOption.value !== currentViewValue && !this.changeOnEnter);\r\n    } else if (this.visibleOptions.length) {\r\n      const index = this.changeOnEnter ? 1 : 0;\r\n\r\n      const visibleOption = this.visibleOptions[index];\r\n\r\n      this.updateSelectedValue(visibleOption, visibleOption.value !== currentViewValue && !this.changeOnEnter);\r\n    }\r\n  }\r\n\r\n  toggleComboVisibility(): void {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.service && !this.disabledInitFilter) {\r\n      this.applyFilterInFirstClick();\r\n    }\r\n\r\n    this.controlComboVisibility(!this.comboOpen);\r\n  }\r\n\r\n  applyFilterInFirstClick() {\r\n    if (this.isFirstFilter && !this.selectedValue) {\r\n      this.applyFilter('');\r\n    }\r\n  }\r\n\r\n  controlComboVisibility(toOpen: boolean) {\r\n    toOpen ? this.open() : this.close();\r\n  }\r\n\r\n  onOptionClick(option: PoComboOption | PoComboGroup, event?: any) {\r\n    const inputValue = this.getInputValue();\r\n    const isUpdateModel =\r\n      option.value !== this.selectedValue || !!(this.selectedView && inputValue !== this.selectedView.label);\r\n\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.updateSelectedValue(option, isUpdateModel);\r\n    this.controlComboVisibility(false);\r\n    if (!this.service) {\r\n      this.updateComboList([...this.cacheStaticOptions]);\r\n    }\r\n\r\n    this.previousSearchValue = this.selectedView.label;\r\n  }\r\n\r\n  scrollTo(index) {\r\n    const selectedItem = this.element.nativeElement.querySelectorAll('.po-combo-item-selected');\r\n    const scrollTop = !selectedItem.length || index <= 1 ? 0 : selectedItem[0].offsetTop - 88;\r\n\r\n    this.setScrollTop(scrollTop);\r\n  }\r\n\r\n  getInputValue() {\r\n    return this.inputEl.nativeElement.value;\r\n  }\r\n\r\n  setInputValue(value: string): void {\r\n    this.inputEl.nativeElement.value = value;\r\n  }\r\n\r\n  wasClickedOnToggle(event: MouseEvent): void {\r\n    if (\r\n      this.comboOpen &&\r\n      !this.inputEl.nativeElement.contains(event.target) &&\r\n      !this.iconElement.nativeElement.contains(event.target) &&\r\n      (!this.contentElement || !this.contentElement.nativeElement.contains(event.target))\r\n    ) {\r\n      // Esconde Content do Combo quando for clicado fora\r\n      this.controlComboVisibility(false);\r\n\r\n      this.verifyValidOption();\r\n\r\n      // caso for changeOnEnter deve limpar o selectedView para reinicia-lo\r\n      this.selectedView = this.changeOnEnter && !this.selectedValue ? undefined : this.selectedView;\r\n    } else {\r\n      if (this.service && !this.getInputValue() && !this.isFirstFilter) {\r\n        this.applyFilter('');\r\n      }\r\n    }\r\n  }\r\n\r\n  getLabelFormatted(label: string): SafeHtml {\r\n    const sanitizedLabel = this.sanitizeTagHTML(label);\r\n    let format: string = sanitizedLabel;\r\n\r\n    if (\r\n      this.isFiltering ||\r\n      (this.service &&\r\n        this.getInputValue() &&\r\n        !this.compareObjects(this.cacheOptions, this.visibleOptions) &&\r\n        this.shouldMarkLetters)\r\n    ) {\r\n      const labelInput = this.sanitizeTagHTML(this.getInputValue().toString().toLowerCase());\r\n      const labelLowerCase = sanitizedLabel.toLowerCase();\r\n\r\n      const openTagBold = '<span class=\"po-font-text-large-bold\">';\r\n      const closeTagBold = '</span>';\r\n\r\n      let startString;\r\n      let middleString;\r\n      let endString;\r\n\r\n      switch (this.filterMode) {\r\n        case PoComboFilterMode.startsWith:\r\n        case PoComboFilterMode.contains:\r\n          const indexOfLabelInput = labelLowerCase.indexOf(labelInput);\r\n\r\n          if (indexOfLabelInput > -1) {\r\n            startString = sanitizedLabel.substring(0, indexOfLabelInput);\r\n\r\n            middleString = sanitizedLabel.substring(indexOfLabelInput, indexOfLabelInput + labelInput.length);\r\n            endString = sanitizedLabel.substring(indexOfLabelInput + labelInput.length);\r\n\r\n            format = startString + openTagBold + middleString + closeTagBold + endString;\r\n          }\r\n\r\n          break;\r\n        case PoComboFilterMode.endsWith:\r\n          const lastIndexOfLabelInput = labelLowerCase.lastIndexOf(labelInput);\r\n\r\n          if (lastIndexOfLabelInput > -1) {\r\n            startString = sanitizedLabel.substring(0, lastIndexOfLabelInput);\r\n            middleString = sanitizedLabel.substring(lastIndexOfLabelInput);\r\n\r\n            format = startString + openTagBold + middleString + closeTagBold;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    return this.safeHtml(format);\r\n  }\r\n\r\n  safeHtml(value): SafeHtml {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n\r\n  isValidCharacterToSearch(keyCode) {\r\n    return (\r\n      keyCode !== 9 && // tab\r\n      keyCode !== 13 && // entet\r\n      keyCode !== 16 && // shift\r\n      keyCode !== 17 && // ctrl\r\n      keyCode !== 18 && // alt\r\n      keyCode !== 20 && // capslock\r\n      keyCode !== 27 && // esc\r\n      keyCode !== 37 && // seta\r\n      keyCode !== 38 && // seta\r\n      keyCode !== 39 && // seta\r\n      keyCode !== 40 && // seta\r\n      keyCode !== 93\r\n    ); // windows menu\r\n  }\r\n\r\n  searchOnEnter(value: string) {\r\n    if (this.service && !this.selectedView && value.length >= this.filterMinlength) {\r\n      this.controlApplyFilter(value);\r\n    }\r\n  }\r\n\r\n  private adjustContainerPosition() {\r\n    this.controlPosition.adjustPosition(poComboContainerPositionDefault);\r\n  }\r\n\r\n  private close() {\r\n    this.comboOpen = false;\r\n\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.comboIcon = 'po-icon-arrow-down';\r\n\r\n    this.removeListeners();\r\n\r\n    this.isFiltering = false;\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.removeListeners();\r\n\r\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnToggle(event);\r\n    });\r\n\r\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\r\n      // timeout necessario pois a animação do po-menu impacta no ajuste da posição do container.\r\n      setTimeout(() => this.adjustContainerPosition(), 250);\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onErrorGetObjectByValue() {\r\n    this.updateOptionByFilteredValue(null);\r\n  }\r\n\r\n  private onErrorFilteredData() {\r\n    this.isServerSearching = false;\r\n\r\n    this.updateComboList([]);\r\n\r\n    this.controlComboVisibility(true);\r\n  }\r\n\r\n  private onScroll = (): void => {\r\n    this.adjustContainerPosition();\r\n  };\r\n\r\n  private open() {\r\n    this.comboOpen = true;\r\n\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.comboIcon = 'po-icon-arrow-up';\r\n\r\n    this.initializeListeners();\r\n\r\n    this.inputEl.nativeElement.focus();\r\n    this.scrollTo(this.getIndexSelectedView());\r\n\r\n    this.setContainerPosition();\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n\r\n    if (this.eventResizeListener) {\r\n      this.eventResizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private sanitizeTagHTML(value: string = '') {\r\n    return value.replace(/\\</gm, '&lt;').replace(/\\>/g, '&gt;');\r\n  }\r\n\r\n  private setContainerPosition() {\r\n    this.controlPosition.setElements(\r\n      this.containerElement.nativeElement,\r\n      poComboContainerOffset,\r\n      this.inputEl,\r\n      ['top', 'bottom'],\r\n      true\r\n    );\r\n\r\n    this.adjustContainerPosition();\r\n  }\r\n\r\n  private setScrollTop(scrollTop: number) {\r\n    if (this.contentElement) {\r\n      this.contentElement.nativeElement.scrollTop = scrollTop;\r\n    }\r\n  }\r\n}\r\n","import { PoDatepickerRangeLiterals } from './interfaces/po-datepicker-range-literals.interface';\r\n\r\nexport const poDatepickerRangeLiteralsDefault = {\r\n  en: <PoDatepickerRangeLiterals>{\r\n    invalidFormat: 'Date in invalid format',\r\n    startDateGreaterThanEndDate: 'Start date greater than end date',\r\n    invalidDate: 'Invalid date',\r\n    dateOutOfPeriod: 'Date out of period'\r\n  },\r\n  es: <PoDatepickerRangeLiterals>{\r\n    invalidFormat: 'Fecha en formato no válido',\r\n    startDateGreaterThanEndDate: 'Fecha de inicio mayor que fecha final',\r\n    invalidDate: 'Fecha invalida',\r\n    dateOutOfPeriod: 'Fecha fuera de período'\r\n  },\r\n  pt: <PoDatepickerRangeLiterals>{\r\n    invalidFormat: 'Data no formato inválido',\r\n    startDateGreaterThanEndDate: 'Data inicial maior que data final',\r\n    invalidDate: 'Data inválida',\r\n    dateOutOfPeriod: 'Data fora do período'\r\n  },\r\n  ru: <PoDatepickerRangeLiterals>{\r\n    invalidFormat: 'Дата в неверном формате',\r\n    startDateGreaterThanEndDate: 'Дата начала больше даты окончания',\r\n    invalidDate: 'Недействительная дата',\r\n    dateOutOfPeriod: 'дата вне периода'\r\n  }\r\n};\r\n","import { ChangeDetectorRef, Directive, EventEmitter, Input, Output } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, ValidationErrors, Validator } from '@angular/forms';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { requiredFailed } from '../validators';\r\nimport { PoDateService } from './../../../services/po-date/po-date.service';\r\nimport { convertIsoToDate, convertToBoolean, setYearFrom0To100, validateDateRange } from './../../../utils/util';\r\nimport { PoDatepickerRangeLiterals } from './interfaces/po-datepicker-range-literals.interface';\r\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\r\nimport { poDatepickerRangeLiteralsDefault } from './po-datepicker-range.literals';\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-datepicker-range` é um componente para seleção de um período entre duas datas, onde é possível informar apenas\r\n * a data inicial ou a data final.\r\n *\r\n * O componente `[(ngModel)]` do `po-datepicker-range` trabalha com um objeto que implementa a interface\r\n * `PoDatepickerRange`, contendo as seguintes propriedades:\r\n * ```\r\n * { \"start\": '2017-11-28', \"end\": '2017-11-30' }\r\n * ```\r\n *\r\n * <a id=\"accepted-formats\"></a>\r\n * Este componente pode receber os seguintes formatos de data:\r\n *\r\n * - **Data e hora combinados (E8601DZw): yyyy-mm-ddThh:mm:ss+|-hh:mm**\r\n * ```\r\n * '2017-11-28T00:00:00-02:00';\r\n * ```\r\n *\r\n * - **Data (E8601DAw.): yyyy-mm-dd**\r\n * ```\r\n * '2017-11-28';\r\n * ```\r\n *\r\n * - **JavaScript Date Object:**\r\n * ```\r\n * new Date(2017, 10, 28);\r\n * ```\r\n *\r\n * > O componente respeitará o formato passado para o *model* via codificação. Porém, caso seja feita alteração em algum\r\n * dos valores de data em tela, o componente atribuirá o formato **Data (E8601DAw.): yyyy-mm-dd** ao model.\r\n *\r\n * Importante:\r\n *\r\n * - Quando preenchidas a data inicial e final, a data inicial deve ser sempre menor ou igual a data final;\r\n * - Ao passar uma data inválida via codificação, o valor será mantido no *model* e o `input` da tela aparecerá vazio;\r\n * - Permite trabalhar com as duas datas separadamente através das propriedades `p-start-date` e `p-end-date` no lugar do\r\n * `[(ngModel)]`, no entanto sem a validação do formulário;\r\n * - Para a validação do formulário, utilize o `[(ngModel)]`.\r\n */\r\n@Directive()\r\nexport abstract class PoDatepickerRangeBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Texto de apoio do campo.\r\n   */\r\n  @Input('p-help') help?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Rótulo do campo.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do campo.\r\n   */\r\n  @Output('p-change') onChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  errorMessage: string = '';\r\n  dateRange: PoDatepickerRange = { start: '', end: '' };\r\n\r\n  protected format: any = 'dd/mm/yyyy';\r\n  protected isDateRangeInputFormatValid: boolean = true;\r\n  protected isStartDateRangeInputValid: boolean = true;\r\n  protected onTouchedModel: any;\r\n\r\n  private _clean?: boolean = false;\r\n  private _disabled?;\r\n  private _endDate?;\r\n  private _literals?: any;\r\n  private _maxDate: Date;\r\n  private _minDate: Date;\r\n  private _noAutocomplete?: boolean = false;\r\n  private _readonly: boolean = false;\r\n  private _required?: boolean = false;\r\n  private _startDate?;\r\n\r\n  private language;\r\n  private onChangeModel: any;\r\n  private validatorChange: any;\r\n\r\n  get isDateRangeInputValid() {\r\n    return this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita ação para limpar o campo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-clean') set clean(clean: boolean) {\r\n    this._clean = convertToBoolean(clean);\r\n  }\r\n\r\n  get clean() {\r\n    return this._clean;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita o campo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.validateModel(this.dateRange);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Data final.\r\n   */\r\n  @Input('p-end-date') set endDate(date: string | Date) {\r\n    this._endDate = this.convertPatternDateFormat(date);\r\n    this.dateRange.end = this.endDate;\r\n\r\n    this.updateScreenByModel(this.dateRange);\r\n    this.updateModel(this.dateRange);\r\n  }\r\n\r\n  get endDate() {\r\n    return this._endDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-datepicker-range`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoDatepickerRangeLiterals = {\r\n   *    invalidFormat: 'Date in inconsistent format',\r\n   *    startDateGreaterThanEndDate: 'End date less than start date'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoDatepickerRangeLiterals = {\r\n   *    invalidFormat: 'Date in inconsistent format'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-datepicker-range\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-datepicker-range>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoDatepickerRangeLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poDatepickerRangeLiteralsDefault[poLocaleDefault],\r\n        ...poDatepickerRangeLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poDatepickerRangeLiteralsDefault[this.language];\r\n    }\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poDatepickerRangeLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma data mínima para o `po-datepicker-range`.\r\n   */\r\n  @Input('p-min-date') set minDate(value: string | Date) {\r\n    if (value instanceof Date) {\r\n      const year = value.getFullYear();\r\n\r\n      const date = new Date(year, value.getMonth(), value.getDate(), 0, 0, 0);\r\n      setYearFrom0To100(date, year);\r\n\r\n      this._minDate = date;\r\n    } else {\r\n      this._minDate = convertIsoToDate(value, true, false);\r\n    }\r\n  }\r\n\r\n  get minDate() {\r\n    return this._minDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma data máxima para o `po-datepicker-range`.\r\n   */\r\n  @Input('p-max-date') set maxDate(value: string | Date) {\r\n    if (value instanceof Date) {\r\n      const year = value.getFullYear();\r\n\r\n      const date = new Date(year, value.getMonth(), value.getDate(), 23, 59, 59);\r\n      setYearFrom0To100(date, year);\r\n\r\n      this._maxDate = date;\r\n    } else {\r\n      this._maxDate = convertIsoToDate(value, false, true);\r\n    }\r\n  }\r\n\r\n  get maxDate() {\r\n    return this._maxDate;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\r\n    this._noAutocomplete = convertToBoolean(value);\r\n  }\r\n\r\n  get noAutocomplete() {\r\n    return this._noAutocomplete;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será somente leitura.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-readonly') set readonly(value: boolean) {\r\n    this._readonly = convertToBoolean(value);\r\n\r\n    this.validateModel(this.dateRange);\r\n  }\r\n\r\n  get readonly() {\r\n    return this._readonly;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.dateRange);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Data inicial.\r\n   */\r\n  @Input('p-start-date') set startDate(date: string | Date) {\r\n    this._startDate = this.convertPatternDateFormat(date);\r\n    this.dateRange.start = this.startDate;\r\n\r\n    this.updateScreenByModel(this.dateRange);\r\n    this.updateModel(this.dateRange);\r\n  }\r\n\r\n  get startDate() {\r\n    return this._startDate;\r\n  }\r\n\r\n  constructor(protected poDateService: PoDateService, languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnChange(func: any): void {\r\n    this.onChangeModel = func;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnTouched(func: any): void {\r\n    this.onTouchedModel = func;\r\n  }\r\n\r\n  registerOnValidatorChange?(fn: () => void): void {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(control: AbstractControl): ValidationErrors {\r\n    const value: PoDatepickerRange = control.value || {};\r\n    const startDate = value.start ? this.convertPatternDateFormat(value.start) : '';\r\n    const endDate = value.end ? this.convertPatternDateFormat(value.end) : '';\r\n\r\n    if (this.requiredDateRangeFailed(startDate, endDate)) {\r\n      this.errorMessage = '';\r\n\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (!this.verifyValidDate(startDate, endDate)) {\r\n      this.errorMessage = this.literals.invalidDate;\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.dateRangeObjectFailed(control.value) || this.dateRangeFormatFailed(startDate, endDate)) {\r\n      this.errorMessage = this.literals.invalidFormat;\r\n\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.dateRangeFailed(startDate, endDate)) {\r\n      this.errorMessage = this.literals.startDateGreaterThanEndDate;\r\n\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if ((startDate && !this.validateDateInRange(startDate)) || (endDate && !this.validateDateInRange(endDate))) {\r\n      this.errorMessage = this.literals.dateOutOfPeriod;\r\n\r\n      return {\r\n        date: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  validateDateInRange(startDate: any): boolean {\r\n    return validateDateRange(convertIsoToDate(startDate, false, false), this._minDate, this._maxDate);\r\n  }\r\n\r\n  writeValue(dateRange: PoDatepickerRange): void {\r\n    this.resetDateRangeInputValidation();\r\n\r\n    if (!dateRange || this.dateRangeObjectFailed(dateRange)) {\r\n      this.dateRange = { start: '', end: '' };\r\n    }\r\n\r\n    if (!dateRange) {\r\n      this.validateModel(this.dateRange);\r\n    }\r\n\r\n    if (this.dateRangeObjectFailed(dateRange)) {\r\n      this.updateModel(dateRange);\r\n    }\r\n\r\n    if (this.isDateRangeObject(dateRange)) {\r\n      this.dateRange = {\r\n        start: this.convertPatternDateFormat(dateRange.start),\r\n        end: this.convertPatternDateFormat(dateRange.end)\r\n      };\r\n\r\n      this.updateModel(this.dateRange);\r\n    }\r\n\r\n    this.updateScreenByModel(this.dateRange);\r\n  }\r\n\r\n  protected dateFormatFailed(value: string): boolean {\r\n    return value && !this.poDateService.isValidIso(value);\r\n  }\r\n\r\n  // Executa a função onChange\r\n  protected updateModel(value: any) {\r\n    const model = typeof value === 'object' ? { ...value } : value;\r\n    // Quando o input não possui um formulário, então esta função não é registrada\r\n    if (this.onChangeModel) {\r\n      this.onChangeModel(model);\r\n    }\r\n  }\r\n\r\n  protected validateModel(value: any) {\r\n    const model = { ...value };\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  protected verifyValidDate(startDate: string, endDate: string) {\r\n    if (startDate !== '' && endDate !== '') {\r\n      return this.dateIsValid(startDate) && this.dateIsValid(endDate);\r\n    } else if (startDate !== '') {\r\n      return this.dateIsValid(startDate);\r\n    } else {\r\n      return this.dateIsValid(endDate);\r\n    }\r\n  }\r\n\r\n  private convertPatternDateFormat(value: any) {\r\n    if (value instanceof Date) {\r\n      return this.poDateService.convertDateToISO(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private dateRangeFailed(startDate: string, endDate: string): boolean {\r\n    return !this.poDateService.isDateRangeValid(endDate, startDate) || !this.isStartDateRangeInputValid;\r\n  }\r\n\r\n  private dateRangeFormatFailed(startDate: string, endDate: string): boolean {\r\n    return this.dateFormatFailed(endDate) || this.dateFormatFailed(startDate) || !this.isDateRangeInputFormatValid;\r\n  }\r\n\r\n  private dateRangeObjectFailed(value): boolean {\r\n    return value && !this.isDateRangeObject(value);\r\n  }\r\n\r\n  private isDateRangeObject(value): boolean {\r\n    return value && value.hasOwnProperty('start') && value.hasOwnProperty('end');\r\n  }\r\n\r\n  private requiredDateRangeFailed(startDate: string, endDate: string): boolean {\r\n    return (\r\n      this.isDateRangeInputValid &&\r\n      requiredFailed(this.required, this.disabled, startDate) &&\r\n      requiredFailed(this.required, this.disabled, endDate)\r\n    );\r\n  }\r\n\r\n  private dateIsValid(date: string) {\r\n    const [strYear, strMonth, strDay] = date.split('-');\r\n    const year = Number(strYear);\r\n    const month = Number(strMonth);\r\n    const day = Number(strDay);\r\n\r\n    //verificação dos meses com 31 dias\r\n    if (month === 1 || month === 3 || month === 5 || month === 7 || month === 8 || month === 10 || month === 12) {\r\n      return day < 1 || day > 31 ? false : true;\r\n    } else if (month === 4 || month === 6 || month === 9 || month === 11) {\r\n      //verificação dos meses com 30 dias\r\n      return day < 1 || day > 30 ? false : true;\r\n    } else {\r\n      //verificacao de ano bissexto para verificar até qual dia irá o mês de fevereiro\r\n      if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {\r\n        return day < 1 || day > 29 ? false : true;\r\n      } else {\r\n        return day < 1 || day > 28 ? false : true;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected abstract resetDateRangeInputValidation(): void;\r\n\r\n  protected abstract updateScreenByModel(dateRange: PoDatepickerRange);\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  OnInit,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  Renderer2,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\r\n\r\nimport { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';\r\nimport { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';\r\nimport { PoDateService } from './../../../services/po-date/po-date.service';\r\nimport { PoMask } from '../po-input/po-mask';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nconst arrowLeftKey = 37;\r\nconst arrowRightKey = 39;\r\nconst backspaceKey = 8;\r\nconst poDatepickerRangeDateLengthDefault = 10;\r\n\r\nconst poCalendarContentOffset = 8;\r\nconst poCalendarPositionDefault = 'bottom-left';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoDatepickerRangeComponent),\r\n    multi: true\r\n  },\r\n  PoControlPositionService\r\n];\r\n/**\r\n * @docsExtends PoDatepickerRangeBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-datepicker-range-basic\" title=\"PO Datepicker Range Basic\">\r\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-range-labs\" title=\"PO Datepicker Range Labs\">\r\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-range-vacations\" title=\"PO Datepicker Range - Vacations Suggestion\">\r\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html\"> </file>\r\n *  <file name=\"sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-datepicker-range-vacations-reactive-form\" title=\"PO Datepicker Range - Vacations Reactive Form\">\r\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html\">\r\n *  </file>\r\n *  <file name=\"sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts\">\r\n *  </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-datepicker-range',\r\n  templateUrl: './po-datepicker-range.component.html',\r\n  providers,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoDatepickerRangeComponent\r\n  extends PoDatepickerRangeBaseComponent\r\n  implements AfterViewInit, OnInit, OnDestroy, OnChanges {\r\n  @ViewChild('dateRangeField', { read: ElementRef, static: true }) dateRangeField: ElementRef;\r\n  @ViewChild('endDateInput', { read: ElementRef, static: true }) endDateInput: ElementRef;\r\n  @ViewChild('startDateInput', { read: ElementRef, static: true }) startDateInput: ElementRef;\r\n  @ViewChild('iconCalendar', { read: ElementRef, static: true }) iconCalendar: ElementRef;\r\n  @ViewChild('calendarPicker', { read: ElementRef }) calendarPicker: ElementRef;\r\n\r\n  isCalendarVisible = false;\r\n\r\n  private clickListener;\r\n  private eventResizeListener;\r\n  private poDatepickerRangeElement: ElementRef<any>;\r\n  private poMaskObject: PoMask;\r\n\r\n  get autocomplete() {\r\n    return this.noAutocomplete ? 'off' : 'on';\r\n  }\r\n\r\n  get enableCleaner(): boolean {\r\n    return this.clean && (this.startDateInputValue || this.endDateInputValue) && !this.disabled && !this.readonly;\r\n  }\r\n\r\n  get endDateInputName(): string {\r\n    return 'end-date';\r\n  }\r\n\r\n  get endDateInputValue(): string {\r\n    return this.endDateInput.nativeElement.value;\r\n  }\r\n\r\n  get getErrorMessage(): string {\r\n    return this.errorMessage !== '' && this.hasInvalidClass() ? this.errorMessage : '';\r\n  }\r\n\r\n  get isDateRangeInputUncompleted(): boolean {\r\n    return (\r\n      this.endDateInputValue.length < poDatepickerRangeDateLengthDefault &&\r\n      this.startDateInputValue.length < poDatepickerRangeDateLengthDefault\r\n    );\r\n  }\r\n\r\n  get isDirtyDateRangeInput(): boolean {\r\n    return this.endDateInputValue.length > 0 || this.startDateInputValue.length > 0;\r\n  }\r\n\r\n  get startDateInputName(): string {\r\n    return 'start-date';\r\n  }\r\n\r\n  get startDateInputValue(): string {\r\n    return this.startDateInput.nativeElement.value;\r\n  }\r\n\r\n  constructor(\r\n    private changeDetector: ChangeDetectorRef,\r\n    private controlPosition: PoControlPositionService,\r\n    private renderer: Renderer2,\r\n    private cd: ChangeDetectorRef,\r\n    poDateService: PoDateService,\r\n    poDatepickerRangeElement: ElementRef,\r\n    poLanguageService: PoLanguageService\r\n  ) {\r\n    super(poDateService, poLanguageService);\r\n    this.poDatepickerRangeElement = poDatepickerRangeElement;\r\n  }\r\n\r\n  static getKeyCode(event: KeyboardEvent) {\r\n    return event.keyCode || event.which;\r\n  }\r\n\r\n  static getTargetElement(event: any) {\r\n    return event.target || event.srcElement;\r\n  }\r\n\r\n  static isValidKey(keyCode: number): boolean {\r\n    const isNumericKey = keyCode >= 48 && keyCode <= 57;\r\n    const isNumericNumpadKey = keyCode >= 96 && keyCode <= 105;\r\n\r\n    return isNumericKey || isNumericNumpadKey;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Classe de máscara\r\n    this.poMaskObject = this.buildMask();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.minDate || changes.maxDate) {\r\n      this.validateModel(this.dateRange);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  clear() {\r\n    this.resetDateRangeInputValidation();\r\n    this.dateRange = { start: '', end: '' };\r\n\r\n    this.updateScreenByModel(this.dateRange);\r\n    this.updateModel(this.dateRange);\r\n  }\r\n\r\n  eventOnClick($event: any) {\r\n    this.poMaskObject.click($event);\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoDatepickerRangeComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;\r\n   *\r\n   * focusDatepickerRange() {\r\n   *   this.datepickerRange.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.startDateInput.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onBlur(event: any) {\r\n    this.onTouchedModel?.();\r\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\r\n\r\n    this.updateModelByScreen(isStartDateTargetEvent);\r\n\r\n    this.removeFocusFromDatePickerRangeField();\r\n  }\r\n\r\n  onCalendarChange({ start, end }) {\r\n    const isStartDateTargetEvent = start && !end;\r\n\r\n    this.updateScreenByModel({ start: start || '', end: end || '' });\r\n    this.updateModelByScreen(isStartDateTargetEvent, start || '', end || '');\r\n\r\n    if (start && end) {\r\n      setTimeout(() => {\r\n        this.isCalendarVisible = false;\r\n        this.cd.markForCheck();\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  onFocus(event: any) {\r\n    this.applyFocusOnDatePickerRangeField();\r\n    this.poMaskObject.resetPositions(event);\r\n  }\r\n\r\n  onKeydown(event?: any) {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    if (this.isSetFocusOnBackspace(event)) {\r\n      event.preventDefault();\r\n      this.setFocusOnBackspace();\r\n    } else {\r\n      this.poMaskObject.keydown(event);\r\n    }\r\n  }\r\n\r\n  onKeyup(event: any) {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    const isStartDateTargetEvent = event.target.name === this.startDateInputName;\r\n\r\n    this.setFocus(event);\r\n    this.poMaskObject.keyup(event);\r\n    this.updateModelWhenComplete(isStartDateTargetEvent, this.startDateInputValue, this.endDateInputValue);\r\n  }\r\n\r\n  resetDateRangeInputValidation() {\r\n    this.isStartDateRangeInputValid = true;\r\n    this.isDateRangeInputFormatValid = true;\r\n  }\r\n\r\n  toggleCalendar() {\r\n    if (this.disabled || this.readonly) {\r\n      return;\r\n    }\r\n\r\n    this.isCalendarVisible = !this.isCalendarVisible;\r\n    this.changeDetector.detectChanges();\r\n\r\n    if (this.isCalendarVisible) {\r\n      this.setCalendarPosition();\r\n      this.initializeListeners();\r\n    } else {\r\n      this.removeListeners();\r\n    }\r\n  }\r\n\r\n  updateScreenByModel(model: PoDatepickerRange) {\r\n    const dateRange = { start: model.start as string, end: model.end as string };\r\n    const isStartDateValid = this.poDateService.isDateRangeValid(dateRange.end, dateRange.start);\r\n    const isDateValid = date => !this.dateFormatFailed(date) && isStartDateValid;\r\n\r\n    const endDateFormated = isDateValid(dateRange.end) ? this.formatModelToScreen(dateRange.end) : '';\r\n    const startDateFormated = isDateValid(dateRange.start) ? this.formatModelToScreen(dateRange.start) : '';\r\n\r\n    this.endDateInput.nativeElement.value = endDateFormated;\r\n    this.startDateInput.nativeElement.value = startDateFormated;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  private applyFocusOnDatePickerRangeField() {\r\n    this.dateRangeField.nativeElement.classList.add('po-datepicker-range-field-focused');\r\n  }\r\n\r\n  // Retorna um objeto do tipo PoMask com a mascara configurada.\r\n  private buildMask(): PoMask {\r\n    let mask = this.format.toUpperCase();\r\n\r\n    mask = mask.replace(/DD/g, '99');\r\n    mask = mask.replace(/MM/g, '99');\r\n    mask = mask.replace(/YYYY/g, '9999');\r\n\r\n    return new PoMask(mask, true);\r\n  }\r\n\r\n  private formatDate(format: string, day: string = '', month: string = '', year: string = ''): string {\r\n    let dateFormatted = format;\r\n\r\n    day = day && day.includes('T') ? day.slice(0, 2) : day;\r\n\r\n    dateFormatted = dateFormatted.replace('dd', ('0' + day).slice(-2));\r\n    dateFormatted = dateFormatted.replace('mm', ('0' + month).slice(-2));\r\n    dateFormatted = dateFormatted.replace('yyyy', String(year));\r\n\r\n    return dateFormatted;\r\n  }\r\n\r\n  private formatScreenToModel(value: string = ''): string {\r\n    const [day, month, year] = value.split('/');\r\n\r\n    return value ? this.formatDate('yyyy-mm-dd', day, month, year) : '';\r\n  }\r\n\r\n  private formatModelToScreen(value: string = ''): string {\r\n    const [year, month, day] = value.split('-');\r\n\r\n    return value ? this.formatDate(this.format, day, month, year) : '';\r\n  }\r\n\r\n  private getDateRangeFormatValidation(\r\n    startDate: string,\r\n    endDate: string,\r\n    isStartDateTargetEvent: boolean\r\n  ): { isValid: boolean; dateRangeModel: PoDatepickerRange } {\r\n    this.setDateRangeInputValidation(startDate, endDate);\r\n    return {\r\n      isValid:\r\n        this.isDateRangeInputFormatValid && this.isStartDateRangeInputValid && this.verifyValidDate(startDate, endDate),\r\n      dateRangeModel: this.getValidatedModel(startDate, endDate, isStartDateTargetEvent)\r\n    };\r\n  }\r\n\r\n  private getValidatedModel(startDate: string, endDate: string, isStartDateTargetEvent: boolean): PoDatepickerRange {\r\n    const dateRangeModel = { start: '', end: '' };\r\n\r\n    dateRangeModel.end =\r\n      (isStartDateTargetEvent || this.isStartDateRangeInputValid) && !this.dateFormatFailed(endDate) ? endDate : '';\r\n\r\n    dateRangeModel.start =\r\n      (!isStartDateTargetEvent || this.isStartDateRangeInputValid) && !this.dateFormatFailed(startDate)\r\n        ? startDate\r\n        : '';\r\n\r\n    return dateRangeModel;\r\n  }\r\n\r\n  private hasAttrCalendar(element) {\r\n    const attrCalendar = 'attr-calendar';\r\n\r\n    return element?.hasAttribute(attrCalendar) || element?.parentElement?.hasAttribute(attrCalendar);\r\n  }\r\n\r\n  private hasInvalidClass(): boolean {\r\n    return (\r\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-invalid') &&\r\n      this.poDatepickerRangeElement.nativeElement.classList.contains('ng-dirty')\r\n    );\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnPicker(event);\r\n    });\r\n\r\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.isCalendarVisible = false;\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private isEqualBeforeValue(startDate: string, endDate: string): boolean {\r\n    return this.isDateRangeInputFormatValid && endDate === this.dateRange.end && startDate === this.dateRange.start;\r\n  }\r\n\r\n  private isSetFocusOnBackspace(event: any) {\r\n    return (\r\n      event.target.name === this.endDateInputName &&\r\n      this.endDateInput.nativeElement.selectionStart === 0 &&\r\n      this.endDateInput.nativeElement.selectionEnd === 0 &&\r\n      event.keyCode === backspaceKey\r\n    );\r\n  }\r\n\r\n  private onScroll = (): void => {\r\n    if (this.isCalendarVisible) {\r\n      this.controlPosition.adjustPosition(poCalendarPositionDefault);\r\n    }\r\n  };\r\n\r\n  private removeFocusFromDatePickerRangeField() {\r\n    this.dateRangeField.nativeElement.classList.remove('po-datepicker-range-field-focused');\r\n  }\r\n\r\n  private setDateRangeInputValidation(startDate: string, endDate: string) {\r\n    this.isStartDateRangeInputValid = this.poDateService.isDateRangeValid(endDate, startDate);\r\n\r\n    this.isDateRangeInputFormatValid = !this.dateFormatFailed(startDate) && !this.dateFormatFailed(endDate);\r\n  }\r\n\r\n  private setFocus(event: any) {\r\n    const inputElement = PoDatepickerRangeComponent.getTargetElement(event);\r\n    const keyCode = PoDatepickerRangeComponent.getKeyCode(event);\r\n    const inputName = inputElement['name'];\r\n\r\n    this.setFocusOnArrowLeft(keyCode, inputName);\r\n    this.setFocusOnArrowRight(keyCode, inputName, inputElement);\r\n    this.setFocusOnStartDateCompleted(keyCode, inputName);\r\n  }\r\n\r\n  private setFocusAndPosition(position: number, inputElement: ElementRef, selectionRange: number) {\r\n    this.focusOnElement(inputElement);\r\n\r\n    setTimeout(() => {\r\n      inputElement.nativeElement.setSelectionRange(selectionRange, selectionRange);\r\n      this.poMaskObject.initialPosition = position;\r\n      this.poMaskObject.finalPosition = position;\r\n    });\r\n  }\r\n\r\n  private focusOnElement(inputElement: ElementRef) {\r\n    inputElement.nativeElement.focus();\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.clickListener) {\r\n      this.clickListener();\r\n    }\r\n\r\n    if (this.eventResizeListener) {\r\n      this.eventResizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private setCalendarPosition() {\r\n    this.controlPosition.setElements(\r\n      this.calendarPicker.nativeElement,\r\n      poCalendarContentOffset,\r\n      this.dateRangeField,\r\n      ['bottom-left', 'bottom-right', 'top-left', 'top-right'],\r\n      false,\r\n      true\r\n    );\r\n\r\n    this.controlPosition.adjustPosition(poCalendarPositionDefault);\r\n  }\r\n\r\n  private setFocusOnArrowLeft(keyCode: number, inputName: string) {\r\n    const isCursorAtStartOfInput = this.endDateInput.nativeElement.selectionStart === 0;\r\n\r\n    if (inputName === this.endDateInputName && isCursorAtStartOfInput && keyCode === arrowLeftKey) {\r\n      const inputLength = this.startDateInput.nativeElement.value.length;\r\n      this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\r\n    }\r\n  }\r\n\r\n  private setFocusOnArrowRight(keyCode: number, inputName: string, inputElement: any) {\r\n    const isCursorAtEndOfInput = this.startDateInput.nativeElement.selectionStart === inputElement.value.length;\r\n\r\n    if (inputName === this.startDateInputName && isCursorAtEndOfInput && keyCode === arrowRightKey) {\r\n      this.setFocusAndPosition(0, this.endDateInput, 0);\r\n    }\r\n  }\r\n\r\n  private setFocusOnBackspace() {\r\n    const inputLength = this.startDateInput.nativeElement.value.length;\r\n\r\n    this.startDateInput.nativeElement.value = this.startDateInputValue.slice(0, -1);\r\n    this.setFocusAndPosition(inputLength, this.startDateInput, inputLength);\r\n  }\r\n\r\n  private setFocusOnStartDateCompleted(keyCode: number, inputName: string) {\r\n    const isLastKeyPressed = this.startDateInput.nativeElement.selectionStart === poDatepickerRangeDateLengthDefault;\r\n    const isNewDateCompleted =\r\n      this.startDateInputValue.length === poDatepickerRangeDateLengthDefault && isLastKeyPressed;\r\n    const isValidKey = PoDatepickerRangeComponent.isValidKey(keyCode);\r\n\r\n    if (inputName === this.startDateInputName && isNewDateCompleted && isValidKey) {\r\n      this.setFocusAndPosition(0, this.endDateInput, 0);\r\n    }\r\n  }\r\n\r\n  private updateModelWhenComplete(isStartDateTargetEvent: boolean, startDate, endDate) {\r\n    const endDateFormatted = this.formatScreenToModel(endDate);\r\n    const startDateFormatted = this.formatScreenToModel(startDate);\r\n    const dateFormatValidation = this.getDateRangeFormatValidation(\r\n      startDateFormatted,\r\n      endDateFormatted,\r\n      isStartDateTargetEvent\r\n    );\r\n\r\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\r\n      this.resetDateRangeInputValidation();\r\n      this.validateModel(this.dateRange);\r\n      return;\r\n    }\r\n\r\n    if (dateFormatValidation.isValid) {\r\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\r\n      this.updateModel(this.dateRange);\r\n      this.onChange.emit({ ...this.dateRange });\r\n    }\r\n  }\r\n\r\n  private updateModelByScreen(isStartDateTargetEvent: boolean, startDate?, endDate?) {\r\n    const endDateFormatted = endDate || this.formatScreenToModel(this.endDateInputValue);\r\n    const startDateFormatted = startDate || this.formatScreenToModel(this.startDateInputValue);\r\n    if (this.isDateRangeInputUncompleted && this.isDirtyDateRangeInput) {\r\n      this.updateModel(this.dateRange);\r\n      return;\r\n    }\r\n\r\n    if (this.isEqualBeforeValue(startDateFormatted, endDateFormatted)) {\r\n      this.resetDateRangeInputValidation();\r\n      this.validateModel(this.dateRange);\r\n      return;\r\n    }\r\n\r\n    const dateFormatValidation = this.getDateRangeFormatValidation(\r\n      startDateFormatted,\r\n      endDateFormatted,\r\n      isStartDateTargetEvent\r\n    );\r\n\r\n    if (dateFormatValidation.isValid) {\r\n      this.dateRange = { start: startDateFormatted, end: endDateFormatted };\r\n      this.updateModel(this.dateRange);\r\n      this.onChange.emit({ ...this.dateRange });\r\n    }\r\n\r\n    if (!dateFormatValidation.isValid && this.verifyFormattedDates(startDateFormatted, endDateFormatted)) {\r\n      this.dateRange = { ...dateFormatValidation.dateRangeModel };\r\n      this.updateModel(dateFormatValidation.dateRangeModel);\r\n    }\r\n  }\r\n\r\n  private verifyFormattedDates(start: string, end: string): boolean {\r\n    return !!start || !!end;\r\n  }\r\n\r\n  private wasClickedOnPicker(event): void {\r\n    if (!this.isCalendarVisible) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.calendarPicker.nativeElement.contains(event.target) &&\r\n      !this.iconCalendar.nativeElement.contains(event.target) &&\r\n      !this.hasAttrCalendar(event.target)\r\n    ) {\r\n      this.isCalendarVisible = false;\r\n    }\r\n    this.cd.markForCheck();\r\n  }\r\n}\r\n","import { EventEmitter, Input, Output, Directive, TemplateRef, ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\nimport { requiredFailed, maxlengpoailed, minlengpoailed, patternFailed } from './../validators';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { PoMask } from './po-mask';\r\n\r\n/**\r\n * @description\r\n *\r\n * Este é um componente baseado em input, com várias propriedades do input nativo e outras\r\n * propriedades extras como: máscara, pattern, mensagem de erro e etc.\r\n * Você deve informar a variável que contém o valor como [(ngModel)]=\"variavel\", para que o\r\n * input receba o valor da variável e para que ela receba as alterações do valor (two-way-databinding).\r\n * A propriedade name é obrigatória para que o formulário e o model funcionem corretamente.\r\n *\r\n * Importante:\r\n *\r\n * - Caso o input tenha um [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\r\n * Então você precisa informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\r\n * Exemplo: [(ngModel)]=\"pessoa.nome\" [ngModelOptions]=\"{standalone: true}\".\r\n *\r\n */\r\n@Directive()\r\nexport abstract class PoInputBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o ícone que será exibido no início do campo.\r\n   *\r\n   * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-input p-icon=\"po-icon-user\" p-label=\"PO input\"></po-input>\r\n   * ```\r\n   * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-input p-icon=\"fa fa-podcast\" p-label=\"PO input\"></po-input>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-input [p-icon]=\"template\" p-label=\"input template ionic\"></po-input>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   */\r\n  @Input('p-icon') icon?: string | TemplateRef<void>;\r\n\r\n  /** Rótulo do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** Nome e identificador do campo. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Mensagem que será apresentada quando o `pattern` ou a máscara não for satisfeita.\r\n   *\r\n   * > Esta mensagem não é apresentada quando o campo estiver vazio, mesmo que ele seja requerido.\r\n   */\r\n  @Input('p-error-pattern') errorPattern?: string = '';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao sair do campo.\r\n   */\r\n  @Output('p-blur') blur: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao entrar do campo.\r\n   */\r\n  @Output('p-enter') enter: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor e deixar o campo.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do model.\r\n   */\r\n  @Output('p-change-model') changeModel: EventEmitter<any> = new EventEmitter();\r\n\r\n  type: string;\r\n\r\n  onChangePropagate: any = null;\r\n  objMask: any;\r\n  modelLastUpdate: any;\r\n  protected onTouched: any = null;\r\n\r\n  protected passedWriteValue: boolean = false;\r\n  protected validatorChange: any;\r\n\r\n  private _maxlength?: number;\r\n  private _minlength?: number;\r\n  private _noAutocomplete?: boolean = false;\r\n  private _placeholder?: string = '';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\r\n   *\r\n   * > No componente `po-password` será definido como `new-password`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\r\n    this._noAutocomplete = convertToBoolean(value);\r\n  }\r\n\r\n  get noAutocomplete() {\r\n    return this._noAutocomplete;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Mensagem que aparecerá enquanto o campo não estiver preenchido.\r\n   *\r\n   * @default ''\r\n   */\r\n  @Input('p-placeholder') set placeholder(value: string) {\r\n    this._placeholder = value || '';\r\n  }\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Se verdadeiro, desabilita o campo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  disabled?: boolean = false;\r\n  @Input('p-disabled') set setDisabled(disabled: string) {\r\n    this.disabled = disabled === '' ? true : convertToBoolean(disabled);\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  /** Indica que o campo será somente leitura. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  readonly?: boolean = false;\r\n  @Input('p-readonly') set setReadonly(readonly: string) {\r\n    this.readonly = readonly === '' ? true : convertToBoolean(readonly);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * > Esta propriedade é desconsiderada quando o input está desabilitado `(p-disabled)`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  required?: boolean = false;\r\n  @Input('p-required') set setRequired(required: string) {\r\n    this.required = required === '' ? true : convertToBoolean(required);\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  /** Se verdadeiro, o campo receberá um botão para ser limpo. */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  clean?: boolean = false;\r\n  @Input('p-clean') set setClean(clean: string) {\r\n    this.clean = clean === '' ? true : convertToBoolean(clean);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Expressão regular para validar o campo.\r\n   * Quando o campo possuir uma máscara `(p-mask)` será automaticamente validado por ela, porém\r\n   * é possível definir um p-pattern para substituir a validação da máscara.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  pattern?: string;\r\n  @Input('p-pattern') set setPattern(pattern: string) {\r\n    this.pattern = pattern;\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica a quantidade máxima de caracteres que o campo aceita.\r\n   */\r\n  @Input('p-maxlength') set maxlength(value: number) {\r\n    if (!isNaN(parseInt(<any>value, 10))) {\r\n      this._maxlength = parseInt(<any>value, 10);\r\n\r\n      this.validateModel();\r\n    } else if (!value) {\r\n      this._maxlength = undefined;\r\n\r\n      this.validateModel();\r\n    }\r\n  }\r\n\r\n  get maxlength() {\r\n    return this._maxlength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica a quantidade mínima de caracteres que o campo aceita.\r\n   */\r\n  @Input('p-minlength') set minlength(value: number) {\r\n    if (!isNaN(parseInt(<any>value, 10))) {\r\n      this._minlength = parseInt(<any>value, 10);\r\n\r\n      this.validateModel();\r\n    } else if (!value) {\r\n      this._minlength = undefined;\r\n\r\n      this.validateModel();\r\n    }\r\n  }\r\n\r\n  get minlength() {\r\n    return this._minlength;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica uma máscara para o campo. Exemplos: (+99) (99) 99999?-9999, 99999-999, 999.999.999-99.\r\n   * A máscara gera uma validação automática do campo, podendo esta ser substituída por um REGEX específico\r\n   * através da propriedade p-pattern.\r\n   * O campo será sinalizado e o formulário ficará inválido quando o valor informado estiver fora do padrão definido,\r\n   * mesmo quando desabilitado.\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  mask?: string = '';\r\n  @Input('p-mask') set setMask(mask: string) {\r\n    this.mask = mask;\r\n\r\n    // Atualiza Máscara do Campo\r\n    this.objMask = new PoMask(this.mask, this.maskFormatModel);\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica se o `model` receberá o valor formatado pela máscara ou apenas o valor puro (sem formatação).\r\n   *\r\n   * @default `false`\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  maskFormatModel?: boolean = false;\r\n  @Input('p-mask-format-model') set setMaskFormatModel(maskFormatModel: string) {\r\n    this.maskFormatModel = maskFormatModel === '' ? true : convertToBoolean(maskFormatModel);\r\n\r\n    if (this.objMask instanceof PoMask) {\r\n      this.objMask.formatModel = this.maskFormatModel;\r\n\r\n      this.validateModel();\r\n    }\r\n  }\r\n\r\n  constructor(private cd?: ChangeDetectorRef) {}\r\n\r\n  callOnChange(value: any) {\r\n    this.updateModel(value);\r\n\r\n    this.controlChangeModelEmitter(value);\r\n  }\r\n\r\n  callUpdateModelWithTimeout(value) {\r\n    setTimeout(() => this.updateModel(value));\r\n  }\r\n\r\n  controlChangeModelEmitter(value: any) {\r\n    if (this.modelLastUpdate !== value) {\r\n      this.changeModel.emit(value);\r\n      this.modelLastUpdate = value;\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.cd?.markForCheck();\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnChange(func: any): void {\r\n    this.onChangePropagate = func;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnTouched(func: any): void {\r\n    this.onTouched = func;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  updateModel(value: any) {\r\n    // Quando o input não possui um formulário, então esta função não é registrada\r\n    if (this.onChangePropagate) {\r\n      this.onChangePropagate(value);\r\n    }\r\n  }\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, this.getScreenValue())) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (maxlengpoailed(this.maxlength, this.getScreenValue())) {\r\n      return {\r\n        maxlength: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (minlengpoailed(this.minlength, this.getScreenValue())) {\r\n      return {\r\n        minlength: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (patternFailed(this.pattern, c.value)) {\r\n      this.validatePatternOnWriteValue(c.value);\r\n      return {\r\n        pattern: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return this.extraValidation(c);\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  writeValue(value: any) {\r\n    this.writeValueModel(value);\r\n    this.cd?.markForCheck();\r\n  }\r\n\r\n  protected validateModel() {\r\n    if (this.validatorChange) {\r\n      this.validatorChange();\r\n    }\r\n  }\r\n\r\n  // utilizado para validar o pattern na inicializacao, fazendo dessa forma o campo fica sujo (dirty).\r\n  private validatePatternOnWriteValue(value: string) {\r\n    if (value && this.passedWriteValue) {\r\n      setTimeout(() => {\r\n        this.updateModel(value);\r\n      });\r\n\r\n      this.passedWriteValue = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoNomeDoComponenteComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoNomeDoComponenteComponent, { static: true }) nomeDoComponente: PoNomeDoComponenteComponent;\r\n   *\r\n   * focusComponent() {\r\n   *   this.nomeDoComponente.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  abstract focus(): void;\r\n\r\n  // Método que receberá o valor do model\r\n  abstract writeValueModel(value: any): void;\r\n\r\n  // Validações do campo\r\n  abstract extraValidation(c: AbstractControl): { [key: string]: any };\r\n\r\n  // Deve retornar o valor do campo\r\n  abstract getScreenValue(): string;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { minFailed, maxFailed } from '../validators';\r\n\r\nimport { convertToInt } from '../../../utils/util';\r\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\r\n\r\nconst poDecimalDefaultDecimalsLength = 2;\r\nconst poDecimalDefaultThousandMaxlength = 13;\r\nconst poDecimalMaxDecimalsLength = 15;\r\nconst poDecimalTotalLengthLimit = 16;\r\n\r\n/**\r\n *\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n *\r\n * <br>\r\n * - O `po-decimal` é um *input* específico para receber apenas números decimais, por isso recebe as seguintes características:\r\n *  + Aceita apenas números;\r\n *  + Utiliza ',' como separador de decimal;\r\n *  + Utiliza '.' para separação de milhar;\r\n *  + É possível configurar a quantidade de casas decimais e a quantidade de digitos do campo.\r\n *\r\n * > **Importante:**\r\n * Atualmente o JavaScript limita-se a um conjunto de dados de `32 bits`, e para que os valores comportem-se devidamente,\r\n * o `po-decimal` contém um tratamento que limita em 16 o número total de casas antes e após a vírgula.\r\n * Veja abaixo as demais regras nas documentações de `p-decimals-length` e `p-thousand-maxlength`.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-decimal-basic\" title=\"PO Decimal Basic\">\r\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-decimal-basic/sample-po-decimal-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-decimal-labs\" title=\"PO Decimal Labs\">\r\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-decimal-labs/sample-po-decimal-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-decimal-hourly-wage\" title=\"PO Decimal - Hourly Wage\">\r\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.html\"> </file>\r\n *  <file name=\"sample-po-decimal-hourly-wage/sample-po-decimal-hourly-wage.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-decimal-hourly-wage-reactive-form\" title=\"PO Decimal - Hourly Wage Reactive Form\">\r\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-decimal-hourly-wage-reactive-form/sample-po-decimal-hourly-wage-reactive-form.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-decimal',\r\n  templateUrl: './po-decimal.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoDecimalComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoDecimalComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoDecimalComponent extends PoInputBaseComponent implements AfterViewInit, OnInit {\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n\r\n  private _decimalsLength?: number = poDecimalDefaultDecimalsLength;\r\n  private _thousandMaxlength?: number = poDecimalDefaultThousandMaxlength;\r\n  private _locale?: string;\r\n  private _min?: number;\r\n  private _max?: number;\r\n\r\n  private decimalSeparator: string;\r\n  private fireChange: boolean = false;\r\n  private isKeyboardAndroid: boolean = false;\r\n  private minusSign: string = '-';\r\n  private oldDotsLength = null;\r\n  private thousandSeparator: string;\r\n  private valueBeforeChange: any;\r\n\r\n  private regex = {\r\n    thousand: new RegExp('\\\\' + ',', 'g'),\r\n    decimal: new RegExp('\\\\' + '.', 'g')\r\n  };\r\n\r\n  get autocomplete() {\r\n    return this.noAutocomplete ? 'off' : 'on';\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Quantidade máxima de casas decimais.\r\n   *\r\n   * > **Importante:**\r\n   * - O valor máximo permitido é 15;\r\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se à 16;\r\n   * - Esta propriedade sobrepõe apenas o valor **padrão** de `p-thousand-maxlength`;\r\n   * - Caso `p-thousand-maxlength` tenha um valor definido, esta propriedade poderá receber apenas o valor restante do limite total (16).\r\n   *\r\n   * @default `2`\r\n   */\r\n  @Input('p-decimals-length') set decimalsLength(value: number) {\r\n    let decimalsLength = convertToInt(value);\r\n\r\n    decimalsLength = this.isValueBetweenAllowed(decimalsLength, poDecimalMaxDecimalsLength)\r\n      ? decimalsLength\r\n      : poDecimalDefaultDecimalsLength;\r\n\r\n    if (this.isGreaterThanTotalLengthLimit(decimalsLength, this.thousandMaxlength)) {\r\n      this.thousandMaxlength = poDecimalTotalLengthLimit - decimalsLength;\r\n    }\r\n\r\n    this._decimalsLength = decimalsLength;\r\n  }\r\n\r\n  get decimalsLength() {\r\n    return this._decimalsLength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Quantidade máxima de dígitos antes do separador decimal.\r\n   *\r\n   * > **Importante:**\r\n   * - O valor máximo permitido é 13;\r\n   * - A soma total de `p-decimals-length` com `p-thousand-maxlength` limita-se à 16;\r\n   * - Esta propriedade sobrepõe o valor definido em `p-decimals-length`.\r\n   *\r\n   * @default `13`\r\n   */\r\n  @Input('p-thousand-maxlength') set thousandMaxlength(value: number) {\r\n    let thousandMaxlength = convertToInt(value);\r\n\r\n    if (this.decimalsLength > poDecimalDefaultDecimalsLength && !thousandMaxlength) {\r\n      thousandMaxlength = poDecimalTotalLengthLimit - this.decimalsLength;\r\n    }\r\n\r\n    thousandMaxlength = this.isValueBetweenAllowed(thousandMaxlength, poDecimalDefaultThousandMaxlength)\r\n      ? thousandMaxlength\r\n      : poDecimalDefaultThousandMaxlength;\r\n\r\n    if (this.isGreaterThanTotalLengthLimit(this.decimalsLength, thousandMaxlength)) {\r\n      this.decimalsLength = poDecimalTotalLengthLimit - thousandMaxlength;\r\n    }\r\n\r\n    this._thousandMaxlength = thousandMaxlength;\r\n  }\r\n\r\n  get thousandMaxlength() {\r\n    return this._thousandMaxlength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Informa o locale(país) para a formatação do valor.\r\n   * Por padrão o valor será configurado segundo a o módulo [`I18n`](documentation/po-i18n)\r\n   *\r\n   * > Para ver quais linguagens suportadas acesse [`I18n`](documentation/po-i18n)\r\n   *\r\n   */\r\n  @Input('p-locale') set locale(locale: string) {\r\n    this._locale = locale;\r\n    this.setNumbersSeparators();\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor mínimo.\r\n   */\r\n  @Input('p-min') set min(value: number) {\r\n    if (!isNaN(value)) {\r\n      this._min = value;\r\n\r\n      this.validateModel();\r\n    } else if (!value) {\r\n      this._min = undefined;\r\n\r\n      this.validateModel();\r\n    }\r\n  }\r\n\r\n  get min(): number {\r\n    return this._min;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor máximo.\r\n   */\r\n  @Input('p-max') set max(value: number) {\r\n    if (!isNaN(value)) {\r\n      this._max = value;\r\n\r\n      this.validateModel();\r\n    } else if (!value) {\r\n      this._max = undefined;\r\n\r\n      this.validateModel();\r\n    }\r\n  }\r\n\r\n  get max(): number {\r\n    return this._max;\r\n  }\r\n\r\n  constructor(private el: ElementRef, private poLanguageService: PoLanguageService, cd: ChangeDetectorRef) {\r\n    super(cd);\r\n    this.isKeyboardAndroid = !!navigator.userAgent.match(/Android/i);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setNumbersSeparators();\r\n  }\r\n\r\n  setNumbersSeparators() {\r\n    const { decimalSeparator, thousandSeparator } = this.poLanguageService.getNumberSeparators(this._locale);\r\n    this.decimalSeparator = decimalSeparator;\r\n    this.thousandSeparator = thousandSeparator;\r\n    this.regex = {\r\n      thousand: new RegExp('\\\\' + thousandSeparator, 'g'),\r\n      decimal: new RegExp('\\\\' + decimalSeparator, 'g')\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.verifyAutoFocus();\r\n    this.setPaddingInput();\r\n  }\r\n\r\n  clear(value) {\r\n    this.callOnChange(value);\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any } {\r\n    // Verifica se já possui algum error pattern padrão.\r\n    this.errorPattern = this.errorPattern !== 'Valor Inválido' ? this.errorPattern : '';\r\n\r\n    if (minFailed(this.min, abstractControl.value)) {\r\n      return {\r\n        min: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (maxFailed(this.max, abstractControl.value)) {\r\n      return {\r\n        max: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  getScreenValue() {\r\n    return this.inputEl ? this.inputEl.nativeElement.value : '';\r\n  }\r\n\r\n  hasInvalidClass() {\r\n    return (\r\n      this.el.nativeElement.classList.contains('ng-invalid') &&\r\n      this.el.nativeElement.classList.contains('ng-dirty') &&\r\n      this.getScreenValue() !== ''\r\n    );\r\n  }\r\n\r\n  hasLetters(value: string = '') {\r\n    return value.match(/[a-zA-Z:;+=_´`^~\"'?!@#$%¨&*()><{}çÇ\\[\\]/\\\\|]+/);\r\n  }\r\n\r\n  isValidNumber(event: any): boolean {\r\n    // - event.key não existia em alguns browsers, como Samsung browser e Firefox.\r\n    const keyValue = <any>String.fromCharCode(event.which);\r\n    const validKey = event.which !== 8 && event.which !== 0;\r\n\r\n    return !this.hasLetters(keyValue) && validKey;\r\n  }\r\n\r\n  // função responsável por adicionar os zeroes com as casa decimais ao sair do campo.\r\n  onBlur(event: any) {\r\n    this.onTouched?.();\r\n    const value = event.target.value;\r\n\r\n    if (value) {\r\n      if (this.hasLetters(value) || this.containsMoreThanOneDecimalSeparator(value)) {\r\n        this.setViewValue('');\r\n        this.callOnChange(undefined);\r\n        return;\r\n      }\r\n\r\n      const valueWithoutThousandSeparator = this.formatValueWithoutThousandSeparator(value);\r\n      this.setViewValue(this.formatToViewValue(valueWithoutThousandSeparator));\r\n    }\r\n\r\n    this.blur.emit();\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    // Atualiza valor da variável que será usada para verificar se o campo teve alteração\r\n    this.valueBeforeChange = this.getScreenValue();\r\n\r\n    // Dispara evento quando o usuário entrar no campo\r\n    // Este evento também é disparado quando o campo inicia com foco.\r\n    this.enter.emit();\r\n  }\r\n\r\n  onInput(event: any) {\r\n    const selectionStart = event.target.selectionStart;\r\n    const selectionEnd = event.target.selectionEnd;\r\n\r\n    let modelValue;\r\n\r\n    // - Browsers nativos do Android ex: Samsung Browser.\r\n    if (this.isKeyboardAndroid) {\r\n      this.onInputKeyboardAndroid(event);\r\n    }\r\n\r\n    modelValue = this.formatValueWithoutThousandSeparator(event.target.value);\r\n    modelValue = this.addZeroBefore(modelValue);\r\n    const viewValue = this.formatMask(modelValue);\r\n\r\n    // validação para não quebrar IE com placeholder definido e Input vazio\r\n    if (viewValue) {\r\n      this.setViewValue(viewValue);\r\n      this.setCursorInput(event, selectionStart, selectionEnd);\r\n    }\r\n\r\n    this.callOnChange(this.formatToModelValue(modelValue));\r\n  }\r\n\r\n  onInputKeyboardAndroid(event: any) {\r\n    const inputValue = event.target.value;\r\n    const selectionStart = event.target.selectionStart;\r\n    const hasLetters = this.hasLetters(inputValue);\r\n\r\n    if (hasLetters) {\r\n      this.setViewValue(inputValue.replace(hasLetters[0], ''));\r\n\r\n      return event.preventDefault();\r\n    } else {\r\n      const position = selectionStart - 1;\r\n      const key = inputValue.charAt(position);\r\n\r\n      this.setPositionValue(event);\r\n\r\n      if (this.isValidKey(event, key)) {\r\n        this.setViewValue(inputValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyPress(event: KeyboardEvent) {\r\n    this.isValidKey(event);\r\n  }\r\n\r\n  setPaddingInput() {\r\n    setTimeout(() => {\r\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\r\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\r\n      if (this.clean) {\r\n        icons++;\r\n      }\r\n      if (icons) {\r\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\r\n      }\r\n    });\r\n  }\r\n\r\n  writeValueModel(value) {\r\n    if (this.inputEl) {\r\n      if (value || value === 0) {\r\n        const formatedViewValue = this.formatToViewValue(value);\r\n        this.setViewValue(formatedViewValue);\r\n      } else {\r\n        this.setViewValue('');\r\n      }\r\n    }\r\n\r\n    if (value) {\r\n      this.change.emit(value);\r\n    }\r\n  }\r\n\r\n  getErrorPatternMessage() {\r\n    return this.errorPattern !== '' && this.hasInvalidClass() ? this.errorPattern : '';\r\n  }\r\n\r\n  // responsável por adicionar 0 antes da virgula (decimalSeparator).\r\n  private addZeroBefore(value) {\r\n    const isDecimalSeparator = value === this.decimalSeparator;\r\n\r\n    return isDecimalSeparator ? `0${value}` : value;\r\n  }\r\n\r\n  private containsComma(value) {\r\n    return value.includes(this.decimalSeparator);\r\n  }\r\n\r\n  private containsMoreThanOneDecimalSeparator(value: string = '') {\r\n    const foundComma = value.match(this.regex.decimal);\r\n\r\n    return !!(foundComma && foundComma.length > 1);\r\n  }\r\n\r\n  private controlChangeEmitter() {\r\n    const elementValue = this.getScreenValue();\r\n\r\n    // Emite o evento change manualmente quando o campo é alterado\r\n    // Este evento é controlado manualmente devido ao preventDefault existente na máscara\r\n    // e devido ao controle do p-clean, que também precisa emitir change\r\n    if (elementValue !== this.valueBeforeChange) {\r\n      this.fireChange = true;\r\n      setTimeout(() => {\r\n        this.change.emit(elementValue);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  private formatMask(value: string) {\r\n    // necessário para não adicionar . nas casa decimais.\r\n    // por exemplo: 12.345,123.45 (errado)\r\n    // 12.345,12345 (correto)\r\n\r\n    if (value.match(this.regex.decimal)) {\r\n      const regex = new RegExp(`(\\\\d)(?=(\\\\d{3})+(?!\\\\d)${this.decimalSeparator})`, 'g');\r\n      return value.toString().replace(regex, `$1${this.thousandSeparator}`);\r\n    }\r\n\r\n    return value.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${this.thousandSeparator}`);\r\n  }\r\n\r\n  private formatToModelValue(value: string) {\r\n    const formattedValue = this.replaceCommaToDot(value);\r\n    const parsedValue = formattedValue ? parseFloat(Number(formattedValue).toFixed(this.decimalsLength)) : undefined;\r\n\r\n    return parsedValue === 0 || parsedValue ? parsedValue : undefined;\r\n  }\r\n\r\n  private formatToViewValue(value: string) {\r\n    // - Necessário para tratar valores que contenham decimalSeparator\r\n    value = this.replaceCommaToDot(value);\r\n\r\n    const numberValue = Number(value).toFixed(this.decimalsLength);\r\n\r\n    const valueBeforeDot = this.getValueBeforeSeparator(numberValue, '.');\r\n    const valueAfterDot = this.getValueAfterSeparator(numberValue, '.');\r\n\r\n    const formatedNumber = this.formatMask(valueBeforeDot);\r\n\r\n    if (this.decimalsLength === 0) {\r\n      return formatedNumber;\r\n    } else {\r\n      return `${formatedNumber}${this.decimalSeparator}${valueAfterDot}`;\r\n    }\r\n  }\r\n\r\n  private formatValueWithoutThousandSeparator(value: string = '') {\r\n    return value.toString().replace(this.regex.thousand, '');\r\n  }\r\n\r\n  private getValueAfterSeparator(value = '', separator) {\r\n    return value.split(separator)[1] || '';\r\n  }\r\n\r\n  private getValueBeforeSeparator(value = '', separator) {\r\n    return value.split(separator)[0] || '';\r\n  }\r\n\r\n  private hasLessDot(value) {\r\n    if (value) {\r\n      const dots = value.match(this.regex.thousand);\r\n      const dotsLength = dots && dots.length;\r\n\r\n      if (dotsLength < this.oldDotsLength) {\r\n        this.oldDotsLength = dotsLength;\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (!value) {\r\n      this.oldDotsLength = null;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private hasMoreDot(value) {\r\n    if (value) {\r\n      const dots = value.match(this.regex.thousand);\r\n      const dotsLength = dots && dots.length;\r\n\r\n      if (dotsLength > this.oldDotsLength) {\r\n        this.oldDotsLength = dotsLength;\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (!value) {\r\n      this.oldDotsLength = null;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private hasMinusSignInvalidPosition(event: any): boolean {\r\n    const keyIsMinusSign = event.key === this.minusSign;\r\n    const selectionStart = event.target.selectionStart;\r\n\r\n    return keyIsMinusSign && selectionStart !== 0;\r\n  }\r\n\r\n  private isInvalidKey(event: any, charCode: any) {\r\n    const isInvalidNumber = !this.isValidNumber(event);\r\n\r\n    return (\r\n      this.verifyInsertComma(event) ||\r\n      this.verifyThousandLength(event) ||\r\n      this.verifyValueAfterComma(event) ||\r\n      this.verifyInsertMinusSign(event) ||\r\n      this.hasMinusSignInvalidPosition(event) ||\r\n      isInvalidNumber ||\r\n      this.validateCursorPositionBeforeSeparator(event) ||\r\n      this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode)\r\n    );\r\n  }\r\n\r\n  private isGreaterThanTotalLengthLimit(decimalsMaxLength: number, thousandMaxlength: number) {\r\n    return decimalsMaxLength + thousandMaxlength > poDecimalTotalLengthLimit;\r\n  }\r\n\r\n  private isKeyDecimalSeparator(event) {\r\n    return event.key === this.decimalSeparator || event.char === this.decimalSeparator;\r\n  }\r\n\r\n  private isPositionAfterDecimalSeparator(positionCursor, value) {\r\n    const indexComma = value && value.indexOf(this.decimalSeparator);\r\n\r\n    if (indexComma && this.decimalsLength > 0) {\r\n      return positionCursor > indexComma;\r\n    }\r\n  }\r\n\r\n  private isSelectionStartDifferentSelectionEnd(target: any) {\r\n    return target.selectionStart !== target.selectionEnd;\r\n  }\r\n\r\n  private isValidKey(event: any, key?: string) {\r\n    const charCode = event.which || event.keyCode;\r\n    const validKey = event.which === 8 || event.which === 0;\r\n\r\n    if (validKey && !this.isKeyboardAndroid) {\r\n      return;\r\n    }\r\n\r\n    if (key) {\r\n      event.key = key;\r\n    }\r\n\r\n    if (this.isInvalidKey(event, charCode)) {\r\n      event.preventDefault();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private isValueBetweenAllowed(value: number, maxAllowed: number) {\r\n    return value >= 0 && value <= maxAllowed;\r\n  }\r\n\r\n  // Quando decimalsLength for 0 não deve permitir informar vírgula (decimalSeparator)\r\n  private verifyDecimalLengthIsZeroAndKeyPressedIsComma(charCode: number) {\r\n    return charCode === 44 && this.decimalsLength === 0;\r\n  }\r\n\r\n  private verifyAutoFocus() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  private setInitialSelectionRange(target: any, selectionStart, selectionEnd) {\r\n    if (selectionStart === 1 && selectionEnd === 1) {\r\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\r\n    }\r\n    return target.setSelectionRange(selectionStart - 1, selectionEnd - 1);\r\n  }\r\n\r\n  private replaceAt(value, index, replace) {\r\n    return value.substring(0, index) + replace + value.substring(index + 1);\r\n  }\r\n\r\n  private replaceCommaToDot(value: string = '') {\r\n    if (this.decimalSeparator === ',') {\r\n      value = value.toString().replace(this.regex.decimal, '.');\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  private setCursorInput(event, selectionStart, selectionEnd) {\r\n    const target = event.target;\r\n    const viewValue = target.value;\r\n\r\n    // Caso houver mais . do que anteriormente soma o valor com 1.\r\n    if (this.hasMoreDot(viewValue) || viewValue === '0' + this.decimalSeparator) {\r\n      return target.setSelectionRange(selectionStart + 1, selectionEnd + 1);\r\n    }\r\n\r\n    // Caso houver menos . do que anteriormente subtrai o valor por 1.\r\n    if (this.hasLessDot(viewValue)) {\r\n      this.setInitialSelectionRange(target, selectionStart, selectionEnd);\r\n    }\r\n    return target.setSelectionRange(selectionStart, selectionEnd);\r\n  }\r\n\r\n  private setPositionValue(event: any) {\r\n    const value = event.target.value;\r\n    const position = event.target.selectionStart - 1;\r\n\r\n    if (position > 0 && event.key === this.minusSign) {\r\n      event.target.value = value.substring(0, position) + value.substr(position + 1);\r\n    }\r\n  }\r\n\r\n  private setViewValue(value: string) {\r\n    this.inputEl.nativeElement.value = value;\r\n  }\r\n\r\n  private validateCursorPositionBeforeSeparator(event: any): boolean {\r\n    const target = event.target;\r\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\r\n    const valueBeforeSeparator = this.getValueBeforeSeparator(target.value, this.decimalSeparator);\r\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\r\n\r\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\r\n      return false;\r\n    }\r\n    return (\r\n      target.selectionStart <= valueBeforeSeparator.length &&\r\n      valueBeforeSeparatorOriginal.length === this.thousandMaxlength &&\r\n      !this.isKeyDecimalSeparator(event)\r\n    );\r\n  }\r\n\r\n  private verifyThousandLength(event: any): boolean {\r\n    const target = event.target;\r\n    const originalValue = this.formatValueWithoutThousandSeparator(target.value);\r\n    const valueBeforeSeparatorOriginal = this.getValueBeforeSeparator(originalValue, this.decimalSeparator);\r\n\r\n    if (this.isSelectionStartDifferentSelectionEnd(target)) {\r\n      return false;\r\n    }\r\n    return (\r\n      valueBeforeSeparatorOriginal.length >= this.thousandMaxlength &&\r\n      !this.isKeyDecimalSeparator(event) &&\r\n      this.isPositionAfterDecimalSeparator(target.selectionStart - this.decimalsLength, target.value)\r\n    );\r\n  }\r\n\r\n  private verifyInsertComma(e: any): boolean {\r\n    const hasComma = this.containsComma(e.target.value);\r\n\r\n    return hasComma && e.key === this.decimalSeparator;\r\n  }\r\n\r\n  private verifyInsertMinusSign(event: any): boolean {\r\n    const value = event.target.value;\r\n    const indexMinusSign = value.lastIndexOf(this.minusSign) !== -1;\r\n    const positionMinusSign = value.lastIndexOf('-');\r\n    const occurancesMinusSign = value.match(new RegExp('-', 'g'));\r\n\r\n    if (this.isKeyboardAndroid && indexMinusSign && occurancesMinusSign.length > 1) {\r\n      event.target.value = this.replaceAt(value, positionMinusSign, '');\r\n    }\r\n    return indexMinusSign && event.key === this.minusSign;\r\n  }\r\n\r\n  private verifyValueAfterComma(event: any): boolean {\r\n    const value = event.target.value;\r\n    const selectionStart = event.target.selectionStart;\r\n    const valueAfterSeparator = this.getValueAfterSeparator(value, this.decimalSeparator);\r\n\r\n    return (\r\n      this.isPositionAfterDecimalSeparator(selectionStart, value) && valueAfterSeparator.length >= this.decimalsLength\r\n    );\r\n  }\r\n}\r\n","import { AfterViewInit, ElementRef, HostListener, ViewChild, Directive, ChangeDetectorRef } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\nimport { PoInputBaseComponent } from '../po-input/po-input-base.component';\r\n\r\n/* eslint-disable @angular-eslint/directive-class-suffix */\r\n@Directive()\r\nexport abstract class PoInputGeneric extends PoInputBaseComponent implements AfterViewInit {\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n\r\n  type = 'text';\r\n\r\n  el: ElementRef;\r\n  valueBeforeChange: any;\r\n  timeoutChange: any;\r\n\r\n  get autocomplete(): string {\r\n    return this.noAutocomplete ? 'off' : 'on';\r\n  }\r\n\r\n  constructor(el: ElementRef, cd?: ChangeDetectorRef) {\r\n    super(cd);\r\n\r\n    this.el = el;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event']) onKeydown(e: any) {\r\n    if (this.mask && !this.readonly && e.target.keyCode !== 229) {\r\n      this.eventOnBlur(e);\r\n      this.objMask.keydown(e);\r\n    }\r\n  }\r\n\r\n  @HostListener('keyup', ['$event']) onKeyup(e: any) {\r\n    if (this.mask && !this.readonly) {\r\n      if (e.target.keyCode !== 229) {\r\n        this.eventOnBlur(e);\r\n        this.objMask.keyup(e);\r\n      }\r\n      this.callOnChange(this.objMask.valueToModel);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.afterViewInit();\r\n  }\r\n\r\n  afterViewInit() {\r\n    this.verifyAutoFocus();\r\n    if (this.type !== 'password') {\r\n      this.setPaddingInput();\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  setPaddingInput() {\r\n    setTimeout(() => {\r\n      const selectorIcons = '.po-field-icon-container:not(.po-field-icon-container-left) > .po-icon';\r\n      let icons = this.el.nativeElement.querySelectorAll(selectorIcons).length;\r\n      if (this.clean) {\r\n        icons++;\r\n      }\r\n      if (icons) {\r\n        this.inputEl.nativeElement.style.paddingRight = `${icons * 36}px`;\r\n      }\r\n    });\r\n  }\r\n\r\n  verifyAutoFocus() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  eventOnInput(e: any) {\r\n    let value = '';\r\n    if (!this.mask) {\r\n      value = this.validMaxLength(this.maxlength, e.target.value);\r\n      this.inputEl.nativeElement.value = value;\r\n    } else {\r\n      this.objMask.blur(e);\r\n      this.inputEl.nativeElement.value = this.objMask.valueToInput;\r\n      value = this.objMask.valueToModel;\r\n    }\r\n    this.callOnChange(value);\r\n  }\r\n\r\n  validMaxLength(maxlength: number, value: string) {\r\n    return (maxlength || maxlength === 0) && value.length > maxlength\r\n      ? value.toString().substring(0, maxlength)\r\n      : value;\r\n  }\r\n\r\n  eventOnFocus(e: any) {\r\n    // Atualiza valor da variável que será usada para verificar se o campo teve alteração\r\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\r\n\r\n    // Dispara evento quando o usuário entrar no campo\r\n    // Este evento também é disparado quando o campo inicia com foco.\r\n    this.enter.emit();\r\n  }\r\n\r\n  eventOnBlur(e: any) {\r\n    this.onTouched?.();\r\n    if (this.mask) {\r\n      this.objMask.blur(e);\r\n    }\r\n\r\n    if (e.type === 'blur') {\r\n      this.blur.emit();\r\n      this.controlChangeEmitter();\r\n    }\r\n  }\r\n\r\n  controlChangeEmitter() {\r\n    const elementValue = this.inputEl.nativeElement.value;\r\n\r\n    // Emite o evento change manualmente quando o campo é alterado\r\n    // Este evento é controlado manualmente devido ao preventDefault existente na máscara\r\n    // e devido ao controle do p-clean, que também precisa emitir change\r\n    if (elementValue !== this.valueBeforeChange) {\r\n      clearTimeout(this.timeoutChange);\r\n      this.timeoutChange = setTimeout(() => {\r\n        this.change.emit(elementValue);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  eventOnClick(e: any) {\r\n    // Atualiza a posição do cursor ao clicar\r\n    if (this.mask) {\r\n      this.objMask.click(e);\r\n    }\r\n  }\r\n\r\n  hasInvalidClass() {\r\n    return (\r\n      this.el.nativeElement.classList.contains('ng-invalid') &&\r\n      this.el.nativeElement.classList.contains('ng-dirty') &&\r\n      this.inputEl.nativeElement.value !== ''\r\n    );\r\n  }\r\n\r\n  getErrorPattern() {\r\n    return this.errorPattern !== '' && this.hasInvalidClass() ? this.errorPattern : '';\r\n  }\r\n\r\n  validateClassesForPattern() {\r\n    const value = this.getScreenValue();\r\n    const element = this.el.nativeElement;\r\n\r\n    if (value && !this.verifyPattern(this.pattern, value)) {\r\n      element.classList.add('ng-invalid');\r\n      element.classList.add('ng-dirty');\r\n    } else {\r\n      element.classList.remove('ng-invalid');\r\n    }\r\n  }\r\n\r\n  verifyPattern(pattern: string, value: any) {\r\n    return new RegExp(pattern).test(value);\r\n  }\r\n\r\n  clear(value) {\r\n    this.callOnChange(value);\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  writeValueModel(value) {\r\n    this.passedWriteValue = true;\r\n    if (this.inputEl) {\r\n      if (value) {\r\n        if (this.mask) {\r\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\r\n\r\n          // Se o model for definido como formatado, então precisa atualizá-lo no primeiro acesso\r\n          if (this.objMask.formatModel) {\r\n            this.callUpdateModelWithTimeout(this.objMask.valueToModel);\r\n          }\r\n        } else {\r\n          this.inputEl.nativeElement.value = value;\r\n        }\r\n      } else {\r\n        // Se o valor for indefinido, deve limpar o campo.\r\n        this.inputEl.nativeElement.value = '';\r\n      }\r\n    }\r\n\r\n    // Emite evento quando o model é atualizado, inclusive a primeira vez\r\n    if (value) {\r\n      this.changeModel.emit(value);\r\n    }\r\n  }\r\n\r\n  getScreenValue() {\r\n    const screenValue = (this.inputEl && this.inputEl.nativeElement.value) || undefined;\r\n\r\n    if (this.type === 'number') {\r\n      const parsedValue = parseFloat(screenValue);\r\n      return parsedValue || parsedValue === 0 ? parsedValue : null;\r\n    } else {\r\n      return screenValue;\r\n    }\r\n  }\r\n\r\n  abstract extraValidation(c: AbstractControl): { [key: string]: any };\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoEmailComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoEmailComponent),\r\n    multi: true\r\n  }\r\n];\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n *\r\n * po-email é um input específico para receber E-mail, com o pattern já configurado.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-email-basic\" title=\"PO Email Basic\">\r\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-email-basic/sample-po-email-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-email-labs\" title=\"PO Email Labs\">\r\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-email-labs/sample-po-email-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-email-newsletter\" title=\"PO Email - Newsletter\">\r\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.html\"> </file>\r\n *  <file name=\"sample-po-email-newsletter/sample-po-email-newsletter.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-email',\r\n  templateUrl: '../po-input/po-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers\r\n})\r\nexport class PoEmailComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\r\n  icon = 'po-icon-mail';\r\n\r\n  type = 'email';\r\n\r\n  // Consideramos o uso do nosso pattern com a seguinte expressão.\r\n  // Antes do símbolo @:\r\n  // - não há limite de caracteres.\r\n  // - não pode haver espaços em branco, caracteres acentuados, caracteres especiais ou símbolos.\r\n  // - pode começar com letras, números, hífen ou undescore (underline).\r\n  //\r\n  // Depois do símbolo @:\r\n  // - o domínio tem um limite de até 66 caracteres após um separador.\r\n  // - separador deve ser um 'ponto' (.).\r\n  // - o primeiro bloco pode conter letras, números, hífen ou underscore (underline).\r\n  // - após o primeiro separador é permitido apenas letras.\r\n  // - não pode haver espaços em branco, caracteres acentuados, caracteres especiais ou símbolos.\r\n  //\r\n  // Limite total de 254 caracteres para o e-mail.\r\n  //\r\n  // As recomendações foram consultadas nas RFC 1034, RFC 5321 e RFC 5322.\r\n  //\r\n  // RFC 1034 - https://datatracker.ietf.org/doc/html/rfc1034#section-3\r\n  // RFC 5321 - https://datatracker.ietf.org/doc/html/rfc5321#section-4.5.3.1\r\n  // RFC 5322 - https://datatracker.ietf.org/doc/html/rfc5322#section-3.4\r\n  pattern = '^([\\\\w-]+(?:\\\\.[\\\\w-]+)*)@((?:[\\\\w-]+\\\\.)*\\\\w[\\\\w-]{0,66})\\\\.([A-Za-z]{2,66}(?:\\\\.[A-Za-z]{2})?)$';\r\n\r\n  mask = '';\r\n\r\n  private listener = this.validateClassesForPattern.bind(this);\r\n\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n    this.maxlength = 254;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      // Se não tem ngModel ou reactive form adiciona validação com classes css\r\n      if (!this.onChangePropagate) {\r\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\r\n      }\r\n    });\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this.onChangePropagate) {\r\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\r\n    }\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoLoginComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoLoginComponent),\r\n    multi: true\r\n  }\r\n];\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n * O po-login é um input específico para login. Já possui tipo, estilo e ícone predefinidos.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-login-basic\" title=\"PO Login Basic\">\r\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-login-basic/sample-po-login-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-login-labs\" title=\"PO Login Labs\">\r\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-login-labs/sample-po-login-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-login-confirm\" title=\"PO Login - Confirm Identity\">\r\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.html\"> </file>\r\n *  <file name=\"sample-po-login-confirm/sample-po-login-confirm.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-login',\r\n  templateUrl: './po-login.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers\r\n})\r\nexport class PoLoginComponent extends PoInputGeneric {\r\n  type = 'text';\r\n\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { isTypeof } from '../../../../utils/util';\r\n\r\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\r\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço padrão utilizado para filtrar os dados do componente po-lookup.\r\n */\r\n@Injectable()\r\nexport class PoLookupFilterService implements PoLookupFilter {\r\n  readonly headers: HttpHeaders = new HttpHeaders({\r\n    'X-PO-No-Message': 'true'\r\n  });\r\n\r\n  private url: string;\r\n  private fieldValue;\r\n  private multiple = false;\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getFilteredItems(filteredItemsParams: PoLookupFilteredItemsParams): Observable<any> {\r\n    const { filterParams, advancedFilters, ...restFilteredItemsParams } = filteredItemsParams;\r\n\r\n    const validatedFilterParams = this.validateParams(filterParams);\r\n    const validatedAdvancedFilters = this.validateParams(advancedFilters);\r\n\r\n    const params = { ...restFilteredItemsParams, ...validatedFilterParams, ...validatedAdvancedFilters };\r\n\r\n    return this.httpClient.get(this.url, { headers: this.headers, params });\r\n  }\r\n\r\n  getObjectByValue(value: any, filterParams?: any): Observable<Array<any> | { [key: string]: any }> {\r\n    const validatedFilterParams = this.validateParams(filterParams);\r\n\r\n    let newURL;\r\n    let encodedValue;\r\n\r\n    if (this.multiple) {\r\n      encodedValue = encodeURIComponent(Array.isArray(value) ? value.join(',') : value);\r\n      newURL = `${this.url}?${this.fieldValue}=${encodedValue}`;\r\n    } else {\r\n      encodedValue = encodeURIComponent(value);\r\n      newURL = `${this.url}/${encodedValue}`;\r\n    }\r\n\r\n    return this.httpClient\r\n      .get(newURL, { headers: this.headers, params: validatedFilterParams })\r\n      .pipe(map((response: any) => ('items' in response ? response.items : response)));\r\n  }\r\n\r\n  setConfig(url: string, fieldValue: string, multiple: boolean) {\r\n    this.url = url;\r\n    this.fieldValue = fieldValue;\r\n    this.multiple = multiple;\r\n  }\r\n\r\n  private validateParams(params: any) {\r\n    return isTypeof(params, 'object') && !Array.isArray(params) ? params : undefined;\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectFlags,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormControl, NgControl, Validator } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { convertToBoolean, isTypeof } from '../../../utils/util';\r\nimport { requiredFailed } from '../validators';\r\nimport { PoLookupAdvancedFilter } from './interfaces/po-lookup-advanced-filter.interface';\r\nimport { PoLookupColumn } from './interfaces/po-lookup-column.interface';\r\nimport { PoLookupFilter } from './interfaces/po-lookup-filter.interface';\r\nimport { PoLookupLiterals } from './interfaces/po-lookup-literals.interface';\r\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente utilizado para abrir uma janela de busca com uma tabela que lista dados de um serviço. Nesta janela é possível buscar e\r\n * selecionar um ou mais registros que serão enviados para o campo. O `po-lookup` permite que o usuário digite um valor e pressione a tecla *TAB* para\r\n * buscar um registro.\r\n *\r\n * > Caso o campo seja iniciado ou preenchido com um valor inexistente na busca, o mesmo será limpado.\r\n * No segundo caso ocorrerá após este perder o foco; ambos os casos o campo ficará inválido quando requerido.\r\n *\r\n * > Enquanto o componente realiza a requisição ao servidor, o componente ficará desabilitado e com o status interno do\r\n * [modelo](https://angular.io/guide/form-validation#creating-asynchronous-validators) como `pending`.\r\n *\r\n * Este componente não é recomendado quando a busca dos dados possuir poucas informações, para isso utilize outros componentes como o\r\n * `po-select` ou o `po-combo`.\r\n */\r\n@Directive()\r\nexport abstract class PoLookupBaseComponent\r\n  implements ControlValueAccessor, OnDestroy, OnInit, Validator, AfterViewInit, OnChanges {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * Label do campo.\r\n   *\r\n   * > Quando utilizar esta propriedade o seu valor será utilizado como título da modal do componente caso não tenha\r\n   * sido definido um `modalTitle` na propriedade `p-literals`.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-lookup`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoLookupLiterals = {\r\n   *    modalPrimaryActionLabel: 'Select',\r\n   *    modalSecondaryActionLabel: 'Cancel',\r\n   *    modalPlaceholder: 'Search Value',\r\n   *    modalTableNoColumns: 'No columns',\r\n   *    modalTableNoData: 'No data',\r\n   *    modalTableLoadingData: 'Loading data',\r\n   *    modalTableLoadMoreData: 'Load more',\r\n   *    modalTitle: 'Select a user',\r\n   *    modalAdvancedSearch: 'Advanced search',\r\n   *    modalAdvancedSearchTitle: 'Advanced search',\r\n   *    modalAdvancedSearchPrimaryActionLabel: 'Filter',\r\n   *    modalAdvancedSearchSecondaryActionLabel: 'Return',\r\n   *    modalDisclaimerGroupTitle: 'Presenting results filtered by:'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoLookupLiterals = {\r\n   *    modalPrimaryActionLabel: 'Select'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-lookup\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-lookup>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') literals?: PoLookupLiterals;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** Mensagem que aparecerá enquanto o campo não estiver preenchido. */\r\n  @Input('p-placeholder') set placeholder(value: string) {\r\n    this._placeholder = value || '';\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /** Nome e Id do componente. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica a coluna que será utilizada como valor do campo.\r\n   *\r\n   * > Atenção: Caso não seja passada ou tenha o conteúdo incorreto, não irá atualizar o model do formulário.\r\n   */\r\n  @Input('p-field-value') fieldValue: string;\r\n\r\n  /** Indica a coluna que será utilizada como descrição do campo e como filtro dentro da janela. */\r\n  @Input('p-field-label') set fieldLabel(value: string) {\r\n    this._fieldLabel = value;\r\n    this.keysDescription = [this.fieldLabel];\r\n  }\r\n\r\n  get fieldLabel() {\r\n    return this._fieldLabel;\r\n  }\r\n\r\n  /** Valor que será repassado como parâmetro para a URL ou aos métodos do serviço que implementam a interface `PoLookupFilter`. */\r\n  @Input('p-filter-params') filterParams?: any;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Formato de exibição do campo.\r\n   *\r\n   * Recebe uma função que deve retornar uma *string* com o/os valores do objeto formatados para exibição, por exemplo:\r\n   *\r\n   * ```\r\n   * fieldFormat(obj) {\r\n   *   return `${obj.id} - ${obj.name}`;\r\n   * }\r\n   * ```\r\n   * > Esta propriedade sobrepõe o valor da propriedade `p-field-label` na descrição do campo.\r\n   *\r\n   * Pode-se informar uma lista de propriedades que deseja exibir como descrição do campo, Por exemplo:\r\n   * ```\r\n   * <po-lookup\r\n   *  ...\r\n   *  [p-field-format]=\"['id','nickname']\"\r\n   *  ...\r\n   * >\r\n   *\r\n   * Objeto retornado:\r\n   *   {\r\n   *      id:123,\r\n   *      name: 'Kakaroto',\r\n   *      nickname: 'Goku',\r\n   *   }\r\n   * Apresentação no campo: 123 - Goku\r\n   * ```\r\n   *\r\n   * > Será utilizado ` - ` como separador.\r\n   */\r\n  @Input('p-field-format') fieldFormat?: ((value) => string) | Array<string>;\r\n\r\n  /**\r\n   * Lista das colunas da tabela.\r\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\r\n   */\r\n  @Input('p-columns') columns?: Array<PoLookupColumn>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de objetos dos campos que serão criados na busca avançada.\r\n   *\r\n   * > Caso não seja passado um objeto ou então ele esteja em branco o link de busca avançada ficará escondido.\r\n   *\r\n   * Exemplo de URL com busca avançada:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=20&name=Tony%20Stark&nickname=Homem%20de%20Ferro\r\n   * ```\r\n   *\r\n   * Caso algum parâmetro seja uma lista, a concatenação é feita utilizando vírgula.\r\n   * Exemplo:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=20&name=Tony%20Stark,Peter%20Parker,Gohan\r\n   * ```\r\n   *\r\n   */\r\n  @Input('p-advanced-filters') advancedFilters: Array<PoLookupAdvancedFilter>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ativa a funcionalidade de scroll infinito para a tabela exibida no retorno da consulta.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-infinite-scroll') @InputBoolean() infiniteScroll: boolean = false;\r\n\r\n  /** Exibe um ícone que permite limpar o campo. */\r\n  @Input('p-clean') @InputBoolean() clean: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a seleção de múltiplos itens.\r\n   *\r\n   * > Quando habilitado o valor do campo passará a ser uma lista de valores, por exemplo: `[ 12345, 67890 ]`\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-multiple') @InputBoolean() multiple: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define que a altura do componente será auto ajustável, possuindo uma altura minima porém a altura máxima será de acordo\r\n   * com o número de itens selecionados e a extensão dos mesmos, mantendo-os sempre visíveis.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-height') @InputBoolean() autoHeight: boolean = false;\r\n\r\n  /**\r\n   * Evento será disparado quando ocorrer algum erro na requisição de busca do item.\r\n   * Será passado por parâmetro o objeto de erro retornado.\r\n   */\r\n  @Output('p-error') onError: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento será disparado quando ocorrer alguma seleção.\r\n   * Será passado por parâmetro o objeto com o valor selecionado.\r\n   */\r\n  @Output('p-selected') selected: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   *  Evento que será disparado ao alterar o model.\r\n   *  Por parâmetro será passado o novo valor.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  service: any;\r\n\r\n  protected selectedOptions = [];\r\n  protected getSubscription: Subscription;\r\n  protected keysDescription: Array<any>;\r\n  protected oldValue: string = '';\r\n  protected valueToModel;\r\n  protected oldValueToModel = null;\r\n  // eslint-disable-next-line\r\n  protected onTouched: any = null;\r\n  protected resizeListener: () => void;\r\n\r\n  private _disabled?: boolean = false;\r\n  private _fieldLabel: string;\r\n  private _filterService: PoLookupFilter | string;\r\n  private _noAutocomplete: boolean;\r\n  private _placeholder: string = '';\r\n  private _required?: boolean = false;\r\n  private _autoHeight: boolean = false;\r\n\r\n  private autoHeightInitialValue: boolean;\r\n  private onChangePropagate: any = null;\r\n  private validatorChange: any;\r\n\r\n  private control!: AbstractControl;\r\n\r\n  /**\r\n   * Serviço responsável por buscar os dados da tabela na janela. Pode ser informado um serviço que implemente a interface\r\n   * `PoLookupFilter` ou uma URL.\r\n   *\r\n   * Quando utilizada uma URL de um serviço, será concatenada nesta URL o valor que deseja-se filtrar, por exemplo:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=20&filter=Peter\r\n   * ```\r\n   *\r\n   * Caso utilizar ordenação, a coluna ordenada será enviada através do parâmetro `order`, por exemplo:\r\n   * - Coluna decrescente:\r\n   * ```\r\n   *  url + ?page=1&pageSize=20&filter=Peter&order=-name\r\n   * ```\r\n   *\r\n   * - Coluna ascendente:\r\n   * ```\r\n   *  url + ?page=1&pageSize=20&filter=Peter&order=name\r\n   * ```\r\n   *\r\n   * Se for definido a propriedade `p-filter-params`, o mesmo também será concatenado. Por exemplo, para o\r\n   * parâmetro `{ age: 23 }` a URL ficaria:\r\n   *\r\n   * ```\r\n   * url + ?page=1&pageSize=20&age=23&filter=Peter\r\n   * ```\r\n   *\r\n   * Ao iniciar o campo com valor, os registros serão buscados da seguinte forma:\r\n   * ```\r\n   * model = 1234;\r\n   *\r\n   * GET url/1234\r\n   * ```\r\n   *\r\n   * Caso estiver com múltipla seleção habilitada:\r\n   * ```\r\n   * model = [1234, 5678]\r\n   *\r\n   * GET url?${fieldValue}=1234,5678\r\n   * ```\r\n   *\r\n   * > Esta URL deve retornar e receber os dados no padrão de [API do PO UI](https://po-ui.io/guides/api) e utiliza os valores\r\n   * definidos nas propriedades `p-field-label` e `p-field-value` para a construção do `po-lookup`.\r\n   *\r\n   * Caso o usuário digite um valor e pressione a tecla *TAB* para realizar a busca de um registro específico, o valor que se\r\n   * deseja filtrar será codificado utilizando a função [encodeURIComponent](https://tc39.es/ecma262/#sec-encodeuricomponent-uricomponent)\r\n   * e concatenado na URL da seguinte forma:\r\n   *\r\n   * ```\r\n   * url/valor%20que%20se%20deseja%20filtrar\r\n   * ```\r\n   *\r\n   * > Quando informado um serviço que implemente a interface `PoLookupFilter` o tratamento de encoding do valor a ser filtrado ficará a cargo do desenvolvedor.\r\n   *\r\n   */\r\n  @Input('p-filter-service') set filterService(filterService: PoLookupFilter | string) {\r\n    this._filterService = filterService;\r\n    this.setService(this.filterService);\r\n  }\r\n\r\n  get filterService() {\r\n    return this._filterService;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a propriedade nativa `autocomplete` do campo como `off`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-no-autocomplete') set noAutocomplete(value: boolean) {\r\n    this._noAutocomplete = convertToBoolean(value);\r\n  }\r\n\r\n  get noAutocomplete() {\r\n    return this._noAutocomplete;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório. Esta propriedade é desconsiderada quando o campo está desabilitado (p-disabled).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.valueToModel);\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica que o campo será desabilitado.\r\n   *\r\n   * @default false\r\n   * @optional\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  constructor(private defaultService: PoLookupFilterService, @Inject(Injector) private injector: Injector) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this.getSubscription) {\r\n      this.getSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeColumn();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setControl();\r\n  }\r\n\r\n  cleanModel() {\r\n    this.cleanViewValue();\r\n    this.callOnChange(undefined);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.multiple && isTypeof(this.filterService, 'string')) {\r\n      this.service.setConfig(this.filterService, this.fieldValue, this.multiple);\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor.\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model.\r\n  registerOnChange(func: any): void {\r\n    this.onChangePropagate = func;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor.\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model.\r\n  registerOnTouched(func: any): void {\r\n    this.onTouched = func;\r\n  }\r\n\r\n  // Seleciona o valor do model.\r\n  selectValue(valueSelected: any) {\r\n    this.valueToModel = valueSelected;\r\n    this.callOnChange(this.valueToModel);\r\n    this.selected.emit(valueSelected);\r\n  }\r\n\r\n  callOnChange(value: any) {\r\n    // Quando o input não possui um formulário, então esta função não é registrada.\r\n    if (this.onChangePropagate) {\r\n      this.onChangePropagate(value);\r\n    }\r\n\r\n    if (this.oldValueToModel !== this.valueToModel) {\r\n      this.change.emit(this.valueToModel);\r\n    }\r\n\r\n    // Armazenar o valor antigo do model\r\n    this.oldValueToModel = this.valueToModel;\r\n  }\r\n\r\n  searchById(value) {\r\n    let checkedValue = value;\r\n\r\n    if (typeof checkedValue === 'string') {\r\n      checkedValue = checkedValue.trim();\r\n    }\r\n\r\n    if (checkedValue !== '') {\r\n      const oldDisable = this.disabled;\r\n      this.disabled = true;\r\n\r\n      if (this.control) {\r\n        // :TODO: Retirar no futuro pois esse setTimeout foi feito\r\n        // pois quando o campo é acionado pelos métodos setValue ou patchValue\r\n        // a mudança não é detectada\r\n        setTimeout(() => this.control.markAsPending());\r\n      }\r\n\r\n      this.getSubscription = this.service\r\n        .getObjectByValue(value, this.filterParams)\r\n        .pipe(\r\n          finalize(() => {\r\n            this.disabled = oldDisable;\r\n\r\n            if (this.control) {\r\n              this.control.updateValueAndValidity();\r\n            }\r\n          })\r\n        )\r\n        .subscribe(\r\n          element => {\r\n            if (element?.length || (!Array.isArray(element) && element)) {\r\n              if (Array.isArray(element) && element.length > 1) {\r\n                this.setDisclaimers(element);\r\n                this.updateVisibleItems();\r\n              }\r\n\r\n              this.selectModel(this.multiple ? element : [element]);\r\n            } else {\r\n              this.cleanModel();\r\n            }\r\n          },\r\n          error => {\r\n            this.cleanModel();\r\n            this.onError.emit(error);\r\n          }\r\n        );\r\n    } else {\r\n      this.cleanModel();\r\n    }\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    if (value?.length || (!Array.isArray(value) && value)) {\r\n      // Esta condição é executada somente quando é passado o ID para realizar a busca pelo ID.\r\n      this.searchById(value);\r\n    } else {\r\n      this.cleanViewValue();\r\n    }\r\n  }\r\n\r\n  protected cleanViewValue() {\r\n    this.setDisclaimers([]);\r\n    this.setViewValue('', {});\r\n    this.oldValue = '';\r\n    this.valueToModel = null;\r\n  }\r\n\r\n  // Formata a label do campo.\r\n  protected getFormattedLabel(value: any): string {\r\n    return value ? this.keysDescription.map(column => value[column]).join(' - ') : '';\r\n  }\r\n\r\n  // Chama o método writeValue e preenche o model.\r\n  protected selectModel(options: Array<any>) {\r\n    if (options.length) {\r\n      this.selectedOptions = [...options];\r\n\r\n      const newModel = this.multiple ? options.map(option => option[this.fieldValue]) : options[0][this.fieldValue];\r\n      this.selectValue(newModel);\r\n\r\n      if (options.length === 1) {\r\n        this.oldValue = options[0][this.fieldLabel];\r\n        this.setViewValue(this.getFormattedLabel(options[0]), options[0]);\r\n      }\r\n    } else {\r\n      this.selectValue(undefined);\r\n      this.cleanViewValue();\r\n    }\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  private setService(service: PoLookupFilter | string) {\r\n    if (isTypeof(service, 'object')) {\r\n      this.service = <PoLookupFilterService>service;\r\n    }\r\n\r\n    if (service && isTypeof(service, 'string')) {\r\n      this.service = this.defaultService;\r\n      this.service.setConfig(service, this.fieldValue, this.multiple);\r\n    }\r\n  }\r\n\r\n  private setControl() {\r\n    const ngControl: NgControl = this.injector.get(NgControl, null, InjectFlags.Self);\r\n\r\n    if (ngControl) {\r\n      this.control = ngControl.control as FormControl;\r\n    }\r\n  }\r\n\r\n  private initializeColumn(): void {\r\n    if (this.fieldLabel) {\r\n      this.keysDescription = [this.fieldLabel];\r\n    } else {\r\n      this.keysDescription = [];\r\n\r\n      this.keysDescription = this.columns.filter(element => element.fieldLabel).map(element => element.property);\r\n    }\r\n  }\r\n\r\n  // Atribui um ou mais valores ao campo.\r\n  abstract setViewValue(value: any, object: any): void;\r\n\r\n  // Método com a implementação para abrir o lookup.\r\n  abstract openLookup(): void;\r\n\r\n  abstract setDisclaimers(a);\r\n  abstract updateVisibleItems();\r\n}\r\n","import { EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild, Directive, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Observable, Subscription, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { InputBoolean } from '../../../../decorators';\r\n\r\nimport { isTypeof } from '../../../../utils/util';\r\nimport { poLocaleDefault } from '../../../../services/po-language/po-language.constant';\r\nimport { PoModalAction } from '../../../../components/po-modal';\r\nimport { PoModalComponent } from '../../../../components/po-modal/po-modal.component';\r\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\r\nimport { PoTableColumnSortType } from '../../../po-table';\r\nimport { poTableLiteralsDefault } from '../../../po-table/po-table-base.component';\r\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\r\n\r\nimport { PoLookupColumn } from '../interfaces/po-lookup-column.interface';\r\nimport { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';\r\nimport { PoLookupFilteredItemsParams } from '../interfaces/po-lookup-filtered-items-params.interface';\r\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\r\nimport { PoLookupResponseApi } from '../interfaces/po-lookup-response-api.interface';\r\nimport { PoDisclaimer } from './../../../po-disclaimer/po-disclaimer.interface';\r\nimport { PoDisclaimerGroup } from './../../../po-disclaimer-group/po-disclaimer-group.interface';\r\nimport { PoLookupAdvancedFilter } from '../interfaces/po-lookup-advanced-filter.interface';\r\nimport { PoTableComponent } from './../../../po-table/po-table.component';\r\n\r\nexport const poLookupLiteralsDefault = {\r\n  en: <PoLookupLiterals>{\r\n    modalPrimaryActionLabel: 'Select',\r\n    modalSecondaryActionLabel: 'Cancel',\r\n    modalPlaceholder: 'Search',\r\n    modalTitle: 'Select a record',\r\n    modalTableNoColumns: poTableLiteralsDefault.en.noColumns,\r\n    modalTableNoData: poTableLiteralsDefault.en.noData,\r\n    modalTableLoadingData: poTableLiteralsDefault.en.loadingData,\r\n    modalTableLoadMoreData: poTableLiteralsDefault.en.loadMoreData,\r\n    modalAdvancedSearch: 'Advanced search',\r\n    modalAdvancedSearchTitle: 'Advanced search',\r\n    modalAdvancedSearchPrimaryActionLabel: 'Filter',\r\n    modalAdvancedSearchSecondaryActionLabel: 'Return',\r\n    modalDisclaimerGroupTitle: 'Presenting results filtered by:'\r\n  },\r\n  es: <PoLookupLiterals>{\r\n    modalPrimaryActionLabel: 'Seleccionar',\r\n    modalSecondaryActionLabel: 'Cancelar',\r\n    modalPlaceholder: 'Buscar',\r\n    modalTitle: 'Seleccione un registro',\r\n    modalTableNoColumns: poTableLiteralsDefault.es.noColumns,\r\n    modalTableNoData: poTableLiteralsDefault.es.noData,\r\n    modalTableLoadingData: poTableLiteralsDefault.es.loadingData,\r\n    modalTableLoadMoreData: poTableLiteralsDefault.es.loadMoreData,\r\n    modalAdvancedSearch: 'Búsqueda Avanzada',\r\n    modalAdvancedSearchTitle: 'Búsqueda Avanzada',\r\n    modalAdvancedSearchPrimaryActionLabel: 'Filtrar',\r\n    modalAdvancedSearchSecondaryActionLabel: 'Vuelve',\r\n    modalDisclaimerGroupTitle: 'Presentar resultados filtrados por:'\r\n  },\r\n  pt: <PoLookupLiterals>{\r\n    modalPrimaryActionLabel: 'Selecionar',\r\n    modalSecondaryActionLabel: 'Cancelar',\r\n    modalPlaceholder: 'Pesquisar',\r\n    modalTitle: 'Selecione um registro',\r\n    modalTableNoColumns: poTableLiteralsDefault.pt.noColumns,\r\n    modalTableNoData: poTableLiteralsDefault.pt.noData,\r\n    modalTableLoadingData: poTableLiteralsDefault.pt.loadingData,\r\n    modalTableLoadMoreData: poTableLiteralsDefault.pt.loadMoreData,\r\n    modalAdvancedSearch: 'Busca avançada',\r\n    modalAdvancedSearchTitle: 'Busca Avançada',\r\n    modalAdvancedSearchPrimaryActionLabel: 'Filtrar',\r\n    modalAdvancedSearchSecondaryActionLabel: 'Voltar',\r\n    modalDisclaimerGroupTitle: 'Apresentando resultados filtrados por:'\r\n  },\r\n  ru: <PoLookupLiterals>{\r\n    modalPrimaryActionLabel: 'выбирать',\r\n    modalSecondaryActionLabel: 'отменить',\r\n    modalPlaceholder: 'поиск',\r\n    modalTitle: 'Выберите запись',\r\n    modalTableNoColumns: poTableLiteralsDefault.ru.noColumns,\r\n    modalTableNoData: poTableLiteralsDefault.ru.noData,\r\n    modalTableLoadingData: poTableLiteralsDefault.ru.loadingData,\r\n    modalTableLoadMoreData: poTableLiteralsDefault.ru.loadMoreData,\r\n    modalAdvancedSearch: 'Расширенный поиск',\r\n    modalAdvancedSearchTitle: 'Расширенный поиск',\r\n    modalAdvancedSearchPrimaryActionLabel: 'Фильтр',\r\n    modalAdvancedSearchSecondaryActionLabel: 'Вернись',\r\n    modalDisclaimerGroupTitle: 'Представление результатов отфильтровано по:'\r\n  }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * Classe base do componente Po Lookup Modal.\r\n */\r\n@Directive()\r\nexport abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {\r\n  @ViewChild(PoModalComponent, { static: true }) poModal: PoModalComponent;\r\n  @ViewChild(PoTableComponent, { static: true }) poTable: PoTableComponent;\r\n\r\n  /**\r\n   * Objeto com os campos que serão criados no busca avançada.\r\n   *\r\n   * > Caso não seja passado um objeto ou então ele esteja em branco o link de busca avançada ficará escondido.\r\n   *\r\n   * Exemplo de URL com busca avançada: http://localhost:3000/v1/heroes?filter=&page=1&pageSize=10`&name=Tony%20Stark&nickname=Homem%20de%20Ferro&email=irnman@marvel.com`\r\n   *\r\n   * Caso algum parâmetro seja uma lista, a concatenação é feita utilizando virgula.\r\n   * Exemplo: http://localhost:3000/v1/heroes?filter=&page=1&pageSize=10`&name=Tony%20Stark,Peter%20Parker,Gohan`\r\n   *\r\n   */\r\n  @Input('p-advanced-filters') advancedFilters: Array<PoLookupAdvancedFilter>;\r\n\r\n  /**\r\n   * Lista das colunas da tabela.\r\n   * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.\r\n   */\r\n  @Input('p-columns') columns: Array<PoLookupColumn>;\r\n\r\n  /** Lista de itens da tabela. */\r\n  @Input('p-items') items: Array<any>;\r\n\r\n  /** Classe de serviço com a implementação do cliente. */\r\n  @Input('p-filter-service') filterService: PoLookupFilter;\r\n\r\n  /** Classe de serviço com a implementação do cliente. */\r\n  @Input('p-filter-params') filterParams: any;\r\n\r\n  /** Se verdadeiro, ativa a funcionalidade de scroll infinito para a tabela exibida no retorno da consulta. */\r\n  @Input('p-infinite-scroll') @InputBoolean() infiniteScroll: boolean = false;\r\n\r\n  /** Se verdadeiro, ativa a funcionalidade de multipla seleção. */\r\n  @Input('p-multiple') @InputBoolean() multiple: boolean = false;\r\n\r\n  /** Evento utilizado ao selecionar um registro da tabela. */\r\n  @Output('p-change-model') model: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /** Classe de serviço com items selecionados */\r\n  @Input('p-selected-items') selectedItems: any;\r\n\r\n  /** Indica a coluna que será utilizada como descrição do campo e como filtro dentro da janela. */\r\n  @Input('p-field-label') fieldLabel: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Indica a coluna que será utilizada como valor do campo.\r\n   *\r\n   * > Atenção: Caso não seja passada ou tenha o conteúdo incorreto, não irá atualizar o model do formulário.\r\n   */\r\n  @Input('p-field-value') fieldValue: string;\r\n\r\n  hasNext = true;\r\n  isLoading = false;\r\n  page = 1;\r\n  pageSize = 10;\r\n  searchValue: string = '';\r\n  tableLiterals: any;\r\n\r\n  // Propriedade da modal de busca avançada:\r\n  advancedFilterModalTitle = '';\r\n  dynamicFormValue = {};\r\n  disclaimer!: PoDisclaimer;\r\n  disclaimerGroup!: PoDisclaimerGroup;\r\n  isAdvancedFilter = false;\r\n  primaryActionAdvancedFilter!: PoModalAction;\r\n  secondaryActionAdvancedFilter!: PoModalAction;\r\n  selecteds: Array<any> = [];\r\n\r\n  protected sort: PoTableColumnSort;\r\n\r\n  private filterSubscription: Subscription;\r\n  private searchSubscription: Subscription;\r\n  private showMoreSubscription: Subscription;\r\n\r\n  private _literals: PoLookupLiterals;\r\n  private _title: string;\r\n  private language: string = poLocaleDefault;\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  primaryAction: PoModalAction = {\r\n    action: () => {\r\n      let selectedsItems: Array<any> = [];\r\n      if (!this.multiple) {\r\n        this.items.forEach(element => {\r\n          if (element['$selected']) {\r\n            selectedsItems.push(element);\r\n          }\r\n        });\r\n      } else {\r\n        selectedsItems = this.selecteds;\r\n      }\r\n      this.model.emit(selectedsItems);\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.modalPrimaryActionLabel\r\n  };\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  secondaryAction: PoModalAction = {\r\n    action: () => {\r\n      this.model.emit(null);\r\n      this.poModal.close();\r\n    },\r\n    label: this.literals.modalSecondaryActionLabel\r\n  };\r\n\r\n  /** Objeto com as literais usadas no `po-lookup-modal`. */\r\n  @Input('p-literals') set literals(value: PoLookupLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poLookupLiteralsDefault[poLocaleDefault],\r\n        ...poLookupLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n      if (value.modalTitle) {\r\n        this.title = this.literals.modalTitle;\r\n      }\r\n    } else {\r\n      this._literals = poLookupLiteralsDefault[this.language];\r\n    }\r\n    this.primaryAction.label = this.literals.modalPrimaryActionLabel;\r\n    this.secondaryAction.label = this.literals.modalSecondaryActionLabel;\r\n    this.setTableLiterals();\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poLookupLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** Título da modal. */\r\n  @Input('p-title') set title(value: string) {\r\n    this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService, private changeDetector: ChangeDetectorRef) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.filterSubscription) {\r\n      this.filterSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.searchSubscription) {\r\n      this.searchSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.showMoreSubscription) {\r\n      this.showMoreSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setAdvancedFilterModalProperties();\r\n    this.initializeData();\r\n    this.setTableLiterals();\r\n  }\r\n\r\n  createDisclaimer() {\r\n    this.disclaimerGroup.disclaimers = [];\r\n    this.searchValue = '';\r\n\r\n    for (const [key, value] of Object.entries(this.dynamicFormValue)) {\r\n      this.addDisclaimer(value, key);\r\n    }\r\n\r\n    if (!Object.values(this.dynamicFormValue).some(v => v !== null && typeof v !== 'undefined')) {\r\n      this.initializeData();\r\n    }\r\n  }\r\n\r\n  addDisclaimer(value: any, property: string) {\r\n    this.disclaimer = <any>{ property: property };\r\n    this.disclaimer.value = value;\r\n\r\n    this.disclaimerGroup.disclaimers = [...this.disclaimerGroup.disclaimers, this.disclaimer];\r\n  }\r\n\r\n  onChangeDisclaimerGroup() {\r\n    if (!this.searchValue) {\r\n      this.isLoading = true;\r\n      this.searchValue = '';\r\n\r\n      this.searchFilteredItems();\r\n    }\r\n  }\r\n\r\n  search(): void {\r\n    this.page = 1;\r\n\r\n    if (this.searchValue) {\r\n      this.isLoading = true;\r\n      this.disclaimerGroup.disclaimers = [];\r\n\r\n      this.searchFilteredItems();\r\n    } else {\r\n      this.initializeData();\r\n    }\r\n  }\r\n\r\n  searchFilteredItems(): void {\r\n    this.searchSubscription = this.getFilteredItems(this.searchValue)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.setLookupResponseProperties();\r\n          return throwError(error);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (data: PoLookupResponseApi) => this.setLookupResponseProperties(data),\r\n        () => {}\r\n      );\r\n  }\r\n\r\n  showMoreEvent() {\r\n    this.page++;\r\n    this.isLoading = true;\r\n\r\n    this.showMoreSubscription = this.getFilteredItems(this.searchValue)\r\n      .pipe(\r\n        catchError(error => {\r\n          this.hasNext = false;\r\n          this.isLoading = false;\r\n          return throwError(error);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (data: PoLookupResponseApi) => {\r\n          this.items = [...this.items, ...data.items];\r\n          this.hasNext = data.hasNext;\r\n          this.isLoading = false;\r\n          this.changeDetector.detectChanges();\r\n          this.setSelectedItems();\r\n        },\r\n        () => {}\r\n      );\r\n  }\r\n\r\n  //Método responsável por selecionar as linhas quando abre o modal.\r\n  setSelectedItems() {\r\n    this.selecteds.forEach(selectedItem =>\r\n      this.poTable.selectRowItem(item => item[this.fieldValue] === selectedItem.value)\r\n    );\r\n  }\r\n\r\n  //Método responsável por criar os disclaimers quando abre o modal.\r\n  setDisclaimersItems() {\r\n    if (this.selectedItems && !Array.isArray(this.selectedItems)) {\r\n      this.selecteds = [{ value: this.selectedItems }];\r\n      return;\r\n    }\r\n\r\n    if (this.selectedItems && this.selectedItems.length) {\r\n      this.selecteds = [...this.selectedItems];\r\n    }\r\n  }\r\n\r\n  private setAdvancedFilterModalProperties() {\r\n    this.advancedFilterModalTitle = this.literals.modalAdvancedSearchTitle;\r\n\r\n    this.disclaimerGroup = {\r\n      title: this.literals.modalDisclaimerGroupTitle,\r\n      disclaimers: []\r\n    };\r\n\r\n    this.primaryActionAdvancedFilter = {\r\n      action: () => {\r\n        this.destroyDynamicForm();\r\n        this.isAdvancedFilter = false;\r\n        this.createDisclaimer();\r\n      },\r\n      label: this.literals.modalAdvancedSearchPrimaryActionLabel\r\n    };\r\n\r\n    this.secondaryActionAdvancedFilter = {\r\n      action: () => {\r\n        this.destroyDynamicForm();\r\n        this.isAdvancedFilter = false;\r\n      },\r\n      label: this.literals.modalAdvancedSearchSecondaryActionLabel\r\n    };\r\n  }\r\n\r\n  private getAdvancedFilters(advancedParams: any) {\r\n    if (advancedParams && advancedParams.length > 0) {\r\n      const filters: Object = {};\r\n      let validatedAdvacendFilters: any;\r\n\r\n      advancedParams.forEach((filter: any) => {\r\n        filters[filter.property] = filter.value instanceof Array ? filter.value.join() : filter.value;\r\n\r\n        validatedAdvacendFilters = { ...validatedAdvacendFilters, ...filters };\r\n      });\r\n\r\n      return validatedAdvacendFilters;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private getFilteredItems(filter: string): Observable<PoLookupResponseApi> {\r\n    const filteredParams: PoLookupFilteredItemsParams = this.getFilteredParams(filter);\r\n\r\n    return this.filterService.getFilteredItems(filteredParams);\r\n  }\r\n\r\n  private getFilteredParams(filter: string) {\r\n    const { page, pageSize, filterParams, sort } = this;\r\n\r\n    const filteredParams = {};\r\n    const order = this.getOrderParam(sort);\r\n    const advancedFilters = this.getAdvancedFilters(this.disclaimerGroup.disclaimers);\r\n    const params = { filter, page, pageSize, order, filterParams, advancedFilters };\r\n\r\n    for (const key in params) {\r\n      if (params.hasOwnProperty(key) && params[key] !== undefined) {\r\n        filteredParams[key] = params[key];\r\n      }\r\n    }\r\n\r\n    return filteredParams;\r\n  }\r\n\r\n  private getOrderParam(sort: PoTableColumnSort = { type: undefined }) {\r\n    const { column, type } = sort;\r\n\r\n    if (!column) {\r\n      return;\r\n    }\r\n\r\n    if (type === PoTableColumnSortType.Descending) {\r\n      return `-${column.property}`;\r\n    }\r\n\r\n    return `${column.property}`;\r\n  }\r\n\r\n  private initializeData(): void {\r\n    this.isLoading = true;\r\n\r\n    this.filterSubscription = this.getFilteredItems('').subscribe(data => {\r\n      this.setLookupResponseProperties(data);\r\n    });\r\n  }\r\n\r\n  private setLookupResponseProperties(data?: PoLookupResponseApi) {\r\n    this.items = data?.items ?? [];\r\n    this.hasNext = data?.hasNext ?? false;\r\n    this.isLoading = false;\r\n    this.changeDetector.detectChanges();\r\n    this.setDisclaimersItems();\r\n    this.setSelectedItems();\r\n  }\r\n\r\n  private setTableLiterals() {\r\n    this.tableLiterals = {\r\n      'noColumns': this.literals.modalTableNoColumns,\r\n      'noData': this.literals.modalTableNoData,\r\n      'loadingData': this.literals.modalTableLoadingData,\r\n      'loadMoreData': this.literals.modalTableLoadMoreData\r\n    };\r\n  }\r\n\r\n  // Método responsável por abrir a modal de busca das informações.\r\n  abstract openModal(): void;\r\n\r\n  // Método responsável por destruir o dynamicForm\r\n  abstract destroyDynamicForm(): void;\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\n\r\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * Componente para criação de formulários dinâmicos a partir de uma lista de objetos.\r\n *\r\n * Também é possível verificar se o formulário está válido e informar valores para a exibição de informações.\r\n */\r\n@Directive()\r\nexport class PoDynamicFormBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nome da propriedade, atribuída ao `PoDynamicFormField.property`, que iniciará o campo com foco.\r\n   */\r\n  @Input('p-auto-focus') autoFocus?: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Coleção de objetos que implementam a interface `PoDynamicFormField`, para definição dos campos que serão criados\r\n   * dinamicamente.\r\n   *\r\n   * > Ex: `[ { property: 'name' } ]`\r\n   *\r\n   * Regras de tipagem e criação dos componentes:\r\n   *\r\n   * - Caso o *type* informado seja *boolean* o componente criado será o `po-switch`.\r\n   * - Caso o *type* informado seja *currency* e não seja informado um *mask* ou *pattern* o componente criado será o `po-decimal`,\r\n   * caso seja informado um *mask* ou *pattern* o componente criado será o `po-input`.\r\n   * - Caso o *type* informado seja *number* e não seja informado um *mask* ou *pattern* o componente criado será o `po-number`, caso seja\r\n   * informado um *mask* ou *pattern* o componente criado será o `po-input`.\r\n   * - Caso a lista possua a propriedade `options` e a mesma possua até 3 itens o componente criado será o `po-radio-group`\r\n   * ou `po-checkbox-group` se informar a propriedade `optionsMulti`.\r\n   * - Caso a mesma possua 3 ou mais itens, será criado o componente `po-select` ou, `po-multiselect` se a propriedade `optionsMulti`\r\n   * for verdadeira.\r\n   * - Caso o *type* informado seja *date* ou *datetime* o componente criado será o `po-datepicker`.\r\n   * - Caso seja informado a propriedade `optionsService` o componente criado será o `po-combo`.\r\n   * - Caso o *type* informado seja *time* o componente criado será um `po-input` podendo receber um *mask* para formatar\r\n   * o valor exibido, caso não seja informado um *mask* o componente será criado com a máscara '99:99' por padrão.\r\n   * - Caso a lista possua a propriedade `rows` e esta seja definida com valor maior ou igual a 3 o componente criado será\r\n   * o `po-textarea`, caso o valor da propriedade `rows` seja menor que 3 o componente criado será o `po-input`.\r\n   * - Caso seja informada a propriedade `secret` o componente criado será o `po-password`.\r\n   * - Caso o *type* informado seja *string* o componente criado será o `po-input`.\r\n   *\r\n   * @default `[]`\r\n   */\r\n  @Input('p-fields') fields: Array<PoDynamicFormField>;\r\n\r\n  /**\r\n   * Objeto que será utilizado como valor para exibir as informações, será recuperado e preenchido através do atributo *property*\r\n   * dos objetos contidos na propridade `p-fields`.\r\n   *\r\n   * Pode iniciar com valor ou apenas com um objeto vazio que será preenchido conforme descrito acima.\r\n   *\r\n   * > Ex: `{ name: 'po' }`\r\n   */\r\n  @Input('p-value') value: any;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Na inicialização do componente será repassado o objeto de formulário utilizado no componente,\r\n   * podendo ser utilizado para validações e/ou detecção de mudança dos valores.\r\n   *\r\n   * Portanto existem duas maneiras de recuperar o formulário,\r\n   * através de *template reference* e através do *output*, veja os exemplos abaixo:\r\n   *\r\n   * > *template reference*\r\n   *\r\n   * ```html\r\n   *  <po-dynamic-form #dynamicForm>\r\n   *  </po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.form.invalid\">\r\n   *  </po-button>\r\n   *\r\n   * ```\r\n   *\r\n   * > *Output*\r\n   *\r\n   * ```html\r\n   *  ...\r\n   *  <po-dynamic-form (p-form)=\"getForm($event)\">\r\n   *  </po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"dynamicForm?.invalid\">\r\n   *  </po-button>\r\n   *  ...\r\n   *\r\n   * ```\r\n   *\r\n   * ```ts\r\n   *  ...\r\n   *\r\n   *  export class AppComponent {\r\n   *\r\n   *    dynamicForm: NgForm;\r\n   *\r\n   *    getForm(form: NgForm) {\r\n   *      this.dynamicForm = form;\r\n   *    }\r\n   *\r\n   *  }\r\n   * ```\r\n   *\r\n   * > Caso a propriedade `p-group-form` for verdadeira não será repassado o formulário, pois o mesmo utilizará\r\n   * o formulário pai.\r\n   */\r\n  @Output('p-form') formOutput: EventEmitter<NgForm> = new EventEmitter<NgForm>();\r\n\r\n  /**\r\n   * Função ou serviço que será executado na inicialização do componente.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * Ao ser executado, irá receber como parâmetro o objeto informado no `p-value`.\r\n   *\r\n   * O retorno desta função deve ser do tipo [PoDynamicFormLoad](documentation/po-dynamic-form#po-dynamic-form-load),\r\n   * onde o usuário poderá determinar as novas atualizações dos campos, valores e determinar o campo a ser focado.\r\n   *\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * onLoadFields(): PoDynamicFormLoad {\r\n   *\r\n   *   return {\r\n   *     value: { cpf: undefined },\r\n   *     fields: [\r\n   *       { property: 'cpf' }\r\n   *     ],\r\n   *     focus: 'cpf'\r\n   *   };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-load]=\"onLoadFields.bind(this)\"\r\n   * ```\r\n   */\r\n  @Input('p-load') load?: string | Function;\r\n\r\n  /**\r\n   * Função ou serviço para validar as **mudanças do formulário**.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n   * - `function`: Método que será executado.\r\n   *\r\n   * Ao ser executado, irá receber como parâmetro um objeto com o nome da propriedade\r\n   * alterada e o novo valor, conforme a interface `PoDynamicFormFieldChanged`:\r\n   *\r\n   * ```\r\n   * { property: 'property name', value: 'new value' }\r\n   * ```\r\n   *\r\n   * O retorno desta função deve ser do tipo [PoDynamicFormValidation](documentation/po-dynamic-form#po-dynamic-form-validation),\r\n   * onde o usuário poderá determinar as novas atualizações dos campos.\r\n   * Por exemplo:\r\n   *\r\n   * ```\r\n   * onChangeFields(changeValue): PoDynamicFormValidation {\r\n   *\r\n   * if (changeValue.property === 'state') {\r\n   *\r\n   *   return {\r\n   *     value: { city: undefined },\r\n   *     fields: [\r\n   *       { property: 'city', options: this.getCity(changeValue.value.state) }\r\n   *     ],\r\n   *     focus: 'city'\r\n   *   };\r\n   * }\r\n   *\r\n   * ```\r\n   * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n   * ```\r\n   *  [p-validate]=\"this.myFunction.bind(this)\"\r\n   * ```\r\n   *\r\n   * > Se houver uma lista de campos para validação definida em `p-validate-fields`, a propriedade `validate` só receberá o disparo para os campos equivalentes.\r\n   */\r\n  @Input('p-validate') validate?: string | Function;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista que define os campos que irão disparar o validate do form.\r\n   */\r\n  @Input('p-validate-fields') validateFields?: Array<string>;\r\n\r\n  private _groupForm?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Ao informar esta propriedade, o componente passará a utilizar o formulário pai para criar os `FormControl`\r\n   * e com isso é possível recuperar o valor do formulário e suas validações a partir do formulário pai.\r\n   *\r\n   * ```html\r\n   * <form #parentForm=\"ngForm\">\r\n   *\r\n   *   <po-dynamic-form p-group-form [p-fields]=\"fields\"></po-dynamic-form>\r\n   *\r\n   *  <po-button p-label=\"Adicionar\" [p-disabled]=\"parentForm.invalid\"></po-button>\r\n   * </form>\r\n   * ```\r\n   */\r\n  @Input('p-group-form') set groupForm(value: boolean) {\r\n    this._groupForm = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get groupForm(): boolean {\r\n    return this._groupForm;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { of } from 'rxjs';\r\n\r\nimport { PoDynamicFormLoad } from '../po-dynamic-form-load/po-dynamic-form-load.interface';\r\nimport { PoDynamicFormValidation } from '../po-dynamic-form-validation/po-dynamic-form-validation.interface';\r\n\r\nexport class PoDynamicFormOperation {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  protected execute(action: Function | string, param: any) {\r\n    return typeof action === 'string' ? this.post(action, param) : of(action(param));\r\n  }\r\n\r\n  protected post(url: string, body: PoDynamicFormValidation | any) {\r\n    return this.http.post(url, body);\r\n  }\r\n\r\n  protected setFormDefaultIfEmpty(validateFields: any): PoDynamicFormValidation | PoDynamicFormLoad {\r\n    return (\r\n      validateFields || {\r\n        value: {},\r\n        fields: [],\r\n        focus: undefined\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\r\n\r\n@Injectable()\r\nexport class PoDynamicFormLoadService extends PoDynamicFormOperation {\r\n  constructor(http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  createAndUpdateFieldsForm(loadedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\r\n    return [...loadedFields].reduce(\r\n      (updatedFields, field) => {\r\n        const index = updatedFields.findIndex(updatedField => updatedField.property === field.property);\r\n        const hasProperty = index >= 0;\r\n\r\n        if (hasProperty) {\r\n          updatedFields[index] = { ...fields[index], ...field };\r\n        } else {\r\n          updatedFields.push(field);\r\n        }\r\n\r\n        return updatedFields;\r\n      },\r\n      [...fields]\r\n    );\r\n  }\r\n\r\n  executeLoad(load: Function | string, value: any) {\r\n    return this.execute(load, value).pipe(map(loadedFormdData => this.setFormDefaultIfEmpty(loadedFormdData)));\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldChanged } from './po-dynamic-form-field-changed.interface';\r\nimport { PoDynamicFormOperation } from '../po-dynamic-form-operation/po-dynamic-form-operation';\r\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation.interface';\r\n\r\n@Injectable()\r\nexport class PoDynamicFormValidationService extends PoDynamicFormOperation {\r\n  constructor(http: HttpClient) {\r\n    super(http);\r\n  }\r\n\r\n  sendFieldChange(field: PoDynamicFormField, value: any) {\r\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\r\n\r\n    return this.execute(field.validate, changedValue).pipe(\r\n      map(validateFields => this.setFieldDefaultIfEmpty(validateFields))\r\n    );\r\n  }\r\n\r\n  sendFormChange(\r\n    validate: Function | string,\r\n    field: PoDynamicFormField,\r\n    value: any\r\n  ): Observable<PoDynamicFormValidation> {\r\n    const changedValue: PoDynamicFormFieldChanged = { property: field.property, value };\r\n\r\n    return this.execute(validate, changedValue).pipe(map(validateFields => this.setFormDefaultIfEmpty(validateFields)));\r\n  }\r\n\r\n  updateFieldsForm(validatedFields: Array<PoDynamicFormField> = [], fields: Array<PoDynamicFormField> = []) {\r\n    return [...validatedFields].reduce(\r\n      (updatedFields, validatedField) => {\r\n        const index = updatedFields.findIndex(field => field.property === validatedField.property);\r\n        const hasProperty = index >= 0;\r\n\r\n        if (hasProperty) {\r\n          updatedFields[index] = { ...fields[index], ...validatedField };\r\n        }\r\n\r\n        return updatedFields;\r\n      },\r\n      [...fields]\r\n    );\r\n  }\r\n\r\n  private setFieldDefaultIfEmpty(validateFields: any): any {\r\n    return (\r\n      validateFields || {\r\n        field: {}\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, ChangeDetectorRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\n\r\nimport { PoDynamicFormBaseComponent } from './po-dynamic-form-base.component';\r\nimport { PoDynamicFormField } from './po-dynamic-form-field.interface';\r\nimport { PoDynamicFormLoad } from './po-dynamic-form-load/po-dynamic-form-load.interface';\r\nimport { PoDynamicFormLoadService } from './po-dynamic-form-load/po-dynamic-form-load.service';\r\nimport { PoDynamicFormValidation } from './po-dynamic-form-validation/po-dynamic-form-validation.interface';\r\nimport { PoDynamicFormValidationService } from './po-dynamic-form-validation/po-dynamic-form-validation.service';\r\n\r\n/**\r\n * @docsExtends PoDynamicFormBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dynamic-form-basic\" title=\"PO Dynamic Form Basic\">\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-basic/sample-po-dynamic-form-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dynamic-form-register\" title=\"PO Dynamic Form - Register\">\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.component.ts\"> </file>\r\n *  <file name=\"sample-po-dynamic-form-register/sample-po-dynamic-form-register.service.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-dynamic-form',\r\n  templateUrl: './po-dynamic-form.component.html'\r\n})\r\nexport class PoDynamicFormComponent extends PoDynamicFormBaseComponent implements OnInit, OnDestroy {\r\n  @ViewChild('fieldsComponent') fieldsComponent: { focus: (property: string) => void; updatePreviousValue: () => void };\r\n\r\n  disabledForm: boolean;\r\n\r\n  private _form: NgForm;\r\n\r\n  private onLoadSubscription: Subscription;\r\n  private sendFormSubscription: Subscription;\r\n  private comboOptionSubject = new Subject<any>();\r\n\r\n  @ViewChild('dynamicForm') set form(value: NgForm) {\r\n    // necessario para nao ocorrer o ExpressionChangedAfterItHasBeenCheckedError\r\n    setTimeout(() => {\r\n      this._form = value;\r\n\r\n      this.emitForm();\r\n    });\r\n  }\r\n\r\n  get form() {\r\n    return this._form || <any>{};\r\n  }\r\n\r\n  constructor(\r\n    private changes: ChangeDetectorRef,\r\n    private loadService: PoDynamicFormLoadService,\r\n    private validationService: PoDynamicFormValidationService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.load) {\r\n      this.loadDataOnInitialize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao campo desejado.\r\n   *\r\n   * Para utilizá-la é necessário capturar a instância do `dynamic form`, como por exemplo:\r\n   *\r\n   * ``` html\r\n   * <po-dynamic-form #dynamicForm [p-fields]=\"fields\"></po-dynamic-form>\r\n   * ```\r\n   *\r\n   * ``` javascript\r\n   * import { PoDynamicFormComponent, PoDynamicFormField } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild('dynamicForm', { static: true }) dynamicForm: PoDynamicFormComponent;\r\n   *\r\n   * fields: Array<PoDynamicFormField> = [\r\n   *   { property: 'fieldOne' },\r\n   *   { property: 'fieldTwo' }\r\n   * ];\r\n   *\r\n   * fieldFocus() {\r\n   *   this.dynamicForm.focus('fieldTwo');\r\n   * }\r\n   * ```\r\n   *\r\n   * @param {string} property Nome da propriedade atribuída ao `PoDynamicFormField.property`.\r\n   */\r\n  focus(property: string) {\r\n    this.fieldsComponent.focus(property);\r\n  }\r\n\r\n  getObjectValue(): Observable<any> {\r\n    return this.comboOptionSubject.asObservable();\r\n  }\r\n\r\n  sendObjectValue(objectValue: any) {\r\n    this.comboOptionSubject.next(objectValue);\r\n  }\r\n\r\n  validateForm(field: PoDynamicFormField) {\r\n    const previousFocusElement = document.activeElement;\r\n\r\n    this.disableForm(true);\r\n    const errorOnValidation = () => this.disableForm(false);\r\n\r\n    this.sendFormSubscription = this.validationService\r\n      .sendFormChange(this.validate, field, this.value)\r\n      .subscribe(this.applyFormValidation(previousFocusElement), errorOnValidation);\r\n  }\r\n\r\n  private applyFormUpdatesOnLoad(previousFocusElement: Element): (dynamicFormData: PoDynamicFormLoad) => void {\r\n    return dynamicFormData => {\r\n      this.updateModelOnLoad(dynamicFormData);\r\n      this.disableForm(false);\r\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\r\n    };\r\n  }\r\n\r\n  private applyFormValidation(previousFocusElement: Element): (dynamicFormData: PoDynamicFormValidation) => void {\r\n    return dynamicFormData => {\r\n      this.updateModelWithValidation(dynamicFormData);\r\n      this.disableForm(false);\r\n      this.setFocusOnFieldByProperty(dynamicFormData.focus, previousFocusElement);\r\n    };\r\n  }\r\n\r\n  private disableForm(value: boolean) {\r\n    this.disabledForm = value;\r\n    this.changes.detectChanges();\r\n  }\r\n\r\n  private emitForm() {\r\n    if (!this.groupForm && this.formOutput.observers.length) {\r\n      this.formOutput.emit(this.form);\r\n    }\r\n  }\r\n\r\n  private loadDataOnInitialize() {\r\n    const previousFocusElement = document.activeElement;\r\n\r\n    this.disabledForm = true;\r\n    const errorOnLoad = () => (this.disabledForm = false);\r\n\r\n    this.onLoadSubscription = this.loadService\r\n      .executeLoad(this.load, this.value)\r\n      .subscribe(this.applyFormUpdatesOnLoad(previousFocusElement), errorOnLoad);\r\n  }\r\n\r\n  private removeListeners() {\r\n    if (this.onLoadSubscription) {\r\n      this.onLoadSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.sendFormSubscription) {\r\n      this.sendFormSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private setFocusOnFieldByProperty(property: string, previousFocusElement: Element) {\r\n    if (property) {\r\n      // precisa do timeout para que o valor seja atribuido no campo antes de setar o focus,\r\n      // para nao disparar a mudança posteriormente. Situação ocorre quando retornar campo com valor e focus atribuido a ele.\r\n      setTimeout(() => this.focus(property));\r\n    } else {\r\n      previousFocusElement['focus']();\r\n    }\r\n  }\r\n\r\n  private updateModelOnLoad(loadedFormData: PoDynamicFormLoad) {\r\n    Object.assign(this.value, loadedFormData.value);\r\n    this.fields = this.loadService.createAndUpdateFieldsForm(loadedFormData.fields, this.fields);\r\n  }\r\n\r\n  private updateModelWithValidation(formData: PoDynamicFormValidation) {\r\n    Object.assign(this.value, formData.value);\r\n    this.fieldsComponent.updatePreviousValue();\r\n    this.fields = this.validationService.updateFieldsForm(formData.fields, this.fields);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { fromEvent, Observable } from 'rxjs';\r\nimport { debounceTime, filter, switchMap, tap } from 'rxjs/operators';\r\nimport { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';\r\nimport { PoLookupModalBaseComponent } from '../po-lookup-modal/po-lookup-modal-base.component';\r\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\r\nimport { PoDynamicFormComponent } from './../../../po-dynamic/po-dynamic-form/po-dynamic-form.component';\r\nimport { PoTableComponent } from './../../../po-table/po-table.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoLookupModalBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-lookup-modal',\r\n  templateUrl: './po-lookup-modal.component.html'\r\n})\r\nexport class PoLookupModalComponent extends PoLookupModalBaseComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(PoTableComponent, { static: true }) poTable: PoTableComponent;\r\n  @ViewChild('inpsearch') inputSearchEl: ElementRef;\r\n  @ViewChild('container', { read: ViewContainerRef }) container: ViewContainerRef;\r\n\r\n  keyUpObservable: Observable<any> = null;\r\n\r\n  containerHeight: number = 375;\r\n  tableHeight: number;\r\n\r\n  componentRef: ComponentRef<PoDynamicFormComponent>;\r\n  dynamicForm: NgForm;\r\n\r\n  constructor(\r\n    private componentFactory: ComponentFactoryResolver,\r\n    poLanguage: PoLanguageService,\r\n    changeDetector: ChangeDetectorRef\r\n  ) {\r\n    super(poLanguage, changeDetector);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.setTableHeight();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initializeEventInput();\r\n  }\r\n\r\n  // Seleciona um item na tabela\r\n  onSelect(item) {\r\n    if (this.multiple) {\r\n      this.selecteds = [...this.selecteds, { value: item[this.fieldValue], label: item[this.fieldLabel], ...item }];\r\n    } else {\r\n      this.selecteds = [{ value: item[this.fieldValue], label: item[this.fieldLabel], ...item }];\r\n    }\r\n  }\r\n\r\n  // Remove a seleção de um item na tabela\r\n  onUnselect(unselectedItem) {\r\n    this.selecteds = this.selecteds.filter(itemSelected => itemSelected.value !== unselectedItem[this.fieldValue]);\r\n  }\r\n\r\n  onUnselectFromDisclaimer(removedDisclaimer) {\r\n    this.poTable.unselectRowItem(item => item[this.fieldValue] === removedDisclaimer.value);\r\n  }\r\n\r\n  // Seleciona todos os itens visíveis na tabela\r\n  onAllSelected(items) {\r\n    this.selecteds = items.map(item => ({ value: item[this.fieldValue], label: item[this.fieldLabel], ...item }));\r\n  }\r\n\r\n  // Remove a seleção de todos os itens visíveis na tabela\r\n  onAllUnselected(items) {\r\n    this.poTable.unselectRows();\r\n    this.selecteds = [];\r\n  }\r\n\r\n  initializeEventInput(): void {\r\n    this.keyUpObservable = fromEvent(this.inputSearchEl.nativeElement, 'keyup').pipe(\r\n      filter((e: any) => this.validateEnterPressed(e)),\r\n      debounceTime(400)\r\n    );\r\n\r\n    this.keyUpObservable.subscribe(() => {\r\n      this.search();\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.poModal.open();\r\n  }\r\n\r\n  sortBy(sort: PoTableColumnSort) {\r\n    this.sort = sort;\r\n  }\r\n\r\n  destroyDynamicForm() {\r\n    if (this.componentRef) {\r\n      this.componentRef.destroy();\r\n    }\r\n  }\r\n\r\n  onAdvancedFilter() {\r\n    this.setupModalAdvancedFilter();\r\n    this.createDynamicForm();\r\n  }\r\n\r\n  private setTableHeight() {\r\n    if (this.multiple) {\r\n      if (this.selecteds?.length !== 0) {\r\n        this.tableHeight = 300;\r\n      } else {\r\n        this.tableHeight = 370;\r\n        this.containerHeight = 375;\r\n      }\r\n    }\r\n\r\n    // precisa ser 315 por as linhas terem altura de 32px (quando tela menor que 1366px).\r\n    // O retorno padrão é 10 itens fazendo com que gere scroll caso houver paginação, 370 não gerava.\r\n    this.tableHeight = this.infiniteScroll ? 315 : 370;\r\n    if (window.innerHeight < 615) {\r\n      this.tableHeight -= 50;\r\n      this.containerHeight -= 50;\r\n    }\r\n  }\r\n\r\n  private validateEnterPressed(e: any) {\r\n    return e.keyCode === 13;\r\n  }\r\n\r\n  private setupModalAdvancedFilter() {\r\n    this.dynamicFormValue = {};\r\n    this.isAdvancedFilter = true;\r\n  }\r\n\r\n  private createDynamicForm() {\r\n    const component = this.componentFactory.resolveComponentFactory(PoDynamicFormComponent);\r\n\r\n    this.componentRef = this.container.createComponent<PoDynamicFormComponent>(component);\r\n    this.componentRef.instance.fields = this.advancedFilters;\r\n    this.componentRef.instance.value = this.dynamicFormValue;\r\n\r\n    this.componentRef.instance.formOutput\r\n      .pipe(\r\n        tap(form => {\r\n          this.dynamicForm = form;\r\n          this.primaryActionAdvancedFilter.disabled = this.dynamicForm.invalid;\r\n        }),\r\n        switchMap(form => form.valueChanges)\r\n      )\r\n      .subscribe(() => {\r\n        this.primaryActionAdvancedFilter.disabled = this.dynamicForm.invalid;\r\n      });\r\n  }\r\n}\r\n","import { Injectable, ComponentRef, EventEmitter } from '@angular/core';\r\n\r\nimport { PoDynamicFormField } from './../../../po-dynamic/po-dynamic-form/po-dynamic-form-field.interface';\r\nimport { PoComponentInjectorService } from '../../../../services/po-component-injector/po-component-injector.service';\r\nimport { PoLookupColumn } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-column.interface';\r\nimport { PoLookupFilter } from '../../../../components/po-field/po-lookup/interfaces/po-lookup-filter.interface';\r\nimport { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';\r\nimport { PoLookupModalComponent } from '../po-lookup-modal/po-lookup-modal.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * Serviço responsável por controlar a abertura do componente Po Lookup Modal.\r\n */\r\n@Injectable()\r\nexport class PoLookupModalService {\r\n  selectValueEvent: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  private componentRef: ComponentRef<any> = null;\r\n\r\n  constructor(private poComponentInjector: PoComponentInjectorService) {}\r\n\r\n  /**\r\n   * Método responsável por abrir a modal de busca das informações.\r\n   *\r\n   * @param advancedFilters {Array<PoDynamicFormField>} Objeto utilizado para criar o busca avançada.\r\n   * @param service {PoLookupFilter} Serviço responsável por realizar a busca no serviço dos dados.\r\n   * @param columns {Array<PoLookupColumn>} Definição das colunas na modal de busca.\r\n   * @param filterParams {any} Valor que será repassado aos métodos do serviço para auxiliar no filtro dos dados.\r\n   * @param title {string} Definição do título da modal.\r\n   * @param literals {PoLookupLiterals} Literais utilizadas no componente.\r\n   * @param selectedItems {any} Valor que está selecionado que será repassado para o modal para apresentar na tabela.\r\n   * @param fieldLabel {string} Valor que será utilizado como descrição do campo.\r\n   * @param fieldValue {string} Valor que será utilizado como valor do campo.\r\n   */\r\n  openModal(params: {\r\n    advancedFilters: Array<PoDynamicFormField>;\r\n    service: PoLookupFilter;\r\n    columns: Array<PoLookupColumn>;\r\n    filterParams: any;\r\n    title: string;\r\n    literals: PoLookupLiterals;\r\n    infiniteScroll: boolean;\r\n    multiple: boolean;\r\n    selectedItems: Array<any>;\r\n    fieldLabel: string;\r\n    fieldValue: string;\r\n  }): void {\r\n    const {\r\n      advancedFilters,\r\n      service,\r\n      columns,\r\n      filterParams,\r\n      title,\r\n      literals,\r\n      infiniteScroll,\r\n      multiple,\r\n      selectedItems,\r\n      fieldLabel,\r\n      fieldValue\r\n    } = params;\r\n\r\n    this.componentRef = this.poComponentInjector.createComponentInApplication(PoLookupModalComponent);\r\n    this.componentRef.instance.advancedFilters = advancedFilters;\r\n    this.componentRef.instance.title = title;\r\n    this.componentRef.instance.columns = columns;\r\n    this.componentRef.instance.filterService = service;\r\n    this.componentRef.instance.filterParams = filterParams;\r\n    this.componentRef.instance.literals = literals;\r\n    this.componentRef.instance.model.subscribe($event => {\r\n      this.selectValue($event);\r\n    });\r\n    this.componentRef.instance.infiniteScroll = infiniteScroll;\r\n    this.componentRef.instance.multiple = multiple;\r\n    this.componentRef.instance.selectedItems = selectedItems;\r\n    this.componentRef.instance.fieldLabel = fieldLabel;\r\n    this.componentRef.instance.fieldValue = fieldValue;\r\n    this.componentRef.changeDetectorRef.detectChanges();\r\n    this.componentRef.instance.openModal();\r\n  }\r\n\r\n  // Este metodo é chamado quando é selecionado um item na lookup modal.\r\n  selectValue(value) {\r\n    if (value) {\r\n      this.selectValueEvent.emit(value);\r\n    }\r\n    this.componentRef.destroy();\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  DoCheck,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Injector,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { NgControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoLookupBaseComponent } from './po-lookup-base.component';\r\nimport { PoLookupFilterService } from './services/po-lookup-filter.service';\r\nimport { PoLookupModalService } from './services/po-lookup-modal.service';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  PoLookupFilterService,\r\n  PoLookupModalService,\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoLookupComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoLookupComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NgControl,\r\n    useExisting: forwardRef(() => PoLookupComponent),\r\n    multi: false\r\n  }\r\n];\r\n\r\n/**\r\n * @docsExtends PoLookupBaseComponent\r\n *\r\n * @description\r\n *\r\n * Quando existe muitos dados o po-lookup por padrão traz apenas 10 itens na tabela e os demais são carregados por demanda através do\r\n * botão 'Carregar mais resultados'. Para que funcione corretamente, é importante que o serviço siga o\r\n * [Guia de implementação das APIs TOTVS](https://po-ui.io/guides/api).\r\n *\r\n * Importante:\r\n *\r\n * - Caso o po-lookup contenha o [(ngModel)] sem o atributo name, ocorrerá um erro de angular.\r\n * Então será necessário informar o atributo name ou o atributo [ngModelOptions]=\"{standalone: true}\".\r\n * ```\r\n * <po-lookup\r\n *   [(ngModel)]=\"pessoa.nome\"\r\n *   [ngModelOptions]=\"{standalone: true}\">\r\n * </po-lookup>\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-lookup-basic\" title=\"PO Lookup Basic\">\r\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-basic/sample-po-lookup-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-lookup-labs\" title=\"PO Lookup Labs\">\r\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-labs/sample-po-lookup-labs.component.ts\"> </file>\r\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-lookup-hero\" title=\"PO Lookup - Hero\">\r\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-hero/sample-po-lookup-hero.component.ts\"> </file>\r\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-lookup-hero-reactive-form\" title=\"PO Lookup - Hero Reactive Form\">\r\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-hero-reactive-form/sample-po-lookup-hero-reactive-form.component.ts\"> </file>\r\n *  <file name=\"sample-po-lookup.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-lookup-sw-films\" title=\"PO Lookup - Star Wars films\">\r\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.component.ts\"> </file>\r\n *  <file name=\"sample-po-lookup-sw-films/sample-po-lookup-sw-films.service.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-lookup-multiple\" title=\"PO Lookup - Multiple\">\r\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.component.html\"> </file>\r\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.component.ts\"> </file>\r\n *  <file name=\"sample-po-lookup-multiple/sample-po-lookup-multiple.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-lookup',\r\n  templateUrl: './po-lookup.component.html',\r\n  providers\r\n})\r\nexport class PoLookupComponent extends PoLookupBaseComponent implements AfterViewInit, OnDestroy, OnInit, DoCheck {\r\n  @ViewChild('inp', { read: ElementRef, static: false }) inputEl: ElementRef;\r\n\r\n  initialized = false;\r\n  timeoutResize;\r\n  visibleElement = false;\r\n\r\n  disclaimers = [];\r\n  visibleDisclaimers = [];\r\n\r\n  private modalSubscription: Subscription;\r\n  private isCalculateVisibleItems: boolean = true;\r\n\r\n  get autocomplete() {\r\n    return this.noAutocomplete ? 'off' : 'on';\r\n  }\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    poLookupFilterService: PoLookupFilterService,\r\n    private poLookupModalService: PoLookupModalService,\r\n    injector: Injector\r\n  ) {\r\n    super(poLookupFilterService, injector);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    super.ngAfterViewInit();\r\n\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n\r\n    this.initialized = true;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const inputWidth = this.inputEl?.nativeElement.offsetWidth;\r\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,\r\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\r\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\r\n      this.debounceResize();\r\n      this.visibleElement = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.modalSubscription) {\r\n      this.modalSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n    this.initializeListeners();\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoLookupComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoLookupComponent, { static: true }) lookup: PoLookupComponent;\r\n   *\r\n   * focusLookup() {\r\n   *   this.lookup.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  openLookup(): void {\r\n    if (this.isAllowedOpenModal()) {\r\n      const {\r\n        advancedFilters,\r\n        service,\r\n        columns,\r\n        filterParams,\r\n        literals,\r\n        infiniteScroll,\r\n        multiple,\r\n        fieldLabel,\r\n        fieldValue\r\n      } = this;\r\n\r\n      const selectedItems = this.checkSelectedItems();\r\n\r\n      this.poLookupModalService.openModal({\r\n        advancedFilters,\r\n        service,\r\n        columns,\r\n        filterParams,\r\n        title: this.label,\r\n        literals,\r\n        infiniteScroll,\r\n        multiple,\r\n        selectedItems,\r\n        fieldLabel,\r\n        fieldValue\r\n      });\r\n\r\n      if (!this.modalSubscription) {\r\n        this.modalSubscription = this.poLookupModalService.selectValueEvent.subscribe(selectedOptions => {\r\n          if (selectedOptions.length > 1 || this.disclaimers.length) {\r\n            this.setDisclaimers(selectedOptions);\r\n            this.updateVisibleItems();\r\n          }\r\n\r\n          this.selectModel(selectedOptions);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  checkSelectedItems() {\r\n    if (this.multiple) {\r\n      if (!this.disclaimers.length && this.valueToModel?.length) {\r\n        return [{ value: this.valueToModel[0], label: this.oldValue, ...this.selectedOptions[0] }];\r\n      }\r\n\r\n      return this.disclaimers;\r\n    } else {\r\n      return this.valueToModel;\r\n    }\r\n  }\r\n\r\n  setDisclaimers(selectedOptions: Array<any>) {\r\n    this.disclaimers = selectedOptions.map(selectedOption => ({\r\n      value: selectedOption[this.fieldValue],\r\n      label: selectedOption[this.fieldLabel],\r\n      ...selectedOption\r\n    }));\r\n\r\n    this.visibleDisclaimers = [...this.disclaimers];\r\n  }\r\n\r\n  setViewValue(value: any, object: any): void {\r\n    if (this.inputEl && this.fieldFormat) {\r\n      this.setInputValueWipoieldFormat(object);\r\n    } else if (this.inputEl) {\r\n      this.inputEl.nativeElement.value = this.valueToModel || this.valueToModel === 0 ? value : '';\r\n    }\r\n  }\r\n\r\n  getViewValue(): string {\r\n    return this.inputEl.nativeElement.value;\r\n  }\r\n\r\n  searchEvent() {\r\n    this.onTouched?.();\r\n    const value = this.getViewValue();\r\n\r\n    if (this.oldValue?.toString() !== value) {\r\n      this.searchById(value);\r\n    }\r\n  }\r\n\r\n  closeDisclaimer(value) {\r\n    this.disclaimers = this.disclaimers.filter(disclaimer => disclaimer.value !== value);\r\n    this.valueToModel = this.valueToModel.filter(model => model !== value);\r\n\r\n    this.updateVisibleItems();\r\n    this.callOnChange(this.valueToModel.length ? this.valueToModel : undefined);\r\n  }\r\n\r\n  updateVisibleItems() {\r\n    if (this.disclaimers && this.disclaimers.length > 0) {\r\n      this.visibleDisclaimers = [].concat(this.disclaimers);\r\n    }\r\n\r\n    this.debounceResize();\r\n\r\n    if (!this.inputEl.nativeElement.offsetWidth) {\r\n      this.isCalculateVisibleItems = true;\r\n    }\r\n  }\r\n\r\n  debounceResize() {\r\n    if (!this.autoHeight) {\r\n      clearTimeout(this.timeoutResize);\r\n      this.timeoutResize = setTimeout(() => {\r\n        this.calculateVisibleItems();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  getInputWidth() {\r\n    return this.inputEl.nativeElement.offsetWidth - 40;\r\n  }\r\n\r\n  getDisclaimersWidth() {\r\n    const disclaimers = this.inputEl.nativeElement.querySelectorAll('po-disclaimer');\r\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\r\n  }\r\n\r\n  calculateVisibleItems() {\r\n    const disclaimersWidth = this.getDisclaimersWidth();\r\n    const inputWidth = this.getInputWidth();\r\n    const extraDisclaimerSize = 38;\r\n    const disclaimersVisible = disclaimersWidth[0];\r\n\r\n    const newDisclaimers = [];\r\n    const disclaimers = this.disclaimers;\r\n\r\n    if (inputWidth > 0) {\r\n      let sum = 0;\r\n      let i = 0;\r\n      for (i = 0; i < disclaimers.length; i++) {\r\n        sum += disclaimersWidth[i];\r\n        newDisclaimers.push(disclaimers[i]);\r\n\r\n        if (sum > inputWidth) {\r\n          sum -= disclaimersWidth[i];\r\n          this.isCalculateVisibleItems = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (disclaimersVisible || !disclaimers.length) {\r\n        if (i === disclaimers.length) {\r\n          this.isCalculateVisibleItems = false;\r\n          return;\r\n        }\r\n\r\n        if (sum + extraDisclaimerSize > inputWidth) {\r\n          newDisclaimers.splice(-2, 2);\r\n          const label = '+' + (disclaimers.length + 1 - i).toString();\r\n          newDisclaimers.push({ value: '', label: label });\r\n        } else {\r\n          newDisclaimers.splice(-1, 1);\r\n          const label = '+' + (disclaimers.length - i).toString();\r\n          newDisclaimers.push({ value: '', label: label });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.visibleDisclaimers = [...newDisclaimers];\r\n  }\r\n\r\n  private isAllowedOpenModal(): boolean {\r\n    if (!this.service) {\r\n      console.warn('No service informed');\r\n    }\r\n\r\n    return !!(this.service && !this.disabled);\r\n  }\r\n\r\n  private formatFields(objectSelected, properties) {\r\n    let formatedField;\r\n    if (Array.isArray(properties)) {\r\n      for (const property of properties) {\r\n        if (objectSelected && objectSelected[property]) {\r\n          if (!formatedField) {\r\n            formatedField = objectSelected[property];\r\n          } else {\r\n            formatedField = formatedField + ' - ' + objectSelected[property];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!formatedField) {\r\n      formatedField = objectSelected[this.fieldValue];\r\n    }\r\n    return formatedField;\r\n  }\r\n\r\n  private setInputValueWipoieldFormat(objectSelected: any) {\r\n    const isEmpty = Object.keys(objectSelected).length === 0;\r\n    let fieldFormated;\r\n\r\n    if (Array.isArray(this.fieldFormat)) {\r\n      fieldFormated = this.formatFields(objectSelected, this.fieldFormat);\r\n    } else {\r\n      fieldFormated = this.fieldFormat(objectSelected);\r\n    }\r\n\r\n    this.oldValue = isEmpty ? '' : fieldFormated;\r\n    this.inputEl.nativeElement.value = isEmpty ? '' : fieldFormated;\r\n  }\r\n\r\n  private initializeListeners(): void {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.updateVisibleItems();\r\n    });\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoMultiselectLiterals } from '../../index';\r\nimport { PoMultiselectOption } from '../po-multiselect-option.interface';\r\nimport { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.\r\n */\r\n@Component({\r\n  selector: 'po-multiselect-dropdown',\r\n  templateUrl: './po-multiselect-dropdown.component.html'\r\n})\r\nexport class PoMultiselectDropdownComponent {\r\n  /** Propriedade que indica se deve exibir o loading. */\r\n  @Input('p-searching') isServerSearching?: boolean = false;\r\n\r\n  /** Propriedade que indica se o campo de pesquisa deverá ser escondido. */\r\n  @Input('p-hide-search') hideSearch?: boolean = false;\r\n\r\n  /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */\r\n  @Input('p-literals') literals?: PoMultiselectLiterals;\r\n\r\n  /** Placeholder do campo de pesquisa. */\r\n  @Input('p-placeholder-search') placeholderSearch: string;\r\n\r\n  /** Propriedade que recebe a lista de opções selecionadas. */\r\n  @Input('p-selected-options') selectedOptions: Array<any> = [];\r\n\r\n  /** Propriedade que recebe a lista com todas as opções. */\r\n  @Input('p-options') options: Array<PoMultiselectOption> = [];\r\n\r\n  /** Propriedade que recebe a lista de opções que deverão ser criadas no dropdown. */\r\n  @Input('p-visible-options') visibleOptions: Array<PoMultiselectOption> = [];\r\n\r\n  /** Propriedade que indica se o campo \"Selecionar todos\" deverá ser escondido. */\r\n  @Input('p-hide-select-all') hideSelectAll?: boolean = false;\r\n\r\n  /** Evento disparado a cada tecla digitada na pesquisa. */\r\n  @Output('p-change-search') changeSearch = new EventEmitter();\r\n\r\n  /** Evento disparado a cada alteração na lista das opções selecionadas. */\r\n  @Output('p-change') change = new EventEmitter();\r\n\r\n  /**\r\n   * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.\r\n   * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento\r\n   * para notificar o componente principal que deve fechar o dropdown.\r\n   */\r\n  @Output('p-close-dropdown') closeDropdown = new EventEmitter();\r\n\r\n  @ViewChild('container', { read: ElementRef, static: true }) container: ElementRef;\r\n  @ViewChild('ulElement', { read: ElementRef, static: true }) ulElement: ElementRef;\r\n  @ViewChild('searchElement') searchElement: PoMultiselectSearchComponent;\r\n\r\n  scrollTop = 0;\r\n  show: boolean = false;\r\n\r\n  get hasOptions() {\r\n    return !!this.options?.length;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event'])\r\n  onKeydown(event: any) {\r\n    if (event.keyCode === 9) {\r\n      this.closeDropdown.emit();\r\n    }\r\n  }\r\n\r\n  scrollTo(index) {\r\n    this.scrollTop = index <= 2 ? 0 : index * 44 - 88;\r\n  }\r\n\r\n  isSelectedItem(option: PoMultiselectOption) {\r\n    return this.selectedOptions.some(selectedItem => selectedItem.value === option.value);\r\n  }\r\n\r\n  clickItem(check, option) {\r\n    this.updateSelectedValues(check, option);\r\n\r\n    if (!this.hideSearch) {\r\n      this.searchElement.setFocus();\r\n    }\r\n  }\r\n\r\n  onClickSelectAll() {\r\n    const selectedValues = this.selectedOptions.map(({ value }) => value);\r\n\r\n    if (this.everyVisibleOptionsSelected(selectedValues)) {\r\n      this.selectedOptions = [];\r\n    } else {\r\n      this.selectedOptions = this.uniqueSelectedOptions(selectedValues);\r\n    }\r\n\r\n    this.change.emit(this.selectedOptions);\r\n  }\r\n\r\n  updateSelectedValues(checked, option) {\r\n    if (checked) {\r\n      this.selectedOptions.push(option);\r\n    } else {\r\n      this.selectedOptions = this.selectedOptions.filter(selectedOption => selectedOption.value !== option.value);\r\n    }\r\n\r\n    this.change.emit(this.selectedOptions);\r\n  }\r\n\r\n  everyVisibleOptionsSelected(selectedValues) {\r\n    return this.visibleOptions.every(visibleOption => selectedValues.includes(visibleOption.value));\r\n  }\r\n\r\n  someVisibleOptionsSelected(selectedValues) {\r\n    return this.visibleOptions.some(visibleOption => selectedValues.includes(visibleOption.value));\r\n  }\r\n\r\n  getStateSelectAll() {\r\n    const selectedValues = this.selectedOptions.map(({ value }) => value);\r\n\r\n    if (this.everyVisibleOptionsSelected(selectedValues)) {\r\n      return true;\r\n    } else if (this.someVisibleOptionsSelected(selectedValues)) {\r\n      return null;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  callChangeSearch(event) {\r\n    this.changeSearch.emit(event);\r\n  }\r\n\r\n  controlVisibility(toOpen) {\r\n    this.show = toOpen;\r\n\r\n    setTimeout(() => {\r\n      if (toOpen && this.searchElement && !this.hideSearch) {\r\n        this.searchElement.setFocus();\r\n        this.searchElement.clean();\r\n      }\r\n    });\r\n  }\r\n\r\n  private uniqueSelectedOptions(selectedValues) {\r\n    const newSelectedOptions = [...this.selectedOptions];\r\n\r\n    for (const visibleOption of this.visibleOptions) {\r\n      if (!selectedValues.includes(visibleOption.value)) {\r\n        newSelectedOptions.push(visibleOption);\r\n      }\r\n    }\r\n\r\n    return newSelectedOptions;\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoMultiselectComponent\r\n *\r\n * @description\r\n *\r\n * Define o tipo de busca usado no po-multiselect.\r\n */\r\nexport enum PoMultiselectFilterMode {\r\n  /** Verifica se o texto *inicia* com o valor pesquisado. */\r\n  startsWith,\r\n  /** Verifica se o texto *contém* o valor pesquisado. */\r\n  contains,\r\n  /** Verifica se o texto *finaliza* com o valor pesquisado. */\r\n  endsWith\r\n}\r\n","import { EventEmitter, Input, OnInit, Output, Directive } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\n\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n  convertToBoolean,\r\n  isTypeof,\r\n  removeDuplicatedOptions,\r\n  removeUndefinedAndNullOptions,\r\n  sortOptionsByProperty\r\n} from '../../../utils/util';\r\nimport { requiredFailed } from './../validators';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\n\r\nimport { PoMultiselectFilterMode } from './po-multiselect-filter-mode.enum';\r\nimport { PoMultiselectLiterals } from './po-multiselect-literals.interface';\r\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { PoMultiselectFilter } from './po-multiselect-filter.interface';\r\nimport { PoMultiselectFilterService } from './po-multiselect-filter.service';\r\n\r\nconst PO_MULTISELECT_DEBOUNCE_TIME_DEFAULT = 400;\r\nconst PO_MULTISELECT_FIELD_LABEL_DEFAULT = 'label';\r\nconst PO_MULTISELECT_FIELD_VALUE_DEFAULT = 'value';\r\n\r\nexport const poMultiselectLiteralsDefault = {\r\n  en: <PoMultiselectLiterals>{\r\n    noData: 'No data found',\r\n    placeholderSearch: 'Search',\r\n    selectAll: 'Select all'\r\n  },\r\n  es: <PoMultiselectLiterals>{\r\n    noData: 'Datos no encontrados',\r\n    placeholderSearch: 'Busca',\r\n    selectAll: 'Seleccionar todo'\r\n  },\r\n  pt: <PoMultiselectLiterals>{\r\n    noData: 'Nenhum dado encontrado',\r\n    placeholderSearch: 'Buscar',\r\n    selectAll: 'Selecionar todos'\r\n  },\r\n  ru: <PoMultiselectLiterals>{\r\n    noData: 'Данные не найдены',\r\n    placeholderSearch: 'искать',\r\n    selectAll: 'Выбрать все'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O po-multiselect é um componente de múltipla seleção.\r\n * Este componente é recomendado para dar ao usuário a opção de selecionar vários itens em uma lista.\r\n *\r\n * Quando a lista possuir poucos itens, deve-se dar preferência para o uso do po-checkbox-group, por ser mais simples\r\n * e mais rápido para a seleção do usuário.\r\n *\r\n * Este componente também não deve ser utilizado em casos onde a seleção seja única. Nesses casos, deve-se utilizar o\r\n * po-select, po-combo ou po-radio-group.\r\n *\r\n * Com ele também é possível definir uma lista à partir da requisição de um serviço definido em `p-filter-service`.\r\n */\r\n@Directive()\r\nexport abstract class PoMultiselectBaseComponent implements ControlValueAccessor, OnInit, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Label no componente. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /** Mensagem apresentada enquanto o campo estiver vazio. */\r\n  @Input('p-placeholder') placeholder?: string = '';\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Placeholder do campo de pesquisa.\r\n   *\r\n   * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).\r\n   *\r\n   * @default `Buscar`\r\n   */\r\n  @Input('p-placeholder-search') placeholderSearch?: string = '';\r\n\r\n  /** Nome do componente. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica se o campo \"Selecionar todos\" será escondido.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-all') @InputBoolean() hideSelectAll: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Pode ser informada uma função que será disparada quando houver alterações no ngModel.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  selectedOptions: Array<PoMultiselectOption> = [];\r\n  visibleOptionsDropdown: Array<PoMultiselectOption> = [];\r\n  visibleDisclaimers = [];\r\n  isServerSearching = false;\r\n  isFirstFilter: boolean = true;\r\n  filterSubject = new Subject();\r\n  service: PoMultiselectFilterService;\r\n  defaultService: PoMultiselectFilterService;\r\n\r\n  // eslint-disable-next-line\r\n  protected onModelTouched: any = null;\r\n\r\n  protected clickOutListener: () => void;\r\n  protected resizeListener: () => void;\r\n  protected getObjectsByValuesSubscription: Subscription;\r\n\r\n  private _filterService?: PoMultiselectFilter | string;\r\n  private _debounceTime?: number = 400;\r\n  private _disabled?: boolean = false;\r\n  private _filterMode?: PoMultiselectFilterMode = PoMultiselectFilterMode.startsWith;\r\n  private _hideSearch?: boolean = false;\r\n  private _literals: PoMultiselectLiterals;\r\n  private _options: Array<PoMultiselectOption>;\r\n  private _required?: boolean = false;\r\n  private _sort?: boolean = false;\r\n  private _autoHeight: boolean = false;\r\n  private _fieldLabel?: string = PO_MULTISELECT_FIELD_LABEL_DEFAULT;\r\n  private _fieldValue?: string = PO_MULTISELECT_FIELD_VALUE_DEFAULT;\r\n  private language: string;\r\n\r\n  private lastLengthModel;\r\n  private onModelChange: any;\r\n  private validatorChange: any;\r\n  private autoHeightInitialValue: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Nesta propriedade pode ser informada a URL do serviço em que será realizado o filtro para carregamento da lista de itens no componente.\r\n   *\r\n   *Também existe a possibilidade de informar um serviço implementando a interface `PoMultiselectFilter`.\r\n   *\r\n   *Caso utilizado uma URL, o serviço deve ser retornado no padrão [API PO UI](https://po-ui.io/guides/api) e utilizar as propriedades `p-field-label` e `p-field-value` para a construção da lista de itens.\r\n   *\r\n   *Quando utilizada uma URL de serviço, então será concatenada nesta URL o valor que deseja-se filtrar da seguinte forma:\r\n   *\r\n   *```\r\n   * // caso filtrar por \"Peter\"\r\n   *  https://localhost:8080/api/heroes?filter=Peter\r\n   *```\r\n   *\r\n   *E caso iniciar o campo com valor, os itens serão buscados da seguinte forma:\r\n   *\r\n   *```\r\n   * // caso o valor do campo for [1234, 5678];\r\n   *  https://localhost:8080/api/heroes?value=1234,5678\r\n   *\r\n   * //O *value* é referente ao `fieldValue`.\r\n   *```\r\n   *\r\n   */\r\n  @Input('p-filter-service') set filterService(value: PoMultiselectFilter | string) {\r\n    if (value) {\r\n      this._filterService = value;\r\n      this.autoHeight = this.autoHeightInitialValue !== undefined ? this.autoHeightInitialValue : true;\r\n      this.options = [];\r\n    }\r\n  }\r\n\r\n  get filterService() {\r\n    return this._filterService;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define que a altura do componente será auto ajustável, possuindo uma altura minima porém a altura máxima será de acordo\r\n   * com o número de itens selecionados e a extensão dos mesmos, mantendo-os sempre visíveis.\r\n   *\r\n   * > O valor padrão será `true` quando houver serviço (`p-filter-service`).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-height') @InputBoolean() set autoHeight(value: boolean) {\r\n    this._autoHeight = value;\r\n    this.autoHeightInitialValue = value;\r\n  }\r\n\r\n  get autoHeight(): boolean {\r\n    return this._autoHeight;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Esta propriedade define em quanto tempo (em milissegundos), aguarda para acionar o evento de filtro após cada pressionamento de tecla.\r\n   *\r\n   * > Será utilizada apenas quando houver serviço (`p-filter-service`) e somente será aceito valor maior do que *zero*.\r\n   *\r\n   * @default `400`\r\n   */\r\n  @Input('p-debounce-time') set debounceTime(value: number) {\r\n    const parsedValue = parseInt(<any>value, 10);\r\n\r\n    this._debounceTime = !isNaN(parsedValue) && parsedValue > 0 ? parsedValue : PO_MULTISELECT_DEBOUNCE_TIME_DEFAULT;\r\n  }\r\n\r\n  get debounceTime(): number {\r\n    return this._debounceTime;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-multiselect`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoMultiselectLiterals = {\r\n   *    noData: 'Nenhum dado encontrado',\r\n   *    placeholderSearch: 'Buscar'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoMultiselectLiterals = {\r\n   *    noData: 'Sem dados'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\r\n   *\r\n   * ```\r\n   * <po-multiselect\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-po-multiselect>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoMultiselectLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poMultiselectLiteralsDefault[poLocaleDefault],\r\n        ...poMultiselectLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poMultiselectLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poMultiselectLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório. Esta propriedade é desconsiderada quando o campo está desabilitado (p-disabled).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = <any>required === '' ? true : convertToBoolean(required);\r\n    this.validateModel();\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = <any>disabled === '' ? true : convertToBoolean(disabled);\r\n    this.validateModel();\r\n\r\n    this.updateVisibleItems();\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Esconde o campo de pesquisa existente dentro do dropdown do po-multiselect.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-search') set hideSearch(hideSearch: boolean) {\r\n    this._hideSearch = <any>hideSearch === '' ? true : convertToBoolean(hideSearch);\r\n  }\r\n\r\n  get hideSearch() {\r\n    return this._hideSearch;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Nesta propriedade deve ser definida uma lista de objetos que implementam a interface PoMultiselectOption.\r\n   * Esta lista deve conter os valores e os labels que serão apresentados na tela.\r\n   *\r\n   * > Essa propriedade é imutável, ou seja, sempre que quiser atualizar a lista de opções disponíveis\r\n   * atualize a referência do objeto:\r\n   *\r\n   * ```\r\n   * // atualiza a referência do objeto garantindo a atualização do template\r\n   * this.options = [...this.options, { value: 'x', label: 'Nova opção' }];\r\n   *\r\n   * // evite, pois não atualiza a referência do objeto podendo gerar atrasos na atualização do template\r\n   * this.options.push({ value: 'x', label: 'Nova opção' });\r\n   * ```\r\n   */\r\n  @Input('p-options') set options(options: Array<PoMultiselectOption>) {\r\n    this._options = options;\r\n\r\n    this.validAndSortOptions();\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que a lista definida na propriedade p-options será ordenada pelo label antes de ser apresentada no\r\n   * dropdown.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-sort') set sort(sort: boolean) {\r\n    this._sort = <any>sort === '' ? true : convertToBoolean(sort);\r\n\r\n    this.validAndSortOptions();\r\n  }\r\n\r\n  get sort() {\r\n    return this._sort;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o modo de pesquisa utilizado no campo de busca, quando habilitado.\r\n   * Valores definidos no enum: PoMultiselectFilterMode\r\n   *\r\n   * @default `startsWith`\r\n   */\r\n  @Input('p-filter-mode') set filterMode(filterMode: PoMultiselectFilterMode) {\r\n    this._filterMode = filterMode in PoMultiselectFilterMode ? filterMode : PoMultiselectFilterMode.startsWith;\r\n    switch (this._filterMode.toString()) {\r\n      case 'startsWith':\r\n        this._filterMode = PoMultiselectFilterMode.startsWith;\r\n        break;\r\n      case 'contains':\r\n        this._filterMode = PoMultiselectFilterMode.contains;\r\n        break;\r\n      case 'endsWith':\r\n        this._filterMode = PoMultiselectFilterMode.endsWith;\r\n        break;\r\n    }\r\n  }\r\n\r\n  get filterMode() {\r\n    return this._filterMode;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Deve ser informado o nome da propriedade do objeto que será utilizado para a conversão dos itens apresentados na lista do componente\r\n   * (`p-options`), esta propriedade será responsável pelo texto de apresentação de cada item da lista.\r\n   *\r\n   * Necessário quando informar o serviço como URL e o mesmo não estiver retornando uma lista de objetos no padrão da interface\r\n   * `PoMultiSelectOption`.\r\n   *\r\n   * @default `label`\r\n   */\r\n  @Input('p-field-label') set fieldLabel(value: string) {\r\n    this._fieldLabel = value || PO_MULTISELECT_FIELD_LABEL_DEFAULT;\r\n\r\n    if (isTypeof(this.filterService, 'string') && this.service) {\r\n      this.service.fieldLabel = this._fieldLabel;\r\n    }\r\n  }\r\n\r\n  get fieldLabel() {\r\n    return this._fieldLabel;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Deve ser informado o nome da propriedade do objeto que será utilizado para a conversão dos itens apresentados na lista do componente\r\n   * (`p-options`), esta propriedade será responsável pelo valor de cada item da lista.\r\n   *\r\n   * Necessário quando informar o serviço como URL e o mesmo não estiver retornando uma lista de objetos no padrão da interface\r\n   * `PoMultiSelectOption`.\r\n   *\r\n   * @default `value`\r\n   */\r\n  @Input('p-field-value') set fieldValue(value: string) {\r\n    this._fieldValue = value || PO_MULTISELECT_FIELD_VALUE_DEFAULT;\r\n\r\n    if (isTypeof(this.filterService, 'string') && this.service) {\r\n      this.service.fieldValue = this._fieldValue;\r\n    }\r\n  }\r\n\r\n  get fieldValue() {\r\n    return this._fieldValue;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.filterService) {\r\n      this.setService(this.filterService);\r\n    }\r\n\r\n    this.filterSubject\r\n      .pipe(\r\n        debounceTime(this.debounceTime),\r\n        distinctUntilChanged(),\r\n        tap(() => (this.isServerSearching = true)),\r\n        switchMap((search: string) => this.applyFilter(search)),\r\n        tap(() => (this.isServerSearching = false))\r\n      )\r\n      .subscribe();\r\n\r\n    this.updateList(this.options);\r\n  }\r\n\r\n  setService(service: PoMultiselectFilter | string) {\r\n    if (isTypeof(service, 'object')) {\r\n      this.service = <PoMultiselectFilterService>service;\r\n    } else {\r\n      this.service = this.defaultService;\r\n      this.service.configProperties(<string>service, this.fieldLabel, this.fieldValue);\r\n    }\r\n\r\n    this.isFirstFilter = true;\r\n  }\r\n\r\n  validAndSortOptions() {\r\n    if (this.options && this.options.length) {\r\n      removeUndefinedAndNullOptions(this.options);\r\n      removeDuplicatedOptions(this.options);\r\n      this.setUndefinedLabels(this.options);\r\n\r\n      if (this.sort) {\r\n        sortOptionsByProperty(this.options, 'label');\r\n      }\r\n    }\r\n  }\r\n\r\n  setUndefinedLabels(options) {\r\n    options.forEach(option => {\r\n      if (!option['label']) {\r\n        option.label = option.value;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateList(options: Array<PoMultiselectOption>) {\r\n    if (options) {\r\n      this.visibleOptionsDropdown = options;\r\n    }\r\n  }\r\n\r\n  callOnChange(selectedOptions: Array<PoMultiselectOption>) {\r\n    if (this.onModelChange) {\r\n      this.onModelChange(this.getValuesFromOptions(selectedOptions));\r\n      this.eventChange(selectedOptions);\r\n    }\r\n  }\r\n\r\n  eventChange(selectedOptions) {\r\n    if (selectedOptions && this.lastLengthModel !== selectedOptions.length) {\r\n      this.change.emit(selectedOptions);\r\n    }\r\n    this.lastLengthModel = selectedOptions ? selectedOptions.length : null;\r\n  }\r\n\r\n  getValuesFromOptions(selectedOptions: Array<PoMultiselectOption>) {\r\n    return selectedOptions && selectedOptions.length ? selectedOptions.map(option => option.value) : [];\r\n  }\r\n\r\n  getLabelByValue(value) {\r\n    const index = this.options.findIndex(option => option.value === value);\r\n    return this.options[index].label;\r\n  }\r\n\r\n  searchByLabel(search: string, options: Array<PoMultiselectOption>, filterMode: PoMultiselectFilterMode) {\r\n    if (search && options && options.length) {\r\n      const newOptions: Array<PoMultiselectOption> = [];\r\n      options.forEach(option => {\r\n        if (option.label && this.compareMethod(search, option, filterMode)) {\r\n          newOptions.push(option);\r\n        }\r\n      });\r\n      this.visibleOptionsDropdown = newOptions;\r\n    } else {\r\n      this.visibleOptionsDropdown = [...options];\r\n    }\r\n  }\r\n\r\n  compareMethod(search: string, option: PoMultiselectOption, filterMode: PoMultiselectFilterMode) {\r\n    switch (filterMode) {\r\n      case PoMultiselectFilterMode.startsWith:\r\n        return this.startsWith(search, option);\r\n      case PoMultiselectFilterMode.contains:\r\n        return this.contains(search, option);\r\n      case PoMultiselectFilterMode.endsWith:\r\n        return this.endsWith(search, option);\r\n    }\r\n  }\r\n\r\n  startsWith(search: string, option: PoMultiselectOption) {\r\n    return option.label.toLowerCase().startsWith(search.toLowerCase());\r\n  }\r\n\r\n  contains(search: string, option: PoMultiselectOption) {\r\n    return option.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n  }\r\n\r\n  endsWith(search: string, option: PoMultiselectOption) {\r\n    return option.label.toLowerCase().endsWith(search.toLowerCase());\r\n  }\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, c.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  updateSelectedOptions(newOptions: Array<any>, options = this.options) {\r\n    this.selectedOptions = [];\r\n\r\n    if (newOptions.length === 0) {\r\n      this.lastLengthModel = 0;\r\n    }\r\n\r\n    if (this.filterService) {\r\n      this.selectedOptions = newOptions;\r\n    } else {\r\n      newOptions.forEach(newOption => {\r\n        options.forEach(option => {\r\n          if (option.value === newOption.value) {\r\n            this.selectedOptions.push(option);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    this.updateVisibleItems();\r\n  }\r\n\r\n  writeValue(values: any): void {\r\n    values = values || [];\r\n\r\n    if (this.service && values.length) {\r\n      this.getObjectsByValuesSubscription = this.service.getObjectsByValues(values).subscribe(options => {\r\n        this.updateSelectedOptions(options);\r\n        this.callOnChange(this.selectedOptions);\r\n      });\r\n    } else {\r\n      // Validar se todos os items existem entre os options, senão atualizar o model\r\n      this.updateSelectedOptions(values.map(value => ({ value })));\r\n\r\n      if (this.selectedOptions && this.selectedOptions.length < values.length) {\r\n        this.callOnChange(this.selectedOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  private validateModel() {\r\n    if (this.validatorChange) {\r\n      this.validatorChange();\r\n    }\r\n  }\r\n\r\n  abstract applyFilter(value?: string): Observable<Array<PoMultiselectOption>>;\r\n  abstract updateVisibleItems(): void;\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { PoMultiselectFilter } from './po-multiselect-filter.interface';\r\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\r\n\r\n@Injectable()\r\nexport class PoMultiselectFilterService implements PoMultiselectFilter {\r\n  fieldLabel: string = 'label';\r\n  fieldValue: string = 'value';\r\n\r\n  private _url: string;\r\n  private messages = [];\r\n\r\n  get url(): string {\r\n    return this._url;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getFilteredData({ value }: any): Observable<Array<PoMultiselectOption>> {\r\n    const params = value ? { filter: value } : {};\r\n    return this.http\r\n      .get(this.url, {\r\n        params\r\n      })\r\n      .pipe(map(response => this.parseToArrayMultiselectOptions(response['items'])));\r\n  }\r\n\r\n  getObjectsByValues(value: Array<string | number>): Observable<Array<PoMultiselectOption>> {\r\n    return this.http\r\n      .get(`${this.url}?${this.fieldValue}=${value.toString()}`)\r\n      .pipe(map(response => this.parseToArrayMultiselectOptions(response['items'])));\r\n  }\r\n\r\n  configProperties(url: string, fieldLabel: string, fieldValue: string) {\r\n    this._url = url;\r\n    this.fieldLabel = fieldLabel;\r\n    this.fieldValue = fieldValue;\r\n  }\r\n\r\n  private parseToArrayMultiselectOptions(items: Array<any>): Array<PoMultiselectOption> {\r\n    if (items && items.length > 0) {\r\n      return items.map(item => this.parseToMultiselectOption(item));\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private parseToMultiselectOption(item: any): PoMultiselectOption {\r\n    const label = item[this.fieldLabel];\r\n    const value = item[this.fieldValue];\r\n\r\n    return { label, value };\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  forwardRef,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\nimport { isMobile } from './../../../utils/util';\r\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\r\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { PoMultiselectBaseComponent } from './po-multiselect-base.component';\r\nimport { PoMultiselectOption } from './po-multiselect-option.interface';\r\nimport { PoMultiselectFilterService } from './po-multiselect-filter.service';\r\n\r\nconst poMultiselectContainerOffset = 8;\r\nconst poMultiselectContainerPositionDefault = 'bottom';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  PoMultiselectFilterService,\r\n  PoControlPositionService,\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoMultiselectComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoMultiselectComponent),\r\n    multi: true\r\n  }\r\n];\r\n\r\n/**\r\n * @docsExtends PoMultiselectBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-multiselect-basic\" title=\"PO Multiselect Basic\">\r\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-basic/sample-po-multiselect-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-labs\" title=\"PO Multiselect Labs\">\r\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-labs/sample-po-multiselect-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-vacation\" title=\"PO Multiselect - Vacation\">\r\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-vacation/sample-po-multiselect-vacation.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-vacation-reactive-form\" title=\"PO Multiselect - Vacation Reactive Form\">\r\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-vacation-reactive-form/sample-po-multiselect-vacation-reactive-form.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-multiselect-heroes\" title=\"PO Multiselect - Heroes - using API\">\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.html\"> </file>\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.component.ts\"> </file>\r\n *   <file name=\"sample-po-multiselect-heroes/sample-po-multiselect-heroes.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-multiselect',\r\n  templateUrl: './po-multiselect.component.html',\r\n  providers\r\n})\r\nexport class PoMultiselectComponent\r\n  extends PoMultiselectBaseComponent\r\n  implements AfterViewInit, DoCheck, OnDestroy, OnChanges {\r\n  @ViewChild('dropdownElement', { read: ElementRef, static: true }) dropdownElement: ElementRef;\r\n  @ViewChild('dropdownElement', { static: true }) dropdown;\r\n  @ViewChild('iconElement', { read: ElementRef, static: true }) iconElement: ElementRef;\r\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\r\n\r\n  disclaimerOffset = 0;\r\n  dropdownIcon: string = 'po-icon-arrow-down';\r\n  dropdownOpen: boolean = false;\r\n  initialized = false;\r\n  positionDisclaimerExtra;\r\n  timeoutResize;\r\n  visibleElement = false;\r\n\r\n  private isCalculateVisibleItems: boolean = true;\r\n  private cacheOptions: Array<PoMultiselectOption>;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private el: ElementRef,\r\n    private controlPosition: PoControlPositionService,\r\n    public defaultService: PoMultiselectFilterService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(languageService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n    this.initialized = true;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.filterService || changes.fieldValue || changes.fieldLabel) {\r\n      this.setService(this.filterService);\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const inputWidth = this.inputElement.nativeElement.offsetWidth;\r\n    // Permite que os disclaimers sejam calculados na primeira vez que o componente torna-se visível,\r\n    // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.\r\n    if ((inputWidth && !this.visibleElement && this.initialized) || (inputWidth && this.isCalculateVisibleItems)) {\r\n      this.debounceResize();\r\n      this.visibleElement = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n    this.getObjectsByValuesSubscription?.unsubscribe();\r\n    this.filterSubject?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoMultiselectComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoMultiselectComponent, { static: true }) multiselect: PoMultiselectComponent;\r\n   *\r\n   * focusMultiselect() {\r\n   *   this.multiselect.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputElement.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  getInputWidth() {\r\n    return this.el.nativeElement.querySelector('.po-input').offsetWidth - 40;\r\n  }\r\n\r\n  getDisclaimersWidth() {\r\n    const disclaimers = this.el.nativeElement.querySelectorAll('po-disclaimer');\r\n    return Array.from(disclaimers).map(disclaimer => disclaimer['offsetWidth']);\r\n  }\r\n\r\n  calculateVisibleItems() {\r\n    const disclaimersWidth = this.getDisclaimersWidth();\r\n    const inputWidth = this.getInputWidth();\r\n    const extraDisclaimerSize = 38;\r\n    const disclaimersVisible = disclaimersWidth[0];\r\n\r\n    this.visibleDisclaimers = [];\r\n\r\n    if (inputWidth > 0) {\r\n      let sum = 0;\r\n      let i = 0;\r\n      for (i = 0; i < this.selectedOptions.length; i++) {\r\n        sum += disclaimersWidth[i];\r\n        this.visibleDisclaimers.push(this.selectedOptions[i]);\r\n\r\n        if (sum > inputWidth) {\r\n          sum -= disclaimersWidth[i];\r\n          this.isCalculateVisibleItems = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (disclaimersVisible || !this.selectedOptions.length) {\r\n        if (i === this.selectedOptions.length) {\r\n          this.isCalculateVisibleItems = false;\r\n          return;\r\n        }\r\n\r\n        if (sum + extraDisclaimerSize > inputWidth) {\r\n          this.visibleDisclaimers.splice(-2, 2);\r\n          const label = '+' + (this.selectedOptions.length + 1 - i).toString();\r\n          this.visibleDisclaimers.push({ value: '', label: label });\r\n        } else {\r\n          this.visibleDisclaimers.splice(-1, 1);\r\n          const label = '+' + (this.selectedOptions.length - i).toString();\r\n          this.visibleDisclaimers.push({ value: '', label: label });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  changeItems(changedItems) {\r\n    this.updateSelectedOptions(changedItems);\r\n    this.callOnChange(this.selectedOptions);\r\n\r\n    if (this.autoHeight && this.dropdownOpen) {\r\n      this.changeDetector.detectChanges();\r\n      this.adjustContainerPosition();\r\n    }\r\n  }\r\n\r\n  updateVisibleItems() {\r\n    if (this.selectedOptions) {\r\n      this.visibleDisclaimers = [].concat(this.selectedOptions);\r\n    }\r\n\r\n    this.debounceResize();\r\n\r\n    // quando estiver dentro de modal\r\n    if (!this.inputElement.nativeElement.offsetWidth) {\r\n      this.isCalculateVisibleItems = true;\r\n    }\r\n  }\r\n\r\n  debounceResize() {\r\n    if (!this.autoHeight) {\r\n      clearTimeout(this.timeoutResize);\r\n      this.timeoutResize = setTimeout(() => {\r\n        this.calculateVisibleItems();\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onModelTouched?.();\r\n  }\r\n\r\n  onKeyDown(event?: any) {\r\n    if (event.keyCode === PoKeyCodeEnum.arrowUp || event.keyCode === PoKeyCodeEnum.arrowDown) {\r\n      event.preventDefault();\r\n      this.controlDropdownVisibility(true);\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === PoKeyCodeEnum.tab) {\r\n      this.controlDropdownVisibility(false);\r\n    }\r\n  }\r\n\r\n  toggleDropdownVisibility() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    if (this.filterService) {\r\n      this.applyFilterInFirstClick();\r\n    }\r\n\r\n    this.controlDropdownVisibility(!this.dropdownOpen);\r\n  }\r\n\r\n  openDropdown(toOpen) {\r\n    if (toOpen && !this.disabled) {\r\n      this.controlDropdownVisibility(true);\r\n    }\r\n  }\r\n\r\n  controlDropdownVisibility(toOpen: boolean) {\r\n    toOpen ? this.open() : this.close();\r\n  }\r\n\r\n  scrollToSelectedOptions() {\r\n    if (this.selectedOptions && this.selectedOptions.length) {\r\n      const index = this.options.findIndex(option => option.value === this.selectedOptions[0].value);\r\n      this.dropdown.scrollTo(index);\r\n    }\r\n  }\r\n\r\n  setVisibleOptionsDropdown(options) {\r\n    this.visibleOptionsDropdown = options;\r\n  }\r\n\r\n  changeSearch(event) {\r\n    if (event && event.value !== undefined) {\r\n      if (this.filterService) {\r\n        this.filterSubject.next(event.value);\r\n      } else {\r\n        this.searchByLabel(event.value, this.options, this.filterMode);\r\n      }\r\n    } else {\r\n      this.setVisibleOptionsDropdown(this.options);\r\n    }\r\n\r\n    // timeout necessário para reposicionar corretamente quando dropdown estiver pra cima do input e realizar busca no input\r\n    setTimeout(() => this.adjustContainerPosition());\r\n  }\r\n\r\n  closeDisclaimer(value) {\r\n    const index = this.selectedOptions.findIndex(option => option.value === value);\r\n    this.selectedOptions.splice(index, 1);\r\n\r\n    this.updateVisibleItems();\r\n    this.callOnChange(this.selectedOptions);\r\n  }\r\n\r\n  wasClickedOnToggle(event: MouseEvent): void {\r\n    if (\r\n      this.dropdownOpen &&\r\n      !this.inputElement.nativeElement.contains(event.target) &&\r\n      !this.iconElement.nativeElement.contains(event.target) &&\r\n      !this.dropdownElement.nativeElement.contains(event.target)\r\n    ) {\r\n      this.controlDropdownVisibility(false);\r\n    }\r\n  }\r\n\r\n  applyFilter(value: string = ''): Observable<Array<PoMultiselectOption>> {\r\n    const param = { property: 'label', value: value };\r\n    return this.service.getFilteredData(param).pipe(\r\n      catchError(err => {\r\n        this.isServerSearching = false;\r\n        return of([]);\r\n      }),\r\n      tap((options: Array<PoMultiselectOption>) => {\r\n        this.setOptionsByApplyFilter(options);\r\n      })\r\n    );\r\n  }\r\n\r\n  private applyFilterInFirstClick() {\r\n    if (this.isFirstFilter) {\r\n      this.isServerSearching = true;\r\n\r\n      // necessario enviar um objeto string vazia para refazer a busca, quando alterar filterService, fieldValue e fieldLabel\r\n      // pois temos o distinctUntilChange no pipe do filterSubject\r\n      /* eslint-disable no-new-wrappers */\r\n      this.filterSubject.next(new String());\r\n    } else {\r\n      this.options = [...this.cacheOptions];\r\n    }\r\n  }\r\n\r\n  private setOptionsByApplyFilter(items: Array<PoMultiselectOption>) {\r\n    if (this.isFirstFilter) {\r\n      this.cacheOptions = [...items];\r\n      this.isFirstFilter = false;\r\n    }\r\n\r\n    this.options = [...items];\r\n    this.setVisibleOptionsDropdown(this.options);\r\n  }\r\n\r\n  private adjustContainerPosition(): void {\r\n    this.controlPosition.adjustPosition(poMultiselectContainerPositionDefault);\r\n  }\r\n\r\n  private close(): void {\r\n    this.dropdownIcon = 'po-icon-arrow-down';\r\n    this.dropdownOpen = false;\r\n\r\n    this.dropdown.controlVisibility(false);\r\n    this.setVisibleOptionsDropdown(this.options);\r\n\r\n    this.removeListeners();\r\n  }\r\n\r\n  private initializeListeners(): void {\r\n    this.clickOutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnToggle(event);\r\n    });\r\n\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.updateVisibleItems();\r\n\r\n      isMobile() ? this.adjustContainerPosition() : this.close();\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onScroll = (): void => {\r\n    this.adjustContainerPosition();\r\n  };\r\n\r\n  private open(): void {\r\n    this.dropdownIcon = 'po-icon-arrow-up';\r\n    this.dropdownOpen = true;\r\n\r\n    this.dropdown.controlVisibility(true);\r\n    this.setVisibleOptionsDropdown(this.options);\r\n    this.initializeListeners();\r\n    this.scrollToSelectedOptions();\r\n\r\n    this.changeDetector.detectChanges();\r\n    this.setPositionDropdown();\r\n  }\r\n\r\n  private removeListeners(): void {\r\n    if (this.clickOutListener) {\r\n      this.clickOutListener();\r\n    }\r\n\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private setPositionDropdown(): void {\r\n    this.controlPosition.setElements(\r\n      this.dropdown.container.nativeElement,\r\n      poMultiselectContainerOffset,\r\n      this.inputElement,\r\n      ['top', 'bottom'],\r\n      true\r\n    );\r\n\r\n    this.adjustContainerPosition();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que constrói cada item no dropdown, contendo o checkbox e o label.\r\n */\r\n@Component({\r\n  selector: 'po-multiselect-item',\r\n  templateUrl: './po-multiselect-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoMultiselectItemComponent {\r\n  /** Rótulo do item. */\r\n  @Input('p-label') label: string;\r\n\r\n  /** Esta propriedade indica se o campo está selecionado, indenterminate ou não. */\r\n  @Input('p-selected') selected?: boolean = false;\r\n\r\n  /** Evento que será disparado toda vez que o usuário marcar ou desmarcar um item. */\r\n  @Output('p-change') change = new EventEmitter();\r\n\r\n  itemClicked() {\r\n    this.selected = !this.selected;\r\n    this.change.emit(this.selected);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { isTypeof } from '../../../../utils/util';\r\n\r\nimport { PoMultiselectLiterals } from '../../index';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente de pesquisa que será criado dentro do dropdown do `po-multiselect`.\r\n */\r\n@Component({\r\n  selector: 'po-multiselect-search',\r\n  templateUrl: './po-multiselect-search.component.html'\r\n})\r\nexport class PoMultiselectSearchComponent {\r\n  @ViewChild('inputElement', { read: ElementRef, static: true }) inputElement: ElementRef;\r\n\r\n  /** Propriedade que recebe as literais definidas no `po-multiselect`. */\r\n  @Input('p-literals') literals?: PoMultiselectLiterals;\r\n\r\n  /** Evento que será disparado a cada tecla digitada no campo de busca. */\r\n  @Output('p-change') change = new EventEmitter();\r\n\r\n  private _placeholder?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Placeholder do campo de pesquisa.\r\n   *\r\n   * > Caso o mesmo não seja informado, o valor padrão será traduzido com base no idioma do navegador (pt, es e en).\r\n   *\r\n   * @default `Buscar`\r\n   */\r\n  @Input('p-placeholder') set placeholder(placeholder: string) {\r\n    this._placeholder = placeholder && isTypeof(placeholder, 'string') ? placeholder : this.literals.placeholderSearch;\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder || this.literals.placeholderSearch;\r\n  }\r\n\r\n  get inputValue() {\r\n    return this.inputElement.nativeElement.value;\r\n  }\r\n\r\n  onChange(event) {\r\n    this.change.emit({ event: event, value: this.inputElement.nativeElement.value });\r\n  }\r\n\r\n  setFocus() {\r\n    this.inputElement.nativeElement.focus();\r\n  }\r\n\r\n  clean() {\r\n    this.inputElement.nativeElement.value = '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PoRichTextService {\r\n  private model = new Subject<string>();\r\n\r\n  emitModel(value: string) {\r\n    this.model.next(value);\r\n  }\r\n\r\n  getModel() {\r\n    return this.model.asObservable();\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { isFirefox, isIE, isIEOrEdge, openExternalLink } from './../../../../utils/util';\r\nimport { PoKeyCodeEnum } from './../../../../enums/po-key-code.enum';\r\nimport { PoRichTextService } from '../po-rich-text.service';\r\n\r\nconst poRichTextBodyCommands = [\r\n  'bold',\r\n  'italic',\r\n  'underline',\r\n  'justifyleft',\r\n  'justifycenter',\r\n  'justifyright',\r\n  'justifyfull',\r\n  'insertUnorderedList',\r\n  'Createlink'\r\n];\r\n\r\n@Component({\r\n  selector: 'po-rich-text-body',\r\n  templateUrl: './po-rich-text-body.component.html'\r\n})\r\nexport class PoRichTextBodyComponent implements OnInit, OnDestroy {\r\n  @ViewChild('bodyElement', { static: true }) bodyElement: ElementRef;\r\n\r\n  @Input('p-height') height?: string;\r\n\r\n  @Input('p-model-value') modelValue?: string;\r\n\r\n  @Input('p-placeholder') placeholder?: string;\r\n\r\n  @Input('p-readonly') readonly?: string;\r\n\r\n  @Output('p-change') change = new EventEmitter<any>();\r\n\r\n  @Output('p-commands') commands = new EventEmitter<any>();\r\n\r\n  @Output('p-selected-link') selectedLink = new EventEmitter<any>();\r\n\r\n  @Output('p-shortcut-command') shortcutCommand = new EventEmitter<any>();\r\n\r\n  @Output('p-value') value = new EventEmitter<any>();\r\n\r\n  @Output('p-blur') blur = new EventEmitter<any>();\r\n\r\n  private isLinkEditing: boolean;\r\n  private linkElement: any;\r\n  private timeoutChange: any;\r\n  private valueBeforeChange: any;\r\n  private modelSubscription: Subscription;\r\n\r\n  constructor(private richTextService: PoRichTextService) {}\r\n\r\n  ngOnInit() {\r\n    this.bodyElement.nativeElement.designMode = 'on';\r\n\r\n    this.modelSubscription = this.richTextService.getModel().subscribe(modelValue => {\r\n      this.modelValue = modelValue;\r\n      this.bodyElement.nativeElement.innerHTML = '';\r\n      this.updateValueWithModelValue();\r\n      this.addClickListenerOnAnchorElements();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.modelSubscription?.unsubscribe();\r\n  }\r\n\r\n  executeCommand(command: string | { command: any; value: string | any }) {\r\n    this.bodyElement.nativeElement.focus();\r\n\r\n    if (typeof command === 'object') {\r\n      if (command.command === 'InsertHTML') {\r\n        const {\r\n          command: linkCommand,\r\n          value: { urlLink },\r\n          value: { urlLinkText }\r\n        } = command;\r\n\r\n        this.handleCommandLink(linkCommand, urlLink, urlLinkText);\r\n      } else {\r\n        document.execCommand(command.command, false, command.value);\r\n      }\r\n    } else {\r\n      document.execCommand(command, false, null);\r\n    }\r\n\r\n    this.updateModel();\r\n    this.value.emit(this.modelValue);\r\n  }\r\n\r\n  linkEditing(event) {\r\n    this.isLinkEditing = !!event;\r\n  }\r\n\r\n  onBlur() {\r\n    this.blur.emit();\r\n    if (this.modelValue !== this.valueBeforeChange) {\r\n      clearTimeout(this.timeoutChange);\r\n      this.timeoutChange = setTimeout(() => {\r\n        this.change.emit(this.modelValue);\r\n      }, 200);\r\n    }\r\n  }\r\n\r\n  focus(): void {\r\n    this.bodyElement.nativeElement.focus();\r\n  }\r\n\r\n  onClick() {\r\n    this.emitSelectionCommands();\r\n  }\r\n\r\n  onFocus() {\r\n    this.valueBeforeChange = this.modelValue;\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    const keyK = event.keyCode === PoKeyCodeEnum.keyK;\r\n    const isLinkShortcut = (keyK && event.ctrlKey) || (keyK && event.metaKey);\r\n\r\n    if (isLinkShortcut) {\r\n      event.preventDefault();\r\n      this.shortcutCommand.emit();\r\n    }\r\n\r\n    this.toggleCursorOnLink(event, 'add');\r\n  }\r\n\r\n  onKeyUp(event: any) {\r\n    this.toggleCursorOnLink(event, 'remove');\r\n\r\n    this.removeBrElement();\r\n    this.updateModel();\r\n    this.emitSelectionCommands();\r\n  }\r\n\r\n  onPaste() {\r\n    this.update();\r\n    setTimeout(() => this.addClickListenerOnAnchorElements());\r\n  }\r\n\r\n  update() {\r\n    setTimeout(() => this.updateModel());\r\n\r\n    setTimeout(() => {\r\n      this.removeBrElement();\r\n      this.updateModel();\r\n      this.emitSelectionCommands();\r\n    });\r\n  }\r\n\r\n  private addClickListenerOnAnchorElements() {\r\n    this.bodyElement.nativeElement.querySelectorAll('a').forEach(element => {\r\n      element.addEventListener('click', this.onAnchorClick);\r\n    });\r\n  }\r\n\r\n  private emitSelectionCommands() {\r\n    const commands = poRichTextBodyCommands.filter(command => document.queryCommandState(command));\r\n    const rgbColor = document.queryCommandValue('ForeColor');\r\n\r\n    let hexColor;\r\n    if (!isIE()) {\r\n      hexColor = this.rgbToHex(rgbColor);\r\n    }\r\n\r\n    if (this.isCursorPositionedInALink()) {\r\n      commands.push('Createlink');\r\n    }\r\n\r\n    this.selectedLink.emit(this.linkElement); // importante ficar fora do if para emitir mesmo undefined.\r\n    this.commands.emit({ commands, hexColor });\r\n  }\r\n\r\n  private getTextSelection() {\r\n    const textSelection = document.getSelection();\r\n    if (!textSelection) {\r\n      return;\r\n    }\r\n    const focusNode = textSelection.focusNode ? textSelection.focusNode.parentElement : undefined;\r\n    const anchorNode = textSelection.anchorNode ? textSelection.anchorNode.parentNode : undefined;\r\n    const node = focusNode || anchorNode;\r\n    let tagName;\r\n\r\n    if (node) {\r\n      tagName = node['tagName'] || node['nodeName'];\r\n      return {\r\n        node,\r\n        tagName\r\n      };\r\n    }\r\n  }\r\n\r\n  private handleCommandLink(linkCommand: string, urlLink: string, urlLinkText: string) {\r\n    if (isIE()) {\r\n      this.insertHtmlLinkElement(urlLink, urlLinkText);\r\n    } else {\r\n      // '&nbsp;' necessário para o cursor não ficar preso dentro do link no Firefox.\r\n      const linkValue =\r\n        isFirefox() && !this.isLinkEditing\r\n          ? `&nbsp;${this.makeLinkTag(urlLink, urlLinkText)}&nbsp;`\r\n          : this.makeLinkTag(urlLink, urlLinkText);\r\n\r\n      document.execCommand(linkCommand, false, linkValue);\r\n    }\r\n\r\n    this.addClickListenerOnAnchorElements();\r\n  }\r\n\r\n  // tratamento específico para IE pois não suporta o comando 'insertHTML'.\r\n  private insertHtmlLinkElement(urlLink: string, urlLinkText: string) {\r\n    const selection = document.getSelection();\r\n    const selectionRange = selection.getRangeAt(0);\r\n    const elementLink = document.createElement('a');\r\n    const elementlinkText = document.createTextNode(urlLinkText);\r\n\r\n    elementLink.appendChild(elementlinkText);\r\n    elementLink.href = urlLink;\r\n    elementLink.setAttribute('target', '_blank');\r\n    elementLink.classList.add('po-rich-text-link');\r\n\r\n    selectionRange.deleteContents();\r\n    selectionRange.insertNode(elementLink);\r\n  }\r\n\r\n  private isCursorPositionedInALink(): boolean {\r\n    const textSelection = this.getTextSelection();\r\n    this.linkElement = undefined;\r\n\r\n    let isLink = false;\r\n\r\n    if (textSelection && textSelection.node && textSelection.tagName === 'A') {\r\n      this.linkElement = textSelection.node;\r\n      isLink = true;\r\n    } else if ((isFirefox() || isIEOrEdge()) && this.verifyCursorPositionInFirefoxIEEdge()) {\r\n      isLink = true;\r\n    } else {\r\n      isLink = textSelection ? this.isParentNodeAnchor(textSelection) : false;\r\n    }\r\n    return isLink;\r\n  }\r\n\r\n  private isParentNodeAnchor(textSelection): boolean {\r\n    let element = textSelection.node;\r\n    let isLink = false;\r\n\r\n    while (element && (element.tagName !== null || element.nodeName !== null)) {\r\n      if (element.tagName === 'A' || element.nodeName === 'A') {\r\n        this.linkElement = element;\r\n        isLink = true;\r\n        return isLink;\r\n      }\r\n      element = element.parentElement || element.parentNode;\r\n    }\r\n\r\n    this.linkElement = undefined;\r\n    return isLink;\r\n  }\r\n\r\n  private makeLinkTag(urlLink: string, urlLinkText: string) {\r\n    return `<a class=\"po-rich-text-link\" href=\"${urlLink}\" target=\"_blank\">${urlLinkText || urlLink}</a>`;\r\n  }\r\n\r\n  private onAnchorClick = event => {\r\n    const { target, ctrlKey, metaKey } = event;\r\n    let url;\r\n    let elementLink;\r\n\r\n    if (ctrlKey || metaKey) {\r\n      if (event.path) {\r\n        event.path.forEach(element => {\r\n          if (element.nodeName === 'A') {\r\n            url = element.href;\r\n            elementLink = element;\r\n          }\r\n        });\r\n      } else {\r\n        url = target.attributes.href.value;\r\n        elementLink = target;\r\n      }\r\n      openExternalLink(url);\r\n      elementLink.classList.remove('po-clickable');\r\n    }\r\n  };\r\n\r\n  // Tratamento necessário para eliminar a tag <br> criada no firefox quando o body for limpo.\r\n  private removeBrElement() {\r\n    const bodyElement = this.bodyElement.nativeElement;\r\n\r\n    if (!bodyElement.innerText.trim() && bodyElement.childNodes.length === 1 && bodyElement.querySelector('br')) {\r\n      bodyElement.querySelector('br').remove();\r\n    }\r\n  }\r\n\r\n  private rgbToHex(rgb) {\r\n    // Tratamento necessário para converter o código rgb para hexadecimal.\r\n    const sep = rgb.indexOf(',') > -1 ? ',' : ' ';\r\n    rgb = rgb.substr(4).split(')')[0].split(sep);\r\n\r\n    let r = (+rgb[0]).toString(16);\r\n    let g = (+rgb[1]).toString(16);\r\n    let b = (+rgb[2]).toString(16);\r\n\r\n    if (r.length === 1) {\r\n      r = '0' + r;\r\n    }\r\n    if (g.length === 1) {\r\n      g = '0' + g;\r\n    }\r\n    if (b.length === 1) {\r\n      b = '0' + b;\r\n    }\r\n\r\n    return '#' + r + g + b;\r\n  }\r\n\r\n  private toggleCursorOnLink(event: any, action: 'add' | 'remove') {\r\n    const selection = document.getSelection();\r\n    const element = selection.focusNode ? selection.focusNode.parentNode : undefined;\r\n    const isCtrl = event.key === 'Control';\r\n    const isCommand = event.key === 'Meta';\r\n    const isOnCtrlLink = this.isCursorPositionedInALink() && (isCtrl || isCommand);\r\n\r\n    if (element) {\r\n      if (isOnCtrlLink) {\r\n        element['classList'][action]('po-clickable');\r\n      } else {\r\n        const isClickable = element['classList'] && element['classList'].contains('po-clickable');\r\n\r\n        if (isClickable) {\r\n          element['classList'].remove('po-clickable');\r\n        }\r\n      }\r\n      this.updateModel();\r\n    }\r\n  }\r\n\r\n  private updateModel() {\r\n    this.modelValue = this.bodyElement.nativeElement.innerHTML;\r\n\r\n    this.value.emit(this.modelValue);\r\n  }\r\n\r\n  private updateValueWithModelValue() {\r\n    if (this.modelValue) {\r\n      this.bodyElement.nativeElement.insertAdjacentHTML('afterbegin', this.modelValue);\r\n    }\r\n  }\r\n\r\n  private verifyCursorPositionInFirefoxIEEdge(): boolean {\r\n    const textSelection = document.getSelection();\r\n    const nodeLink = textSelection.focusNode;\r\n    let isLink = false;\r\n\r\n    if (nodeLink && nodeLink.nodeName === 'A') {\r\n      this.linkElement = nodeLink;\r\n      isLink = true;\r\n    } else {\r\n      const range = textSelection.getRangeAt(0);\r\n      const fragmentDocument = range.cloneContents();\r\n      const element = fragmentDocument.childNodes[0] || fragmentDocument.firstElementChild;\r\n\r\n      this.linkElement = element && element.nodeName === 'A' ? element : undefined;\r\n      isLink = !!this.linkElement;\r\n    }\r\n\r\n    return isLink;\r\n  }\r\n}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\nimport { requiredFailed } from '../validators';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { PoRichTextService } from './po-rich-text.service';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-rich-text` é um editor de textos enriquecidos.\r\n *\r\n * Para edição de texto simples sem formatação recomenda-se o uso do componente [**po-textarea**](/documentation/po-textarea).\r\n *\r\n * > No navegador Internet Explorer não é possível alterar a cor do texto.\r\n */\r\n@Directive()\r\nexport abstract class PoRichTextBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Mensagem que será apresentada quando a propriedade required estiver habilitada e o campo for limpo após algo ser digitado.\r\n   */\r\n  @Input('p-error-message') errorMessage?: string = '';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Texto de apoio do campo.\r\n   */\r\n  @Input('p-help') help?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Rótulo do campo.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Nome e identificador do campo. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao deixar o campo e que recebe como parâmetro o valor alterado.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao modificar valor do model e que recebe como parâmetro o valor alterado.\r\n   */\r\n  @Output('p-change-model') changeModel: EventEmitter<any> = new EventEmitter();\r\n\r\n  invalid: boolean = false;\r\n  onChangeModel: any = null;\r\n  value: string;\r\n\r\n  private _height?: number;\r\n  private _placeholder: string;\r\n  private _readonly: boolean;\r\n  private _required: boolean;\r\n\r\n  private validatorChange: any;\r\n  // eslint-disable-next-line\r\n  protected onTouched: any = null;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura da área de edição de texto.\r\n   *\r\n   * > Altura mínima do componente é `94` e a altura máxima é `262`.\r\n   */\r\n  @Input('p-height') set height(height: number) {\r\n    this._height = height;\r\n  }\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Mensagem que aparecerá enquanto o campo não estiver preenchido.\r\n   *\r\n   * @default ''\r\n   */\r\n  @Input('p-placeholder') set placeholder(value: string) {\r\n    this._placeholder = value || '';\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será somente leitura.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-readonly') set readonly(value: boolean) {\r\n    this._readonly = convertToBoolean(value);\r\n  }\r\n\r\n  get readonly() {\r\n    return this._readonly;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(value: boolean) {\r\n    this._required = convertToBoolean(value);\r\n\r\n    this.validateModel(this.value);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  constructor(private richTextService: PoRichTextService) {}\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnChange(func: any): void {\r\n    this.onChangeModel = func;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnTouched(func: any): void {\r\n    this.onTouched = func;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, false, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  writeValue(value: string): void {\r\n    this.value = value;\r\n\r\n    this.richTextService.emitModel(value);\r\n  }\r\n\r\n  // Executa a função onChange\r\n  protected updateModel(value: any) {\r\n    // Quando o rich-text não possui um formulário, então esta função não é registrada\r\n    if (this.onChangeModel) {\r\n      this.onChangeModel(value);\r\n    }\r\n  }\r\n\r\n  protected validateModel(value: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(value);\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, forwardRef, OnDestroy, ViewChild } from '@angular/core';\r\n\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoRichTextBaseComponent } from './po-rich-text-base.component';\r\nimport { PoRichTextBodyComponent } from './po-rich-text-body/po-rich-text-body.component';\r\nimport { PoRichTextService } from './po-rich-text.service';\r\n\r\n/* istanbul ignore next */\r\nconst providers = [\r\n  {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoRichTextComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: NG_VALIDATORS,\r\n    // eslint-disable-next-line\r\n    useExisting: forwardRef(() => PoRichTextComponent),\r\n    multi: true\r\n  },\r\n  {\r\n    provide: PoRichTextService\r\n  }\r\n];\r\n\r\n/**\r\n * @docsExtends PoRichTextBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-rich-text-basic\" title=\"PO Rich Text Basic\">\r\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-basic/sample-po-rich-text-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-rich-text-labs\" title=\"PO Rich Text Labs\">\r\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-labs/sample-po-rich-text-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-rich-text-recipe\" title=\"PO Rich Text Recipe\">\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe-image-base-64.ts\"> </file>\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.html\"> </file>\r\n *   <file name=\"sample-po-rich-text-recipe/sample-po-rich-text-recipe.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-rich-text',\r\n  templateUrl: './po-rich-text.component.html',\r\n  providers\r\n})\r\nexport class PoRichTextComponent extends PoRichTextBaseComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild(PoRichTextBodyComponent, { static: true }) bodyElement: PoRichTextBodyComponent;\r\n\r\n  private listener = this.validateClassesForRequired.bind(this);\r\n  private modelLastUpdate: any;\r\n\r\n  get errorMsg() {\r\n    return this.errorMessage !== '' && !this.value && this.required && this.invalid ? this.errorMessage : '';\r\n  }\r\n\r\n  constructor(private element: ElementRef, richTextService: PoRichTextService) {\r\n    super(richTextService);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Se não tem ngModel ou reactive form adiciona validação com classes css\r\n    this.addKeyListeners();\r\n    this.verifyAutoFocus();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this.onChangeModel) {\r\n      this.element.nativeElement.removeEventListener('keyup', this.listener);\r\n      this.element.nativeElement.removeEventListener('keydown', this.listener);\r\n      this.element.nativeElement.removeEventListener('cut', this.listener);\r\n      this.element.nativeElement.removeEventListener('paste', this.listener);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoRichTextComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoRichTextComponent, { static: true }) richText: PoRichTextComponent;\r\n   *\r\n   * focusRichText() {\r\n   *   this.richText.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    this.bodyElement.focus();\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouched?.();\r\n  }\r\n\r\n  onChangeValue(value: any) {\r\n    this.change.emit(value);\r\n  }\r\n\r\n  updateValue(value: string) {\r\n    this.value = value;\r\n    this.invalid = !value;\r\n    this.controlChangeModelEmitter(this.value);\r\n    this.updateModel(this.value);\r\n  }\r\n\r\n  private addKeyListeners() {\r\n    if (!this.onChangeModel) {\r\n      this.element.nativeElement.addEventListener('keyup', this.listener);\r\n      this.element.nativeElement.addEventListener('keydown', this.listener);\r\n      this.element.nativeElement.addEventListener('cut', this.listener);\r\n      this.element.nativeElement.addEventListener('paste', this.listener);\r\n    }\r\n  }\r\n\r\n  private controlChangeModelEmitter(value: any) {\r\n    if (this.modelLastUpdate !== value) {\r\n      this.changeModel.emit(value);\r\n      this.modelLastUpdate = value;\r\n    }\r\n  }\r\n\r\n  private verifyAutoFocus() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  private validateClassesForRequired() {\r\n    setTimeout(() => {\r\n      const value = this.value;\r\n      const element = this.element.nativeElement;\r\n\r\n      if (!value && this.required) {\r\n        element.classList.add('ng-invalid');\r\n        element.classList.add('ng-dirty');\r\n      } else {\r\n        element.classList.remove('ng-invalid');\r\n      }\r\n    });\r\n  }\r\n}\r\n","export const poRichTextLiteralsDefault = {\r\n  en: {\r\n    bold: 'Bold',\r\n    italic: 'Italic',\r\n    underline: 'Underline',\r\n    left: 'Left',\r\n    center: 'Center',\r\n    right: 'Right',\r\n    justify: 'Justify',\r\n    textColor: 'Text color',\r\n    unorderedList: 'Bulleted list',\r\n    insertLink: 'Insert link',\r\n    linkTextLabel: 'Text with link',\r\n    linkUrlTextHelper: 'Paste in the text box below the copied browser link',\r\n    linkUrlTextPlaceholder: 'Enter the link address that will be attached to the text.',\r\n    cancel: 'Cancel',\r\n    editLink: 'Edit link',\r\n    insert: 'Insert',\r\n    insertImage: 'Insert image',\r\n    urlImage: 'URL image'\r\n  },\r\n  es: {\r\n    bold: 'Negrita',\r\n    italic: 'Cursiva',\r\n    underline: 'Subrayado',\r\n    left: 'Izquierda',\r\n    center: 'Centro',\r\n    right: 'Derecha',\r\n    justify: 'Justificado',\r\n    textColor: 'Color del texto',\r\n    unorderedList: 'Lista con viñetas',\r\n    insertLink: 'Insertar el link',\r\n    linkTextLabel: 'Texto con enlace',\r\n    linkUrlTextHelper: 'Pegue en el cuadro de texto debajo del enlace del navegador copiado',\r\n    linkUrlTextPlaceholder: 'Ingrese la dirección del enlace que se adjuntará al texto.',\r\n    cancel: 'Cancelar',\r\n    editLink: 'Editar enlace',\r\n    insert: 'Insertar',\r\n    insertImage: 'Insertar imagen',\r\n    urlImage: 'Imagen URL'\r\n  },\r\n  pt: {\r\n    bold: 'Negrito',\r\n    italic: 'Itálico',\r\n    underline: 'Sublinhado',\r\n    left: 'Esquerda',\r\n    center: 'Centro',\r\n    right: 'Direita',\r\n    justify: 'Justificado',\r\n    textColor: 'Cor do texto',\r\n    unorderedList: 'Lista com marcadores',\r\n    insertLink: 'Inserir link',\r\n    linkTextLabel: 'Texto com link',\r\n    linkUrlTextHelper: 'Cole na caixa de texto abaixo o link copiado do navegador',\r\n    linkUrlTextPlaceholder: 'Insira o endereço do link que será anexado ao texto',\r\n    cancel: 'Cancelar',\r\n    editLink: 'Editar link',\r\n    insert: 'Inserir',\r\n    insertImage: 'Inserir imagem',\r\n    urlImage: 'Imagem em URL'\r\n  },\r\n  ru: {\r\n    bold: 'Жирный',\r\n    italic: 'Италик',\r\n    underline: 'Подчеркивание',\r\n    left: 'Влево',\r\n    center: 'Центр',\r\n    right: 'Вправо',\r\n    justify: 'Растянуть',\r\n    textColor: 'Цвет текста',\r\n    unorderedList: 'Список',\r\n    insertLink: 'Вставьте ссылку',\r\n    linkTextLabel: 'Текст со ссылкой',\r\n    linkUrlTextHelper: 'Вставьте в текстовое поле ниже скопированную ссылку',\r\n    linkUrlTextPlaceholder: 'Вставьте ссылку для привязки к тексту',\r\n    cancel: 'Отмена',\r\n    editLink: 'Редактировать ссылку',\r\n    insert: 'Вставить',\r\n    insertImage: 'Вставить изображение',\r\n    urlImage: 'Ссылка на изображение'\r\n  }\r\n};\r\n","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\n\r\nimport { convertImageToBase64 } from '../../../../utils/util';\r\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\r\n\r\nimport { PoModalAction, PoModalComponent } from '../../../po-modal';\r\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\r\nimport { PoUploadComponent } from '../../po-upload/po-upload.component';\r\nimport { PoUploadFileRestrictions } from '../../po-upload/interfaces/po-upload-file-restriction.interface';\r\n\r\nconst uploadRestrictions = ['.apng', '.bmp', '.gif', '.ico', '.jpeg', '.jpg', '.png', '.svg'];\r\n\r\n@Component({\r\n  selector: 'po-rich-text-image-modal',\r\n  templateUrl: './po-rich-text-image-modal.component.html'\r\n})\r\nexport class PoRichTextImageModalComponent {\r\n  @ViewChild('modal', { static: true }) modal: PoModalComponent;\r\n\r\n  @ViewChild('modalImageForm') modalImageForm: NgForm;\r\n\r\n  @ViewChild('upload', { static: true }) upload: PoUploadComponent;\r\n\r\n  @Output('p-command') command = new EventEmitter<string | { command: string; value: string | any }>();\r\n\r\n  savedCursorPosition;\r\n  selection = document.getSelection();\r\n  uploadModel: Array<any>;\r\n  uploadRestrictions: PoUploadFileRestrictions = {\r\n    allowedExtensions: uploadRestrictions\r\n  };\r\n  urlImage: string;\r\n\r\n  readonly literals = {\r\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  modalCancelAction: PoModalAction = {\r\n    label: this.literals.cancel,\r\n    action: () => {\r\n      this.modal.close();\r\n      this.command.emit();\r\n      this.retrieveCursorPosition();\r\n      this.cleanUpFields();\r\n    }\r\n  };\r\n\r\n  modalConfirmAction: PoModalAction = {\r\n    label: this.literals.insert,\r\n    disabled: false,\r\n    action: () => this.insertElementRef()\r\n  };\r\n\r\n  get isUploadValid(): boolean {\r\n    return !!(this.uploadModel && this.uploadModel.length);\r\n  }\r\n\r\n  get isUrlValid(): boolean {\r\n    return !!this.urlImage && this.modalImageForm && this.modalImageForm.valid;\r\n  }\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  openModal() {\r\n    this.saveCursorPosition();\r\n    this.modal.open();\r\n  }\r\n\r\n  private cleanUpFields() {\r\n    this.urlImage = undefined;\r\n    this.uploadModel = undefined;\r\n  }\r\n\r\n  private async convertToBase64() {\r\n    if (this.isUploadValid) {\r\n      const uploadImage = this.uploadModel[0].rawFile;\r\n      return await convertImageToBase64(uploadImage);\r\n    }\r\n  }\r\n\r\n  private emitCommand(value) {\r\n    let command: string;\r\n    if (value) {\r\n      command = 'insertImage';\r\n      this.command.emit({ command, value });\r\n    }\r\n  }\r\n\r\n  private async insertElementRef() {\r\n    let uploadImage: string;\r\n\r\n    if (!this.urlImage) {\r\n      uploadImage = await this.convertToBase64();\r\n    }\r\n\r\n    this.retrieveCursorPosition();\r\n    this.modal.close();\r\n\r\n    if (this.isUrlValid || this.isUploadValid) {\r\n      this.emitCommand(this.urlImage || uploadImage);\r\n    }\r\n    this.cleanUpFields();\r\n  }\r\n\r\n  private retrieveCursorPosition() {\r\n    this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);\r\n  }\r\n\r\n  private saveCursorPosition() {\r\n    this.savedCursorPosition = [this.selection.focusNode, this.selection.focusOffset];\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { AbstractControl, NgForm } from '@angular/forms';\r\n\r\nimport { isExternalLink, isIE } from '../../../../utils/util';\r\nimport { PoLanguageService } from './../../../../services/po-language/po-language.service';\r\n\r\nimport { PoModalAction, PoModalComponent } from '../../../po-modal';\r\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\r\n\r\n@Component({\r\n  selector: 'po-rich-text-link-modal',\r\n  templateUrl: './po-rich-text-link-modal.component.html'\r\n})\r\nexport class PoRichTextLinkModalComponent {\r\n  @ViewChild('modal', { static: true }) modal: PoModalComponent;\r\n\r\n  @ViewChild('modalLinkForm') modalLinkForm: NgForm;\r\n\r\n  @Output('p-command') command = new EventEmitter<string | { command: string; value: string | any }>();\r\n\r\n  @Output('p-link-editing') linkEditing = new EventEmitter<any>();\r\n\r\n  savedCursorPosition;\r\n  selection = document.getSelection();\r\n  urlLink: string;\r\n  urlLinkText: string;\r\n\r\n  readonly literals = {\r\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  modalCancelAction: PoModalAction = {\r\n    label: this.literals.cancel,\r\n    action: () => {\r\n      this.modal.close();\r\n      this.command.emit();\r\n      this.retrieveCursorPosition();\r\n      this.cleanUpFields();\r\n    }\r\n  };\r\n\r\n  modalConfirmAction = {\r\n    label: this.linkConfirmAction(),\r\n    disabled: true,\r\n    action: () => (this.isLinkEditing ? this.toEditLink() : this.toInsertLink(this.urlLink, this.urlLinkText))\r\n  };\r\n\r\n  private isLinkEditing: boolean;\r\n  private isSelectedLink: boolean;\r\n  private linkElement: any;\r\n  private savedSelection: Range | null;\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  linkConfirmAction(): string {\r\n    return this.isLinkEditing ? this.literals.editLink : this.literals.insertLink;\r\n  }\r\n\r\n  formModelValidate() {\r\n    return (this.modalConfirmAction.disabled = this.modalLinkForm?.invalid);\r\n  }\r\n\r\n  openModal(selectedLinkElement: ElementRef) {\r\n    this.saveCursorPosition();\r\n    this.prepareModalForLink(selectedLinkElement);\r\n\r\n    this.modalConfirmAction.label = this.linkConfirmAction();\r\n    this.modal.open();\r\n  }\r\n\r\n  private selectedLink(linkElement: ElementRef) {\r\n    this.isSelectedLink = !!linkElement;\r\n    this.linkElement = linkElement;\r\n  }\r\n\r\n  private checkIfIsEmpty(urlLink: string, urlLinkText: string) {\r\n    return urlLinkText === undefined || urlLinkText.trim() === '' ? urlLink : urlLinkText;\r\n  }\r\n\r\n  private cleanUpFields() {\r\n    this.urlLink = undefined;\r\n    this.urlLinkText = undefined;\r\n    this.isLinkEditing = false;\r\n    this.isSelectedLink = false;\r\n    this.linkElement = undefined;\r\n  }\r\n\r\n  private formReset(control: AbstractControl) {\r\n    control.markAsPristine();\r\n    control.markAsUntouched();\r\n    control.updateValueAndValidity();\r\n  }\r\n\r\n  private prepareModalForLink(selectedLinkElement: ElementRef) {\r\n    this.saveSelectionText();\r\n    if (this.modalLinkForm) {\r\n      this.formReset(this.modalLinkForm.control);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.formModelValidate();\r\n    });\r\n\r\n    this.selectedLink(selectedLinkElement);\r\n\r\n    if (this.isSelectedLink) {\r\n      this.isLinkEditing = true;\r\n      this.setLinkEditableForModal();\r\n    }\r\n\r\n    this.linkEditing.emit(this.isLinkEditing);\r\n  }\r\n\r\n  private restoreSelection() {\r\n    if (this.savedSelection) {\r\n      if (this.selection) {\r\n        this.selection.removeAllRanges();\r\n        this.selection.addRange(this.savedSelection);\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private retrieveCursorPosition() {\r\n    this.selection.collapse(this.savedCursorPosition[0], this.savedCursorPosition[1]);\r\n  }\r\n\r\n  private saveCursorPosition() {\r\n    this.savedCursorPosition = [this.selection.focusNode, this.selection.focusOffset];\r\n  }\r\n\r\n  private saveSelectionText() {\r\n    if (this.selection.anchorNode !== null) {\r\n      this.savedSelection = this.selection.getRangeAt(0);\r\n      this.urlLinkText = this.selection.toString();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private setLinkEditableForModal() {\r\n    this.urlLinkText = this.linkElement.innerText;\r\n    this.urlLink = this.linkElement.getAttribute('href');\r\n  }\r\n\r\n  private toEditLink() {\r\n    if (isIE()) {\r\n      this.linkElement.parentNode.removeChild(this.linkElement);\r\n    } else {\r\n      this.linkElement.remove();\r\n    }\r\n\r\n    this.toInsertLink(this.urlLink, this.urlLinkText);\r\n  }\r\n\r\n  private toInsertLink(urlLink, urlLinkText) {\r\n    this.modal.close();\r\n    this.restoreSelection();\r\n\r\n    const urlLinkTextValue = this.checkIfIsEmpty(urlLink, urlLinkText);\r\n    const urlAsExternalLink = isExternalLink(urlLink) ? urlLink : `http://${urlLink}`;\r\n\r\n    const command: string = 'InsertHTML';\r\n\r\n    const value = { urlLink: urlAsExternalLink, urlLinkText: urlLinkTextValue };\r\n\r\n    this.command.emit({ command, value });\r\n\r\n    this.cleanUpFields();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { isIE } from '../../../../utils/util';\r\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\r\n\r\nimport { PoButtonGroupItem } from '../../../po-button-group';\r\nimport { poRichTextLiteralsDefault } from '../po-rich-text-literals';\r\nimport { PoRichTextToolbarButtonGroupItem } from '../interfaces/po-rich-text-toolbar-button-group-item.interface';\r\nimport { PoRichTextImageModalComponent } from '../po-rich-text-image-modal/po-rich-text-image-modal.component';\r\nimport { PoRichTextLinkModalComponent } from '../po-rich-text-link-modal/po-rich-text-link-modal.component';\r\n\r\nconst poRichTextDefaultColor = '#000000';\r\n\r\n@Component({\r\n  selector: 'po-rich-text-toolbar',\r\n  templateUrl: './po-rich-text-toolbar.component.html'\r\n})\r\nexport class PoRichTextToolbarComponent implements AfterViewInit {\r\n  @ViewChild('colorPickerInput', { read: ElementRef }) colorPickerInput: ElementRef;\r\n\r\n  @ViewChild('toolbarElement', { static: true }) toolbarElement: ElementRef;\r\n\r\n  @ViewChild(PoRichTextImageModalComponent, { static: true }) richTextImageModal: PoRichTextImageModalComponent;\r\n\r\n  @ViewChild(PoRichTextLinkModalComponent, { static: true }) richTextLinkModal: PoRichTextLinkModalComponent;\r\n\r\n  @Output('p-command') command = new EventEmitter<string | { command: string; value: string }>();\r\n\r\n  @Output('p-modal') modal = new EventEmitter<any>();\r\n\r\n  @Output('p-link-editing') linkEditing = new EventEmitter<any>();\r\n\r\n  readonly literals = {\r\n    ...poRichTextLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  alignButtons: Array<PoRichTextToolbarButtonGroupItem> = [\r\n    {\r\n      command: 'justifyleft',\r\n      icon: 'po-icon-align-left',\r\n      tooltip: this.literals.left,\r\n      action: this.emitAlignCommand.bind(this, 'justifyleft'),\r\n      selected: true\r\n    },\r\n    {\r\n      command: 'justifycenter',\r\n      icon: 'po-icon-align-center',\r\n      tooltip: this.literals.center,\r\n      action: this.emitAlignCommand.bind(this, 'justifycenter')\r\n    },\r\n    {\r\n      command: 'justifyright',\r\n      icon: 'po-icon-align-right',\r\n      tooltip: this.literals.right,\r\n      action: this.emitAlignCommand.bind(this, 'justifyright')\r\n    },\r\n    {\r\n      command: 'justifyfull',\r\n      icon: 'po-icon-align-justify',\r\n      tooltip: this.literals.justify,\r\n      action: this.emitAlignCommand.bind(this, 'justifyfull')\r\n    }\r\n  ];\r\n\r\n  formatButtons: Array<PoRichTextToolbarButtonGroupItem> = [\r\n    {\r\n      command: 'bold',\r\n      icon: 'po-icon-text-bold',\r\n      tooltip: this.literals.bold,\r\n      action: this.emitCommand.bind(this, 'bold')\r\n    },\r\n    {\r\n      command: 'italic',\r\n      icon: 'po-icon-text-italic',\r\n      tooltip: this.literals.italic,\r\n      action: this.emitCommand.bind(this, 'italic')\r\n    },\r\n    {\r\n      command: 'underline',\r\n      icon: 'po-icon-text-underline',\r\n      tooltip: this.literals.underline,\r\n      action: this.emitCommand.bind(this, 'underline')\r\n    }\r\n  ];\r\n\r\n  listButtons: Array<PoRichTextToolbarButtonGroupItem> = [\r\n    {\r\n      command: 'insertUnorderedList',\r\n      icon: 'po-icon-list',\r\n      tooltip: this.literals.unorderedList,\r\n      action: this.emitCommand.bind(this, 'insertUnorderedList')\r\n    }\r\n  ];\r\n\r\n  linkButtons: Array<PoRichTextToolbarButtonGroupItem> = [\r\n    {\r\n      command: 'Createlink',\r\n      icon: 'po-icon-link',\r\n      tooltip: `${this.literals.insertLink} (Ctrl + K)`,\r\n      action: () => this.richTextLinkModal.openModal(this.selectedLinkElement)\r\n    }\r\n  ];\r\n\r\n  mediaButtons: Array<PoButtonGroupItem> = [\r\n    {\r\n      tooltip: this.literals.insertImage,\r\n      icon: 'po-icon-picture',\r\n      action: () => this.richTextImageModal.openModal()\r\n    }\r\n  ];\r\n\r\n  private _readonly: boolean;\r\n  private selectedLinkElement;\r\n\r\n  @Input('p-readonly') set readonly(value: boolean) {\r\n    this._readonly = value;\r\n    this.toggleDisableButtons(this._readonly);\r\n  }\r\n\r\n  get readonly() {\r\n    return this._readonly;\r\n  }\r\n\r\n  get isInternetExplorer() {\r\n    return isIE();\r\n  }\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.removeButtonFocus();\r\n    this.setColorInColorPicker(poRichTextDefaultColor);\r\n  }\r\n\r\n  changeTextColor(value) {\r\n    const command = 'foreColor';\r\n\r\n    this.command.emit({ command, value });\r\n  }\r\n\r\n  emitLinkEditing(isLinkEdit: boolean) {\r\n    this.linkEditing.emit(isLinkEdit);\r\n  }\r\n\r\n  selectedLink(selectedLinkElement) {\r\n    this.selectedLinkElement = selectedLinkElement;\r\n  }\r\n\r\n  setButtonsStates(obj: { commands: Array<string>; hexColor: string }) {\r\n    if (!this.readonly) {\r\n      this.alignButtons.forEach(button => (button.selected = obj.commands.includes(button.command)));\r\n      this.formatButtons.forEach(button => (button.selected = obj.commands.includes(button.command)));\r\n      this.listButtons[0].selected = obj.commands.includes(this.listButtons[0].command);\r\n      this.linkButtons[0].selected = obj.commands.includes(this.linkButtons[0].command);\r\n      this.setColorInColorPicker(obj.hexColor);\r\n    }\r\n  }\r\n\r\n  shortcutTrigger() {\r\n    this.richTextLinkModal.openModal(this.selectedLinkElement);\r\n  }\r\n\r\n  emitCommand(command: string) {\r\n    this.command.emit(command);\r\n  }\r\n\r\n  private emitAlignCommand(command: string) {\r\n    const index = this.alignButtons.findIndex(btn => btn.command === command);\r\n\r\n    if (this.alignButtons[index].selected) {\r\n      this.alignButtons[index].selected = false;\r\n    }\r\n\r\n    this.command.emit(command);\r\n  }\r\n\r\n  private removeButtonFocus() {\r\n    const buttons = this.toolbarElement.nativeElement.querySelectorAll('button');\r\n\r\n    buttons.forEach(button => button.setAttribute('tabindex', '-1'));\r\n  }\r\n\r\n  private setColorInColorPicker(color: string): void {\r\n    this.colorPickerInput.nativeElement.value = color;\r\n  }\r\n\r\n  private toggleDisableButtons(state: boolean) {\r\n    this.alignButtons.forEach(button => (button.disabled = state));\r\n    this.formatButtons.forEach(button => (button.disabled = state));\r\n    this.listButtons[0].disabled = state;\r\n    this.linkButtons[0].disabled = state;\r\n    this.mediaButtons[0].disabled = state;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-input-basic\" title=\"PO Input Basic\">\r\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-input-basic/sample-po-input-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-input-labs\" title=\"PO Input Labs\">\r\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-input-labs/sample-po-input-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-input-reactive-form\" title=\"PO Input - Reactive Form\">\r\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-input-reactive-form/sample-po-input-reactive-form.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-input',\r\n  templateUrl: './po-input.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoInputComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoInputComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoInputComponent extends PoInputGeneric {\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, ElementRef, Directive } from '@angular/core';\r\n\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n@Directive()\r\nexport abstract class PoNumberBaseComponent extends PoInputGeneric {\r\n  type = 'number';\r\n\r\n  protected invalidInputValueOnBlur = false;\r\n\r\n  /* istanbul ignore next */\r\n  constructor(elementRef: ElementRef, cd: ChangeDetectorRef) {\r\n    super(elementRef, cd);\r\n  }\r\n\r\n  eventOnInput(e: any) {\r\n    if (!this.mask) {\r\n      let value = e.target.value;\r\n      const valueMaxlength = this.validMaxLength(this.maxlength, value);\r\n      this.invalidInputValueOnBlur = false;\r\n\r\n      if (value !== valueMaxlength) {\r\n        value = valueMaxlength;\r\n\r\n        this.inputEl.nativeElement.value = value;\r\n      }\r\n\r\n      this.callOnChange(this.formatNumber(value));\r\n    }\r\n  }\r\n\r\n  onBlur(event: any) {\r\n    const target = event.target;\r\n    this.invalidInputValueOnBlur = target.value === '' && !target.validity.valid;\r\n\r\n    if (this.invalidInputValueOnBlur) {\r\n      this.callOnChange('Valor Inválido');\r\n    }\r\n\r\n    this.eventOnBlur(event);\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    if (!this.isKeyAllowed(event)) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  validMaxLength(maxlength: number, value: string) {\r\n    if (maxlength && value.length > maxlength) {\r\n      const substringValue = value.toString().substring(0, maxlength);\r\n\r\n      if (substringValue && this.isEndWithDot(substringValue)) {\r\n        return substringValue.toString().substring(0, maxlength - 1);\r\n      }\r\n\r\n      return substringValue;\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  writeValueModel(value) {\r\n    if (this.inputEl) {\r\n      if (value || value === 0) {\r\n        if (this.mask) {\r\n          this.inputEl.nativeElement.value = this.objMask.controlFormatting(String(value));\r\n\r\n          // Se o model for definido como formatado, então precisa atualizá-lo no primeiro acesso\r\n          if (this.objMask.formatModel) {\r\n            this.onChangePropagate(this.objMask.valueToModel);\r\n          }\r\n        } else {\r\n          this.inputEl.nativeElement.value = value;\r\n        }\r\n      } else {\r\n        // Se for o valor for undefined, deve limpar o campo\r\n        this.inputEl.nativeElement.value = '';\r\n      }\r\n    }\r\n\r\n    // Emite evento quando o model é atualizado, inclusive a primeira vez\r\n\r\n    this.changeModel.emit(value);\r\n  }\r\n\r\n  private isEndWithDot(value: string) {\r\n    return value && value.lastIndexOf('.') === value.length - 1;\r\n  }\r\n\r\n  private formatNumber(value) {\r\n    return value ? Number(value) : null;\r\n  }\r\n\r\n  private isKeyAllowed(event): boolean {\r\n    return this.isShortcut(event) || this.isControlKeys(event) || !this.isInvalidKey(event.key);\r\n  }\r\n\r\n  private isInvalidKey(key) {\r\n    const validatesKey = new RegExp(/[a-zA-Z:;=_´`^~\"'?!@#$%¨&*()><{}çÇ\\[\\]/\\\\|]+/);\r\n    return validatesKey.test(key);\r\n  }\r\n\r\n  private isShortcut(event): boolean {\r\n    const key = event.keyCode;\r\n    const ctrl = event.ctrlKey || event.metaKey;\r\n    const keyA = key === 65;\r\n    const keyC = key === 67;\r\n    const keyX = key === 88;\r\n    const keyV = key === 86;\r\n\r\n    return (ctrl && keyC) || (ctrl && keyV) || (ctrl && keyA) || (ctrl && keyX);\r\n  }\r\n\r\n  private isControlKeys(event) {\r\n    const controlKeys = [\r\n      'Backspace',\r\n      'ArrowLeft',\r\n      'ArrowRight',\r\n      'ArrowUp',\r\n      'ArrowDown',\r\n      'Left',\r\n      'Right',\r\n      'Up',\r\n      'Down',\r\n      'Tab',\r\n      'Delete'\r\n    ];\r\n\r\n    return controlKeys.indexOf(event.key) !== -1;\r\n  }\r\n}\r\n","import { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\nimport { ChangeDetectorRef, ChangeDetectionStrategy, Component, ElementRef, forwardRef, Input } from '@angular/core';\r\n\r\nimport { minFailed, maxFailed } from '../validators';\r\n\r\nimport { PoNumberBaseComponent } from './po-number-base.component';\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n *\r\n * O `po-number` é um input específico para receber apenas números.\r\n * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,\r\n * respectivamente.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-number-basic\" title=\"PO Number Basic\">\r\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-number-basic/sample-po-number-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-number-labs\" title=\"PO Number Labs\">\r\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-number-labs/sample-po-number-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-number-calculate\" title=\"PO Number - Calculate\">\r\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.html\"> </file>\r\n *  <file name=\"sample-po-number-calculate/sample-po-number-calculate.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-number',\r\n  templateUrl: './po-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoNumberComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoNumberComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoNumberComponent extends PoNumberBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Intervalo.\r\n   *\r\n   * @default 1\r\n   */\r\n  @Input('p-step') step?: string = '1';\r\n\r\n  /** Valor mínimo.\r\n   *\r\n   * > Quando o valor mínimo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\r\n   */\r\n  min?: number;\r\n  @Input('p-min') set setMin(min: number) {\r\n    this.min = !isNaN(min) ? min : undefined;\r\n    this.validateModel();\r\n  }\r\n\r\n  /** Valor máximo.\r\n   *\r\n   * > Quando o valor máximo for um número com decimais aconselha-se utilizar junto da propriedade `p-step` também passando a ela um valor decimal.\r\n   */\r\n  max?: number;\r\n  @Input('p-max') set setMax(max: number) {\r\n    this.max = !isNaN(max) ? max : undefined;\r\n    this.validateModel();\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n  }\r\n\r\n  extraValidation(abstractControl: AbstractControl): { [key: string]: any } {\r\n    // Verifica se já possui algum error pattern padrão.\r\n    this.errorPattern = this.errorPattern !== 'Valor Inválido' ? this.errorPattern : '';\r\n\r\n    if (minFailed(this.min, abstractControl.value)) {\r\n      return {\r\n        min: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (maxFailed(this.max, abstractControl.value)) {\r\n      return {\r\n        max: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (this.invalidInputValueOnBlur) {\r\n      this.errorPattern = this.errorPattern || 'Valor Inválido';\r\n\r\n      return {\r\n        number: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  getErrorPatternMessage() {\r\n    return this.errorPattern !== '' && this.containsInvalidClass() ? this.errorPattern : '';\r\n  }\r\n\r\n  private containsInvalidClass(): boolean {\r\n    return (\r\n      (this.el.nativeElement.classList.contains('ng-invalid') &&\r\n        this.el.nativeElement.classList.contains('ng-dirty') &&\r\n        this.inputEl.nativeElement.value !== '') ||\r\n      this.invalidInputValueOnBlur\r\n    );\r\n  }\r\n}\r\n","import { AbstractControl, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, forwardRef, Input } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n * O po-password é um input específico para senhas. Já possui tipo, estilo e ícone predefinidos.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-password-basic\" title=\"PO Password Basic\">\r\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-password-basic/sample-po-password-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-password-labs\" title=\"PO Password Labs\">\r\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-password-labs/sample-po-password-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-password-reset\" title=\"PO Password - Reset\">\r\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.html\"> </file>\r\n *   <file name=\"sample-po-password-reset/sample-po-password-reset.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-password',\r\n  templateUrl: './po-password.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoPasswordComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoPasswordComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoPasswordComponent extends PoInputGeneric {\r\n  type = 'password';\r\n  visiblePassword = false;\r\n\r\n  private _hidePasswordPeek?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite esconder a função de espiar a senha digitada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-password-peek') set hidePasswordPeek(value: boolean) {\r\n    this._hidePasswordPeek = convertToBoolean(value);\r\n    if (value) {\r\n      this.visiblePassword = false;\r\n      this.type = 'password';\r\n    }\r\n  }\r\n\r\n  get hidePasswordPeek(): boolean {\r\n    return this._hidePasswordPeek;\r\n  }\r\n\r\n  get autocomplete(): string {\r\n    return this.noAutocomplete ? 'new-password' : 'on';\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n\r\n  showPassword() {\r\n    this.visiblePassword = !this.visiblePassword;\r\n    this.type = this.type === 'password' ? 'text' : 'password';\r\n  }\r\n}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, convertToInt, removeDuplicatedOptions } from '../../../utils/util';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoRadioGroupOption } from './po-radio-group-option.interface';\r\n\r\nconst poRadioGroupColumnsDefaultLength: number = 6;\r\nconst poRadioGroupColumnsTotalLength: number = 12;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-radio-group` deve ser utilizado para disponibilizar múltiplas opções ao usuário, permitindo a ele que\r\n * selecione apenas uma delas. Seu uso é recomendado para um número pequeno de opções, caso contrário, recomenda-se o uso\r\n * do [**po-combo**](/documentation/po-combo) ou [**po-select**](/documentation/po-select).\r\n *\r\n * Este não é um componente de multiseleção, se for este o caso, deve-se utilizar o\r\n * [**po-checkbox-group**](/documentation/po-checkbox-group).\r\n *\r\n * > Ao passar um valor para o *model* que não esteja na lista de opções, o mesmo será definido como `undefined`.\r\n */\r\n@Directive()\r\nexport abstract class PoRadioGroupBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Nome das opções. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento ao alterar valor do campo.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  mdColumns: number = poRadioGroupColumnsDefaultLength;\r\n  value: any;\r\n\r\n  private _columns: number = poRadioGroupColumnsDefaultLength;\r\n  private _disabled?: boolean = false;\r\n  private _options: Array<PoRadioGroupOption>;\r\n  private _required?: boolean = false;\r\n\r\n  private onChangePropagate: any = null;\r\n  private validatorChange;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a quantidade de colunas para exibição das opções.\r\n   *\r\n   * **Considerações:**\r\n   *  - É possível exibir as opções entre `1` e `4` colunas.\r\n   *  - O número máximo de colunas é invariável nas seguintes resoluções:\r\n   *    + `sm`: `1`\r\n   *    + `md`: `2`\r\n   *\r\n   * @default `2`\r\n   */\r\n  @Input('p-columns') set columns(value: number) {\r\n    const columns = convertToInt(value, poRadioGroupColumnsDefaultLength);\r\n\r\n    this._columns = this.getGridSystemColumns(columns, 4);\r\n    this.mdColumns = this.getGridSystemColumns(columns, 2);\r\n  }\r\n\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = convertToBoolean(disabled);\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * Lista de opções que serão exibidas.\r\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface PoRadioGroupOption.\r\n   */\r\n  @Input('p-options') set options(value: Array<PoRadioGroupOption>) {\r\n    this._options = value;\r\n    removeDuplicatedOptions(this.options);\r\n  }\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  // Função que controla quando deve ser emitido onChange e atualiza o Model\r\n  changeValue(changedValue: any) {\r\n    if (this.onChangePropagate) {\r\n      this.onChangePropagate(changedValue);\r\n    }\r\n\r\n    if (this.value !== changedValue) {\r\n      this.change.emit(changedValue);\r\n    }\r\n\r\n    this.value = changedValue;\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any) {\r\n    this.onChangePropagate = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any) {}\r\n\r\n  registerOnValidatorChange(fn: any) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  writeValue(modelValue: any) {\r\n    this.value = modelValue;\r\n\r\n    // Busca radio com o valor especificado\r\n    const element = this.getElementByValue(modelValue);\r\n    if (!element && this.onChangePropagate) {\r\n      this.value = undefined;\r\n      this.onChangePropagate(this.value);\r\n    }\r\n  }\r\n\r\n  private checkColumnsRange(columns, maxColumns): boolean {\r\n    const minColumns = 1;\r\n\r\n    return columns >= minColumns && columns <= maxColumns;\r\n  }\r\n\r\n  private getGridSystemColumns(columns: number, maxColumns: number): number {\r\n    const gridSystemColumns = poRadioGroupColumnsTotalLength / columns;\r\n\r\n    return this.checkColumnsRange(columns, maxColumns) ? gridSystemColumns : poRadioGroupColumnsDefaultLength;\r\n  }\r\n\r\n  private validateModel() {\r\n    if (this.validatorChange) {\r\n      this.validatorChange();\r\n    }\r\n  }\r\n\r\n  // Deve retornar o valor elemento que contém o valor passado por parâmetro\r\n  abstract getElementByValue(value: any): any;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  IterableDiffers,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { removeDuplicatedOptions } from '../../../utils/util';\r\n\r\nimport { PoRadioGroupBaseComponent } from './po-radio-group-base.component';\r\n\r\n/**\r\n * @docsExtends PoRadioGroupBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-radio-group-basic\" title=\"PO Radio Group Basic\">\r\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.ts\"> </file>\r\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.e2e-spec.ts\"> </file>\r\n *  <file name=\"sample-po-radio-group-basic/sample-po-radio-group-basic.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-radio-group-labs\" title=\"PO Radio Group Labs\">\r\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-radio-group-labs/sample-po-radio-group-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-radio-group-translator\" title=\"PO Radio Group - Translator\">\r\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.html\"> </file>\r\n *  <file name=\"sample-po-radio-group-translator/sample-po-radio-group-translator.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-radio-group-translator-reactive-form\" title=\"PO Radio Group - Translator Reactive Form\">\r\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-radio-group-translator-reactive-form/sample-po-radio-group-translator-reactive-form.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-radio-group',\r\n  templateUrl: './po-radio-group.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoRadioGroupComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoRadioGroupComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoRadioGroupComponent extends PoRadioGroupBaseComponent implements AfterViewInit, DoCheck {\r\n  /** Label do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n  @ViewChildren('inputRadio') radioLabels: QueryList<ElementRef>;\r\n\r\n  differ: any;\r\n\r\n  constructor(differs: IterableDiffers) {\r\n    super();\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const change = this.differ.diff(this.options);\r\n    if (change) {\r\n      removeDuplicatedOptions(this.options);\r\n    }\r\n  }\r\n\r\n  eventClick(value: any, disabled: any) {\r\n    if (!disabled) {\r\n      this.changeValue(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoRadioGroupComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoRadioGroupComponent, { static: true }) radio: PoRadioGroupComponent;\r\n   *\r\n   * focusRadio() {\r\n   *   this.radio.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (this.radioLabels && !this.disabled) {\r\n      const radioLabel = this.radioLabels.find((_, index) => !this.options[index].disabled);\r\n\r\n      if (radioLabel) {\r\n        radioLabel.nativeElement.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  getElementByValue(value) {\r\n    return this.inputEl.nativeElement.querySelector(`input[value='${value}']`);\r\n  }\r\n\r\n  onKeyUp(event: KeyboardEvent, value) {\r\n    const key = event.keyCode || event.which;\r\n\r\n    if (this.isArrowKey(key)) {\r\n      this.changeValue(value);\r\n    }\r\n  }\r\n\r\n  private isArrowKey(key: number) {\r\n    return key >= 37 && key <= 40;\r\n  }\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoSelectComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite personalizar o conteúdo dos itens exibidos na lista suspensa do componente.\r\n *\r\n * > Quando utilizada em _mobile_ será exibido o componente nativo.\r\n *\r\n * Para personalizar o conteúdo de cada item da lista deve-se utilizar a diretiva `p-select-option-template` com `ng-template`\r\n * dentro da tag `po-select`.\r\n *\r\n * Para obter a referência do item atual, use `let-option`, com isso você terá acesso aos valores e poderá personalizar sua exibição.\r\n *\r\n * Esta diretiva compõe-se de dois meios para uso, de forma explícita tal como em *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-select\r\n *   name=\"select\"\r\n *   [(ngModel)]=\"select\"\r\n *   [p-options]=\"options\">\r\n *     <ng-template p-select-option-template let-option>\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </ng-template>\r\n * </po-select>\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-select\r\n *   name=\"select\"\r\n *   [(ngModel)]=\"select\"\r\n *   [p-options]=\"options\">\r\n *     <div *p-select-option-template=\"let option\">\r\n *       <option-template [option]=\"option\"></option-template>\r\n *     </div>\r\n * </po-select>\r\n * ...\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-select-option-template]'\r\n})\r\nexport class PoSelectOptionTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { InputBoolean } from '../../decorators';\r\n\r\n@Directive()\r\nexport abstract class PoFieldModel<T> implements ControlValueAccessor {\r\n  /** Rótulo exibido pelo componente. */\r\n  @Input('p-label') label: string;\r\n\r\n  /** Nome do componente. */\r\n  @Input('name') name: string;\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica o foco no elemento ao ser iniciado.\r\n   *  > Caso mais de um elemento seja configurado com essa propriedade,\r\n   * o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica se o campo será desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') @InputBoolean() disabled: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do campo.\r\n   */\r\n  @Output('p-change') change: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n  value: T;\r\n\r\n  protected onTouched;\r\n\r\n  private propagateChange: any;\r\n\r\n  constructor() {}\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.propagateChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this.onWriteValue(value);\r\n  }\r\n\r\n  emitChange(value) {\r\n    this.change.emit(value);\r\n  }\r\n\r\n  protected updateModel(value: T) {\r\n    if (this.propagateChange) {\r\n      this.propagateChange(value);\r\n    }\r\n  }\r\n\r\n  abstract onWriteValue(value: T): void;\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { AbstractControl, ValidationErrors, Validator } from '@angular/forms';\r\n\r\nimport { InputBoolean } from '../../decorators';\r\nimport { PoFieldModel } from './po-field.model';\r\nimport { requiredFailed } from './validators';\r\n\r\n/**\r\n * @docsExtends PoFieldModel\r\n */\r\n@Directive()\r\nexport abstract class PoFieldValidateModel<T> extends PoFieldModel<T> implements Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') @InputBoolean() optional: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') @InputBoolean() required: boolean = false;\r\n\r\n  private onValidatorChange;\r\n\r\n  validate(abstractControl: AbstractControl): ValidationErrors {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    return this.extraValidation(abstractControl);\r\n  }\r\n\r\n  registerOnValidatorChange(fn: any) {\r\n    this.onValidatorChange = fn;\r\n  }\r\n\r\n  validateModel() {\r\n    if (this.onValidatorChange) {\r\n      this.onValidatorChange();\r\n    }\r\n  }\r\n\r\n  abstract extraValidation(c: AbstractControl): { [key: string]: any };\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  ContentChild,\r\n  Component,\r\n  DoCheck,\r\n  ElementRef,\r\n  forwardRef,\r\n  HostListener,\r\n  IterableDiffers,\r\n  Renderer2,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\nimport { isMobile, removeDuplicatedOptions, removeUndefinedAndNullOptions, validValue } from '../../../utils/util';\r\nimport { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';\r\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\r\n\r\nimport { PoSelectOption } from './po-select-option.interface';\r\nimport { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';\r\nimport { PoFieldValidateModel } from '../po-field-validate.model';\r\nimport { InputBoolean } from '../../../decorators';\r\n\r\nconst poSelectContentOffset = 8;\r\nconst poSelectContentPositionDefault = 'bottom';\r\n\r\n/**\r\n * @docsExtends PoFieldValidateModel\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-select-basic\" title=\"PO Select Basic\">\r\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-select-basic/sample-po-select-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-select-labs\" title=\"PO Select Labs\">\r\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-select-labs/sample-po-select-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-select-customer-registration\" title=\"PO Select - Customer registration\">\r\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.html\"> </file>\r\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts\"> </file>\r\n *   <file name=\"sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts\"> </file>\r\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>\r\n *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>\r\n * </example>\r\n *\r\n * @description\r\n *\r\n * O componente po-select exibe uma lista de valores e permite que o usuário selecione um desses valores.\r\n * Os valores listados podem ser fixos ou dinâmicos de acordo com a necessidade do desenvolvedor, dando mais flexibilidade ao componente.\r\n * O po-select não permite que o usuário informe um valor diferente dos valores listados, isso garante a consistência da informação.\r\n * O po-select não permite que sejam passados valores duplicados, undefined e null para as opções, excluindo-os da lista.\r\n *\r\n * > Ao passar um valor para o _model_ que não está na lista de opções, o mesmo será definido como `undefined`.\r\n *\r\n * Também existe a possibilidade de utilizar um _template_ para a exibição dos itens da lista,\r\n * veja mais em **[p-select-option-template](/documentation/po-select-option-template)**.\r\n */\r\n@Component({\r\n  selector: 'po-select',\r\n  templateUrl: './po-select.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoSelectComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoSelectComponent),\r\n      multi: true\r\n    },\r\n    PoControlPositionService\r\n  ]\r\n})\r\nexport class PoSelectComponent extends PoFieldValidateModel<any> implements AfterViewInit, DoCheck {\r\n  @ContentChild(PoSelectOptionTemplateDirective, { static: true })\r\n  selectOptionTemplate: PoSelectOptionTemplateDirective;\r\n\r\n  @ViewChild('contentList', { read: ElementRef, static: true }) contentList: ElementRef;\r\n  @ViewChild('icon', { read: ElementRef, static: true }) iconElement: ElementRef;\r\n  @ViewChild('select', { read: ElementRef, static: true }) selectElement: ElementRef;\r\n  @ViewChild('selectButton', { read: ElementRef, static: true }) selectButtonElement: ElementRef;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da tag form.\r\n   *\r\n   * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n   * two-way binding no componente deve se utilizar da seguinte forma:\r\n   *\r\n   * ```\r\n   * <po-select ... [ngModel]=\"selectModel\" (ngModelChange)=\"selectModel = $event\"> </po-select>\r\n   * ```\r\n   */\r\n  @Output('ngModelChange') ngModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será somente para leitura.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-readonly') @InputBoolean() readonly: boolean = false;\r\n\r\n  /** Mensagem que aparecerá enquanto nenhuma opção estiver selecionada. */\r\n  @Input('p-placeholder') placeholder?: string;\r\n\r\n  displayValue;\r\n  isMobile: any = isMobile();\r\n  modelValue: any;\r\n  onModelChange: any;\r\n  open: boolean = false;\r\n  selectedValue: any;\r\n  selectIcon: string = 'po-icon-arrow-down';\r\n  scrollPosition: number;\r\n\r\n  eventListenerFunction: () => void;\r\n  eventResizeListener: () => void;\r\n\r\n  onModelTouched: any;\r\n  protected clickoutListener: () => void;\r\n  private differ: any;\r\n  private _options: Array<PoSelectOption>;\r\n\r\n  /**\r\n   * Nesta propriedade deve ser definido uma coleção de objetos que implementam a interface `PoSelectOption`.\r\n   *\r\n   * Caso esta lista estiver vazia, o model será `undefined`.\r\n   *\r\n   * > Essa propriedade é imutável, ou seja, sempre que quiser atualizar a lista de opções disponíveis\r\n   * atualize a referência do objeto:\r\n   *\r\n   * ```\r\n   * // atualiza a referência do objeto garantindo a atualização do template\r\n   * this.options = [...this.options, { value: 'x', label: 'Nova opção' }];\r\n   *\r\n   * // evite, pois não atualiza a referência do objeto podendo gerar atrasos na atualização do template\r\n   * this.options.push({ value: 'x', label: 'Nova opção' });\r\n   * ```\r\n   */\r\n  @Input('p-options') set options(options: Array<PoSelectOption>) {\r\n    this._options = options;\r\n    removeDuplicatedOptions(this._options);\r\n    removeUndefinedAndNullOptions(this._options);\r\n    this.onUpdateOptions();\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n  /* istanbul ignore next */\r\n  constructor(\r\n    private element: ElementRef,\r\n    private changeDetector: ChangeDetectorRef,\r\n    differs: IterableDiffers,\r\n    public renderer: Renderer2,\r\n    private controlPosition: PoControlPositionService\r\n  ) {\r\n    super();\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  get isInvisibleSelectNative() {\r\n    return this.readonly && this.isMobile;\r\n  }\r\n\r\n  @HostListener('keydown', ['$event']) onKeydown($event?: any) {\r\n    const charCode = $event.which || $event.keyCode;\r\n\r\n    // Tratamentos para quando o readonly for ativado.\r\n    if (this.readonly) {\r\n      // deve matar o evento do teclado devido a alterar o valor do model mesmo com os options fechados\r\n      if (charCode !== PoKeyCodeEnum.tab) {\r\n        this.disableDefaultEventAndToggleButton();\r\n        $event.preventDefault();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Seleciona os itens com as teclas \"up\" e \"down\"\r\n    if ((!this.open || $event.altKey) && (charCode === PoKeyCodeEnum.arrowDown || charCode === PoKeyCodeEnum.arrowUp)) {\r\n      this.disableDefaultEventAndToggleButton();\r\n    }\r\n\r\n    // Abre o po-select com as teclas \"enter\" e \"espaço\"\r\n    if (charCode === PoKeyCodeEnum.enter || charCode === PoKeyCodeEnum.space) {\r\n      this.disableDefaultEventAndToggleButton();\r\n    }\r\n\r\n    // Fecha o po-select com a tecla \"tab\"\r\n    if (this.open && charCode === PoKeyCodeEnum.tab) {\r\n      $event.preventDefault();\r\n      this.toggleButton();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    const change = this.differ.diff(this.options);\r\n    if (change) {\r\n      removeDuplicatedOptions(this.options);\r\n      removeUndefinedAndNullOptions(this.options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoSelectComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;\r\n   *\r\n   * focusSelect() {\r\n   *   this.select.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.selectElement.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  hideDropDown() {\r\n    this.selectIcon = 'po-icon-arrow-down';\r\n    this.selector('.po-select-container').classList.remove('po-select-show');\r\n    this.open = false;\r\n\r\n    this.changeDetector.markForCheck();\r\n    this.selectElement.nativeElement.focus();\r\n\r\n    this.removeListeners();\r\n  }\r\n\r\n  onBlur() {\r\n    this.onModelTouched?.();\r\n  }\r\n\r\n  onOptionClick(option: PoSelectOption) {\r\n    this.updateValues(option);\r\n    this.toggleButton();\r\n  }\r\n\r\n  // Altera o valor ao selecionar um item.\r\n  onSelectChange(value: any) {\r\n    if (value && this.options && this.options.length) {\r\n      const optionFound: PoSelectOption = this.findOptionValue(value);\r\n\r\n      if (optionFound) {\r\n        this.updateValues(optionFound);\r\n        this.setScrollPosition(optionFound.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  onUpdateOptions() {\r\n    if (this.modelValue) {\r\n      this.onSelectChange(this.modelValue);\r\n    }\r\n  }\r\n\r\n  scrollValue(index, clientHeight) {\r\n    const heightScrollValue: number = index * this.getSelectItemHeight();\r\n\r\n    return (this.scrollPosition = heightScrollValue > clientHeight ? heightScrollValue : 0);\r\n  }\r\n\r\n  selector(query: string): Element {\r\n    return this.element.nativeElement.querySelector(query);\r\n  }\r\n\r\n  toggleButton(): void {\r\n    this.open ? this.hideDropDown() : this.showDropdown();\r\n  }\r\n\r\n  // Atualiza valores\r\n  updateValues(option: PoSelectOption): void {\r\n    if (this.selectedValue !== option.value) {\r\n      this.selectedValue = option.value;\r\n      this.selectElement.nativeElement.value = option.value;\r\n      this.updateModel(option.value);\r\n      this.displayValue = option.label;\r\n      this.emitChange(option.value);\r\n    }\r\n  }\r\n\r\n  // Esconde Content do Select quando for clicado fora\r\n  wasClickedOnToggle(event: MouseEvent): void {\r\n    if (\r\n      !this.selectButtonElement.nativeElement.contains(event.target) &&\r\n      !this.iconElement.nativeElement.contains(event.target)\r\n    ) {\r\n      this.hideDropDown();\r\n    }\r\n  }\r\n\r\n  // Recebe as alterações do model\r\n  onWriteValue(value: any) {\r\n    const optionFound: PoSelectOption = this.findOptionValue(value);\r\n\r\n    if (optionFound) {\r\n      this.selectElement.nativeElement.value = optionFound.value;\r\n      this.selectedValue = optionFound.value;\r\n      this.displayValue = optionFound.label;\r\n      this.setScrollPosition(optionFound.value);\r\n    } else if (validValue(this.selectedValue)) {\r\n      this.selectElement.nativeElement.value = undefined;\r\n      this.updateModel(undefined);\r\n      this.selectedValue = undefined;\r\n      this.displayValue = undefined;\r\n    }\r\n\r\n    this.modelValue = value;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n\r\n  private isEqual(value: any, inputValue: any): boolean {\r\n    if ((value || value === 0) && inputValue) {\r\n      return value.toString() === inputValue.toString();\r\n    }\r\n\r\n    if ((value === null && inputValue !== null) || (value === undefined && inputValue !== undefined)) {\r\n      value = `${value}`; // Transformando em string\r\n    }\r\n\r\n    return value === inputValue;\r\n  }\r\n\r\n  // Método necessário para bloquear o evento default do select nativo.\r\n  // Ao utilizar event.preventDefault(), nos navegadores Firefox e IE o mesmo não cancela o evento.\r\n  private disableDefaultEventAndToggleButton() {\r\n    this.selectElement.nativeElement.style.display = 'none';\r\n\r\n    setTimeout(() => {\r\n      this.selectElement.nativeElement.style.display = 'block';\r\n      this.toggleButton();\r\n    });\r\n  }\r\n\r\n  private findOptionValue(value: any) {\r\n    return this.options.find(option => this.isEqual(option.value, value));\r\n  }\r\n\r\n  private getSelectItemHeight() {\r\n    const selectItem = this.selector('div.po-select-item');\r\n\r\n    return selectItem && selectItem.clientHeight;\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.clickoutListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\r\n      this.wasClickedOnToggle(event);\r\n    });\r\n\r\n    this.eventResizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.hideDropDown();\r\n    });\r\n\r\n    window.addEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private onScroll = (): void => {\r\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\r\n  };\r\n\r\n  private removeListeners() {\r\n    if (this.clickoutListener) {\r\n      this.clickoutListener();\r\n    }\r\n\r\n    this.eventResizeListener();\r\n    window.removeEventListener('scroll', this.onScroll, true);\r\n  }\r\n\r\n  private setPositionDropdown() {\r\n    this.controlPosition.setElements(\r\n      this.contentList.nativeElement,\r\n      poSelectContentOffset,\r\n      this.selectButtonElement,\r\n      ['top', 'bottom'],\r\n      true\r\n    );\r\n\r\n    this.controlPosition.adjustPosition(poSelectContentPositionDefault);\r\n  }\r\n\r\n  private setScrollPosition(value: any) {\r\n    const ulDropdpwn = this.element.nativeElement.querySelector('ul.po-select-content');\r\n\r\n    if (value && this.options && this.options.length) {\r\n      const optionFound: PoSelectOption = this.findOptionValue(value);\r\n\r\n      if (optionFound) {\r\n        const index = this.options.indexOf(optionFound);\r\n        ulDropdpwn.scrollTop = this.scrollValue(index, ulDropdpwn.clientHeight);\r\n      }\r\n    }\r\n  }\r\n\r\n  private showDropdown() {\r\n    if (!this.readonly) {\r\n      this.selectElement.nativeElement.focus();\r\n      this.selectIcon = 'po-icon-arrow-up';\r\n      this.selector('.po-select-container').classList.add('po-select-show');\r\n      this.open = true;\r\n      this.changeDetector.markForCheck();\r\n      this.setPositionDropdown();\r\n      this.initializeListeners();\r\n\r\n      if (this.options && this.options.length) {\r\n        this.setScrollPosition(this.selectedValue);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @usedBy PoSwitchComponent\r\n *\r\n * @description\r\n *\r\n * Enum para posicionar o label do valor do po-switch.\r\n */\r\nexport enum PoSwitchLabelPosition {\r\n  /** Posiciona o label do lado esquerdo do switch. */\r\n  Right,\r\n  /** Posiciona o label do lado direito do switch. */\r\n  Left\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  Input,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoFieldModel } from '../po-field.model';\r\nimport { PoKeyCodeEnum } from './../../../enums/po-key-code.enum';\r\n\r\nimport { PoSwitchLabelPosition } from './po-switch-label-position.enum';\r\n\r\n/**\r\n * @docsExtends PoFieldModel\r\n *\r\n * @description\r\n *\r\n * O componente `po-switch` é um [checkbox](/documentation/po-checkbox-group) mais intuitivo, pois faz analogia a um interruptor.\r\n * Deve ser usado quando deseja-se transmitir a ideia de ligar / desligar uma funcionalidade específica.\r\n *\r\n * Pode-se ligar ou deligar o botão utilizando a tecla de espaço ou o clique do mouse.\r\n *\r\n * O texto exibido pode ser alterado de acordo com o valor setado aumentando as possibilidades de uso do componente,\r\n * portanto, recomenda-se informar textos que contextualizem seu uso para que facilite a compreensão do usuário.\r\n *\r\n * > O componente não altera o valor incial informado no *model*, portanto indica-se inicializa-lo caso ter necessidade.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-switch-basic\" title=\"PO Switch Basic\">\r\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-switch-basic/sample-po-switch-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-switch-labs\" title=\"PO Switch Labs\">\r\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.ts\"> </file>\r\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.e2e-spec.ts\"> </file>\r\n *   <file name=\"sample-po-switch-labs/sample-po-switch-labs.component.po.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-switch-order\" title=\"PO Switch - Order Summary\">\r\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.html\"> </file>\r\n *   <file name=\"sample-po-switch-order/sample-po-switch-order.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-switch-order-reactive-form\" title=\"PO Switch - Order Summary Reactive Form\">\r\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.html\"> </file>\r\n *   <file name=\"sample-po-switch-order-reactive-form/sample-po-switch-order-reactive-form.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-switch',\r\n  templateUrl: './po-switch.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoSwitchComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoSwitchComponent extends PoFieldModel<boolean> implements AfterViewInit {\r\n  @ViewChild('switchContainer', { static: true }) switchContainer: ElementRef;\r\n\r\n  value = false;\r\n\r\n  private _labelOff: string = 'false';\r\n  private _labelOn: string = 'true';\r\n  private _labelPosition: PoSwitchLabelPosition = PoSwitchLabelPosition.Right;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Posição de exibição do rótulo.\r\n   *\r\n   * > Por padrão exibe à direita.\r\n   */\r\n  @Input('p-label-position') set labelPosition(position: PoSwitchLabelPosition) {\r\n    this._labelPosition = position in PoSwitchLabelPosition ? parseInt(<any>position, 10) : PoSwitchLabelPosition.Right;\r\n  }\r\n\r\n  get labelPosition() {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  /**\r\n   * Texto exibido quando o valor do componente for `false`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-label-off') set labelOff(label: string) {\r\n    this._labelOff = label || 'false';\r\n  }\r\n\r\n  get labelOff() {\r\n    return this._labelOff;\r\n  }\r\n\r\n  /**\r\n   * Texto exibido quando o valor do componente for `true`.\r\n   *\r\n   * @default `true`\r\n   */\r\n  @Input('p-label-on') set labelOn(label: string) {\r\n    this._labelOn = label || 'true';\r\n  }\r\n\r\n  get labelOn() {\r\n    return this._labelOn;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoSwitchComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoSwitchComponent, { static: true }) switch: PoSwitchComponent;\r\n   *\r\n   * focusSwitch() {\r\n   *   this.switch.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus() {\r\n    if (!this.disabled) {\r\n      this.switchContainer.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  onBlur() {\r\n    this.onTouched?.();\r\n  }\r\n\r\n  getLabelPosition() {\r\n    switch (this.labelPosition) {\r\n      case PoSwitchLabelPosition.Left:\r\n        return 'left';\r\n      case PoSwitchLabelPosition.Right:\r\n        return 'right';\r\n      default:\r\n        return 'right';\r\n    }\r\n  }\r\n\r\n  getSwitchPosition() {\r\n    switch (this.labelPosition) {\r\n      case PoSwitchLabelPosition.Left:\r\n        return 'right';\r\n      case PoSwitchLabelPosition.Right:\r\n        return 'left';\r\n      default:\r\n        return 'left';\r\n    }\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    if (event.which === PoKeyCodeEnum.space || event.keyCode === PoKeyCodeEnum.space) {\r\n      event.preventDefault();\r\n      this.eventClick();\r\n    }\r\n  }\r\n\r\n  changeValue(value: any) {\r\n    if (this.value !== value) {\r\n      this.value = value;\r\n      this.updateModel(value);\r\n      this.emitChange(this.value);\r\n    }\r\n  }\r\n\r\n  eventClick() {\r\n    if (!this.disabled) {\r\n      this.changeValue(!this.value);\r\n    }\r\n  }\r\n\r\n  onWriteValue(value: any): void {\r\n    if (value !== this.value) {\r\n      this.value = !!value;\r\n\r\n      this.changeDetector.markForCheck();\r\n    }\r\n  }\r\n}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { convertToBoolean, convertToInt } from '../../../utils/util';\r\nimport { maxlengpoailed, minlengpoailed, requiredFailed } from '../validators';\r\nimport { InputBoolean } from '../../../decorators';\r\n\r\n/**\r\n * @description\r\n *\r\n * Este é um componente de entrada de dados que possibilita o preechimento com múltiplas linhas.\r\n * É recomendado para observações, detalhamentos e outras situações onde o usuário deva preencher com um texto.\r\n *\r\n * Importante:\r\n *\r\n * - A propriedade `name` é obrigatória para que o formulário e o `model` funcionem corretamente. Do contrário, ocorrerá um erro de\r\n * _Angular_, onde será necessário informar o atributo `name` ou o atributo `[ngModelOptions]=\"{standalone: true}\"`, por exemplo:\r\n *\r\n * ```\r\n * <po-textarea\r\n *   [(ngModel)]=\"pessoa.nome\"\r\n *   [ngModelOptions]=\"{standalone: true}\">\r\n * </po-textarea>\r\n * ```\r\n */\r\n@Directive()\r\nexport abstract class PoTextareaBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /** Label do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio do campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** Nome e Id do componente. */\r\n  @Input('name') name: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   * - O campo conter `p-required`;\r\n   * - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao sair do campo.\r\n   */\r\n  @Output('p-blur') blur: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao entrar do campo.\r\n   */\r\n  @Output('p-enter') enter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor e deixar o campo.\r\n   */\r\n  @Output('p-change') change: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento disparado ao alterar valor do model.\r\n   */\r\n  @Output('p-change-model') changeModel: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  private _disabled: boolean = false;\r\n  private _maxlength: number;\r\n  private _minlength: number;\r\n  private _placeholder: string = '';\r\n  private _readonly: boolean = false;\r\n  private _required: boolean = false;\r\n  private _rows: number = 3;\r\n\r\n  private modelLastUpdate: any;\r\n  private onChangePropagate: any = null;\r\n  private validatorChange: any;\r\n  // eslint-disable-next-line\r\n  protected onTouched: any = null;\r\n\r\n  /** Placeholder, mensagem que aparecerá enquanto o campo não estiver preenchido. */\r\n  @Input('p-placeholder') set placeholder(value: string) {\r\n    this._placeholder = value || '';\r\n  }\r\n\r\n  get placeholder() {\r\n    return this._placeholder;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será desabilitado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = convertToBoolean(disabled);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será somente leitura.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-readonly') set readonly(readonly: boolean) {\r\n    this._readonly = convertToBoolean(readonly);\r\n  }\r\n\r\n  get readonly(): boolean {\r\n    return this._readonly;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * > Esta propriedade é desconsiderada quando o _input_ está desabilitado `(p-disabled)`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel();\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica a quantidade mínima de caracteres que o campo aceita.\r\n   */\r\n  @Input('p-minlength') set minlength(minlength: number) {\r\n    this._minlength = convertToInt(minlength);\r\n    this.validateModel();\r\n  }\r\n\r\n  get minlength(): number {\r\n    return this._minlength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica a quantidade máxima de caracteres que o campo aceita.\r\n   */\r\n  @Input('p-maxlength') set maxlength(maxlength: number) {\r\n    this._maxlength = convertToInt(maxlength);\r\n    this.validateModel();\r\n  }\r\n\r\n  get maxlength(): number {\r\n    return this._maxlength;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica a quantidade de linhas que serão exibidas.\r\n   *\r\n   * @default `3`\r\n   */\r\n  @Input('p-rows') set rows(value: number) {\r\n    this._rows = isNaN(parseInt(<any>value, 10)) || value < 3 ? 3 : parseInt(<any>value, 10);\r\n  }\r\n  get rows(): number {\r\n    return this._rows;\r\n  }\r\n\r\n  constructor(public cd: ChangeDetectorRef) {}\r\n\r\n  callOnChange(value: any) {\r\n    // Quando o input não possui um formulário, então esta função não é registrada\r\n    if (this.onChangePropagate) {\r\n      this.onChangePropagate(value);\r\n    }\r\n\r\n    this.controlChangeModelEmitter(value);\r\n  }\r\n\r\n  controlChangeModelEmitter(value: any) {\r\n    if (this.modelLastUpdate !== value) {\r\n      this.changeModel.emit(value);\r\n      this.modelLastUpdate = value;\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  // Funções `registerOnChange`, `registerOnTouched` e `registerOnValidatorChange` implementadas referentes ao ControlValueAccessor\r\n  // usadas para interceptar as mudanças e não atualizar automaticamente o Model\r\n  registerOnChange(func: any): void {\r\n    this.onChangePropagate = func;\r\n  }\r\n\r\n  registerOnTouched(func: any): void {\r\n    this.onTouched = func;\r\n  }\r\n\r\n  registerOnValidatorChange(func: any): void {\r\n    this.validatorChange = func;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (minlengpoailed(this.minlength, abstractControl.value)) {\r\n      return {\r\n        minlength: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n\r\n    if (maxlengpoailed(this.maxlength, abstractControl.value)) {\r\n      return {\r\n        maxlength: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  writeValue(value: any) {\r\n    this.writeValueModel(value);\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  protected validateModel() {\r\n    if (this.validatorChange) {\r\n      this.validatorChange();\r\n    }\r\n  }\r\n\r\n  abstract writeValueModel(value: any): void;\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ChangeDetectorRef,\r\n  forwardRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { PoTextareaBaseComponent } from './po-textarea-base.component';\r\n\r\n/**\r\n * @docsExtends PoTextareaBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-textarea-basic\" title=\"PO Textarea Basic\" >\r\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-textarea-basic/sample-po-textarea-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-textarea-labs\" title=\"PO Textarea Labs\" >\r\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-textarea-labs/sample-po-textarea-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-textarea-email\" title=\"PO Textarea - Email\" >\r\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.html\"> </file>\r\n *  <file name=\"sample-po-textarea-email/sample-po-textarea-email.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-textarea-email-reactive-form\" title=\"PO Textarea - Email Reactive Form\" >\r\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.html\"> </file>\r\n *  <file name=\"sample-po-textarea-email-reactive-form/sample-po-textarea-email-reactive-form.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-textarea',\r\n  templateUrl: './po-textarea.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoTextareaComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoTextareaComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoTextareaComponent extends PoTextareaBaseComponent implements AfterViewInit {\r\n  @ViewChild('inp', { read: ElementRef, static: true }) inputEl: ElementRef;\r\n\r\n  valueBeforeChange: any;\r\n  fireChange: boolean = false;\r\n\r\n  constructor(cd: ChangeDetectorRef) {\r\n    super(cd);\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoTextareaComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoTextareaComponent, { static: true }) textarea: PoTextareaComponent;\r\n   *\r\n   * focusTextarea() {\r\n   *   this.textarea.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus(): void {\r\n    if (!this.disabled) {\r\n      this.inputEl.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  writeValueModel(value: any): void {\r\n    if (this.inputEl) {\r\n      if (!value) {\r\n        // Se for o valor for undefined, deve limpar o campo\r\n        this.inputEl.nativeElement.value = '';\r\n      } else {\r\n        this.inputEl.nativeElement.value = value;\r\n      }\r\n    }\r\n\r\n    // Emite evento quando o model é atualizado, inclusive a primeira vez\r\n    if (value) {\r\n      this.change.emit(value);\r\n    }\r\n  }\r\n\r\n  validMaxLength(maxlength: number, value: string) {\r\n    return maxlength && value.length > maxlength ? value.toString().substring(0, maxlength) : value;\r\n  }\r\n\r\n  eventOnInput(event: any) {\r\n    const value = this.validMaxLength(this.maxlength, event.target.value);\r\n    this.callOnChange(value);\r\n    this.inputEl.nativeElement.value = value;\r\n  }\r\n\r\n  eventOnFocus() {\r\n    // Atualiza valor da variável que será usada para verificar se o campo teve alteração\r\n    this.valueBeforeChange = this.inputEl.nativeElement.value;\r\n\r\n    // Dispara evento quando o usuário entrar no campo\r\n    // Este evento também é disparado quando o campo inicia com foco.\r\n    this.enter.emit();\r\n  }\r\n\r\n  eventOnBlur() {\r\n    this.onTouched?.();\r\n    this.blur.emit();\r\n    this.controlChangeEmitter();\r\n  }\r\n\r\n  controlChangeEmitter() {\r\n    const elementValue = this.inputEl.nativeElement.value;\r\n\r\n    if (elementValue !== this.valueBeforeChange) {\r\n      this.change.emit(elementValue);\r\n    }\r\n  }\r\n}\r\n","import { ComponentRef } from '@angular/core';\r\n\r\nimport { PoNotification } from './po-notification.interface';\r\nimport { PoToaster } from './po-toaster/po-toaster.interface';\r\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\r\nimport { PoToasterType } from './po-toaster/po-toaster-type.enum';\r\n\r\n/**\r\n * @description\r\n *\r\n * Serviço responsável por emitir as notificações em uma página. São disponibilizados os métodos de:\r\n *\r\n * - success,\r\n * - warning,\r\n * - error,\r\n * - information.\r\n *\r\n * Cada um destes métodos recebe como parâmetro o objeto `PoNotification` que contém os dados da mensagem e o\r\n * objeto ViewContainerRef que é a representação do container do componente onde será criada a notificação.\r\n *\r\n * Estas notificações serão exibidas durante 10 segundos por padrão, podendo ser alterada conforme necessidade.\r\n * Após este tempo a mesma é removida automaticamente.\r\n *\r\n * O serviço possui um limite de até 5 notificações por vez, a partir do sexto a primeira notificação será removida dando lugar a nova.\r\n *\r\n */\r\nexport abstract class PoNotificationBaseService {\r\n  // Array responsável por guardar a instância de po-toaster's superiores.\r\n  stackTop: Array<ComponentRef<any>> = [];\r\n\r\n  // Array responsável por guardar a instância de po-toaster's inferiores.\r\n  stackBottom: Array<ComponentRef<any>> = [];\r\n\r\n  // Duração da notificação ativa.\r\n  private defaultDuration = 10000;\r\n\r\n  /**\r\n   * Emite uma notificação de sucesso.\r\n   *\r\n   * @param {PoNotification | string} notification Objeto com os dados da notificação ou somente a string com a mensagem da notificação.\r\n   */\r\n  public success(notification: PoNotification | string) {\r\n    this.createToaster(this.buildToaster(notification, PoToasterType.Success));\r\n  }\r\n\r\n  /**\r\n   * Emite uma notificação de atenção.\r\n   *\r\n   * @param {PoNotification | string} notification Objeto com os dados da notificação ou somente a string com a mensagem da notificação\r\n   */\r\n  public warning(notification: PoNotification | string) {\r\n    this.createToaster(this.buildToaster(notification, PoToasterType.Warning));\r\n  }\r\n\r\n  /**\r\n   * Emite uma notificação de erro.\r\n   *\r\n   * @param {PoNotification | string} notification Objeto com os dados da notificação ou somente a string com a mensagem da notificação\r\n   */\r\n  public error(notification: PoNotification | string) {\r\n    this.createToaster(this.buildToaster(notification, PoToasterType.Error));\r\n  }\r\n\r\n  /**\r\n   * Emite uma notificação de informação.\r\n   *\r\n   * @param {PoNotification | string} notification Objeto com os dados da notificação ou somente a string com a mensagem da notificação\r\n   */\r\n  public information(notification: PoNotification | string) {\r\n    this.createToaster(this.buildToaster(notification, PoToasterType.Information));\r\n  }\r\n\r\n  /**\r\n   * Define em milissegundos a duração padrão para as notificações.\r\n   *\r\n   * > Padrão 10 segundos.\r\n   *\r\n   * @param {number} defaultDuration Duração em milisegundos\r\n   */\r\n  public setDefaultDuration(defaultDuration: number) {\r\n    this.defaultDuration = defaultDuration;\r\n  }\r\n\r\n  /**\r\n   * @docsPrivate\r\n   *\r\n   * Cria um objeto do tipo PoToaster de acordo o tipo.\r\n   *\r\n   * @param {PoNotification | string} notification Objeto PoNotification com os dados da notificação\r\n   */\r\n  private buildToaster(notification: PoNotification | string, type: PoToasterType): PoToaster {\r\n    let index = 0;\r\n    let orientation;\r\n\r\n    if (\r\n      (<PoNotification>notification).orientation === undefined ||\r\n      (<PoNotification>notification).orientation === PoToasterOrientation.Bottom\r\n    ) {\r\n      index = this.stackBottom.length;\r\n      orientation = PoToasterOrientation.Bottom;\r\n    } else {\r\n      index = this.stackTop.length;\r\n      orientation = PoToasterOrientation.Top;\r\n    }\r\n\r\n    const toaster: PoToaster = {\r\n      componentRef: undefined,\r\n      message: (<PoNotification>notification).message || <string>notification,\r\n      type: type,\r\n      orientation: orientation,\r\n      action: (<PoNotification>notification).action,\r\n      actionLabel: (<PoNotification>notification).actionLabel,\r\n      position: index,\r\n      duration: (<PoNotification>notification).duration || this.defaultDuration\r\n    };\r\n\r\n    if ((<PoNotification>notification).action) {\r\n      toaster.action = (param: any) => {\r\n        (<PoNotification>notification).action();\r\n        this.destroyToaster(param.componentRef);\r\n      };\r\n    }\r\n\r\n    return toaster;\r\n  }\r\n\r\n  /**\r\n   * @docsPrivate\r\n   *\r\n   * Método responsável por criar o po-toaster.\r\n   *\r\n   * @param {PoToaster} toaster Objeto contendo as informações do toaster.\r\n   */\r\n  abstract createToaster(toaster: PoToaster): void;\r\n\r\n  /**\r\n   * @docsPrivate\r\n   *\r\n   * Método responsável por destruir o po-toaster.\r\n   *\r\n   * @param {ComponentRef} toaster Número da posição ou instancia do toaster a ser destruído.\r\n   * @param {PoToasterOrientation} orientation Orientação do PoToaster: Top ou Bottom\r\n   */\r\n  abstract destroyToaster(toaster: ComponentRef<any>): void;\r\n}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\n\r\nimport { PoComponentInjectorService } from './../po-component-injector/po-component-injector.service';\r\nimport { PoNotificationBaseService } from './po-notification-base.service';\r\nimport { PoToaster } from './po-toaster/po-toaster.interface';\r\nimport { PoToasterOrientation } from './po-toaster/po-toaster-orientation.enum';\r\nimport { PoToasterComponent } from './po-toaster/po-toaster.component';\r\nimport { timer } from 'rxjs';\r\nimport { takeWhile } from 'rxjs/operators';\r\n\r\nconst PoNotificationMaxLength = 5;\r\nconst PoNotificationFadeTime = 200;\r\n\r\n/**\r\n * @docsExtends PoNotificationBaseService\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-notification-basic\" title=\"PO Notification Basic\">\r\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-notification-basic/sample-po-notification-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-notification-labs\" title=\"PO Notification Labs\">\r\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-notification-labs/sample-po-notification-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-notification-sales\" title=\"PO Notification - Sales\">\r\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.html\"> </file>\r\n *  <file name=\"sample-po-notification-sales/sample-po-notification-sales.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoNotificationService extends PoNotificationBaseService {\r\n  constructor(private poComponentInjector: PoComponentInjectorService) {\r\n    super();\r\n  }\r\n\r\n  createToaster(toaster: PoToaster): void {\r\n    const componentRef: ComponentRef<any> = this.poComponentInjector.createComponentInApplication(PoToasterComponent);\r\n    toaster.componentRef = componentRef;\r\n\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    componentRef.instance.configToaster(toaster);\r\n\r\n    const stack = toaster.orientation === PoToasterOrientation.Top ? this.stackTop : this.stackBottom;\r\n    stack.push(componentRef);\r\n\r\n    this.verifyLimitToaster(stack);\r\n\r\n    this.observableOnClose(componentRef);\r\n\r\n    if (!(toaster.action && toaster.actionLabel)) {\r\n      timer(toaster.duration)\r\n        .pipe(takeWhile(() => componentRef.instance.alive))\r\n        .subscribe(() => {\r\n          this.destroyToaster(componentRef);\r\n        });\r\n    }\r\n  }\r\n\r\n  destroyToaster(toaster: any): void {\r\n    let stack;\r\n    if (toaster.instance.orientation === PoToasterOrientation.Top) {\r\n      stack = this.stackTop;\r\n    } else {\r\n      stack = this.stackBottom;\r\n    }\r\n\r\n    toaster.instance.setFadeOut();\r\n    const index = stack.indexOf(toaster);\r\n    stack.splice(index, 1);\r\n\r\n    setTimeout(() => {\r\n      this.poComponentInjector.destroyComponentInApplication(toaster);\r\n      for (let count = 0; count < stack.length; count++) {\r\n        stack[count].instance.changePosition(count);\r\n      }\r\n    }, PoNotificationFadeTime);\r\n  }\r\n\r\n  private observableOnClose(componentRef: any) {\r\n    componentRef.instance.observableOnClose.subscribe(() => {\r\n      this.destroyToaster(componentRef);\r\n    });\r\n  }\r\n\r\n  private verifyLimitToaster(stack: Array<any>) {\r\n    if (stack.length > PoNotificationMaxLength) {\r\n      this.destroyToaster(stack[0]);\r\n    }\r\n  }\r\n}\r\n","// Enum de status de envio dos arquivos.\r\nexport enum PoUploadStatus {\r\n  // Enviou com sucesso.\r\n  Uploaded,\r\n  // Está enviando.\r\n  Uploading,\r\n  // Ocorreu algum erro no envio.\r\n  Error,\r\n  // Não enviou ou aconteceu algum erro.\r\n  None\r\n}\r\n","import { PoUploadStatus } from './po-upload-status.enum';\r\n\r\n// Classe responsável pelo arquivo do PO Upload\r\nexport class PoUploadFile {\r\n  // Nome do arquivo.\r\n  public name: string;\r\n  // Arquivo bruto.\r\n  public rawFile: File;\r\n  // Status de envio do arquivo.\r\n  public status?: PoUploadStatus;\r\n  // Identificador do arquivo.\r\n  public uid: string;\r\n  // Extensão do arquivo.\r\n  public extension: string;\r\n  // Tamanho do arquivo em bytes;\r\n  public size: number;\r\n\r\n  // propriedade para auxiliar a exibição do texto no componente progress\r\n  displayName?: string;\r\n\r\n  // porcentagem utilizada para repassar ao componente progress\r\n  percent?: number;\r\n\r\n  constructor(file: any) {\r\n    if (file) {\r\n      this.name = file.name;\r\n      this.displayName = `${file.name} - ${this.getFileSize(file.size)}`;\r\n      this.extension = this.getExtension(file.name);\r\n      this.size = file.size;\r\n      this.rawFile = file;\r\n      this.uid = this.generateUUID();\r\n      this.status = PoUploadStatus.None;\r\n    }\r\n  }\r\n\r\n  private getExtension(value: string) {\r\n    if (value) {\r\n      const extension = value.substr(value.lastIndexOf('.'));\r\n      return extension.toLowerCase();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  private generateUUID() {\r\n    function s4() {\r\n      return Math.floor((1 + Math.random()) * 0x10000)\r\n        .toString(16)\r\n        .substring(1);\r\n    }\r\n\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n  }\r\n\r\n  // Retorna o tamanho do arquivo em KBytes.\r\n  private getFileSize(size: number): string {\r\n    let kbSize = 0;\r\n\r\n    if (size) {\r\n      kbSize = Math.ceil(size / 1024);\r\n    }\r\n\r\n    return `${kbSize} KB`;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpEventType,\r\n  HttpErrorResponse,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\n\r\nimport { PoUploadFile } from './po-upload-file';\r\n\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PoUploadBaseService {\r\n  formField: string = 'files';\r\n  requests: Array<any> = [];\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Método responsável por enviar os arquivos ao servidor, conforme o parâmetro URL.\r\n   *\r\n   * @param url URL da requisição a ser efetuada.\r\n   * @param files Arquivos a serem enviados.\r\n   * @param tOnUpload Função a ser executada quando o arquivo for enviado ao servidor.\r\n   * @param uploadCallback Função que será executada enquanto os arquivos estiverem sendo enviados.\r\n   * @param successCallback Função a ser executada quando a requisição for efetuada com sucesso.\r\n   * @param errorCallback Função a ser executada quando a requisição foi efetuada com sucesso.\r\n   */\r\n  public upload(\r\n    url: string,\r\n    files: Array<PoUploadFile>,\r\n    headers: { [name: string]: string | Array<string> },\r\n    tOnUpload: EventEmitter<any>,\r\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\r\n    successCallback: (file: PoUploadFile, event: any) => void,\r\n    errorCallback: (file: PoUploadFile, event: any) => void\r\n  ) {\r\n    const filesLength = files.length;\r\n    const uploadEvent: any = {\r\n      data: {},\r\n      file: null\r\n    };\r\n\r\n    for (let i = 0; i < filesLength; i++) {\r\n      const formData: FormData = new FormData();\r\n      const file = files[i];\r\n      const fileName = file.rawFile.name;\r\n\r\n      formData.append(this.formField, file.rawFile, fileName);\r\n\r\n      // Função upload, onde o desenvolvedor pode enviar dados para a requisição.\r\n      if (tOnUpload) {\r\n        uploadEvent['file'] = file;\r\n        tOnUpload.emit(uploadEvent);\r\n\r\n        formData.append('data', JSON.stringify(uploadEvent.data));\r\n      }\r\n\r\n      this.sendFile(url, file, headers, formData, uploadCallback, successCallback, errorCallback);\r\n    }\r\n  }\r\n\r\n  public sendFile(\r\n    url: string,\r\n    file: PoUploadFile,\r\n    headers: { [name: string]: string | Array<string> },\r\n    formData: FormData,\r\n    uploadCallback: (file: PoUploadFile, percent: number) => void,\r\n    successCallback: (file: PoUploadFile, event: any) => void,\r\n    errorCallback: (file: PoUploadFile, event: any) => void\r\n  ) {\r\n    const request = this.getRequest(url, headers, formData).subscribe(\r\n      event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.addRequest(file, request);\r\n\r\n          const percentDone = Math.round((100 * event.loaded) / event.total);\r\n          uploadCallback(file, percentDone);\r\n        } else if (event instanceof HttpResponse) {\r\n          // Sucesso, arquivos enviados.\r\n          successCallback(file, event);\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        errorCallback(file, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  public getRequest(\r\n    url: string,\r\n    headers: { [name: string]: string | Array<string> },\r\n    formData: FormData\r\n  ): Observable<any> {\r\n    const httpHeaders = new HttpHeaders(headers);\r\n\r\n    const req = new HttpRequest('POST', url, formData, {\r\n      reportProgress: true,\r\n      headers: httpHeaders\r\n    });\r\n    return this.http.request(req);\r\n  }\r\n\r\n  public stopRequestByFile(file: any, callback: () => void) {\r\n    const requestObj = this.requests.find(req => req.file.uid === file.uid);\r\n\r\n    if (requestObj) {\r\n      const request = requestObj.request;\r\n      request.unsubscribe();\r\n      this.removeRequest(requestObj);\r\n      callback();\r\n    }\r\n  }\r\n\r\n  public removeRequest(requestObj: any) {\r\n    const index = this.requests.indexOf(requestObj);\r\n    this.requests.splice(index, 1);\r\n  }\r\n\r\n  public addRequest(file: PoUploadFile, request: Subscription) {\r\n    const hasRequest = this.requests.some(req => req.file.uid === file.uid);\r\n\r\n    if (!hasRequest) {\r\n      this.requests.push({ file, request });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { PoUploadBaseService } from './po-upload-base.service';\r\n\r\n@Injectable()\r\nexport class PoUploadService extends PoUploadBaseService {}\r\n","import { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\r\nimport { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, isEquals, isIE, isMobile } from '../../../utils/util';\r\nimport { requiredFailed } from '../validators';\r\n\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadFileRestrictions } from './interfaces/po-upload-file-restriction.interface';\r\nimport { PoUploadLiterals } from './interfaces/po-upload-literals.interface';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\nimport { InputBoolean } from '../../../decorators';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\n\r\nexport const poUploadLiteralsDefault = {\r\n  en: <PoUploadLiterals>{\r\n    files: 'files',\r\n    folders: 'folders',\r\n    selectFile: 'Select file',\r\n    selectFiles: 'Select files',\r\n    selectFolder: 'Select folder',\r\n    startSending: 'Start sending',\r\n    dragFilesHere: 'Drag files here',\r\n    dragFoldersHere: 'Drag folders here',\r\n    selectFilesOnComputer: 'or select files on your computer',\r\n    selectFolderOnComputer: 'or select folder on your computer',\r\n    dropFilesHere: 'Drop files here',\r\n    dropFoldersHere: 'Drop folders here',\r\n    invalidDropArea: '{0} were not dropped in the correct area',\r\n    invalidFileType: 'Failed to load {0} file(s) as it is not the allowed file type.',\r\n    invalidAmount: 'Failed to load {0} file(s), as it exceeds the limit amount of files.',\r\n    invalidFormat: 'Failed to load {0} file(s), as it does not match the format(s): {1}.',\r\n    invalidSize: 'Failed to load {0} files(s), as it is not the allowed size: from {1} to {2}.',\r\n    numberOfFilesAllowed: '{0} file(s) allowed',\r\n    allowedFormats: 'Accepted file formats: {0}.',\r\n    allowedFileSizeRange: 'Size limit per file: from {0} to {1}',\r\n    maxFileSizeAllowed: 'Size limit per file: {0} maximum',\r\n    minFileSizeAllowed: 'Size limit per file: {0} minimum',\r\n    errorOccurred: 'An error has occurred',\r\n    sentWithSuccess: 'Sent with success'\r\n  },\r\n  es: <PoUploadLiterals>{\r\n    files: 'archivos',\r\n    folders: 'carpetas',\r\n    selectFile: 'Seleccionar archivo',\r\n    selectFiles: 'Seleccionar archivos',\r\n    selectFolder: 'Seleccionar carpeta',\r\n    startSending: 'Iniciar carga',\r\n    dragFilesHere: 'Arrastra los archivos aquí',\r\n    dragFoldersHere: 'Arrastra las carpetas aquí',\r\n    selectFilesOnComputer: 'o selecciona los archivos en tu computadora',\r\n    selectFolderOnComputer: 'o selecciona la carpeta en tu computadora',\r\n    dropFilesHere: 'Deja los archivos aquí',\r\n    dropFoldersHere: 'Deja las carpetas aquí',\r\n    invalidDropArea: 'Los {0} no se insertaron en la ubicación correcta',\r\n    invalidFileType: 'Error al cargar {0} archivo (s) ya que no es el tipo de archivo permitido',\r\n    invalidAmount: 'Error al cargar {0} archivo (s) ya que excede la cantidad limite de archivos.',\r\n    invalidFormat: 'Error al cargar {0} archivo (s) ya que no coincide con el formato (s): {1}.',\r\n    invalidSize: 'Error al cargar {0} archivo (s) ya que no cumple con el tamaño permitido: desde {1} hasta {2}.',\r\n    numberOfFilesAllowed: '{0} archivo(s) permitido(s)',\r\n    allowedFormats: 'Formatos aceptados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamaño de archivo: desde {0} hasta {1}',\r\n    maxFileSizeAllowed: 'Limite de tamaño de archivo: hasta {0}',\r\n    minFileSizeAllowed: 'Limite de tamaño de archivo: minimo {0}',\r\n    errorOccurred: 'Ocurrio un error',\r\n    sentWithSuccess: 'Enviado con éxito'\r\n  },\r\n  pt: <PoUploadLiterals>{\r\n    files: 'arquivos',\r\n    folders: 'diretórios',\r\n    selectFile: 'Selecionar arquivo',\r\n    selectFiles: 'Selecionar arquivos',\r\n    selectFolder: 'Selecionar pasta',\r\n    startSending: 'Iniciar envio',\r\n    dragFilesHere: 'Arraste os arquivos aqui',\r\n    dragFoldersHere: 'Arraste as pastas aqui',\r\n    selectFilesOnComputer: 'ou selecione os arquivos no computador',\r\n    selectFolderOnComputer: 'ou selecione a pasta no computador',\r\n    dropFilesHere: 'Solte os arquivos aqui',\r\n    dropFoldersHere: 'Solte as pastas aqui',\r\n    invalidDropArea: 'Os {0} não foram inseridos no local correto',\r\n    invalidFileType: 'Falha ao carregar {0} arquivo (s), pois não é o tipo de arquivo permitido',\r\n    invalidAmount: 'Falha ao carregar {0} arquivo(s), pois excede(m) a quantidade limite de arquivos.',\r\n    invalidFormat: 'Falha ao carregar {0} arquivo(s), pois não corresponde(m) ao(s) formato(s): {1}.',\r\n    invalidSize: 'Falha ao carregar {0} arquivo(s), pois não atende ao tamanho permitido: {1} até {2}.',\r\n    numberOfFilesAllowed: 'Quantidade máxima: {0} arquivo(s)',\r\n    allowedFormats: 'Formatos adotados: {0}.',\r\n    allowedFileSizeRange: 'Limite de tamanho por arquivo: de {0} até {1}',\r\n    maxFileSizeAllowed: 'Limite de tamanho por arquivo: até {0}',\r\n    minFileSizeAllowed: 'Limite de tamanho por arquivo: no mínimo {0}',\r\n    errorOccurred: 'Ocorreu um erro',\r\n    sentWithSuccess: 'Enviado com sucesso'\r\n  },\r\n  ru: <PoUploadLiterals>{\r\n    files: 'файлы',\r\n    folders: 'папки с файлами',\r\n    selectFile: 'Выберите файл',\r\n    selectFiles: 'Выберите файлы',\r\n    selectFolder: 'Выберите папку с файлами',\r\n    startSending: 'Начать загрузку',\r\n    dragFilesHere: 'Перетащите файлы сюда',\r\n    dragFoldersHere: 'Перетащите сюда папки',\r\n    selectFilesOnComputer: 'или выберите файлы на компьютере',\r\n    selectFolderOnComputer: 'или выберите папку на вашем компьютере',\r\n    dropFilesHere: 'Оставьте файлы здесь',\r\n    dropFoldersHere: 'Перетащите сюда папки',\r\n    invalidDropArea: '{0} не были вставлены в правильном месте.',\r\n    invalidFileType: 'Не удалось загрузить файлы {0}, так как это неверный тип файла',\r\n    invalidAmount: 'Não foi possível carregar os arquivos {0} porque eles excederam o limite de arquivos.',\r\n    invalidFormat: 'Не удалось загрузить файлы {0}, так как они не соответствуют формату (ам): {1}.',\r\n    invalidSize: 'Не удалось загрузить файлы {0}, поскольку они не соответствуют разрешенному размеру: от {1} до {2}.',\r\n    numberOfFilesAllowed: 'Максимальное количество: {0} файлов',\r\n    allowedFormats: 'Форматы приняты: {0}.',\r\n    allowedFileSizeRange: 'Ограничение размера файла: от {0} до {1}',\r\n    maxFileSizeAllowed: 'Ограничение размера файла: до {0}',\r\n    minFileSizeAllowed: 'Ограничение размера файла: не менее {0}',\r\n    errorOccurred: 'Произошла ошибка.',\r\n    sentWithSuccess: 'Успешно отправлено'\r\n  }\r\n};\r\n\r\nconst poUploadFormFieldDefault = 'files';\r\n\r\nconst poUploadMaxFileSize = 31457280; // 30MB\r\nconst poUploadMinFileSize = 0;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-upload` permite que o usuário envie arquivo(s) ao servidor e acompanhe o progresso.\r\n * Este componente também possibilita algumas configurações como:\r\n *  – Envio de diretórios, onde ele acessa o diretório selecionado assim como seus sub-diretórios;\r\n *  - Múltipla seleção, onde o usuário pode enviar mais de um arquivo ao servidor.\r\n *  - Auto envio, onde o arquivo é enviado imediatamente após a seleção do usuário, não necessitando que o usuário\r\n * clique em enviar.\r\n *  - Restrições de formatos de arquivo e tamanho.\r\n *  - Função de sucesso que será disparada quando os arquivos forem enviados com sucesso.\r\n *  - Função de erro que será disparada quando houver erro no envio dos arquivos.\r\n *  - Permite habilitar uma área onde os arquivos podem ser arrastados.\r\n */\r\n@Directive()\r\nexport abstract class PoUploadBaseComponent implements ControlValueAccessor, Validator {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica foco no elemento ao ser iniciado.\r\n   *\r\n   * > Caso mais de um elemento seja configurado com essa propriedade, apenas o último elemento declarado com ela terá o foco.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-focus') @InputBoolean() autoFocus: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define em *pixels* a altura da área onde podem ser arrastados os arquivos. A altura mínima aceita é `160px`.\r\n   *\r\n   * > Esta propriedade funciona somente se a propriedade `p-drag-drop` estiver habilitada.\r\n   *\r\n   * @default `320`\r\n   */\r\n  @Input('p-drag-drop-height') dragDropHeight: number;\r\n\r\n  /** Rótulo do campo. */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto de apoio para o campo. */\r\n  @Input('p-help') help?: string;\r\n\r\n  /** URL que deve ser feita a requisição com os arquivos selecionados. */\r\n  @Input('p-url') url: string;\r\n\r\n  /** Define o valor do atributo `name` do componente. */\r\n  @Input('name') name: string = 'file';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se o envio do arquivo será automático ao selecionar o mesmo.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-auto-upload') autoUpload?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se a indicação de campo opcional será exibida.\r\n   *\r\n   * > Não será exibida a indicação se:\r\n   *  - O campo conter `p-required`;\r\n   *  - Não possuir `p-help` e/ou `p-label`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-optional') optional: boolean;\r\n\r\n  /** Objeto que contém os cabeçalhos que será enviado na requisição dos arquvios. */\r\n  @Input('p-headers') headers: { [name: string]: string | Array<string> };\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será executada no momento de realizar o envio do arquivo,\r\n   * onde será possível adicionar informações ao parâmetro que será enviado na requisição.\r\n   * É passado por parâmetro um objeto com o arquivo e a propiedade data nesta propriedade pode ser informado algum dado,\r\n   * que será enviado em conjunto com o arquivo na requisição, por exemplo:\r\n   *\r\n   * ```\r\n   *   event.data = {id: 'id do usuario'};\r\n   * ```\r\n   */\r\n  @Output('p-upload') onUpload: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento será disparado quando ocorrer algum erro no envio do arquivo.\r\n   * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpErrorResponse`.\r\n   */\r\n  @Output('p-error') onError: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Evento será disparado quando o envio do arquivo for realizado com sucesso.\r\n   * > Por parâmetro será passado o objeto do retorno que é do tipo `HttpResponse`.\r\n   */\r\n  @Output('p-success') onSuccess: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função para atualizar o ngModel do componente, necessário quando não for utilizado dentro da *tag* `form`.\r\n   *\r\n   * Na versão 12.2.0 do Angular a verificação `strictTemplates` vem true como default. Portanto, para utilizar\r\n   * two-way binding no componente deve se utilizar da seguinte forma:\r\n   *\r\n   * ```\r\n   * <po-upload ... [ngModel]=\"UploadModel\" (ngModelChange)=\"uploadModel = $event\"> </po-upload>\r\n   * ```\r\n   *\r\n   */\r\n  @Output('ngModelChange') ngModelChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  allowedExtensions: string;\r\n  currentFiles: Array<PoUploadFile>;\r\n\r\n  canHandleDirectory: boolean;\r\n  onModelChange: any;\r\n\r\n  protected extensionNotAllowed = 0;\r\n  protected quantityNotAllowed = 0;\r\n  protected sizeNotAllowed = 0;\r\n  protected onModelTouched: any = null;\r\n\r\n  private _directory?: boolean;\r\n  private _disabled?: boolean;\r\n  private _dragDrop?: boolean = false;\r\n  private _fileRestrictions?: PoUploadFileRestrictions;\r\n  private _formField?: string;\r\n  private _hideRestrictionsInfo?: boolean;\r\n  private _hideSelectButton?: boolean;\r\n  private _hideSendButton?: boolean;\r\n  private _isMultiple?: boolean;\r\n  private _literals?: any;\r\n  private _required?: boolean;\r\n  private language: string;\r\n  private validatorChange: any;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Permite a seleção de diretórios contendo um ou mais arquivos para envio.\r\n   *\r\n   * > A habilitação desta propriedade se restringe apenas à seleção de diretórios.\r\n   *\r\n   * > Definição não suportada pelo browser **Internet Explorer**, todavia será possível a seleção de arquivos padrão.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-directory') set directory(value: boolean) {\r\n    this._directory = convertToBoolean(value);\r\n\r\n    this.canHandleDirectory = this._directory && !isIE() && !isMobile();\r\n    this.setDirectoryAttribute(this.canHandleDirectory);\r\n  }\r\n\r\n  get directory() {\r\n    return this._directory;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Exibe a área onde é possível arrastar e selecionar os arquivos. Quando estiver definida, omite o botão para seleção de arquivos\r\n   * automaticamente.\r\n   *\r\n   * > Recomendamos utilizar apenas um `po-upload` com esta funcionalidade por tela.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-drag-drop') set dragDrop(value: boolean) {\r\n    this._dragDrop = convertToBoolean(value);\r\n  }\r\n\r\n  get dragDrop() {\r\n    return this._dragDrop;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta visualmente as informações de restrições para o upload.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-restrictions-info') set hideRestrictionsInfo(value: boolean) {\r\n    this._hideRestrictionsInfo = convertToBoolean(value);\r\n  }\r\n\r\n  get hideRestrictionsInfo() {\r\n    return this._hideRestrictionsInfo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botão de seleção de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\r\n   * pela chamada do método `selectFiles()` para seleção de arquivos.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-button') set hideSelectButton(value: boolean) {\r\n    this._hideSelectButton = convertToBoolean(value);\r\n  }\r\n  get hideSelectButton(): boolean {\r\n    return this._hideSelectButton;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Omite o botão de envio de arquivos.\r\n   *\r\n   * > Caso o valor definido seja `true`, caberá ao desenvolvedor a responsabilidade\r\n   * pela chamada do método `sendFiles()` para envio do(s) arquivo(s) selecionado(s).\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-send-button') set hideSendButton(value: boolean) {\r\n    this._hideSendButton = convertToBoolean(value);\r\n  }\r\n  get hideSendButton(): boolean {\r\n    return this._hideSendButton;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-upload`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente:\r\n   *\r\n   * - passando um objeto implementando a interface `PoUploadLiterals` com todas as literais disponíveis;\r\n   * - passando apenas as literais que deseja customizar:\r\n   * ```\r\n   *  const customLiterals: PoUploadLiterals = {\r\n   *    folders: 'Pastas',\r\n   *    selectFile: 'Buscar arquivo',\r\n   *    startSending: 'Enviar'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente:\r\n   *\r\n   * ```\r\n   * <po-upload\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-upload>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do *browser* (pt, en, es, ru).\r\n   */\r\n  @Input('p-literals') set literals(value: PoUploadLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poUploadLiteralsDefault[poLocaleDefault],\r\n        ...poUploadLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poUploadLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poUploadLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que segue a definição da interface `PoUploadFileRestrictions`,\r\n   * que possibilita definir tamanho máximo/mínimo e extensão dos arquivos permitidos.\r\n   */\r\n  @Input('p-restrictions') set fileRestrictions(restrictions: PoUploadFileRestrictions) {\r\n    this._fileRestrictions = this.initRestrictions(restrictions);\r\n\r\n    this.setAllowedExtensions(restrictions);\r\n  }\r\n\r\n  get fileRestrictions(): PoUploadFileRestrictions {\r\n    return this._fileRestrictions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nome do campo de formulário que será enviado para o serviço informado na propriedade `p-url`.\r\n   *\r\n   * @default `files`\r\n   */\r\n  @Input('p-form-field') set formField(value: string) {\r\n    this._formField = value && typeof value === 'string' ? value : poUploadFormFieldDefault;\r\n\r\n    this.getUploadService().formField = this.formField;\r\n  }\r\n\r\n  get formField(): string {\r\n    return this._formField;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será desabilitado.\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se pode selecionar mais de um arquivo.\r\n   *\r\n   * > Se utilizada a `p-directory`, habilita-se automaticamente esta propriedade.\r\n   */\r\n  @Input('p-multiple') set isMultiple(value: boolean) {\r\n    this._isMultiple = convertToBoolean(value);\r\n  }\r\n\r\n  get isMultiple() {\r\n    return this.canHandleDirectory ? true : this._isMultiple;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o campo será obrigatório.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-required') set required(required: boolean) {\r\n    this._required = convertToBoolean(required);\r\n\r\n    this.validateModel(this.currentFiles);\r\n  }\r\n\r\n  get required() {\r\n    return this._required;\r\n  }\r\n\r\n  constructor(protected uploadService: PoUploadService, languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  // Função implementada do ControlValueAccessor\r\n  // Usada para interceptar os estados de habilitado via forms api\r\n  setDisabledState(isDisabled: boolean) {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  registerOnValidatorChange(fn: () => void) {\r\n    this.validatorChange = fn;\r\n  }\r\n\r\n  validate(abstractControl: AbstractControl): { [key: string]: any } {\r\n    if (requiredFailed(this.required, this.disabled, abstractControl.value)) {\r\n      return {\r\n        required: {\r\n          valid: false\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  writeValue(model: any): void {\r\n    if (model) {\r\n      if (!isEquals(this.currentFiles, model)) {\r\n        this.currentFiles = this.parseFiles(model);\r\n      }\r\n    } else {\r\n      this.currentFiles = undefined;\r\n    }\r\n  }\r\n\r\n  protected isExceededFileLimit(currentFilesLength: number): boolean {\r\n    return (\r\n      this.isMultiple &&\r\n      this.fileRestrictions &&\r\n      this.fileRestrictions.maxFiles > 0 &&\r\n      this.fileRestrictions.maxFiles <= currentFilesLength\r\n    );\r\n  }\r\n\r\n  // Faz o parse dos arquivos selecionados para arquivos do formato PoUploadFile e atualiza os arquivos correntes.\r\n  protected parseFiles(files: Array<File>): Array<PoUploadFile> {\r\n    let poUploadFiles: Array<PoUploadFile> = this.currentFiles || [];\r\n    const filesLength = files.length;\r\n\r\n    for (let i = 0; i < filesLength; i++) {\r\n      if (this.isExceededFileLimit(poUploadFiles.length)) {\r\n        this.quantityNotAllowed = filesLength - this.fileRestrictions.maxFiles;\r\n        break;\r\n      }\r\n      const file = new PoUploadFile(files[i]);\r\n\r\n      if (this.checkRestrictions(file)) {\r\n        poUploadFiles = this.insertFileInFiles(file, poUploadFiles);\r\n      }\r\n    }\r\n    this.sendFeedback();\r\n    return poUploadFiles;\r\n  }\r\n\r\n  protected validateModel(model: any) {\r\n    if (this.validatorChange) {\r\n      this.validatorChange(model);\r\n    }\r\n  }\r\n\r\n  // Verifica se o arquivo está de acordo com as restrições.\r\n  private checkRestrictions(file: PoUploadFile): boolean {\r\n    const restrictions = this.fileRestrictions;\r\n\r\n    if (restrictions) {\r\n      const allowedExtensions = restrictions.allowedExtensions;\r\n      const minFileSize = restrictions.minFileSize;\r\n      const maxFileSize = restrictions.maxFileSize;\r\n\r\n      const isAccept = allowedExtensions ? this.isAllowedExtension(file.extension, allowedExtensions) : true;\r\n      const isAcceptSize = file.size >= minFileSize && file.size <= maxFileSize;\r\n\r\n      if (!isAcceptSize) {\r\n        this.sizeNotAllowed = this.sizeNotAllowed + 1;\r\n      }\r\n\r\n      return isAccept && isAcceptSize;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private existsFileSameName(file: PoUploadFile, files: Array<PoUploadFile>): boolean {\r\n    return files.some(currentFile => file.name === currentFile.name);\r\n  }\r\n\r\n  private getUploadService(): PoUploadService {\r\n    return this.uploadService;\r\n  }\r\n\r\n  private insertFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n    if (this.existsFileSameName(newFile, files)) {\r\n      return this.updateExistsFileInFiles(newFile, files);\r\n    }\r\n\r\n    if (this.isMultiple) {\r\n      files.push(newFile);\r\n    } else {\r\n      files.splice(0, files.length, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  private isAllowedExtension(extension: string, allowedExtensions: Array<string> = []): boolean {\r\n    const isAllowed = allowedExtensions.some(ext => ext.toLowerCase() === extension);\r\n    if (!isAllowed) {\r\n      this.extensionNotAllowed = this.extensionNotAllowed + 1;\r\n    }\r\n    return isAllowed;\r\n  }\r\n\r\n  private setAllowedExtensions(restrictions: PoUploadFileRestrictions = {}) {\r\n    const _allowedExtensions = restrictions.allowedExtensions || [];\r\n\r\n    this.allowedExtensions = _allowedExtensions.join(',');\r\n  }\r\n\r\n  private initRestrictions(restrictions: PoUploadFileRestrictions): PoUploadFileRestrictions {\r\n    if (!restrictions) {\r\n      return;\r\n    }\r\n\r\n    const minFileSize = restrictions.minFileSize || poUploadMinFileSize;\r\n    const maxFileSize = restrictions.maxFileSize || poUploadMaxFileSize;\r\n\r\n    return {\r\n      ...restrictions,\r\n      maxFileSize: maxFileSize,\r\n      minFileSize: minFileSize\r\n    };\r\n  }\r\n\r\n  private updateExistsFileInFiles(newFile: PoUploadFile, files: Array<PoUploadFile>) {\r\n    const fileIndex = files.findIndex(\r\n      currentFile => newFile.name === currentFile.name && currentFile.status !== PoUploadStatus.Uploaded\r\n    );\r\n\r\n    if (fileIndex !== -1) {\r\n      files.splice(fileIndex, 1, newFile);\r\n    }\r\n\r\n    return files;\r\n  }\r\n\r\n  abstract sendFeedback(): void;\r\n\r\n  abstract setDirectoryAttribute(value: boolean);\r\n}\r\n","import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop-area',\r\n  templateUrl: './po-upload-drag-drop-area.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropAreaComponent {\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-height') height: number;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Input('p-overlay') overlay: boolean;\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @ViewChild('selectFilesLink') selectFilesLinkElement: ElementRef;\r\n\r\n  constructor(public elementRef: ElementRef) {}\r\n\r\n  focus() {\r\n    this.selectFilesLinkElement.nativeElement.focus();\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { convertToInt } from '../../../../utils/util';\r\n\r\nimport { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\nconst PoUploadDragDropHeightDefault = 320;\r\nconst PoUploadDragDropHeightMin = 160;\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop',\r\n  templateUrl: './po-upload-drag-drop.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropComponent {\r\n  @ViewChild('dragDropOverlay', { read: ElementRef }) dragDropOverlayElement: ElementRef;\r\n  @ViewChild(PoUploadDragDropAreaComponent, { static: true }) dragDropAreaComponent: PoUploadDragDropAreaComponent;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-select-files') selectFiles: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  areaElement: HTMLElement;\r\n  isDragOver: boolean = false;\r\n\r\n  private _dragDropHeight?: number = PoUploadDragDropHeightDefault;\r\n\r\n  @Input('p-drag-drop-height') set dragDropHeight(value: number) {\r\n    const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);\r\n\r\n    this._dragDropHeight = dragDropHeight < PoUploadDragDropHeightMin ? PoUploadDragDropHeightMin : dragDropHeight;\r\n  }\r\n\r\n  get dragDropHeight() {\r\n    return this._dragDropHeight;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n  focus() {\r\n    this.dragDropAreaComponent.focus();\r\n  }\r\n\r\n  onAreaElement(element: HTMLElement) {\r\n    this.areaElement = element;\r\n\r\n    // necessário para não ocorrer o erro HasBeenChecked\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  onDragLeave() {\r\n    this.isDragOver = false;\r\n  }\r\n\r\n  onDragOver() {\r\n    this.isDragOver = true;\r\n  }\r\n\r\n  onFileChange(files) {\r\n    this.isDragOver = false;\r\n\r\n    this.fileChange.emit(files);\r\n  }\r\n}\r\n","import { Component, ElementRef, forwardRef, Renderer2, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { formatBytes, isMobile } from '../../../utils/util';\r\nimport { PoButtonComponent } from './../../po-button/po-button.component';\r\nimport { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../services/po-notification/po-notification.service';\r\nimport { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { PoUploadBaseComponent } from './po-upload-base.component';\r\nimport { PoUploadDragDropComponent } from './po-upload-drag-drop/po-upload-drag-drop.component';\r\nimport { PoUploadFile } from './po-upload-file';\r\nimport { PoUploadService } from './po-upload.service';\r\nimport { PoUploadStatus } from './po-upload-status.enum';\r\n\r\n/**\r\n * @docsExtends PoUploadBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-upload-basic\" title=\"PO Upload Basic\">\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-basic/sample-po-upload-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-labs\" title=\"PO Upload Labs\">\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-labs/sample-po-upload-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-resume\" title=\"PO Upload - Resume\">\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-resume/sample-po-upload-resume.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-upload-rs\" title=\"PO Upload - Realize & Show\">\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.html\"> </file>\r\n *   <file name=\"sample-po-upload-rs/sample-po-upload-rs.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-upload',\r\n  templateUrl: './po-upload.component.html',\r\n  providers: [\r\n    PoI18nPipe,\r\n    PoUploadService,\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoUploadComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoUploadComponent extends PoUploadBaseComponent implements AfterViewInit {\r\n  @ViewChild('inputFile', { read: ElementRef, static: true }) private inputFile: ElementRef;\r\n  @ViewChild(PoUploadDragDropComponent) private poUploadDragDropComponent: PoUploadDragDropComponent;\r\n  @ViewChild('uploadButton') private uploadButton: PoButtonComponent;\r\n\r\n  infoByUploadStatus: { [key: string]: { text: (percent?: number) => string; icon?: string } } = {\r\n    [PoUploadStatus.Uploaded]: {\r\n      text: () => this.literals.sentWithSuccess,\r\n      icon: 'po-icon-ok'\r\n    },\r\n    [PoUploadStatus.Error]: {\r\n      text: () => this.literals.errorOccurred\r\n    },\r\n    [PoUploadStatus.Uploading]: {\r\n      text: percent => percent + '%'\r\n    }\r\n  };\r\n\r\n  progressStatusByFileStatus = {\r\n    [PoUploadStatus.Uploaded]: PoProgressStatus.Success,\r\n    [PoUploadStatus.Error]: PoProgressStatus.Error\r\n  };\r\n\r\n  private calledByCleanInputValue: boolean = false;\r\n\r\n  constructor(\r\n    uploadService: PoUploadService,\r\n    public renderer: Renderer2,\r\n    private i18nPipe: PoI18nPipe,\r\n    private notification: PoNotificationService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(uploadService, languageService);\r\n  }\r\n\r\n  get displayDragDrop(): boolean {\r\n    return this.dragDrop && !isMobile();\r\n  }\r\n\r\n  get displaySendButton(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n    return !this.hideSendButton && !this.autoUpload && currentFiles.length > 0 && this.hasFileNotUploaded;\r\n  }\r\n\r\n  get selectFileButtonLabel() {\r\n    if (this.canHandleDirectory) {\r\n      return this.literals.selectFolder;\r\n    } else if (this.isMultiple) {\r\n      return this.literals.selectFiles;\r\n    } else {\r\n      return this.literals.selectFile;\r\n    }\r\n  }\r\n\r\n  get hasMoreThanFourItems(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 4;\r\n  }\r\n\r\n  get hasMultipleFiles(): boolean {\r\n    return this.currentFiles && this.currentFiles.length > 1;\r\n  }\r\n\r\n  get hasFileNotUploaded(): boolean {\r\n    if (Array.isArray(this.currentFiles)) {\r\n      return this.currentFiles.some(file => file.status !== PoUploadStatus.Uploaded);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    const currentFiles = this.currentFiles || [];\r\n\r\n    return !!(\r\n      this.hasAnyFileUploading(currentFiles) ||\r\n      !this.url ||\r\n      this.disabled ||\r\n      this.isExceededFileLimit(currentFiles.length)\r\n    );\r\n  }\r\n\r\n  get maxFiles(): number {\r\n    return this.isMultiple && this.fileRestrictions && this.fileRestrictions.maxFiles;\r\n  }\r\n\r\n  cancel(file: PoUploadFile) {\r\n    if (file.status === PoUploadStatus.Uploading) {\r\n      return this.stopUpload(file);\r\n    }\r\n\r\n    this.removeFile(file);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  /** Método responsável por **limpar** o(s) arquivo(s) selecionado(s). */\r\n  clear() {\r\n    this.currentFiles = undefined;\r\n    this.updateModel([]);\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  /**\r\n   * Função que atribui foco ao componente.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:\r\n   *\r\n   * ```\r\n   * import { PoUploadComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;\r\n   *\r\n   * focusUpload() {\r\n   *   this.upload.focus();\r\n   * }\r\n   * ```\r\n   */\r\n  focus() {\r\n    if (!this.disabled) {\r\n      if (this.uploadButton) {\r\n        this.uploadButton.focus();\r\n        return;\r\n      }\r\n\r\n      if (this.displayDragDrop) {\r\n        this.poUploadDragDropComponent.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Verifica se existe algum arquivo sendo enviado ao serviço.\r\n  hasAnyFileUploading(files: Array<PoUploadFile>) {\r\n    if (files && files.length) {\r\n      return files.some(file => file.status === PoUploadStatus.Uploading);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // retorna se o status do arquivo é diferente de enviado\r\n  isAllowCancelEvent(status: PoUploadStatus) {\r\n    return status !== PoUploadStatus.Uploaded;\r\n  }\r\n\r\n  // Função disparada ao selecionar algum arquivo.\r\n  onFileChange(event): void {\r\n    // necessário este tratamento quando para IE, pois nele o change é disparado quando o campo é limpado também\r\n    if (this.calledByCleanInputValue) {\r\n      this.calledByCleanInputValue = false;\r\n      return event.preventDefault();\r\n    }\r\n\r\n    const files = event.target.files;\r\n    this.updateFiles(files);\r\n\r\n    this.cleanInputValue();\r\n  }\r\n\r\n  onFileChangeDragDrop(files) {\r\n    this.updateFiles(files);\r\n  }\r\n\r\n  // Remove o arquivo passado por parâmetro da lista dos arquivos correntes.\r\n  removeFile(file): void {\r\n    const index = this.currentFiles.indexOf(file);\r\n    this.currentFiles.splice(index, 1);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n  }\r\n\r\n  /** Método responsável por **abrir** a janela para seleção de arquivo(s). */\r\n  selectFiles() {\r\n    this.onModelTouched?.();\r\n    this.calledByCleanInputValue = false;\r\n    this.inputFile.nativeElement.click();\r\n  }\r\n\r\n  sendFeedback(): void {\r\n    if (this.sizeNotAllowed > 0) {\r\n      const minFileSize = formatBytes(this.fileRestrictions.minFileSize);\r\n      const maxFileSize = formatBytes(this.fileRestrictions.maxFileSize);\r\n      const args = [this.sizeNotAllowed, minFileSize || '0', maxFileSize];\r\n      this.setPipeArguments('invalidSize', args);\r\n      this.sizeNotAllowed = 0;\r\n    }\r\n\r\n    if (this.extensionNotAllowed > 0) {\r\n      const allowedExtensionsFormatted = this.fileRestrictions.allowedExtensions.join(', ').toUpperCase();\r\n      const args = [this.extensionNotAllowed, allowedExtensionsFormatted];\r\n      this.setPipeArguments('invalidFormat', args);\r\n      this.extensionNotAllowed = 0;\r\n    }\r\n\r\n    if (this.quantityNotAllowed > 0) {\r\n      const args = [this.quantityNotAllowed];\r\n      this.setPipeArguments('invalidAmount', args);\r\n      this.quantityNotAllowed = 0;\r\n    }\r\n  }\r\n\r\n  /** Método responsável por **enviar** o(s) arquivo(s) selecionado(s). */\r\n  sendFiles(): void {\r\n    if (this.currentFiles && this.currentFiles.length) {\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  setDirectoryAttribute(canHandleDirectory: boolean) {\r\n    if (canHandleDirectory) {\r\n      this.renderer.setAttribute(this.inputFile.nativeElement, 'webkitdirectory', 'true');\r\n    } else {\r\n      this.renderer.removeAttribute(this.inputFile.nativeElement, 'webkitdirectory');\r\n    }\r\n  }\r\n\r\n  // Caso o componente estiver no modo AutoUpload, o arquivo também será removido da lista.\r\n  stopUpload(file: PoUploadFile) {\r\n    this.uploadService.stopRequestByFile(file, () => {\r\n      if (this.autoUpload) {\r\n        this.removeFile(file);\r\n      } else {\r\n        this.stopUploadHandler(file);\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(index, file: PoUploadFile) {\r\n    return file.uid;\r\n  }\r\n\r\n  // Envia os arquivos passados por parâmetro, exceto os que já foram enviados ao serviço.\r\n  uploadFiles(files: Array<PoUploadFile>) {\r\n    const filesFiltered = files.filter(file => file.status !== PoUploadStatus.Uploaded);\r\n    this.uploadService.upload(\r\n      this.url,\r\n      filesFiltered,\r\n      this.headers,\r\n      this.onUpload,\r\n      (file, percent): any => {\r\n        // UPLOADING\r\n        this.uploadingHandler(file, percent);\r\n      },\r\n      (file, eventResponse): any => {\r\n        // SUCCESS\r\n        this.responseHandler(file, PoUploadStatus.Uploaded);\r\n        this.onSuccess.emit(eventResponse);\r\n      },\r\n      (file, eventError): any => {\r\n        // Error\r\n        this.responseHandler(file, PoUploadStatus.Error);\r\n        this.onError.emit(eventError);\r\n      }\r\n    );\r\n  }\r\n\r\n  private cleanInputValue() {\r\n    this.calledByCleanInputValue = true;\r\n    this.inputFile.nativeElement.value = '';\r\n  }\r\n\r\n  // função disparada na resposta do sucesso ou error\r\n  private responseHandler(file: PoUploadFile, status: PoUploadStatus) {\r\n    file.status = status;\r\n    file.percent = 100;\r\n  }\r\n\r\n  // método responsável por setar os argumentos do i18nPipe de acordo com a restrição.\r\n  private setPipeArguments(literalAttributes: string, literalArguments?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], literalArguments);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n\r\n  // Função disparada ao parar um envio de arquivo.\r\n  private stopUploadHandler(file: PoUploadFile) {\r\n    file.status = PoUploadStatus.None;\r\n    file.percent = 0;\r\n  }\r\n\r\n  private updateFiles(files) {\r\n    this.currentFiles = this.parseFiles(files);\r\n\r\n    this.updateModel([...this.currentFiles]);\r\n\r\n    if (this.autoUpload) {\r\n      this.uploadFiles(this.currentFiles);\r\n    }\r\n  }\r\n\r\n  // Atualiza o ngModel para os arquivos passados por parâmetro.\r\n  private updateModel(files: Array<PoUploadFile>) {\r\n    const modelFiles: Array<PoUploadFile> = this.mapCleanUploadFiles(files);\r\n    this.onModelChange ? this.onModelChange(modelFiles) : this.ngModelChange.emit(modelFiles);\r\n  }\r\n\r\n  // Função disparada enquanto o arquivo está sendo enviado ao serviço.\r\n  private uploadingHandler(file: any, percent: number) {\r\n    file.status = PoUploadStatus.Uploading;\r\n    file.percent = percent;\r\n  }\r\n\r\n  // retorna os objetos do array sem as propriedades: percent e displayName\r\n  private mapCleanUploadFiles(files: Array<PoUploadFile>): Array<PoUploadFile> {\r\n    const mapedByUploadFile = progressFile => {\r\n      const { percent, displayName, ...uploadFile } = progressFile;\r\n\r\n      return uploadFile;\r\n    };\r\n\r\n    return files.map(mapedByUploadFile);\r\n  }\r\n}\r\n","import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\nimport { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';\r\nimport { PoNotificationService } from '../../../../services/po-notification/po-notification.service';\r\nimport { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';\r\n\r\n@Directive({\r\n  selector: '[p-upload-drag-drop]',\r\n  providers: [PoI18nPipe]\r\n})\r\nexport class PoUploadDragDropDirective {\r\n  @Input('p-area-element') areaElement: HTMLElement;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Output('p-drag-leave') dragLeave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-drag-over') dragOver: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  @Output('p-file-change') fileChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  timeout: any;\r\n\r\n  private files: Array<File>;\r\n  private invalidFileType: number;\r\n\r\n  constructor(private i18nPipe: PoI18nPipe, private notification: PoNotificationService) {}\r\n\r\n  @HostListener('document:dragleave', ['$event']) onDragLeave(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.timeout = setTimeout(() => this.dragLeave.emit(), 30);\r\n  }\r\n\r\n  @HostListener('document:dragover', ['$event']) onDragOver(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    if (!this.disabled) {\r\n      this.dragOver.emit();\r\n    }\r\n  }\r\n\r\n  @HostListener('document:drop', ['$event']) onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.getFilesFromDataTransferItems(event);\r\n    this.dragLeave.emit();\r\n  }\r\n\r\n  private getFilesFromDataTransferItems(event: DragEvent) {\r\n    if (!this.disabled) {\r\n      this.invalidFileType = 0;\r\n      if (this.directoryCompatible) {\r\n        this.getOnlyDirectories(event.dataTransfer.items).then(() => {\r\n          this.sendFiles(event, this.files);\r\n        });\r\n      } else {\r\n        const files = this.getOnlyFiles(event.dataTransfer);\r\n        this.sendFiles(event, files);\r\n      }\r\n    }\r\n  }\r\n\r\n  // analisa as entradas recursivamente\r\n  private async getFilesFromEntry(entry) {\r\n    if (entry.isFile) {\r\n      const file = await this.readFile(entry);\r\n      return [file];\r\n    } else if (entry.isDirectory) {\r\n      return await this.readDirectory(entry);\r\n    }\r\n  }\r\n\r\n  private async getOnlyDirectories(dataTransferItems) {\r\n    const entries = [];\r\n\r\n    // lista todas as entradas antes de analisá-las\r\n    for (const item of dataTransferItems) {\r\n      entries.push(item.webkitGetAsEntry());\r\n    }\r\n\r\n    this.files = [];\r\n    for (const entry of entries) {\r\n      if (entry.isFile) {\r\n        this.invalidFileType++;\r\n      } else {\r\n        const newFiles = await this.getFilesFromEntry(entry);\r\n        this.files = this.files.concat(newFiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  // return only files. If it is a directory, invalidFileType counts.\r\n  private getOnlyFiles(dataTransfer: DataTransfer): Array<File> {\r\n    const fileList: Array<File> = Array.from(dataTransfer.files);\r\n    const entriesFiles: Array<any> = Array.from(dataTransfer.items).map(item => item.webkitGetAsEntry());\r\n\r\n    return fileList.reduce((newFiles, file) => {\r\n      const entryFile = entriesFiles.find(entry => entry.name === file.name);\r\n\r\n      if (entryFile.isFile) {\r\n        return newFiles.concat(file);\r\n      } else {\r\n        this.invalidFileType++;\r\n      }\r\n      return newFiles;\r\n    }, []);\r\n  }\r\n\r\n  private readFile(entry) {\r\n    return new Promise(resolve => {\r\n      entry.file(file => {\r\n        resolve(file);\r\n      });\r\n    });\r\n  }\r\n\r\n  private async readDirectory(entry) {\r\n    const dirReader = entry.createReader();\r\n    let files = [];\r\n\r\n    const newFiles = await this.readDirectoryEntries(dirReader);\r\n    files = files.concat(newFiles);\r\n    return files;\r\n  }\r\n\r\n  private readDirectoryEntries(dirReader) {\r\n    return new Promise(resolve => {\r\n      dirReader.readEntries(async entries => {\r\n        let files = [];\r\n        for (const entry of entries) {\r\n          const itemFiles = await this.getFilesFromEntry(entry);\r\n          files = files.concat(itemFiles);\r\n        }\r\n        resolve(files);\r\n      });\r\n    });\r\n  }\r\n\r\n  private sendFeedback(invalidFiles: number) {\r\n    if (invalidFiles) {\r\n      this.setPipeArguments('invalidFileType', invalidFiles);\r\n    }\r\n  }\r\n\r\n  private sendFiles(event, files) {\r\n    if (this.areaElement.contains(event.target)) {\r\n      if (files.length > 0) {\r\n        this.fileChange.emit(files);\r\n      }\r\n\r\n      this.sendFeedback(this.invalidFileType);\r\n    } else {\r\n      const invalidDropAreaArg = this.directoryCompatible ? this.literals.folders : this.literals.files;\r\n      this.setPipeArguments('invalidDropArea', invalidDropAreaArg);\r\n    }\r\n  }\r\n\r\n  // método responsável por setar os argumentos do i18nPipe.\r\n  private setPipeArguments(literalAttributes: string, args?) {\r\n    const pipeArguments = this.i18nPipe.transform(this.literals[literalAttributes], args);\r\n    this.notification.information(pipeArguments);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { PoUploadLiterals } from '../../interfaces/po-upload-literals.interface';\r\n\r\n@Component({\r\n  selector: 'po-upload-drag-drop-area-overlay',\r\n  templateUrl: 'po-upload-drag-drop-area-overlay.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadDragDropAreaOverlayComponent implements AfterViewInit {\r\n  @ViewChild('DragDropAreaFixed', { read: ElementRef, static: true }) DragDropAreaFixed: ElementRef;\r\n\r\n  @Input('p-directory-compatible') directoryCompatible: boolean;\r\n\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-literals') literals: PoUploadLiterals;\r\n\r\n  @Input('p-target') target: ElementRef;\r\n\r\n  @Output('p-area-element') areaElement: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (this.target) {\r\n      this.setPosition(this.target);\r\n    }\r\n    this.areaElement.emit(this.DragDropAreaFixed.nativeElement);\r\n  }\r\n\r\n  private setPosition(targetElement: ElementRef) {\r\n    const boundingClientRect = targetElement.nativeElement.getBoundingClientRect();\r\n    const clientRectKeys = ['bottom', 'left', 'height', 'right', 'top', 'width'];\r\n\r\n    clientRectKeys.forEach(clientRectKey => {\r\n      const clientRectValue = boundingClientRect[clientRectKey];\r\n\r\n      this.renderer.setStyle(this.DragDropAreaFixed.nativeElement, clientRectKey, `${clientRectValue}px`);\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { formatBytes } from '../../../../utils/util';\r\nimport { PoLanguageService } from '../../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../../services/po-language/po-language.constant';\r\n\r\nimport { poUploadLiteralsDefault } from '../po-upload-base.component';\r\n\r\n@Component({\r\n  selector: 'po-upload-file-restrictions',\r\n  templateUrl: './po-upload-file-restrictions.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoUploadFileRestrictionsComponent implements OnInit {\r\n  @Input('p-max-files') maxFiles: number;\r\n\r\n  literals: any;\r\n\r\n  private _allowedExtensions: string;\r\n  private _maxFileSize: string;\r\n  private _minFileSize: string;\r\n  private language: string;\r\n\r\n  @Input('p-allowed-extensions') set allowedExtensions(value) {\r\n    this._allowedExtensions = this.formatAllowedExtensions(<any>value);\r\n  }\r\n\r\n  get allowedExtensions(): string {\r\n    return this._allowedExtensions;\r\n  }\r\n\r\n  @Input('p-max-file-size') set maxFileSize(value) {\r\n    this._maxFileSize = formatBytes(<any>value);\r\n  }\r\n\r\n  get maxFileSize(): string {\r\n    return this._maxFileSize;\r\n  }\r\n\r\n  @Input('p-min-file-size') set minFileSize(value) {\r\n    this._minFileSize = formatBytes(<any>value);\r\n  }\r\n\r\n  get minFileSize(): string {\r\n    return this._minFileSize;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef, languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setLiterals();\r\n  }\r\n\r\n  private formatAllowedExtensions(allowedExtensions: Array<string>): string {\r\n    const conjunction = { 'pt': 'e', 'en': 'and', 'es': 'y', 'ru': 'и' };\r\n\r\n    return allowedExtensions\r\n      ? allowedExtensions\r\n          .join(', ')\r\n          .toUpperCase()\r\n          .replace(/,(?=[^,]*$)/, ` ${conjunction[this.language]}`)\r\n      : undefined;\r\n  }\r\n\r\n  private setLiterals() {\r\n    this.literals = {\r\n      ...poUploadLiteralsDefault[poLocaleDefault],\r\n      ...poUploadLiteralsDefault[this.language]\r\n    };\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  forwardRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { AbstractControl, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { PoInputGeneric } from '../po-input-generic/po-input-generic';\r\n\r\n/**\r\n * @docsExtends PoInputBaseComponent\r\n *\r\n * @description\r\n *\r\n * po-url é um input específico para receber URL, com o pattern já configurado.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-url-basic\" title=\"PO Url Basic\">\r\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-url-basic/sample-po-url-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-url-labs\" title=\"PO Url Labs\">\r\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-url-labs/sample-po-url-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-url-shortener\" title=\"PO Url - Shortener\">\r\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.html\"> </file>\r\n *   <file name=\"sample-po-url-shortener/sample-po-url-shortener.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-url',\r\n  templateUrl: '../po-input/po-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PoUrlComponent),\r\n      multi: true\r\n    },\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PoUrlComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoUrlComponent extends PoInputGeneric implements AfterViewInit, OnDestroy {\r\n  icon = 'po-icon-world';\r\n\r\n  type = 'url';\r\n\r\n  pattern =\r\n    '^((https|http):\\\\/\\\\/)?' + // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-A-Za-z\\\\d%_.~+]*)*' + // port and path\r\n    '(\\\\?[;&A-Za-z\\\\d%_.~+=-]*)?' + // query string\r\n    '(\\\\#[-A-Za-z\\\\d_]*)?$';\r\n\r\n  mask = '';\r\n\r\n  private listener = this.validateClassesForPattern.bind(this);\r\n\r\n  /* istanbul ignore next */\r\n  constructor(el: ElementRef, cd: ChangeDetectorRef) {\r\n    super(el, cd);\r\n    this.maxlength = 254;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Se não tem ngModel ou reactive form adiciona validação com classes css\r\n    setTimeout(() => {\r\n      if (!this.onChangePropagate) {\r\n        this.inputEl.nativeElement.addEventListener('keyup', this.listener);\r\n      }\r\n    });\r\n    super.ngAfterViewInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (!this.onChangePropagate) {\r\n      this.inputEl.nativeElement.removeEventListener('keyup', this.listener);\r\n    }\r\n  }\r\n\r\n  extraValidation(c: AbstractControl): { [key: string]: any } {\r\n    return null;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { PoButtonGroupModule } from '../po-button-group/index';\r\nimport { PoButtonModule } from '../po-button/index';\r\nimport { PoCheckboxGroupModule } from './po-checkbox-group/po-checkbox-group.module';\r\nimport { PoContainerModule } from '../po-container/index';\r\nimport { PoCalendarModule } from '../po-calendar/po-calendar.module';\r\nimport { PoCleanModule } from './po-clean/po-clean.module';\r\nimport { PoDatepickerModule } from './po-datepicker/po-datepicker.module';\r\nimport { PoDisclaimerGroupModule } from './../po-disclaimer-group/po-disclaimer-group.module';\r\nimport { PoDisclaimerModule } from './../po-disclaimer/po-disclaimer.module';\r\nimport { PoFieldContainerModule } from './po-field-container/po-field-container.module';\r\nimport { PoLoadingModule } from '../po-loading/index';\r\nimport { PoModalModule } from '../po-modal/po-modal.module';\r\nimport { PoProgressModule } from './../po-progress/po-progress.module';\r\nimport { PoServicesModule } from '../../services/services.module';\r\nimport { PoTableModule } from '../po-table/po-table.module';\r\nimport { PoTooltipModule } from './../../directives/po-tooltip/po-tooltip.module';\r\nimport { PoIconModule } from '../po-icon/po-icon.module';\r\n\r\nimport { PoCheckboxComponent } from './po-checkbox/po-checkbox.component';\r\nimport { PoComboComponent } from './po-combo/po-combo.component';\r\nimport { PoComboOptionTemplateDirective } from './po-combo/po-combo-option-template/po-combo-option-template.directive';\r\nimport { PoDatepickerComponent } from './po-datepicker/po-datepicker.component';\r\nimport { PoDatepickerRangeComponent } from './po-datepicker-range/po-datepicker-range.component';\r\nimport { PoDecimalComponent } from './po-decimal/po-decimal.component';\r\nimport { PoEmailComponent } from './po-email/po-email.component';\r\nimport { PoLoginComponent } from './po-login/po-login.component';\r\nimport { PoLookupComponent } from './po-lookup/po-lookup.component';\r\nimport { PoLookupModalComponent } from './po-lookup/po-lookup-modal/po-lookup-modal.component';\r\nimport { PoMultiselectDropdownComponent } from './po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component';\r\nimport { PoMultiselectComponent } from './po-multiselect/po-multiselect.component';\r\nimport { PoMultiselectItemComponent } from './po-multiselect/po-multiselect-item/po-multiselect-item.component';\r\nimport { PoMultiselectSearchComponent } from './po-multiselect/po-multiselect-search/po-multiselect-search.component';\r\nimport { PoRichTextBodyComponent } from './po-rich-text/po-rich-text-body/po-rich-text-body.component';\r\nimport { PoRichTextComponent } from './po-rich-text/po-rich-text.component';\r\nimport { PoRichTextImageModalComponent } from './po-rich-text/po-rich-text-image-modal/po-rich-text-image-modal.component';\r\nimport { PoRichTextLinkModalComponent } from './po-rich-text/po-rich-text-link-modal/po-rich-text-link-modal.component';\r\nimport { PoRichTextToolbarComponent } from './po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component';\r\nimport { PoInputComponent } from './po-input/po-input.component';\r\nimport { PoNumberComponent } from './po-number/po-number.component';\r\nimport { PoPasswordComponent } from './po-password/po-password.component';\r\nimport { PoRadioGroupComponent } from './po-radio-group/po-radio-group.component';\r\nimport { PoSelectComponent } from './po-select/po-select.component';\r\nimport { PoSelectOptionTemplateDirective } from './po-select/po-select-option-template/po-select-option-template.directive';\r\nimport { PoSwitchComponent } from './po-switch/po-switch.component';\r\nimport { PoTextareaComponent } from './po-textarea/po-textarea.component';\r\nimport { PoUploadComponent } from './po-upload/po-upload.component';\r\nimport { PoUploadDragDropComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.component';\r\nimport { PoUploadDragDropDirective } from './po-upload/po-upload-drag-drop/po-upload-drag-drop.directive';\r\nimport { PoUploadDragDropAreaOverlayComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component';\r\nimport { PoUploadDragDropAreaComponent } from './po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component';\r\nimport { PoUploadFileRestrictionsComponent } from './po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component';\r\nimport { PoUrlComponent } from './po-url/po-url.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo dos componentes: po-checkbox, po-checkbox-group, po-combo, po-datepicker, po-datepicker-range, po-email, po-input,\r\n * po-lookup, po-number, po-multiselect, po-password, po-radio-group, po-select, po-switch, po-textarea, po-upload\r\n * e po-url.\r\n *\r\n * > Não esqueça de importar o módulo `FormsModule` para usar os componentes de formulários e caso esteja trabalhando com\r\n * > formulários reativos, importe o módulo `ReactiveFormsModule`, ambos nativos do Angular.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PoButtonGroupModule,\r\n    PoButtonModule,\r\n    PoCleanModule,\r\n    PoCalendarModule,\r\n    PoCheckboxGroupModule,\r\n    PoContainerModule,\r\n    PoDatepickerModule,\r\n    PoDisclaimerGroupModule,\r\n    PoDisclaimerModule,\r\n    PoFieldContainerModule,\r\n    PoLoadingModule,\r\n    PoModalModule,\r\n    PoProgressModule,\r\n    PoServicesModule,\r\n    PoTableModule,\r\n    PoTooltipModule,\r\n    PoIconModule\r\n  ],\r\n  exports: [\r\n    PoCheckboxGroupModule,\r\n    PoCleanModule,\r\n    PoDatepickerModule,\r\n    PoCheckboxComponent,\r\n    PoComboComponent,\r\n    PoComboOptionTemplateDirective,\r\n    PoDecimalComponent,\r\n    PoDatepickerRangeComponent,\r\n    PoEmailComponent,\r\n    PoFieldContainerModule,\r\n    PoInputComponent,\r\n    PoLoginComponent,\r\n    PoLookupComponent,\r\n    PoLookupModalComponent,\r\n    PoMultiselectComponent,\r\n    PoNumberComponent,\r\n    PoPasswordComponent,\r\n    PoRadioGroupComponent,\r\n    PoRichTextComponent,\r\n    PoSelectComponent,\r\n    PoSelectOptionTemplateDirective,\r\n    PoSwitchComponent,\r\n    PoTextareaComponent,\r\n    PoUploadComponent,\r\n    PoUrlComponent\r\n  ],\r\n  declarations: [\r\n    PoCheckboxComponent,\r\n    PoComboComponent,\r\n    PoComboOptionTemplateDirective,\r\n    PoDecimalComponent,\r\n    PoDatepickerRangeComponent,\r\n    PoEmailComponent,\r\n    PoInputComponent,\r\n    PoLoginComponent,\r\n    PoLookupComponent,\r\n    PoLookupModalComponent,\r\n    PoMultiselectComponent,\r\n    PoMultiselectDropdownComponent,\r\n    PoMultiselectItemComponent,\r\n    PoMultiselectSearchComponent,\r\n    PoNumberComponent,\r\n    PoPasswordComponent,\r\n    PoRadioGroupComponent,\r\n    PoRichTextBodyComponent,\r\n    PoRichTextComponent,\r\n    PoRichTextImageModalComponent,\r\n    PoRichTextLinkModalComponent,\r\n    PoRichTextToolbarComponent,\r\n    PoSelectComponent,\r\n    PoSelectOptionTemplateDirective,\r\n    PoSwitchComponent,\r\n    PoTextareaComponent,\r\n    PoUploadComponent,\r\n    PoUploadDragDropComponent,\r\n    PoUploadDragDropDirective,\r\n    PoUploadDragDropAreaOverlayComponent,\r\n    PoUploadDragDropAreaComponent,\r\n    PoUploadFileRestrictionsComponent,\r\n    PoUrlComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class PoFieldModule {}\r\n","/**\r\n * @usedBy PoInfoComponent\r\n *\r\n * @description\r\n *\r\n * Define os tipos de orientações disponíveis para o `po-info`.\r\n */\r\nexport enum PoInfoOrientation {\r\n  /** O valor será exibido na horizontal, ao lado direito em relação ao label. */\r\n  Horizontal = 'horizontal',\r\n\r\n  /** Exibe o valor na vertical, ou seja, abaixo do label. */\r\n  Vertical = 'vertical'\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { PoInfoOrientation } from './po-info-orietation.enum';\r\n\r\nconst poInfoOrientationDefault = PoInfoOrientation.Vertical;\r\n\r\n@Directive()\r\nexport class PoInfoBaseComponent {\r\n  /** Valor do rótulo a ser exibido. */\r\n  @Input('p-label') label: string;\r\n\r\n  /**\r\n   * Ao informar uma URL, o conteúdo será exibido na forma de um *link* e ao ser clicado será redirecionado para a URL informada.\r\n   *\r\n   * > Caso informar `http://` será aberto uma nova aba.\r\n   * Caso informar um caminho relativo, exemplo: `/customers`, será aberto na aba atual.\r\n   *\r\n   */\r\n  @Input('p-url') url?: string;\r\n\r\n  /** Valor do conteúdo a ser exibido. */\r\n  @Input('p-value') value?: string;\r\n\r\n  public readonly poInfoOrientation = PoInfoOrientation;\r\n\r\n  private _labelSize: number;\r\n  private _orientation: PoInfoOrientation = poInfoOrientationDefault;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for\r\n   * utilizado na orientação horizontal.\r\n   *\r\n   * Valores válidos:\r\n   *  - `[1 .. 11]`\r\n   *\r\n   * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.\r\n   */\r\n  @Input('p-label-size') set labelSize(value: number) {\r\n    if (isNaN(parseInt(<any>value, 10))) {\r\n      this._labelSize = undefined;\r\n    } else {\r\n      value = parseInt(<any>value, 10);\r\n\r\n      this._labelSize = value < 1 || value > 11 ? undefined : value;\r\n    }\r\n  }\r\n\r\n  get labelSize(): number {\r\n    return this._labelSize;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o layout de exibição.\r\n   *\r\n   * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.\r\n   *\r\n   * @default `vertical`\r\n   */\r\n  @Input('p-orientation') set orientation(value: PoInfoOrientation) {\r\n    this._orientation = (<any>Object).values(PoInfoOrientation).includes(value) ? value : poInfoOrientationDefault;\r\n  }\r\n  get orientation(): PoInfoOrientation {\r\n    return this._orientation;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { isExternalLink } from '../../utils/util';\r\n\r\nimport { PoInfoBaseComponent } from './po-info-base.component';\r\n\r\n/**\r\n * @docsExtends PoInfoBaseComponent\r\n *\r\n * @description\r\n *\r\n * Este componente tem como objetivo renderizar valores na tela no estilo label na parte superior e\r\n * valor na parte inferior. Facilita a exibição de dados pois vem com layout padrão PO.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-info-basic\" title=\"PO Info Basic\">\r\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-info-basic/sample-po-info-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-info-labs\" title=\"PO Info Labs\">\r\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-info-labs/sample-po-info-labs.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-info',\r\n  templateUrl: './po-info.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoInfoComponent extends PoInfoBaseComponent {\r\n  get isExternalLink() {\r\n    return isExternalLink(this.url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoInfoComponent } from './po-info.component';\r\nimport { RouterModule } from '@angular/router';\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-info.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [PoInfoComponent],\r\n  exports: [PoInfoComponent],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoInfoModule {}\r\n","/**\r\n * @usedBy PoTagComponent\r\n *\r\n * @description\r\n *\r\n * Define os tipos de orientações disponíveis para o `po-tag`.\r\n */\r\nexport enum PoTagOrientation {\r\n  /** A tag será exibida na horizontal, ao lado direito em relação ao label. */\r\n  Horizontal = 'horizontal',\r\n\r\n  /** Exibe a tag na vertical, ou seja, abaixo do label. */\r\n  Vertical = 'vertical'\r\n}\r\n","/**\r\n * @usedBy PoTagComponent\r\n *\r\n * @description\r\n *\r\n * Define os tipos disponíveis para o `po-tag`.\r\n */\r\nexport enum PoTagType {\r\n  /** Erro, perigo, problema ou aviso crítico. */\r\n  Danger = 'danger',\r\n\r\n  /** Informativo ou explicativo. */\r\n  Info = 'info',\r\n\r\n  /** Confirmação, resultados positivos ou êxito */\r\n  Success = 'success',\r\n\r\n  /** Aviso ou advertência. */\r\n  Warning = 'warning'\r\n}\r\n","import { EventEmitter, Input, Output, Directive, TemplateRef } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PoColorPaletteEnum } from '../../enums/po-color-palette.enum';\r\n\r\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\r\nimport { PoTagOrientation } from './enums/po-tag-orientation.enum';\r\nimport { PoTagType } from './enums/po-tag-type.enum';\r\n\r\nconst poTagColors = (<any>Object).values(PoColorPaletteEnum);\r\nconst poTagOrientationDefault = PoTagOrientation.Vertical;\r\n\r\n/**\r\n * @description\r\n *\r\n * Este componente permite exibir um valor em forma de um marcador colorido, sendo possível definir uma legenda e realizar customizações\r\n * na cor, iconografia e tipo.\r\n *\r\n * Além disso, é possível definir uma ação que será executada tanto ao *click* quanto através das teclas *enter/space* enquanto navega\r\n * utilizando a tecla *tab*.\r\n *\r\n * Seu uso é recomendado para informações que necessitem de destaque em forma de marcação.\r\n */\r\n@Directive()\r\nexport class PoTagBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma legenda que será exibida acima ou ao lado da *tag*, de acordo com a `p-orientation`.\r\n   */\r\n  @Input('p-label') label?: string;\r\n\r\n  /** Texto da tag. */\r\n  @Input('p-value') value: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será executada ao clicar sobre o `po-tag` e que receberá como parâmetro um objeto contendo o seu valor e tipo.\r\n   */\r\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<PoTagItem>();\r\n\r\n  public readonly poTagOrientation = PoTagOrientation;\r\n\r\n  private _color?: string;\r\n  private _icon?: boolean | string | TemplateRef<void>;\r\n  private _inverse?: boolean;\r\n  private _orientation?: PoTagOrientation = poTagOrientationDefault;\r\n  private _type?: PoTagType;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma cor para a *tag*.\r\n   *\r\n   * Valores válidos:\r\n   *  - <span class=\"dot po-color-01\"></span> `color-01`\r\n   *  - <span class=\"dot po-color-02\"></span> `color-02`\r\n   *  - <span class=\"dot po-color-03\"></span> `color-03`\r\n   *  - <span class=\"dot po-color-04\"></span> `color-04`\r\n   *  - <span class=\"dot po-color-05\"></span> `color-05`\r\n   *  - <span class=\"dot po-color-06\"></span> `color-06`\r\n   *  - <span class=\"dot po-color-07\"></span> `color-07`\r\n   *  - <span class=\"dot po-color-08\"></span> `color-08`\r\n   *  - <span class=\"dot po-color-09\"></span> `color-09`\r\n   *  - <span class=\"dot po-color-10\"></span> `color-10`\r\n   *  - <span class=\"dot po-color-11\"></span> `color-11`\r\n   *  - <span class=\"dot po-color-12\"></span> `color-12`\r\n   *\r\n   * > **Atenção:** A propriedade `p-type` sobrepõe esta definição.\r\n   */\r\n  @Input('p-color') set color(value: string) {\r\n    this._color = poTagColors.includes(value) ? value : undefined;\r\n  }\r\n\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define ou ativa um ícone que será exibido ao lado do valor da *tag*.\r\n   *\r\n   * Quando `p-type` estiver definida, basta informar um valor igual a `true` para que o ícone seja exibido conforme descrições abaixo:\r\n   * - <span class=\"po-icon po-icon-ok\"></span> - `success`\r\n   * - <span class=\"po-icon po-icon-warning\"></span> - `warning`\r\n   * - <span class=\"po-icon po-icon-close\"></span> - `danger`\r\n   * - <span class=\"po-icon po-icon-info\"></span> - `info`\r\n   *\r\n   * Também É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-tag p-icon=\"po-icon-user\" p-value=\"PO Tag\"></po-tag>\r\n   * ```\r\n   * como também utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-tag p-icon=\"fa fa-podcast\" p-value=\"PO Tag\"></po-button>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-tag [p-icon]=\"template\" p-value=\"Tag template ionic\"></po-button>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-icon') set icon(value: boolean | string | TemplateRef<void>) {\r\n    if (this.type) {\r\n      this._icon = convertToBoolean(value);\r\n    } else {\r\n      this._icon = value;\r\n    }\r\n  }\r\n\r\n  get icon() {\r\n    return this._icon;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ativa a inversão de cores configuradas no componente, possibilitando uma visualização de status ativo e inativo.\r\n   *\r\n   * > A cor do texto, do ícone e da borda ficam com a cor utilizada na propriedade `p-color` ou a cor correspondente ao `p-type`,\r\n   * e a cor do fundo fica branca.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-inverse') set inverse(value: boolean) {\r\n    this._inverse = convertToBoolean(value);\r\n  }\r\n\r\n  get inverse(): boolean {\r\n    return this._inverse;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o *layout* de exibição.\r\n   *\r\n   * @default `vertical`\r\n   */\r\n  @Input('p-orientation') set orientation(value: PoTagOrientation) {\r\n    this._orientation = (<any>Object).values(PoTagOrientation).includes(value) ? value : poTagOrientationDefault;\r\n  }\r\n\r\n  get orientation(): PoTagOrientation {\r\n    return this._orientation;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tipo da *tag*.\r\n   *\r\n   * Valores válidos:\r\n   *  - `success`: cor verde utilizada para simbolizar sucesso ou êxito.\r\n   *  - `warning`: cor amarela que representa aviso ou advertência.\r\n   *  - `danger`: cor vermelha para erro ou aviso crítico.\r\n   *  - `info`: cor cinza escuro que caracteriza conteúdo informativo.\r\n   *\r\n   * > Quando esta propriedade for definida, irá sobrepor a definição de `p-color` e `p-icon` somente será exibido caso seja `true`.\r\n   *\r\n   * @default `info`\r\n   */\r\n  @Input('p-type') set type(value: PoTagType) {\r\n    this._type = (<any>Object).values(PoTagType).includes(value) ? value : undefined;\r\n  }\r\n\r\n  get type(): PoTagType {\r\n    return this._type;\r\n  }\r\n}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Define os ícones disponíveis para o `po-tag`.\r\n */\r\nexport enum PoTagIcon {\r\n  /** Ícone fechar. */\r\n  Danger = 'po-icon-close',\r\n\r\n  /** Ícone de informação. */\r\n  Info = 'po-icon-info',\r\n\r\n  /** Ícone que representa confirmação. */\r\n  Success = 'po-icon-ok',\r\n\r\n  /** Ícone com ponto de exclamação. */\r\n  Warning = 'po-icon-warning'\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { PoTagBaseComponent } from './po-tag-base.component';\r\nimport { PoTagIcon } from './enums/po-tag-icon.enum';\r\nimport { PoTagItem } from './interfaces/po-tag-item.interface';\r\nimport { PoTagType } from './enums/po-tag-type.enum';\r\n\r\nconst poTagTypeDefault = 'po-tag-' + PoTagType.Info;\r\n\r\n/**\r\n * @docsExtends PoTagBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-tag-basic\" title=\"PO Tag Basic\">\r\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-tag-basic/sample-po-tag-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tag-labs\" title=\"PO Tag Labs\">\r\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-tag-labs/sample-po-tag-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tag-bank-account\" title=\"PO Tag - Bank Account\">\r\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.html\"> </file>\r\n *  <file name=\"sample-po-tag-bank-account/sample-po-tag-bank-account.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-tag',\r\n  templateUrl: './po-tag.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTagComponent extends PoTagBaseComponent implements OnInit {\r\n  isClickable: boolean;\r\n\r\n  ngOnInit() {\r\n    this.isClickable = this.click.observers.length > 0;\r\n  }\r\n\r\n  get iconFromType() {\r\n    switch (this.type) {\r\n      case PoTagType.Danger:\r\n        return PoTagIcon.Danger;\r\n\r\n      case PoTagType.Info:\r\n        return PoTagIcon.Info;\r\n\r\n      case PoTagType.Success:\r\n        return PoTagIcon.Success;\r\n\r\n      case PoTagType.Warning:\r\n        return PoTagIcon.Warning;\r\n    }\r\n  }\r\n\r\n  get tagColor() {\r\n    if (this.type) {\r\n      return this.inverse ? `po-tag-${this.type}-inverse` : `po-tag-${this.type}`;\r\n    }\r\n\r\n    if (this.color) {\r\n      return this.inverse ? `po-text-${this.color}` : `po-${this.color}`;\r\n    }\r\n\r\n    return this.inverse ? `${poTagTypeDefault}-inverse` : poTagTypeDefault;\r\n  }\r\n\r\n  get tagOrientation() {\r\n    return this.orientation === this.poTagOrientation.Horizontal;\r\n  }\r\n\r\n  onClick() {\r\n    const submittedTagItem: PoTagItem = { value: this.value, type: this.type };\r\n    this.click.emit(submittedTagItem);\r\n  }\r\n\r\n  onKeyPressed(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onClick();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoIconModule } from '../po-icon/po-icon.module';\r\n\r\nimport { PoTagComponent } from './po-tag.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-tag`.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoIconModule],\r\n  declarations: [PoTagComponent],\r\n  exports: [PoTagComponent],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoTagModule {}\r\n","import { PoDynamicViewField } from './po-dynamic-view/po-dynamic-view-field.interface';\r\n\r\nexport function getGridColumnsClasses(smColumns, mdColumns, lgColumns, xlColumns, gridColumns, pullColumns) {\r\n  const systemGrid = {\r\n    sm: smColumns || gridColumns || 12,\r\n    md: mdColumns || gridColumns || 6,\r\n    lg: lgColumns || gridColumns || 4,\r\n    xl: xlColumns || gridColumns || 3,\r\n    pullSm: pullColumns?.smPull || 0,\r\n    pullMd: pullColumns?.mdPull || 0,\r\n    pullLg: pullColumns?.lgPull || 0,\r\n    pullXl: pullColumns?.xlPull || 0\r\n  };\r\n\r\n  return `po-sm-${systemGrid.sm} po-pull-sm-${systemGrid.pullSm} po-md-${systemGrid.md} po-pull-md-${systemGrid.pullMd} po-lg-${systemGrid.lg} po-pull-lg-${systemGrid.pullLg} po-xl-${systemGrid.xl} po-pull-xl-${systemGrid.pullXl}`;\r\n}\r\n\r\nexport function isVisibleField(field: { visible?: boolean }): boolean {\r\n  const containsVisible = 'visible' in field;\r\n\r\n  return containsVisible ? field.visible : true;\r\n}\r\n","/**\r\n * @usedBy PoDynamicFormComponent\r\n *\r\n * @description\r\n *\r\n * Enum para definição do tipo de campo que será criado dinamicamente.\r\n */\r\nexport enum PoDynamicFieldType {\r\n  /** Valor booleano. */\r\n  Boolean = 'boolean',\r\n\r\n  /** Valor numérico que contém casas decimais e milhar. */\r\n  Currency = 'currency',\r\n\r\n  /** Valor para data. */\r\n  Date = 'date',\r\n\r\n  /** Valor para data e hora. */\r\n  DateTime = 'datetime',\r\n\r\n  /** Utilizado para informar/exibir hora. */\r\n  Time = 'time',\r\n\r\n  /** Valor númerico. */\r\n  Number = 'number',\r\n\r\n  /** Texto. */\r\n  String = 'string'\r\n}\r\n","import { Input, EventEmitter, Output, Directive } from '@angular/core';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { isTypeof, sortFields } from '../../../../utils/util';\r\n\r\nimport { getGridColumnsClasses, isVisibleField } from '../../po-dynamic.util';\r\nimport { PoDynamicFieldType } from '../../po-dynamic-field-type.enum';\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldInternal } from './po-dynamic-form-field-internal.interface';\r\nimport { PoComboFilter } from '../../../po-field/po-combo/interfaces/po-combo-filter.interface';\r\nimport { PoLookupFilter } from '../../../po-field/po-lookup/interfaces/po-lookup-filter.interface';\r\n\r\n@Directive()\r\nexport class PoDynamicFormFieldsBaseComponent {\r\n  @Input('p-auto-focus') autoFocus?: string;\r\n\r\n  @Input('p-disabled-form') disabledForm: boolean;\r\n\r\n  @Input('p-validate') validate?: string | Function;\r\n\r\n  @Output('p-form-validate') formValidate = new EventEmitter<any>();\r\n\r\n  @Output('p-fieldsChange') fieldsChange = new EventEmitter<any>();\r\n\r\n  // Evento disparado se existir optionsService em visibleField. Necessário resgatar referência do objeto selecionado para quando se tratar de recebimento de opções via serviço.\r\n  @Output('p-object-value') objectValue = new EventEmitter<any>();\r\n\r\n  visibleFields: Array<PoDynamicFormFieldInternal> = [];\r\n\r\n  private _fields: Array<PoDynamicFormField>;\r\n  private _validateFields: Array<string>;\r\n  private _value?: any = {};\r\n\r\n  // array de objetos que implementam a interface PoDynamicFormField, que serão exibidos no componente.\r\n  @Input('p-fields') set fields(value: Array<PoDynamicFormField>) {\r\n    this._fields = Array.isArray(value) ? [...value] : [];\r\n  }\r\n\r\n  get fields() {\r\n    return this._fields;\r\n  }\r\n\r\n  // valor que será utilizado para iniciar valor no componente.\r\n  @Input('p-value') set value(value: any) {\r\n    this._value = value && isTypeof(value, 'object') ? value : {};\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  @Input('p-validate-fields') set validateFields(value: Array<string>) {\r\n    this._validateFields = Array.isArray(value) ? [...value] : [];\r\n  }\r\n\r\n  get validateFields() {\r\n    return this._validateFields;\r\n  }\r\n\r\n  constructor(private titleCasePipe: TitleCasePipe) {}\r\n\r\n  compareTo(value, compareTo) {\r\n    return value === compareTo;\r\n  }\r\n\r\n  // retorna um array com os objetos configurados e visiveis.\r\n  protected getVisibleFields() {\r\n    const visibleFields = [];\r\n\r\n    this.fields.forEach(field => {\r\n      if (this.existsProperty(visibleFields, field.property)) {\r\n        this.printError(\r\n          `\"po-dynamic-form\" property \"${field.property}\" está duplicado. Interface: PoDynamicFormField.`\r\n        );\r\n        return;\r\n      }\r\n\r\n      if (!field['property']) {\r\n        this.printError('\"po-dynamic-form\" É obrigatório ser especificado um property.');\r\n        return;\r\n      }\r\n\r\n      if (isVisibleField(field)) {\r\n        visibleFields.push(this.createField(field));\r\n      }\r\n    });\r\n\r\n    return sortFields(visibleFields);\r\n  }\r\n\r\n  // converte um array em string para um array de objetos que contem label e value.\r\n  private convertOptions(options: Array<any>): Array<{ label: string; value: string }> {\r\n    const everyOptionString = options.every(option => typeof option === 'string');\r\n\r\n    if (everyOptionString) {\r\n      return options.map(value => ({ label: value, value }));\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  // cria um novo objeto com as classes de grid system, com control (tipo do componente) e label default.\r\n  private createField(field: PoDynamicFormField): PoDynamicFormFieldInternal {\r\n    const control = this.getComponentControl(field);\r\n    const options = !!field.options ? this.convertOptions(field.options) : undefined;\r\n    const focus = this.hasFocus(field);\r\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\r\n\r\n    const componentClass = getGridColumnsClasses(\r\n      field.gridSmColumns,\r\n      field.gridMdColumns,\r\n      field.gridLgColumns,\r\n      field.gridXlColumns,\r\n      field.gridColumns,\r\n      {\r\n        smPull: field.gridSmPull,\r\n        mdPull: field.gridMdPull,\r\n        lgPull: field.gridLgPull,\r\n        xlPull: field.gridXlPull\r\n      }\r\n    );\r\n\r\n    return {\r\n      label: this.titleCasePipe.transform(field.property),\r\n      maskFormatModel: this.compareTo(type, PoDynamicFieldType.Time),\r\n      ...field,\r\n      componentClass,\r\n      control,\r\n      focus,\r\n      options\r\n    };\r\n  }\r\n\r\n  private existsProperty(fields: Array<PoDynamicFormField>, property: string) {\r\n    return fields.some(field => field.property === property);\r\n  }\r\n\r\n  // recupera o componente de acordo com algumas regras do field.\r\n  private getComponentControl(field: PoDynamicFormField = <any>{}) {\r\n    const type = field && field.type ? field.type.toLocaleLowerCase() : 'string';\r\n\r\n    if (this.isNumberType(field, type)) {\r\n      return 'number';\r\n    } else if (this.isCurrencyType(field, type)) {\r\n      return 'decimal';\r\n    } else if (this.isSelect(field)) {\r\n      return 'select';\r\n    } else if (this.isRadioGroup(field)) {\r\n      return 'radioGroup';\r\n    } else if (this.isCheckboxGroup(field)) {\r\n      return 'checkboxGroup';\r\n    } else if (this.isMultiselect(field)) {\r\n      return 'multiselect';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Boolean)) {\r\n      return 'switch';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Date) || this.compareTo(type, PoDynamicFieldType.DateTime)) {\r\n      return field.range ? 'datepickerrange' : 'datepicker';\r\n    } else if (this.compareTo(type, PoDynamicFieldType.Time)) {\r\n      field.mask = field.mask || '99:99';\r\n\r\n      return 'input';\r\n    } else if (this.isCombo(field)) {\r\n      return 'combo';\r\n    } else if (this.isLookup(field)) {\r\n      return 'lookup';\r\n    } else if (this.isTextarea(field)) {\r\n      return 'textarea';\r\n    } else if (this.isPassword(field)) {\r\n      return 'password';\r\n    }\r\n\r\n    return 'input';\r\n  }\r\n\r\n  private hasFocus(field: PoDynamicFormField) {\r\n    return !!this.autoFocus && this.autoFocus === field.property;\r\n  }\r\n\r\n  private isCheckboxGroup(field: PoDynamicFormField) {\r\n    const { optionsService, optionsMulti, options } = field;\r\n\r\n    return !optionsService && optionsMulti && !!options && options.length <= 3;\r\n  }\r\n\r\n  private isCombo(field: PoDynamicFormField) {\r\n    const { optionsService } = field;\r\n\r\n    return !!optionsService && (isTypeof(optionsService, 'string') || this.isComboFilter(optionsService));\r\n  }\r\n\r\n  private isCurrencyType(field: PoDynamicFormField, type: string) {\r\n    const { mask, pattern } = field;\r\n\r\n    return this.compareTo(type, PoDynamicFieldType.Currency) && !mask && !pattern;\r\n  }\r\n\r\n  private isLookupFilter(object: any): object is PoLookupFilter {\r\n    return object && (<PoLookupFilter>object).getObjectByValue !== undefined;\r\n  }\r\n\r\n  private isComboFilter(object: any): object is PoComboFilter {\r\n    return object && (<PoComboFilter>object).getFilteredData !== undefined;\r\n  }\r\n\r\n  private isLookup(field: PoDynamicFormField) {\r\n    const { searchService } = field;\r\n\r\n    return !!searchService && (isTypeof(searchService, 'string') || this.isLookupFilter(searchService));\r\n  }\r\n\r\n  private isMultiselect(field: PoDynamicFormField) {\r\n    const { optionsService, optionsMulti, options } = field;\r\n\r\n    return optionsMulti && (!!optionsService || (!!options && options.length > 3));\r\n  }\r\n\r\n  private isNumberType(field: PoDynamicFormField, type: string) {\r\n    const { mask, pattern } = field;\r\n\r\n    return this.compareTo(type, PoDynamicFieldType.Number) && !mask && !pattern;\r\n  }\r\n\r\n  private isPassword(field: PoDynamicFormField) {\r\n    const { secret } = field;\r\n\r\n    return secret;\r\n  }\r\n\r\n  private isRadioGroup(field: PoDynamicFormField) {\r\n    const { optionsMulti, options } = field;\r\n\r\n    return !optionsMulti && !!options && options.length <= 3;\r\n  }\r\n\r\n  private isSelect(field: PoDynamicFormField) {\r\n    const { optionsMulti, options } = field;\r\n\r\n    return !optionsMulti && !!options && options.length > 3;\r\n  }\r\n\r\n  private isTextarea(field: PoDynamicFormField) {\r\n    const { rows } = field;\r\n\r\n    return rows && rows >= 3;\r\n  }\r\n\r\n  private printError(error: string) {\r\n    console.error(error);\r\n  }\r\n}\r\n","import { Component, ChangeDetectorRef, OnChanges, QueryList, SimpleChanges, ViewChildren } from '@angular/core';\r\nimport { ControlContainer, NgForm } from '@angular/forms';\r\nimport { TitleCasePipe } from '@angular/common';\r\n\r\nimport { PoDynamicFormField } from '../po-dynamic-form-field.interface';\r\nimport { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';\r\nimport { PoDynamicFormFieldValidation } from '../po-dynamic-form-validation/po-dynamic-form-field-validation.interface';\r\nimport { PoDynamicFormValidationService } from '../po-dynamic-form-validation/po-dynamic-form-validation.service';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente de criação dos campos dinâmicos.\r\n */\r\n@Component({\r\n  selector: 'po-dynamic-form-fields',\r\n  templateUrl: 'po-dynamic-form-fields.component.html',\r\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\r\n  providers: [PoDynamicFormValidationService]\r\n})\r\nexport class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {\r\n  @ViewChildren('component') components: QueryList<{ name: string; focus: () => void }>;\r\n\r\n  private previousValue = {};\r\n\r\n  constructor(\r\n    titleCasePipe: TitleCasePipe,\r\n    private validationService: PoDynamicFormValidationService,\r\n    private changes: ChangeDetectorRef,\r\n    private form: NgForm\r\n  ) {\r\n    super(titleCasePipe);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.fields) {\r\n      this.visibleFields = this.getVisibleFields();\r\n    }\r\n  }\r\n\r\n  focus(property: string) {\r\n    const foundComponent = this.components.find(component => component.name === property);\r\n    if (foundComponent) {\r\n      foundComponent.focus();\r\n    }\r\n  }\r\n\r\n  isDisabled(field: PoDynamicFormField): boolean {\r\n    return field.disabled || this.disabledForm;\r\n  }\r\n\r\n  async onChangeField(visibleField: PoDynamicFormField, objectValue?: any) {\r\n    const { property } = visibleField;\r\n    const isBooleanType = visibleField.type === 'boolean';\r\n    const isChangedValueField = this.previousValue[property] !== this.value[property];\r\n\r\n    if (visibleField.optionsService) {\r\n      this.objectValue.emit(objectValue);\r\n    }\r\n\r\n    // verifica se o formulario esta touched para não disparar o validate ao carregar a tela.\r\n    if ((this.form.touched || isBooleanType) && isChangedValueField) {\r\n      const { changedField, changedFieldIndex } = this.getField(property);\r\n\r\n      if (changedField.validate) {\r\n        await this.validateField(changedField, changedFieldIndex, visibleField);\r\n      }\r\n\r\n      this.triggerValidationOnForm(changedFieldIndex);\r\n    }\r\n\r\n    this.updatePreviousValue();\r\n  }\r\n\r\n  updatePreviousValue() {\r\n    this.previousValue = JSON.parse(JSON.stringify(this.value));\r\n  }\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  private applyFieldValidation(index: number, validatedField: PoDynamicFormFieldValidation) {\r\n    const field = this.fields[index];\r\n\r\n    this.fields[index] = { ...field, ...validatedField.field };\r\n    this.updateFields();\r\n\r\n    if (validatedField.hasOwnProperty('value')) {\r\n      this.value[field.property] = validatedField.value;\r\n    }\r\n\r\n    this.changes.detectChanges();\r\n\r\n    if (validatedField.focus) {\r\n      this.focus(field.property);\r\n    }\r\n  }\r\n\r\n  private getField(property: string) {\r\n    const changedFieldIndex = this.fields.findIndex(field => field.property === property);\r\n    const changedField = this.fields[changedFieldIndex];\r\n\r\n    return { changedField, changedFieldIndex };\r\n  }\r\n\r\n  private triggerValidationOnForm(changedFieldIndex: number) {\r\n    const isValidatableField = this.validateFields?.length\r\n      ? this.validateFieldsChecker(this.validateFields, this.fields[changedFieldIndex].property)\r\n      : true;\r\n    const hasValidationForm = this.validate && isValidatableField && this.formValidate.observers.length;\r\n\r\n    if (hasValidationForm) {\r\n      const updatedField = this.fields[changedFieldIndex];\r\n      this.formValidate.emit(updatedField);\r\n    }\r\n  }\r\n\r\n  private updateFields() {\r\n    this.fieldsChange.emit(this.fields);\r\n    this.visibleFields = this.getVisibleFields();\r\n  }\r\n\r\n  private validateFieldsChecker(validateFields: Array<string>, propertyField: PoDynamicFormField['property']): boolean {\r\n    return validateFields.some(validateFieldItem => validateFieldItem === propertyField);\r\n  }\r\n\r\n  private async validateField(field: PoDynamicFormField, fieldIndex: number, visibleField: PoDynamicFormField) {\r\n    const value = this.value[field.property];\r\n\r\n    const previousDisabled = visibleField.disabled;\r\n    visibleField.disabled = true;\r\n    this.changes.detectChanges();\r\n\r\n    try {\r\n      const validatedField = await this.validationService.sendFieldChange(field, value).toPromise();\r\n      this.applyFieldValidation(fieldIndex, validatedField);\r\n    } catch {\r\n      visibleField.disabled = previousDisabled;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { PoDynamicViewField } from '../po-dynamic-view/po-dynamic-view-field.interface';\r\n\r\n@Injectable()\r\nexport class PoDynamicViewService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  onLoad(url: string, value): Promise<{ value?: any; fields?: Array<PoDynamicViewField> }> {\r\n    return this.http.post(url, value).toPromise();\r\n  }\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\r\n\r\nimport { convertToBoolean, isTypeof, sortFields } from '../../../utils/util';\r\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\r\n\r\nimport { getGridColumnsClasses, isVisibleField } from '../po-dynamic.util';\r\nimport { PoDynamicViewField } from './po-dynamic-view-field.interface';\r\nimport { PoDynamicViewService } from './po-dynamic-view.service';\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * Componente para listar dados dinamicamente a partir de uma lista de objetos.\r\n *\r\n * > Por padrão esse componente cria `po-info` para exibição, é possível criar `po-tag` passando a propriedade { tag: true }.\r\n *\r\n */\r\n@Directive()\r\nexport class PoDynamicViewBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Possibilita executar uma função quando o componente é inicializado.\r\n   *\r\n   * A propriedade aceita os seguintes tipos:\r\n   * - **String**: Endpoint usado pelo componente para requisição via `POST`.\r\n   * - **Function**: Método que será executado na inicialização do componente.\r\n   *\r\n   * Para os dois tipos de utilização da propriedade espera-se o seguinte retorno:\r\n   *\r\n   * ```\r\n   * {\r\n   *   value: {\r\n   *     cnpj: '**************', // altera valor do campo\r\n   *     updated: (new Date()).toString() // atribui valor ao campo novo\r\n   *   },\r\n   *   fields: [\r\n   *     { property: 'cnpj', tag: true, inverse: true }, // atribui novas propriedades ao field\r\n   *     { property: 'updated', tag: true } // inclui campo novo\r\n   *   ]\r\n   * }\r\n   * ```\r\n   * > **value**: any = atribui novo valor do model.\r\n   *\r\n   * > **fields**: `Array<PoDynamicViewField>` = Lista de campos que deseja alterar as propriedades,\r\n   * caso enviar um campo a mais será criado um novo campo.\r\n   *\r\n   * - Para esconder/remover campos precisa informar no field a propriedade `visible = false`.\r\n   *\r\n   */\r\n  @Input('p-load') load: string | Function;\r\n\r\n  visibleFields = [];\r\n\r\n  private _fields: Array<PoDynamicViewField> = [];\r\n  private _showAllValue: boolean = false;\r\n  private _value = {};\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de objetos que implementam a interface `PoDynamicView`.\r\n   *\r\n   * > Ex: `[ { property: 'age' } ]`\r\n   *\r\n   * Regras de tipagem e formatação dos valores exibidos:\r\n   *\r\n   * - Caso o *type* informado seja *currency* e não seja informado o *format* o mesmo recebe \"'BRL', 'symbol', '1.2-2'\"\r\n   * como formato padrão.\r\n   * - Caso o *type* informado seja *date* e não seja informado o *format* o mesmo recebe 'dd/MM/yyyy' como formato padrão.\r\n   * - Caso o *type* informado seja *dateTime* e não seja informado o *format* o mesmo recebe 'dd/MM/yyyy HH:mm:ss' como formato padrão.\r\n   * - Caso o *type* informado seja *number* e não seja informado o *format* o mesmo não será formatado.\r\n   * - Caso o *type* informado seja *time* e não seja informado o *format* o mesmo recebe 'HH:mm:ss.ffffff' como formato padrão.\r\n   *\r\n   * > As propriedades informadas serão exibidas mesmo não contendo valor de referência no objeto da propriedade `p-value`.\r\n   *\r\n   * @default `[]`\r\n   */\r\n  @Input('p-fields') set fields(fields: Array<PoDynamicViewField>) {\r\n    this._fields = Array.isArray(fields) ? [...fields] : [];\r\n  }\r\n\r\n  get fields() {\r\n    return this._fields;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica se exibirá todas as informações contidas dentro do objeto informado na propriedade `p-value`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-show-all-value') set showAllValue(value: boolean) {\r\n    this._showAllValue = convertToBoolean(value);\r\n  }\r\n\r\n  get showAllValue() {\r\n    return this._showAllValue;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Objeto que será utilizado para exibir as informações dinâmicas, o valor será recuperado através do atributo *property*\r\n   * dos objetos contidos na propridade `p-fields`.\r\n   *\r\n   * > Ex: `{ age: '35' }`\r\n   */\r\n  @Input('p-value') set value(value: object) {\r\n    this._value = value && isTypeof(value, 'object') ? value : {};\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(\r\n    private currencyPipe: CurrencyPipe,\r\n    private datePipe: DatePipe,\r\n    private decimalPipe: DecimalPipe,\r\n    private timePipe: PoTimePipe,\r\n    private titleCasePipe: TitleCasePipe,\r\n    protected dynamicViewService: PoDynamicViewService\r\n  ) {}\r\n\r\n  // retorna os fields com os valores recuperados do objeto value.\r\n  protected getConfiguredFields() {\r\n    const newFields = [];\r\n\r\n    this.fields.forEach(field => {\r\n      if (isVisibleField(field)) {\r\n        newFields.push(this.createField(field));\r\n      }\r\n    });\r\n\r\n    return sortFields(newFields);\r\n  }\r\n\r\n  // retorna fields ligado ao value mais os atributos do value que não possuiam fields.\r\n  protected getMergedFields() {\r\n    const mergedFields = [...this.getConfiguredFields()];\r\n\r\n    this.getValueFields().forEach(valueField => {\r\n      const fieldIndex = mergedFields.findIndex(field => field.property === valueField.property);\r\n      const property = valueField.property;\r\n\r\n      if (fieldIndex === -1) {\r\n        mergedFields.push(this.createField({ property }));\r\n      }\r\n    });\r\n\r\n    return mergedFields;\r\n  }\r\n\r\n  // retorna o objeto value como fields.\r\n  protected getValueFields() {\r\n    return Object.keys(this.value).map(property => this.createField({ property }));\r\n  }\r\n\r\n  private createField(field: PoDynamicViewField) {\r\n    const property = field.property;\r\n    const value = this.transformValue(field.type, this.value[property], field.format);\r\n\r\n    const classesGridColumns = getGridColumnsClasses(\r\n      field.gridSmColumns,\r\n      field.gridMdColumns,\r\n      field.gridLgColumns,\r\n      field.gridXlColumns,\r\n      field.gridColumns,\r\n      {\r\n        smPull: field.gridSmPull,\r\n        mdPull: field.gridMdPull,\r\n        lgPull: field.gridLgPull,\r\n        xlPull: field.gridXlPull\r\n      }\r\n    );\r\n\r\n    return {\r\n      property,\r\n      value,\r\n      label: this.titleCasePipe.transform(property),\r\n      cssClass: classesGridColumns,\r\n      ...field\r\n    };\r\n  }\r\n\r\n  private transformValue(type: string, value, format) {\r\n    let transformedValue = value;\r\n\r\n    switch (type) {\r\n      case 'currency':\r\n        transformedValue = this.currencyPipe.transform(value, format || 'BRL', 'symbol', '1.2-2');\r\n        break;\r\n      case 'date':\r\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy');\r\n        break;\r\n      case 'dateTime':\r\n        transformedValue = this.datePipe.transform(value, format || 'dd/MM/yyyy HH:mm:ss');\r\n        break;\r\n      case 'number':\r\n        transformedValue = this.decimalPipe.transform(value, format);\r\n        break;\r\n      case 'time':\r\n        transformedValue = this.timePipe.transform(value, format || 'HH:mm:ss.ffffff');\r\n        break;\r\n    }\r\n\r\n    return transformedValue;\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\r\n\r\nimport { PoTimePipe } from '../../../pipes/po-time/po-time.pipe';\r\n\r\nimport { PoDynamicViewField } from './../po-dynamic-view/po-dynamic-view-field.interface';\r\nimport { PoDynamicViewBaseComponent } from './po-dynamic-view-base.component';\r\nimport { PoDynamicViewService } from './po-dynamic-view.service';\r\n\r\n/**\r\n * @docsExtends PoDynamicViewBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-dynamic-view-basic\" title=\"PO Dynamic View Basic\">\r\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-view-basic/sample-po-dynamic-view-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dynamic-view-employee\" title=\"PO Dynamic View - Employee\">\r\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-view-employee/sample-po-dynamic-view-employee.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-dynamic-view-employee-on-load\" title=\"PO Dynamic View - Employee on load\">\r\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.html\"> </file>\r\n *  <file name=\"sample-po-dynamic-view-employee-on-load/sample-po-dynamic-view-employee-on-load.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-dynamic-view',\r\n  templateUrl: './po-dynamic-view.component.html'\r\n})\r\nexport class PoDynamicViewComponent extends PoDynamicViewBaseComponent implements OnChanges, OnInit {\r\n  constructor(\r\n    currencyPipe: CurrencyPipe,\r\n    datePipe: DatePipe,\r\n    decimalPipe: DecimalPipe,\r\n    timePipe: PoTimePipe,\r\n    titleCasePipe: TitleCasePipe,\r\n    dynamicViewService: PoDynamicViewService\r\n  ) {\r\n    super(currencyPipe, datePipe, decimalPipe, timePipe, titleCasePipe, dynamicViewService);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.fields || changes.value || changes.showAllValue) {\r\n      this.visibleFields = this.getVisibleFields();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.load) {\r\n      this.updateValuesAndFieldsOnLoad();\r\n    }\r\n  }\r\n\r\n  private async getValuesAndFieldsFromLoad(): Promise<{ value?: any; fields?: Array<PoDynamicViewField> }> {\r\n    let valueAndFieldsFromLoad;\r\n\r\n    if (typeof this.load === 'string') {\r\n      valueAndFieldsFromLoad = await this.dynamicViewService.onLoad(this.load, this.value);\r\n    } else if (typeof this.load === 'function') {\r\n      valueAndFieldsFromLoad = this.load();\r\n    }\r\n\r\n    return valueAndFieldsFromLoad || {};\r\n  }\r\n\r\n  private getVisibleFields() {\r\n    if (this.showAllValue) {\r\n      return this.getMergedFields();\r\n    }\r\n\r\n    return this.value && this.fields.length ? this.getConfiguredFields() : this.getValueFields();\r\n  }\r\n\r\n  private setFieldOnLoad(fieldOnLoad: PoDynamicViewField) {\r\n    const index = this.fields.findIndex(field => field.property === fieldOnLoad.property);\r\n\r\n    if (index >= 0) {\r\n      this.fields[index] = { ...this.fields[index], ...fieldOnLoad };\r\n    } else {\r\n      this.fields.push({ ...fieldOnLoad });\r\n    }\r\n  }\r\n\r\n  private setFieldsOnLoad(fields: Array<PoDynamicViewField>) {\r\n    if (fields) {\r\n      fields.forEach(fieldOnLoad => {\r\n        this.setFieldOnLoad(fieldOnLoad);\r\n      });\r\n    }\r\n  }\r\n\r\n  private setValueOnLoad(newValue: any) {\r\n    Object.assign(this.value, newValue);\r\n  }\r\n\r\n  private async updateValuesAndFieldsOnLoad() {\r\n    const { value, fields } = await this.getValuesAndFieldsFromLoad();\r\n\r\n    this.setValueOnLoad(value);\r\n    this.setFieldsOnLoad(fields);\r\n\r\n    this.visibleFields = this.getVisibleFields();\r\n  }\r\n}\r\n","import { CommonModule, CurrencyPipe, DatePipe, DecimalPipe, TitleCasePipe } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoDividerModule } from '../po-divider/po-divider.module';\r\nimport { PoFieldModule } from '../po-field/po-field.module';\r\nimport { PoInfoModule } from '../po-info/po-info.module';\r\nimport { PoTagModule } from '../po-tag/po-tag.module';\r\nimport { PoTimeModule } from '../../pipes/po-time/po-time.module';\r\nimport { PoTimePipe } from '../../pipes/po-time/po-time.pipe';\r\n\r\nimport { PoDynamicFormComponent } from './po-dynamic-form/po-dynamic-form.component';\r\nimport { PoDynamicFormFieldsComponent } from './po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component';\r\nimport { PoDynamicFormLoadService } from './po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service';\r\nimport { PoDynamicFormValidationService } from './po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service';\r\nimport { PoDynamicViewComponent } from './po-dynamic-view/po-dynamic-view.component';\r\nimport { PoDynamicViewService } from './po-dynamic-view/po-dynamic-view.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, PoDividerModule, PoInfoModule, PoFieldModule, PoTagModule, PoTimeModule],\r\n  declarations: [PoDynamicFormComponent, PoDynamicFormFieldsComponent, PoDynamicViewComponent],\r\n  exports: [PoDynamicFormComponent, PoDynamicViewComponent],\r\n  providers: [\r\n    CurrencyPipe,\r\n    DatePipe,\r\n    DecimalPipe,\r\n    PoTimePipe,\r\n    TitleCasePipe,\r\n    PoDynamicFormLoadService,\r\n    PoDynamicFormValidationService,\r\n    PoDynamicViewService\r\n  ]\r\n})\r\nexport class PoDynamicModule {}\r\n","// Padding existente nas bordas do componente\r\nexport const PoGaugePadding = 24;\r\n\r\n// Altura mínima aceita pelo po-gauge.\r\nexport const poGaugeMinHeight = 300;\r\n\r\n// Chamado de coroa circular, refere-se à área entre os círculos externos e internos e que define a espessura do gauge.\r\nexport const PoGaugeThickness = 16;\r\n\r\n// A medida referente ao quanto o ponteiro se sobressai em relação ao gráfico. É necessário esse desconto no viewBox para não haver overflow.\r\nexport const PoGaugePointerEnd = 4;\r\n\r\n// Base default para cálculo da angulação final. Para gauge simples, seria como se fosse 100%.\r\nexport const poGaugeTotalValueDefault = 100;\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToInt } from '../../utils/util';\r\nimport { poGaugeMinHeight } from './po-gauge-default-values.constant';\r\n\r\nimport { PoColorService } from '../../services/po-color/po-color.service';\r\n\r\nimport { PoGaugeRanges } from './interfaces/po-gauge-ranges.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-gauge` provê a representação de um valor através de um arco. É muito comum, por exemplo, para demonstrar o desempenho ou progresso de algo.\r\n * O `po-gauge` possui dois tipos de tratamentos:\r\n * - É possível demonstrar um dado percentual simples em conjunto com uma descrição resumida em seu interior;\r\n * - Para um demonstrativo mais elaborado, consegue-se definir alcances em cores, um breve texto descritivo e um ponteiro indicando o valor desejado.\r\n *\r\n * #### Guia de uso para Gráficos\r\n *\r\n * > Veja nosso [guia de uso para gráficos](/guides/guide-charts) para auxiliar na construção do seu gráfico,\r\n * informando em qual caso utilizar, o que devemos evitar e boas práticas relacionada a cores.\r\n */\r\n@Directive()\r\nexport abstract class PoGaugeBaseComponent {\r\n  private _description: string;\r\n  private _height: number = poGaugeMinHeight;\r\n  private _ranges: Array<PoGaugeRanges> = [];\r\n  private _title: string;\r\n  private _value: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o texto que será exibido no gauge.\r\n   * Há dois posicionamentos para ele:\r\n   * - Se houver definição para `p-ranges`, o descritivo será exibido no topo do container, ficando acima do gauge;\r\n   * - Na ausência de `p-ranges`, será incorporado dentro do arco do gauge, e abaixo de `p-value`.\r\n   *\r\n   * Para ambos os casos, se o conteúdo ultrapassar a área designada, serão geradas automaticamente reticências.\r\n   * No entanto, será possível visualizar a mensagem através de um tooltip no passar do mouse sobre o texto.\r\n   *\r\n   * > Para uma melhor experiência do usuário, é recomendado um descritivo breve e com poucas palavras.\r\n   * Desta forma evita-se o *overflow* do texto.\r\n   */\r\n  @Input('p-description') set description(value: string) {\r\n    this._description = value;\r\n\r\n    this.svgContainerSize();\r\n  }\r\n\r\n  get description() {\r\n    return this._description;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura do gauge.\r\n   *\r\n   * O valor mínimo aceito é 300px.\r\n   *\r\n   * @default `300px`\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    this._height = this.setGaugeHeight(value);\r\n    this.svgContainerSize();\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Definição para o alcance de cores. Ao adicionar pelo menos um item na lista,\r\n   * incorpora-se o ponteiro que assinala o valor passado em `p-value`.\r\n   * Se o valor de `p-value` for inferior ao mínimo valor definido em `PoGaugeRanges.from`, o domínio mínimo do gauge será `p-value`.\r\n   * A mesma regra prevalece para valores máximos.\r\n   */\r\n  @Input('p-ranges') set ranges(value: Array<PoGaugeRanges>) {\r\n    this._ranges = Array.isArray(value) ? this.verifyColors(value) : [];\r\n    this.svgContainerSize();\r\n  }\r\n\r\n  get ranges(): Array<PoGaugeRanges> {\r\n    return this._ranges;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o título do gauge.\r\n   */\r\n  @Input('p-title') set title(value: string) {\r\n    this._title = value;\r\n\r\n    this.svgContainerSize();\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor referente ao valor da série. Seu comportamento segue a seguintes regras:\r\n   *\r\n   * - Sem `p-ranges`: Os valores passados para `p-value` e `p-description` serão centralizados no interior do arco.\r\n   * A base do valor será percentual tendo como base os alcances entre zero e 100%. Se passado um valor superior a 100,\r\n   * A colorização do gauge será completa e o valor passado será exibido no interior do arco.\r\n   * - Com `p-ranges`: A descrição será exibida acima do gauge e haverá um ponteiro marcando o valor passado em `p-value`.\r\n   * Considerando que o alcance em `ranges` é aberto, então a escala de `p-value` será em relação ao menor/maior alcance\r\n   * absoluto definido em `p-ranges`.\r\n   * Se passado um `p-value` inferior em relação ao mínimo valor definido em `p-ranges`, o domínio mínimo do gauge partirá de `p-value`.\r\n   * A mesma regra prevalece para valores máximos.\r\n   *\r\n   */\r\n  @Input('p-value') set value(gaugeValue: number) {\r\n    if (typeof gaugeValue === 'number' || (typeof gaugeValue === 'string' && (<string>gaugeValue).trim())) {\r\n      const value = !isNaN(gaugeValue) ? Number(gaugeValue) : undefined;\r\n\r\n      this._value = value;\r\n    } else {\r\n      this._value = undefined;\r\n    }\r\n  }\r\n\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(protected colorService: PoColorService) {}\r\n\r\n  private verifyColors(ranges: Array<PoGaugeRanges>) {\r\n    return this.colorService.getColors<PoGaugeRanges>(ranges);\r\n  }\r\n\r\n  private setGaugeHeight(height: number): number {\r\n    const gaugeHeight = convertToInt(height);\r\n\r\n    return gaugeHeight && gaugeHeight > poGaugeMinHeight ? gaugeHeight : poGaugeMinHeight;\r\n  }\r\n\r\n  protected abstract svgContainerSize(): void;\r\n}\r\n","import { ChangeDetectorRef, Component, DoCheck, ElementRef, ViewChild } from '@angular/core';\r\n\r\nimport { PoGaugePadding } from './po-gauge-default-values.constant';\r\n\r\nimport { PoColorService } from '../../services/po-color/po-color.service';\r\n\r\nimport { PoGaugeBaseComponent } from './po-gauge-base.component';\r\nimport { PoGaugeSvgContainer } from './interfaces/po-gauge-svg-container.interface';\r\n\r\n/**\r\n * @docsExtends PoGaugeBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-gauge-basic\" title=\"PO Gauge Basic\">\r\n *  <file name=\"sample-po-gauge-basic/sample-po-gauge-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-gauge-basic/sample-po-gauge-basic.component.ts\"> </file>\r\n * </example>\r\n * <example name=\"po-gauge-labs\" title=\"PO Gauge Labs\">\r\n *  <file name=\"sample-po-gauge-labs/sample-po-gauge-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-gauge-labs/sample-po-gauge-labs.component.ts\"> </file>\r\n * </example>\r\n * <example name=\"po-gauge-summary\" title=\"PO Gauge Summary\">\r\n *  <file name=\"sample-po-gauge-summary/sample-po-gauge-summary.component.html\"> </file>\r\n *  <file name=\"sample-po-gauge-summary/sample-po-gauge-summary.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-gauge',\r\n  templateUrl: './po-gauge.component.html'\r\n})\r\nexport class PoGaugeComponent extends PoGaugeBaseComponent implements DoCheck {\r\n  @ViewChild('descriptionEl', { read: ElementRef }) descriptionEl: ElementRef;\r\n  @ViewChild('legendEl', { read: ElementRef }) legendEl: ElementRef;\r\n  @ViewChild('titleEl', { read: ElementRef }) titleEl: ElementRef;\r\n  @ViewChild('svgEl', { read: ElementRef }) svgEl: ElementRef;\r\n\r\n  svgContainer: PoGaugeSvgContainer;\r\n\r\n  private isLoaded: boolean = false;\r\n\r\n  constructor(protected colorService: PoColorService, private changeDetector: ChangeDetectorRef) {\r\n    super(colorService);\r\n  }\r\n\r\n  private get hasElementRef() {\r\n    return !!this.svgEl?.nativeElement.offsetWidth;\r\n  }\r\n\r\n  get hasRanges(): boolean {\r\n    return this.ranges.length > 0;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.isLoaded && this.hasElementRef) {\r\n      this.isLoaded = true;\r\n      this.svgContainerSize();\r\n    }\r\n  }\r\n\r\n  protected svgContainerSize(): void {\r\n    if (this.svgEl?.nativeElement.offsetWidth) {\r\n      this.changeDetector.detectChanges();\r\n\r\n      const titleHeight = this.titleEl.nativeElement?.offsetHeight ?? 0;\r\n      const legendHeight = this.legendEl.nativeElement?.offsetHeight ?? 0;\r\n      const descriptionHeight = this.descriptionEl.nativeElement?.offsetHeight ?? 0;\r\n\r\n      const height = this.height - titleHeight - legendHeight - descriptionHeight - PoGaugePadding * 2;\r\n      const width = this.svgEl.nativeElement.offsetWidth;\r\n\r\n      this.svgContainer = { width, height };\r\n    }\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-gauge-description',\r\n  templateUrl: './po-gauge-description.component.html'\r\n})\r\nexport class PoGaugeDescriptionComponent {\r\n  @Input('p-description') description: string;\r\n\r\n  @Input('p-has-ranges') hasRanges: boolean;\r\n\r\n  @Input('p-description-width') descriptionWidth: number;\r\n\r\n  @Input('p-value') value: number;\r\n\r\n  @ViewChild('descriptionText') descriptionText: ElementRef;\r\n\r\n  tooltip: string;\r\n\r\n  get isValidValue() {\r\n    return this.value || this.value === 0;\r\n  }\r\n\r\n  verifyIfHasEllipsis() {\r\n    const { offsetWidth, scrollWidth } = this.descriptionText.nativeElement;\r\n\r\n    // O tooltip só exibe se adicionado dentro de setTimeout.\r\n    setTimeout(() => {\r\n      this.tooltip = offsetWidth < scrollWidth ? this.description : undefined;\r\n    });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoGaugeRanges } from '../interfaces/po-gauge-ranges.interface';\r\n\r\n@Component({\r\n  selector: 'po-gauge-legend',\r\n  templateUrl: './po-gauge-legend.component.html'\r\n})\r\nexport class PoGaugeLegendComponent {\r\n  private _ranges: Array<PoGaugeRanges>;\r\n\r\n  @Input('p-ranges') set ranges(value: Array<PoGaugeRanges>) {\r\n    this._ranges = value.length ? this.filterLabel(value) : [];\r\n  }\r\n\r\n  get ranges() {\r\n    return this._ranges;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  private filterLabel(ranges: Array<PoGaugeRanges>) {\r\n    return ranges.filter(range => range.label);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { PoGaugeCoordinates } from '../../interfaces/po-gauge-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-gauge-path]',\r\n  templateUrl: './po-gauge-path.component.svg'\r\n})\r\nexport class PoGaugePathComponent implements OnInit {\r\n  @Input('p-base-coordinates') baseCoordinates: PoGaugeCoordinates;\r\n\r\n  @Input('p-ranges-coordinates') rangesCoordinates: Array<PoGaugeCoordinates>;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { PoGaugePointerEnd, PoGaugeThickness, poGaugeTotalValueDefault } from '../po-gauge-default-values.constant';\r\n\r\nimport { PoDefaultColors } from '../../../services/po-color/po-colors.constant';\r\n\r\nimport { PoGaugeCoordinates } from '../interfaces/po-gauge-coordinates.interface';\r\nimport { PoGaugeRanges } from '../interfaces/po-gauge-ranges.interface';\r\nimport { PoGaugeSvgContainer } from '../interfaces/po-gauge-svg-container.interface';\r\n\r\nexport const poGaugeStartAngle = -Math.PI;\r\n\r\n@Component({\r\n  selector: 'po-gauge-svg',\r\n  templateUrl: './po-gauge-svg.component.html'\r\n})\r\nexport class PoGaugeSvgComponent implements OnChanges {\r\n  @Input('p-container') container: PoGaugeSvgContainer;\r\n\r\n  @Input('p-ranges') ranges: Array<PoGaugeRanges>;\r\n\r\n  @Input('p-value') value: number;\r\n\r\n  addSvgElement: boolean = false;\r\n  baseCoordinates: PoGaugeCoordinates;\r\n  coordinates: Array<PoGaugeCoordinates>;\r\n  pointerCoordinates: PoGaugeCoordinates;\r\n  viewBox: string;\r\n\r\n  get hasRanges(): boolean {\r\n    return this.ranges.length > 0;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if ((this.container && changes.value) || (this.container && changes.ranges) || this.container) {\r\n      this.setCoordinates(this.value, this.ranges, this.container);\r\n    }\r\n  }\r\n\r\n  private setCoordinates(value: number, ranges: Array<PoGaugeRanges>, container: PoGaugeSvgContainer): void {\r\n    const { height } = container;\r\n\r\n    // Adiciona elemento svg somente após calcular a altura do container pois o svg tem altura default de 150px.\r\n    this.addSvgElement = true;\r\n    this.setViewBox(height);\r\n    this.setBaseCoordinates(height);\r\n\r\n    if (!ranges.length) {\r\n      this.setSingleRangeCoordinates(height, value);\r\n      return;\r\n    }\r\n    this.setRangesCoordinates(height, value, ranges);\r\n  }\r\n\r\n  private setBaseCoordinates(height: PoGaugeSvgContainer['height']): void {\r\n    const endAngleRadian = 0;\r\n    const coordinates = this.calculateCoordinates(height, poGaugeStartAngle, endAngleRadian);\r\n\r\n    this.baseCoordinates = { coordinates };\r\n  }\r\n\r\n  private setRangesCoordinates(height: number, value: number = 0, ranges: Array<PoGaugeRanges>): void {\r\n    const { minRange, maxRange } = this.calculateMinAndMaxValues(ranges);\r\n\r\n    const minValue = value < minRange ? value : minRange;\r\n    const maxValue = value > maxRange ? value : maxRange;\r\n\r\n    this.setPointerCoordinates(height, value, maxValue, minValue);\r\n\r\n    // `.reverse()` no término da iteração para tratar a sobreposicão correta das bordas arredondadas dos ranges.\r\n    const rangesCoordinates = ranges\r\n      .map((range: PoGaugeRanges) => {\r\n        const from = range.from ?? 0;\r\n        const to = range.to ?? maxRange;\r\n        const startAngleRadian = poGaugeStartAngle + this.calculateAngleRadius(from, maxValue, minValue);\r\n        const endAngleRadian = poGaugeStartAngle + this.calculateAngleRadius(to, maxValue, minValue);\r\n\r\n        const coordinates = this.calculateCoordinates(height, startAngleRadian, endAngleRadian);\r\n\r\n        return { coordinates, color: range.color };\r\n      })\r\n      .reverse();\r\n\r\n    this.coordinates = rangesCoordinates;\r\n  }\r\n\r\n  private setSingleRangeCoordinates(height: PoGaugeSvgContainer['height'], value: number): void {\r\n    const verifiedValue = value > 100 ? 100 : value;\r\n\r\n    const endAngleRadian = poGaugeStartAngle + this.calculateAngleRadius(verifiedValue, poGaugeTotalValueDefault);\r\n\r\n    const coordinates = value > 0 ? this.calculateCoordinates(height, poGaugeStartAngle, endAngleRadian) : undefined;\r\n    const color = PoDefaultColors[0][0];\r\n    this.coordinates = [{ coordinates, color }];\r\n  }\r\n\r\n  private setPointerCoordinates(height: number, value: number, maxValue: number, minValue: number) {\r\n    const coordinates = this.calculatePointerInitialCoordinates(height, poGaugeStartAngle);\r\n    const pointerDegrees = this.pointerRotation(value, maxValue, minValue);\r\n\r\n    this.pointerCoordinates = { ...coordinates, pointerDegrees };\r\n  }\r\n\r\n  private pointerRotation(value: number, maxValue: number, minValue: number) {\r\n    const percent = this.convertValueToPercentage(value, maxValue, minValue);\r\n    // valores referentes às angulações mínimas e máximas do ponteiro.\r\n    const minRotation = 0;\r\n    const maxRotation = 180;\r\n\r\n    return (percent * (maxRotation - minRotation)) / 100 + minRotation;\r\n  }\r\n\r\n  private calculatePointerInitialCoordinates(height: number, startAngleRadian: number) {\r\n    const radius = height - PoGaugePointerEnd - PoGaugeThickness / 2;\r\n\r\n    // Valor que representa a escala do ponteiro para plotagem.\r\n    const scale = 40;\r\n    const pointerScaledWidth = radius / scale;\r\n    const pointerScaledBorderRadius = radius / (scale * 2);\r\n\r\n    const sinAlpha = Math.sin(startAngleRadian);\r\n    const cosAlpha = Math.cos(startAngleRadian);\r\n\r\n    const targetX = radius + cosAlpha * radius;\r\n    const targetY = radius + sinAlpha * radius;\r\n\r\n    const startX = radius;\r\n    const startY = radius + pointerScaledWidth;\r\n\r\n    const endX = radius;\r\n    const endY = radius - pointerScaledWidth;\r\n\r\n    const coordinates = [\r\n      'M',\r\n      startX,\r\n      startY,\r\n      'L',\r\n      targetX,\r\n      targetY + pointerScaledBorderRadius,\r\n      'A',\r\n      1,\r\n      1,\r\n      0,\r\n      '0,1',\r\n      targetX,\r\n      targetY - pointerScaledBorderRadius,\r\n      'L',\r\n      endX,\r\n      endY,\r\n      'Z'\r\n    ].join(' ');\r\n\r\n    return { coordinates, radius };\r\n  }\r\n\r\n  private calculateCoordinates(\r\n    height: PoGaugeSvgContainer['height'],\r\n    startAngleRadian: number,\r\n    endAngleRadian: number\r\n  ): PoGaugeCoordinates['coordinates'] {\r\n    // Subtrai altura pelo excedente ponteiro em relação ao gráfico, pela metade do valor da coroa circular.\r\n    const radius = height - PoGaugePointerEnd - PoGaugeThickness / 2;\r\n    const innerRadius = radius - PoGaugeThickness;\r\n\r\n    const sinAlpha = Math.sin(startAngleRadian);\r\n    const cosAlpha = Math.cos(startAngleRadian);\r\n\r\n    const sinBeta = Math.sin(endAngleRadian);\r\n    const cosBeta = Math.cos(endAngleRadian);\r\n\r\n    const startX = Math.round(radius + cosAlpha * radius);\r\n    const startY = Math.round(radius + sinAlpha * radius);\r\n\r\n    const endX = Math.round(radius + cosBeta * radius);\r\n    const endY = Math.round(radius + sinBeta * radius);\r\n\r\n    const startInnerX = Math.round(radius + cosAlpha * innerRadius);\r\n    const startInnerY = Math.round(radius + sinAlpha * innerRadius);\r\n\r\n    const endInnerX = Math.round(radius + cosBeta * innerRadius);\r\n    const endInnerY = Math.round(radius + sinBeta * innerRadius);\r\n\r\n    return [\r\n      'M',\r\n      startX,\r\n      startY,\r\n      'A',\r\n      radius,\r\n      radius,\r\n      0,\r\n      '0,1',\r\n      endX,\r\n      endY,\r\n      'A',\r\n      1,\r\n      1,\r\n      0,\r\n      '0,1',\r\n      endInnerX,\r\n      endInnerY,\r\n      'A',\r\n      innerRadius,\r\n      innerRadius,\r\n      0,\r\n      '0,0',\r\n      startInnerX,\r\n      startInnerY,\r\n      'A',\r\n      1,\r\n      1,\r\n      0,\r\n      '0,1',\r\n      startX,\r\n      startY,\r\n      'Z'\r\n    ].join(' ');\r\n  }\r\n\r\n  private calculateAngleRadius(value: number, maxValue: number, minValue: number = 0): number {\r\n    const angle = ((value - minValue) / (maxValue - minValue)) * (Math.PI * 2);\r\n\r\n    return angle / 2;\r\n  }\r\n\r\n  private convertValueToPercentage(value: number, maxValue: number, minValue): number {\r\n    return ((value - minValue) / (maxValue - minValue)) * 100;\r\n  }\r\n\r\n  private setViewBox(height: number): void {\r\n    const width = this.calculateDiameter(height);\r\n\r\n    this.viewBox = `0 ${-PoGaugePointerEnd} ${width} ${height}`;\r\n  }\r\n\r\n  private calculateDiameter(height: number): number {\r\n    const radius = height - PoGaugePointerEnd - PoGaugeThickness / 2;\r\n\r\n    return radius + Math.cos(0) * radius;\r\n  }\r\n\r\n  private calculateMinAndMaxValues(ranges: Array<PoGaugeRanges>) {\r\n    const minRange = this.getDomain(ranges, 'min');\r\n    const maxRange = this.getDomain(ranges, 'max');\r\n\r\n    return {\r\n      minRange: this.verifyIfFloatOrInteger(minRange) ? minRange : 0,\r\n      maxRange: this.verifyIfFloatOrInteger(maxRange) ? maxRange : 100\r\n    };\r\n  }\r\n\r\n  private verifyIfFloatOrInteger(number: number) {\r\n    const notABoolean = typeof number !== 'boolean';\r\n    const notInfinity = number !== Infinity;\r\n\r\n    const isInteger = Number(number) === number && number % 1 === 0 && notInfinity;\r\n    const isFloat = Number(number) === number && number % 1 !== 0 && notInfinity;\r\n\r\n    return (notABoolean && isInteger) || (notABoolean && isFloat);\r\n  }\r\n\r\n  private getDomain(ranges: Array<PoGaugeRanges>, type: string): number {\r\n    const rangeType = { min: 'from', max: 'to' };\r\n\r\n    return Math[type](...ranges.map(range => range[rangeType[type]]));\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-gauge-title',\r\n  templateUrl: './po-gauge-title.component.html'\r\n})\r\nexport class PoGaugeTitleComponent {\r\n  @Input('p-title') title?: string;\r\n}\r\n","import { AfterViewInit, Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\r\nimport { PoGaugeCoordinates } from '../../interfaces/po-gauge-coordinates.interface';\r\n\r\n@Component({\r\n  selector: '[po-gauge-pointer]',\r\n  templateUrl: './po-gauge-pointer.component.svg'\r\n})\r\nexport class PoGaugePointerComponent implements AfterViewInit {\r\n  @ViewChild('pointer') pointer: ElementRef;\r\n\r\n  radiusScale: number;\r\n\r\n  private _coordinates: PoGaugeCoordinates;\r\n\r\n  private afterViewInit = false;\r\n\r\n  @Input('p-coordinates') set coordinates(value: PoGaugeCoordinates) {\r\n    this._coordinates = value;\r\n\r\n    if (this._coordinates?.radius) {\r\n      this.calculateRadiusScale(this.coordinates.radius);\r\n    }\r\n\r\n    if (this._coordinates?.hasOwnProperty('pointerDegrees') && this.afterViewInit) {\r\n      this.applyPointerRotation(this.coordinates.pointerDegrees);\r\n    }\r\n  }\r\n\r\n  get coordinates() {\r\n    return this._coordinates;\r\n  }\r\n\r\n  constructor(private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (this._coordinates?.pointerDegrees) {\r\n      this.applyPointerRotation(this.coordinates.pointerDegrees);\r\n    }\r\n\r\n    this.afterViewInit = true;\r\n  }\r\n\r\n  private calculateRadiusScale(radius) {\r\n    const scale = radius / 20;\r\n    const maxScaleValue = 24;\r\n\r\n    this.radiusScale = scale < maxScaleValue ? scale : maxScaleValue;\r\n  }\r\n\r\n  private applyPointerRotation(degrees: number) {\r\n    this.renderer.setStyle(\r\n      this.pointer.nativeElement,\r\n      'transformOrigin',\r\n      `${this.coordinates.radius}px ${this.coordinates.radius}px`\r\n    );\r\n    this.renderer.setStyle(this.pointer.nativeElement, 'transform', `rotate(${degrees}deg)`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoTooltipModule } from '../../directives/po-tooltip/po-tooltip.module';\r\n\r\nimport { PoGaugeComponent } from './po-gauge.component';\r\nimport { PoGaugeDescriptionComponent } from './po-gauge-description/po-gauge-description.component';\r\nimport { PoGaugeLegendComponent } from './po-gauge-legend/po-gauge-legend.component';\r\nimport { PoGaugePathComponent } from './po-gauge-svg/po-gauge-path/po-gauge-path.component';\r\nimport { PoGaugeSvgComponent } from './po-gauge-svg/po-gauge-svg.component';\r\nimport { PoGaugeTitleComponent } from './po-gauge-title/po-gauge-title.component';\r\nimport { PoGaugePointerComponent } from './po-gauge-svg/po-gauge-pointer/po-gauge-pointer.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-gauge.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoTooltipModule],\r\n  declarations: [\r\n    PoGaugeComponent,\r\n    PoGaugeTitleComponent,\r\n    PoGaugeLegendComponent,\r\n    PoGaugeSvgComponent,\r\n    PoGaugePathComponent,\r\n    PoGaugeDescriptionComponent,\r\n    PoGaugePointerComponent\r\n  ],\r\n  exports: [PoGaugeComponent]\r\n})\r\nexport class PoGaugeModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-grid-cell-action',\r\n  templateUrl: './po-grid-cell-action.component.html'\r\n})\r\nexport class PoGridCellActionComponent {\r\n  @Input('p-position') position?: string = '';\r\n\r\n  @Input('p-value') value?: string;\r\n\r\n  constructor() {}\r\n\r\n  onKeyDownContent(event) {\r\n    // ENTER\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ViewChild, ElementRef, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-grid-cell',\r\n  templateUrl: './po-grid-cell.component.html'\r\n})\r\nexport class PoGridCellComponent {\r\n  @Input('p-align') align?: string = 'left';\r\n\r\n  @Input('p-freeze') freeze?: boolean = false;\r\n\r\n  @Input('p-tab-index') tabIndex?: number = -1;\r\n\r\n  @Input('p-position') position?: string = '';\r\n\r\n  @Input('p-readonly') readonly?: boolean = false;\r\n\r\n  @Input('p-required') required?: boolean = false;\r\n\r\n  @Output('p-valueChange') valueChange = new EventEmitter<any>();\r\n\r\n  @ViewChild('inputElement') inputElement: ElementRef;\r\n  @ViewChild('contentElement') contentElement: ElementRef;\r\n\r\n  _value: any = '';\r\n  edit: boolean = false;\r\n  editValue: string = '';\r\n\r\n  private _width: string | number;\r\n\r\n  @Input('p-width') set width(value: string | number) {\r\n    this._width = value;\r\n\r\n    if (this.freeze && !this._width) {\r\n      this._width = 100;\r\n    }\r\n  }\r\n  get width(): string | number {\r\n    return this._width ? `${this._width}px` : '100%';\r\n  }\r\n\r\n  @Input('p-value') set value(value: any) {\r\n    this._value = value;\r\n    this.valueChange.emit(this._value);\r\n  }\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  onKeyDownContent(event: any) {\r\n    // BACKSPACE / DELETE\r\n    if (!event.ctrlKey && (event.keyCode === 8 || event.keyCode === 46)) {\r\n      if (this.readonly) {\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      this.value = '';\r\n      return;\r\n    }\r\n\r\n    // ENTER\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      this.onEditCell(this.value);\r\n      return;\r\n    }\r\n\r\n    // A..Z - 0..9\r\n    if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57)) {\r\n      event.preventDefault();\r\n      this.onEditCell(event.key);\r\n    }\r\n  }\r\n\r\n  dblclick(event: any) {\r\n    event.preventDefault();\r\n\r\n    this.onEditCell(this.value);\r\n  }\r\n\r\n  onBlurInput() {\r\n    this.value = this.editValue;\r\n    this.editValue = undefined;\r\n    this.edit = false;\r\n  }\r\n\r\n  onKeyDownInput(event: any) {\r\n    // ENTER\r\n    if (event.keyCode === 13) {\r\n      event.target.blur();\r\n      this.changeDetectorRef.detectChanges();\r\n      this.contentElement.nativeElement.focus();\r\n    }\r\n\r\n    // ESCAPE\r\n    if (event.keyCode === 27) {\r\n      this.editValue = undefined;\r\n      this.edit = false;\r\n      this.changeDetectorRef.detectChanges();\r\n      this.contentElement.nativeElement.focus();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private onEditCell(value: any) {\r\n    if (this.readonly) {\r\n      return;\r\n    }\r\n\r\n    this.editValue = value;\r\n    this.edit = true;\r\n    this.changeDetectorRef.detectChanges();\r\n    this.inputElement.nativeElement.focus();\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Renderer2, ViewChild } from '@angular/core';\r\n\r\nimport { PoGridRowActions } from './po-grid-row-actions.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * > Componente em desenvolvimento, podendo haver BREAKING CHANGES nas próximas versões.\r\n *\r\n * Componente grid.\r\n *\r\n * Ações / atalhos:\r\n *\r\n * - ARROW-UP: Navega para celula superior / Na ultima linha adiciona uma linha em branco no grid;\r\n * - ARROW-DOWN: Navega para celula inferior;\r\n * - ARROW-RIGHT: Navega para celula direita;\r\n * - ARROW-LEFT: Navega para celula esquerda;\r\n * - TAB: Navega para próxima celula;\r\n * - SHIFT+TAB: Navega para celula anterior;\r\n * - CTRL+DEL: Remove linha;\r\n * - DEL/BACKSPACE: Limpa celula;\r\n * - ENTER: Edita linha com valor atual/Confirma edição da celula;\r\n * - DOUBLE-CLICK: Edita linha com valor atual;\r\n * - ESC: Cancela edição da celula / Cancela inserção de linhas em branco;\r\n * - A..Z/0..9: Inicia edição com valor em branco.\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-grid-basic\" title=\"PO Grid Basic\">\r\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-grid-basic/sample-po-grid-basic.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-grid',\r\n  templateUrl: './po-grid.component.html'\r\n})\r\nexport class PoGridComponent implements OnDestroy {\r\n  @ViewChild('table', { static: true }) tableElement: ElementRef;\r\n  @ViewChild('wrapper', { static: true }) tableWrapper: ElementRef;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Ações disparadas quando uma linha do grid é manipulada.\r\n   */\r\n  @Input('p-row-actions') rowActions: PoGridRowActions = {};\r\n\r\n  /**\r\n   * Lista com os dados que serão exibidos no grid.\r\n   */\r\n  @Input('p-data') data: Array<any> = [];\r\n\r\n  lastCell: string = '0-0';\r\n  lastRow: number = 0;\r\n  lastColumn: number = 0;\r\n  currencyCell: string = '0-0';\r\n  currencyRow: number = 0;\r\n  currencyColumn: number = 0;\r\n  currencyObj: any;\r\n\r\n  logger = false;\r\n\r\n  width = '100%';\r\n  widporeeze = 0;\r\n  widthActions = 0;\r\n\r\n  private resizeListener: () => void;\r\n  private timeoutResize;\r\n\r\n  private _columns = [];\r\n\r\n  /**\r\n   * Colunas exibidas no grid.\r\n   */\r\n  @Input('p-columns') set columns(value: Array<any>) {\r\n    this._columns = [...value];\r\n\r\n    this._columns.forEach(column => {\r\n      column.label = column.label || column.property;\r\n\r\n      if (column.freeze === true) {\r\n        column.cssWidth = `${column.width || 100}px`;\r\n      } else {\r\n        column.cssWidth = column.width ? `${column.width}px` : '100%';\r\n      }\r\n    });\r\n  }\r\n  get columns(): Array<any> {\r\n    return this._columns.filter(column => column.freeze !== true && column.action !== true);\r\n  }\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private elRef: ElementRef, renderer: Renderer2) {\r\n    this.debounceResize();\r\n\r\n    this.resizeListener = renderer.listen('window', 'resize', (event: any) => {\r\n      this.debounceResize();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n  }\r\n\r\n  get freezeColumns() {\r\n    const freezeColumns = this._columns.filter(column => column.freeze === true);\r\n\r\n    this.widporeeze = freezeColumns.reduce((prev, current) => prev + (current.width || 100), 0);\r\n\r\n    return freezeColumns;\r\n  }\r\n\r\n  get actionColumns() {\r\n    const actionsColumns = this._columns.filter(column => column.action === true);\r\n\r\n    this.widthActions = actionsColumns.length > 0 ? 56 : 0;\r\n\r\n    return actionsColumns;\r\n  }\r\n\r\n  cancelRow(event: any, row: any) {\r\n    const el = this.getEventPath(event).find(element => element.id);\r\n\r\n    if (!el) {\r\n      return;\r\n    }\r\n\r\n    const [x] = el.id.split('-');\r\n\r\n    if (this.isEmptyRow(x)) {\r\n      if (!this.removeRow(event, row)) {\r\n        return;\r\n      }\r\n\r\n      this.currencyObj = Object.assign({}, this.data[this.currencyRow - 1]);\r\n    } else {\r\n      this.data[+x - 1] = Object.assign({}, this.currencyObj);\r\n      setTimeout(() => this.selectCell(this.currencyRow, this.currencyColumn));\r\n    }\r\n  }\r\n\r\n  removeRow(event: any, row: any): boolean {\r\n    if (this.rowActions.beforeRemove && !this.rowActions.beforeRemove(Object.assign({}, row))) {\r\n      return false;\r\n    }\r\n\r\n    const index = this.data.indexOf(row);\r\n\r\n    this.data.splice(index, 1);\r\n\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    if (this.data.length === 0 || index === this.data.length) {\r\n      this.selectCell(this.currencyRow - 1, this.currencyColumn);\r\n    } else {\r\n      this.selectCell(this.currencyRow, this.currencyColumn);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  tableKeydown(event: any, direction: string) {\r\n    let [row, col] = event.target.id.split('-');\r\n    row = +row;\r\n    col = +col;\r\n    let prow = +row;\r\n    let pcol = +col;\r\n\r\n    if (direction === 'down') {\r\n      if (row <= this.data.length) {\r\n        prow++;\r\n      }\r\n\r\n      if (row === this.data.length) {\r\n        if (row === 0 || !this.isEmptyRow(row)) {\r\n          if (this.saveRow(row)) {\r\n            if (!this.insertRow()) {\r\n              return;\r\n            }\r\n          } else {\r\n            return;\r\n          }\r\n        } else {\r\n          prow--;\r\n        }\r\n      }\r\n    } else if (direction === 'up' && row > 0) {\r\n      prow--;\r\n    } else if (direction === 'left' && col > 0) {\r\n      pcol--;\r\n    } else if (direction === 'right' && col < this._columns.length - 1) {\r\n      pcol++;\r\n    } else if (direction === 'next') {\r\n      if (col < this._columns.length - 1) {\r\n        pcol++;\r\n        event.preventDefault();\r\n      } else if (row < this.data.length) {\r\n        pcol = 0;\r\n        prow++;\r\n        event.preventDefault();\r\n      }\r\n    } else if (direction === 'prior') {\r\n      if (col > 0) {\r\n        pcol--;\r\n        event.preventDefault();\r\n      } else if (row > 0) {\r\n        pcol = this._columns.length - 1;\r\n        prow--;\r\n        event.preventDefault();\r\n      }\r\n    }\r\n\r\n    if (this.currencyCell === `${prow}-${pcol}`) {\r\n      return;\r\n    }\r\n\r\n    if (prow !== this.currencyRow && row > 0 && this.data.length >= row) {\r\n      if (!this.isEmptyRow(row)) {\r\n        if (!this.saveRow(row)) {\r\n          return;\r\n        }\r\n      } else {\r\n        if (!this.removeRow(event, row)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.currencyRow !== prow) {\r\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\r\n    }\r\n\r\n    this.lastCell = event.target.id;\r\n    this.lastRow = row;\r\n    this.lastColumn = col;\r\n\r\n    this.selectCell(prow, pcol);\r\n  }\r\n\r\n  tableClick(event: any) {\r\n    const el = this.getEventPath(event).find(element => element.id);\r\n\r\n    if (!el) {\r\n      this.selectCell(this.currencyRow, this.currencyColumn);\r\n      return;\r\n    }\r\n\r\n    if (this.currencyCell === el.id) {\r\n      return;\r\n    }\r\n\r\n    const [row, col] = el.id.split('-');\r\n    const prow = +row;\r\n    const pcol = +col;\r\n\r\n    if (prow !== this.currencyRow) {\r\n      if (this.currencyRow > 0) {\r\n        if (!this.isEmptyRow(this.currencyRow)) {\r\n          if (!this.saveRow(this.currencyRow)) {\r\n            this.selectCell(this.currencyRow, this.currencyColumn);\r\n            return;\r\n          }\r\n        } else {\r\n          if (!this.removeRow(event, row)) {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.currencyObj = Object.assign({}, this.data[prow - 1]);\r\n    }\r\n\r\n    this.lastCell = this.currencyCell;\r\n    this.lastRow = this.currencyRow;\r\n    this.lastColumn = this.currencyColumn;\r\n\r\n    this.currencyCell = el.id;\r\n    this.currencyRow = prow;\r\n    this.currencyColumn = pcol;\r\n  }\r\n\r\n  saveRow(row: number): boolean {\r\n    const obj = this.data[row - 1];\r\n\r\n    if (!Object.keys(obj).some(prop => obj[prop] !== this.currencyObj[prop])) {\r\n      return true;\r\n    }\r\n\r\n    if (this.rowActions.beforeSave && !this.rowActions.beforeSave(obj, this.currencyObj)) {\r\n      return false;\r\n    }\r\n\r\n    const requireds = [];\r\n\r\n    this.columns.forEach(column => {\r\n      if (column.required === true && !obj[column.property]) {\r\n        requireds.push(column.property);\r\n      }\r\n    });\r\n\r\n    return requireds.length === 0;\r\n  }\r\n\r\n  insertRow() {\r\n    const obj = {};\r\n\r\n    if (this.rowActions.beforeInsert && !this.rowActions.beforeInsert(obj)) {\r\n      return false;\r\n    }\r\n\r\n    this.data.push(obj);\r\n    this.changeDetectorRef.detectChanges();\r\n\r\n    return true;\r\n  }\r\n\r\n  isEmptyRow(row: number) {\r\n    const obj = this.data[row - 1];\r\n\r\n    if (!obj) {\r\n      // title\r\n      return false;\r\n    }\r\n\r\n    const filled = Object.keys(obj).some(property => obj[property]);\r\n\r\n    return !filled;\r\n  }\r\n\r\n  selectCell(row: number, col: number) {\r\n    const nextCell = this.elRef.nativeElement.querySelector(`[id='${row}-${col}']`);\r\n\r\n    if (nextCell) {\r\n      this.currencyCell = `${row}-${col}`;\r\n      this.currencyRow = row;\r\n      this.currencyColumn = col;\r\n      nextCell.focus();\r\n    }\r\n  }\r\n\r\n  private debounceResize() {\r\n    clearTimeout(this.timeoutResize);\r\n\r\n    this.timeoutResize = setTimeout(() => {\r\n      const widthTableWrapper = this.tableWrapper.nativeElement.offsetWidth;\r\n      this.width = `${widthTableWrapper - (this.widporeeze + 8) - this.widthActions}px`;\r\n    }, 100);\r\n  }\r\n\r\n  private getEventPath(event) {\r\n    // firefox do not have support to event.path\r\n    return event.path || event.composedPath();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-grid-head',\r\n  templateUrl: './po-grid-head.component.html'\r\n})\r\nexport class PoGridHeadComponent {\r\n  @Input('p-align') align?: string = 'left';\r\n\r\n  @Input('p-freeze') boolean?: boolean = false;\r\n\r\n  @Input('p-position') position?: string = '';\r\n\r\n  @Input('p-tab-index') tabIndex?: number = -1;\r\n\r\n  @Input('p-title') title?: string;\r\n\r\n  private _width: string | number;\r\n\r\n  @Input('p-width') set width(value: string | number) {\r\n    this._width = value;\r\n  }\r\n  get width(): string | number {\r\n    return this._width ? `${this._width}px` : '100%';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoFieldModule } from './../../components/po-field/po-field.module';\r\n\r\nimport { PoGridCellActionComponent } from './po-grid-cell-action/po-grid-cell-action.component';\r\nimport { PoGridCellComponent } from './po-grid-cell/po-grid-cell.component';\r\nimport { PoGridComponent } from './po-grid.component';\r\nimport { PoGridHeadComponent } from './po-grid-head/po-grid-head.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-grid.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, PoFieldModule],\r\n  declarations: [PoGridCellActionComponent, PoGridCellComponent, PoGridComponent, PoGridHeadComponent],\r\n  exports: [PoGridComponent]\r\n})\r\nexport class PoGridModule {}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../services/po-language/po-language.constant';\r\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\r\nimport { PoListViewLiterals } from './interfaces/po-list-view-literals.interface';\r\n\r\nexport const poListViewLiteralsDefault = {\r\n  en: <PoListViewLiterals>{\r\n    hideDetails: 'Hide details',\r\n    loadMoreData: 'Load more data',\r\n    noData: 'No data found',\r\n    selectAll: 'Select all',\r\n    showDetails: 'Show details'\r\n  },\r\n  es: <PoListViewLiterals>{\r\n    hideDetails: 'Ocultar detalles',\r\n    loadMoreData: 'Cargar más resultados',\r\n    noData: 'Datos no encontrados',\r\n    selectAll: 'Seleccionar todos',\r\n    showDetails: 'Mostrar detalles'\r\n  },\r\n  pt: <PoListViewLiterals>{\r\n    hideDetails: 'Ocultar detalhes',\r\n    loadMoreData: 'Carregar mais resultados',\r\n    noData: 'Nenhum dado encontrado',\r\n    selectAll: 'Selecionar todos',\r\n    showDetails: 'Exibir detalhes'\r\n  },\r\n  ru: <PoListViewLiterals>{\r\n    hideDetails: 'Скрыть детали',\r\n    loadMoreData: 'Загрузить больше результатов',\r\n    noData: 'Данные не найдены',\r\n    selectAll: 'Выбрать все',\r\n    showDetails: 'Посмотреть детали'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente de lista que recebe um array de objetos e renderiza de forma dinâmica os dados de\r\n * acordo com a necessidade de cada tela e deve ser utilizado em conjunto com as diretivas de *templates*\r\n *  **[p-list-view-content-template](/documentation/po-list-view-content-template)** e\r\n * **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\r\n *\r\n * O componente disponibiliza uma área específica para exibição informações adicionais,\r\n * através da diretiva **[p-list-view-detail-template](/documentation/po-list-view-detail-template)**.\r\n */\r\n@Directive()\r\nexport class PoListViewBaseComponent {\r\n  /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será usado como link para o título. */\r\n  @Input('p-property-link') propertyLink?: string;\r\n\r\n  /** Recebe uma propriedade que será utilizada para recuperar o valor do objeto que será exibido como o título de cada item. */\r\n  @Input('p-property-title') propertyTitle?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Recebe uma ação, que será executada quando clicar no botão \"Carregar mais resultados\".\r\n   *\r\n   * > Caso nenhuma ação for definida o mesmo não ficará visível.\r\n   */\r\n  @Output('p-show-more') showMore: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será executada ao clicar no título.\r\n   *\r\n   * Ao ser disparado, o método inserido na ação irá receber como parâmetro o item da lista clicado.\r\n   */\r\n  @Output('p-title-action') titleAction: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  popupTarget: any;\r\n  selectAll: boolean = false;\r\n  showHeader: boolean = false;\r\n\r\n  private _actions: Array<PoListViewAction>;\r\n  private _height: number;\r\n  private _hideSelectAll: boolean;\r\n  private _items: Array<any>;\r\n  private _literals: PoListViewLiterals;\r\n  private _select: boolean;\r\n  private _showMoreDisabled: boolean;\r\n  private language: string = poLocaleDefault;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de ações que serão exibidas no componente.\r\n   */\r\n  @Input('p-actions') set actions(value: Array<PoListViewAction>) {\r\n    this._actions = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get actions() {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura do `po-list-view` em *pixels*.\r\n   */\r\n  @Input('p-height') set height(height: number) {\r\n    this._height = height;\r\n  }\r\n\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Esconde o *checkbox* para seleção de todos os itens.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-select-all') set hideSelectAll(hideSelectAll: boolean) {\r\n    this._hideSelectAll = convertToBoolean(hideSelectAll);\r\n    this.showMainHeader();\r\n  }\r\n\r\n  get hideSelectAll() {\r\n    return this._hideSelectAll;\r\n  }\r\n\r\n  /** Lista de itens que serão exibidos no componente. */\r\n  @Input('p-items') set items(value: Array<any>) {\r\n    this._items = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get items() {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-list-view`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoListViewLiterals = {\r\n   *    hideDetail: 'Ocultar detalhes completamente',\r\n   *    loadMoreData: 'Mais dados',\r\n   *    showDetail: 'Mostrar mais detalhes',\r\n   *    selectAll: 'Selecionar todos os itens'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoListViewLiterals = {\r\n   *    showDetail: 'Mostrar mais detalhes'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-list-view\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-list-view>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoListViewLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poListViewLiteralsDefault[poLocaleDefault],\r\n        ...poListViewLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poListViewLiteralsDefault[this.language];\r\n    }\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poListViewLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita um *checkbox* para cada item da lista. Todos os items possuem a propriedade dinâmica `$selected` para identificar se o\r\n   * item está selecionado, por exemplo:\r\n   *\r\n   * ```\r\n   *  item.$selected\r\n   *\r\n   *  // ou\r\n   *\r\n   *  item['$selected']\r\n   * ```\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-select') set select(select: boolean) {\r\n    this._select = convertToBoolean(select);\r\n    this.showMainHeader();\r\n  }\r\n\r\n  get select() {\r\n    return this._select;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Indica que o botão `Carregar Mais Resultados` será desabilitado.\r\n   */\r\n  @Input('p-show-more-disabled') set showMoreDisabled(value: boolean) {\r\n    this._showMoreDisabled = convertToBoolean(value);\r\n  }\r\n\r\n  get showMoreDisabled(): boolean {\r\n    return this._showMoreDisabled;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  onClickAction(listViewAction: PoListViewAction, item) {\r\n    const cleanItem = this.deleteInternalAttrs(item);\r\n    if (listViewAction.action) {\r\n      listViewAction.action(cleanItem);\r\n    }\r\n  }\r\n\r\n  onShowMore(): void {\r\n    this.showMore.emit();\r\n  }\r\n\r\n  runTitleAction(listItem: any) {\r\n    const itemWithPublicProperties = this.deleteInternalAttrs(listItem);\r\n    this.titleAction.emit(itemWithPublicProperties);\r\n  }\r\n\r\n  selectAllListItems() {\r\n    if (!this.hideSelectAll) {\r\n      this.selectAll = !this.selectAll;\r\n\r\n      this.items.forEach(item => {\r\n        item.$selected = this.selectAll;\r\n      });\r\n    }\r\n  }\r\n\r\n  selectListItem(row: any) {\r\n    row.$selected = !row.$selected;\r\n\r\n    this.selectAll = this.checkIfItemsAreSelected(this.items);\r\n  }\r\n\r\n  private deleteInternalAttrs(item) {\r\n    const itemCopy = item ? { ...item } : undefined;\r\n\r\n    for (const key in itemCopy) {\r\n      if (itemCopy.hasOwnProperty(key) && key.startsWith('$')) {\r\n        delete itemCopy[key];\r\n      }\r\n    }\r\n\r\n    return itemCopy;\r\n  }\r\n\r\n  private checkIfItemsAreSelected(items: Array<any>): boolean {\r\n    const someCheckedOrIndeterminate = item => item.$selected || item.$selected === null;\r\n    const everyChecked = item => item.$selected;\r\n\r\n    if (items.every(everyChecked)) {\r\n      return true;\r\n    }\r\n\r\n    if (items.some(someCheckedOrIndeterminate)) {\r\n      return null;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private showMainHeader() {\r\n    this.showHeader = !!(this.select && !this.hideSelectAll && this.items && this.items.length);\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoListViewComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que sejam apresentadas informações essenciais de cada item.\r\n *\r\n * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\r\n *  - Item: `item` determina o item da linha corrente.\r\n *  - Índice: `index` determina o índice da linha corrente.\r\n *\r\n * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-list-view\r\n *   p-property-title=\"name\"\r\n *   [p-items]=\"[{id: 1, name: \"Register\", email: register@po-ui.com}]\">\r\n *\r\n *   <ng-template p-list-view-content-template let-item let-code=\"index\">\r\n *     <div class=\"po-row\">\r\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\r\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *     </div>\r\n *   </ng-template>\r\n *\r\n * </po-list-view>\r\n *\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-list-view\r\n *    p-property-title=\"name\"\r\n *    [p-items]=\"[{id: 1, name: \"Register\", email: register@po-ui.com}]\">\r\n *\r\n *    <div *p-list-view-content-template=\"let item, let i=index\" class=\"po-row\">\r\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *    </div>\r\n * </po-list-view>\r\n * ...\r\n *\r\n * ```\r\n *\r\n * A diretiva **p-list-view-content-template**, possibilita também alterar o título dos itens. Para isto,\r\n * é necessário atribuir a referência da função que faz a alteração, à propriedade `p-title`,\r\n * a mesma deve retornar um valor do tipo *string*. Veja o exemplo a seguir:\r\n *\r\n * ```\r\n * ...\r\n * @Component({\r\n *    selector: 'app-root',\r\n *    template: `\r\n *      ...\r\n *      <po-list-view\r\n *        [p-items]=\"items\">\r\n *        <ng-template p-list-view-content-template let-item [p-title]=\"customTitle\">\r\n *          <div class=\"po-row\">\r\n *            <po-info class=\"po-md-12\" p-label=\"Customer\" [p-value]=\"item.customer\"></po-info>\r\n *          </div>\r\n *        </ng-template>\r\n *      ...\r\n *    `\r\n * })\r\n * export class AppComponent {\r\n *    public items = [{\r\n *      code: 1200,\r\n *      product: 'Rice',\r\n *      customer: 'Supermarket 1',\r\n *    }, {\r\n *      code: 1355,\r\n *      product: 'Bean',\r\n *      customer: 'Supermarket 2'\r\n *    }];\r\n *\r\n *    customTitle(item) {\r\n *      return `${item.code} - ${item.product}`;\r\n *    }\r\n * }\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-list-view-content-template]'\r\n})\r\nexport class PoListViewContentTemplateDirective {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que deve retornar um valor do tipo `string`, que será utilizado como o título de cada item da lista.\r\n   *\r\n   * > Por parâmetro será enviado o item corrente, onde poderá utilizá-lo para recuperar dados sobre o mesmo.\r\n   */\r\n  @Input('p-title') title: (item) => string;\r\n\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef, Input } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoListViewComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite que sejam apresentadas informações adicionais de cada item, construindo um\r\n * botão `Exibir detalhes` abaixo do conteúdo principal do item.\r\n *\r\n * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\r\n *  - Item: `item` determina o item da linha corrente.\r\n *  - Índice: `index` determina o índice da linha corrente.\r\n *\r\n * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-list-view\r\n *   p-property-title=\"name\"\r\n *   [p-items]=\"items\">\r\n *\r\n *   <ng-template p-list-view-detail-template let-item let-code=\"index\">\r\n *     <div class=\"po-row\">\r\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"code\"></po-info>\r\n *       <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *     </div>\r\n *   </ng-template>\r\n *\r\n * </po-list-view>\r\n *\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-list-view\r\n *    p-property-title=\"name\"\r\n *    [p-items]=\"items\">\r\n *    <div *p-list-view-detail-template=\"let item, let i=index\" class=\"po-row\">\r\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *    </div>\r\n * </po-list-view>\r\n * ...\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-list-view-detail-template]'\r\n})\r\nexport class PoListViewDetailTemplateDirective {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que deve retornar um valor do tipo `boolean`, que será utilizado como a validação para que o detalhe de item\r\n   * da lista inicie aberto ou fechado.\r\n   *\r\n   */\r\n  @Input('p-show-detail') showDetail: (item) => boolean;\r\n\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  DoCheck,\r\n  IterableDiffers,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { isTypeof } from '../../utils/util';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { PoPopupComponent } from '../po-popup/po-popup.component';\r\n\r\nimport { PoListViewAction } from './interfaces/po-list-view-action.interface';\r\nimport { PoListViewBaseComponent } from './po-list-view-base.component';\r\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\r\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\r\n\r\n/**\r\n * @docsExtends PoListViewBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-list-view-basic\" title=\"PO List View Basic\">\r\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-list-view-basic/sample-po-list-view-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-list-view-labs\" title=\"PO List View Labs\">\r\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-list-view-labs/sample-po-list-view-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-list-view-hiring-processes\" title=\"PO List View - Hiring Processes\">\r\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.html\"> </file>\r\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.component.ts\"> </file>\r\n *  <file name=\"sample-po-list-view-hiring-processes/sample-po-list-view-hiring-processes.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-list-view',\r\n  templateUrl: './po-list-view.component.html',\r\n  animations: [\r\n    trigger('showHideDetail', [\r\n      state('*', style({ 'overflow-y': 'visible' })),\r\n      state('void', style({ 'overflow-y': 'hidden' })),\r\n      transition('* => void', [style({ height: '*', 'overflow-y': 'hidden' }), animate(100, style({ height: 0 }))]),\r\n      transition('void => *', [style({ height: '0' }), animate(100, style({ height: '*' }))])\r\n    ])\r\n  ]\r\n})\r\nexport class PoListViewComponent extends PoListViewBaseComponent implements AfterContentInit, DoCheck {\r\n  @ContentChild(PoListViewContentTemplateDirective, { static: true })\r\n  listViewContentTemplate: PoListViewContentTemplateDirective;\r\n  @ContentChild(PoListViewDetailTemplateDirective, { static: true })\r\n  listViewDetailTemplate: PoListViewDetailTemplateDirective;\r\n\r\n  @ViewChild('popup', { static: true }) poPopupComponent: PoPopupComponent;\r\n\r\n  private differ;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef, differs: IterableDiffers, languageService: PoLanguageService) {\r\n    super(languageService);\r\n    this.differ = differs.find([]).create(null);\r\n  }\r\n\r\n  get hasContentTemplate(): boolean {\r\n    return !!this.listViewContentTemplate;\r\n  }\r\n\r\n  get hasDetailTemplate(): boolean {\r\n    return !!this.listViewDetailTemplate;\r\n  }\r\n\r\n  get displayShowMoreButton(): boolean {\r\n    return this.items && this.items.length > 0 && this.showMore.observers.length > 0;\r\n  }\r\n\r\n  get showButtonsActions(): boolean {\r\n    return this.visibleActions && this.visibleActions.length > 0 && this.visibleActions.length <= 2;\r\n  }\r\n\r\n  get showPopupActions(): boolean {\r\n    return this.visibleActions && this.visibleActions.length > 2;\r\n  }\r\n\r\n  get titleHasAction() {\r\n    return this.titleAction.observers.length > 0;\r\n  }\r\n\r\n  get visibleActions() {\r\n    return this.actions && this.actions.filter(action => action.visible !== false);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.initShowDetail();\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.checkItemsChange();\r\n  }\r\n\r\n  checkTitleType(item: any) {\r\n    if (this.propertyLink && item[this.propertyLink]) {\r\n      return item[this.propertyLink].startsWith('http') ? 'externalLink' : 'internalLink';\r\n    }\r\n\r\n    return 'noLink';\r\n  }\r\n\r\n  getItemTitle(item) {\r\n    return this.hasContentTemplate && this.listViewContentTemplate.title\r\n      ? this.listViewContentTemplate.title(item)\r\n      : item[this.propertyTitle];\r\n  }\r\n\r\n  hasItems(): boolean {\r\n    return this.items && this.items.length > 0;\r\n  }\r\n\r\n  returnBooleanValue(listViewAction: PoListViewAction, item: any) {\r\n    return isTypeof(listViewAction.disabled, 'function')\r\n      ? (<any>listViewAction).disabled(item)\r\n      : listViewAction.disabled;\r\n  }\r\n\r\n  trackBy(index) {\r\n    return index;\r\n  }\r\n\r\n  togglePopup(item, targetRef: HTMLElement) {\r\n    this.popupTarget = targetRef;\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.poPopupComponent.toggle(item);\r\n  }\r\n\r\n  private checkItemsChange() {\r\n    const changesItems = this.differ.diff(this.items);\r\n\r\n    if (changesItems && this.selectAll) {\r\n      this.selectAll = null;\r\n    }\r\n\r\n    if (changesItems && this.items && this.items.length && this.select && !this.hideSelectAll) {\r\n      this.showHeader = true;\r\n    }\r\n  }\r\n\r\n  private initShowDetail() {\r\n    if (this.items && this.items.length > 0 && this.hasDetailTemplate && this.listViewDetailTemplate.showDetail) {\r\n      this.items.forEach(item => (item.$showDetail = this.listViewDetailTemplate.showDetail(item)));\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoButtonModule } from '../po-button/po-button.module';\r\nimport { PoPopupModule } from '../po-popup/po-popup.module';\r\n\r\nimport { PoListViewComponent } from './po-list-view.component';\r\nimport { PoListViewContentTemplateDirective } from './po-list-view-content-template/po-list-view-content-template.directive';\r\nimport { PoListViewDetailTemplateDirective } from './po-list-view-detail-template/po-list-view-detail-template.directive';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-list-view`.\r\n *\r\n * > Para o correto funcionamento do componente `po-list-view`, deve ser importado o módulo `BrowserAnimationsModule` no\r\n * > módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, PoButtonModule, PoPopupModule],\r\n  declarations: [PoListViewComponent, PoListViewContentTemplateDirective, PoListViewDetailTemplateDirective],\r\n  exports: [PoListViewComponent, PoListViewContentTemplateDirective, PoListViewDetailTemplateDirective],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoListViewModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToInt } from '../../utils/util';\r\n\r\nconst PO_BADGE_COLORS = [\r\n  'color-01',\r\n  'color-02',\r\n  'color-03',\r\n  'color-04',\r\n  'color-05',\r\n  'color-06',\r\n  'color-07',\r\n  'color-08',\r\n  'color-09',\r\n  'color-10',\r\n  'color-11',\r\n  'color-12'\r\n];\r\nconst PO_BADGE_COLOR_DEFAULT = 'color-07';\r\n\r\n/**\r\n * @description\r\n *\r\n * @docsPrivate\r\n *\r\n * Componente utilizado no `po-menu` para exibir por exemplo a quantidade de tarefas pendentes.\r\n */\r\n@Directive()\r\nexport class PoBadgeBaseComponent {\r\n  badgeValue: string;\r\n\r\n  private _color: string;\r\n  private _value: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a cor de fundo do componente e aceita os valores:\r\n   *\r\n   * <span class=\"dot po-color-01\"></span> `color-01`\r\n   *\r\n   * <span class=\"dot po-color-02\"></span> `color-02`\r\n   *\r\n   * <span class=\"dot po-color-03\"></span> `color-03`\r\n   *\r\n   * <span class=\"dot po-color-04\"></span> `color-04`\r\n   *\r\n   * <span class=\"dot po-color-05\"></span> `color-05`\r\n   *\r\n   * <span class=\"dot po-color-06\"></span> `color-06`\r\n   *\r\n   * <span class=\"dot po-color-07\"></span> `color-07`\r\n   *\r\n   * <span class=\"dot po-color-08\"></span> `color-08`\r\n   *\r\n   * <span class=\"dot po-color-09\"></span> `color-09`\r\n   *\r\n   * <span class=\"dot po-color-10\"></span> `color-10`\r\n   *\r\n   * <span class=\"dot po-color-11\"></span> `color-11`\r\n   *\r\n   * <span class=\"dot po-color-12\"></span> `color-12`\r\n   *\r\n   * @default `color-07`\r\n   */\r\n  @Input('p-color') set color(value: string) {\r\n    this._color = PO_BADGE_COLORS.includes(value) ? value : PO_BADGE_COLOR_DEFAULT;\r\n  }\r\n\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Número exibido no componente, caso o mesmo seja maior que 99 o valor exibido será 99+.\r\n   */\r\n  @Input('p-value') set value(value: number) {\r\n    this._value = convertToInt(value);\r\n    this.setBadgeValue(this._value);\r\n  }\r\n\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  private setBadgeValue(value: number) {\r\n    const validRangeValue = (value || value === 0) && value >= 0 && value < 100;\r\n    this.badgeValue = validRangeValue ? value.toString() : value > 99 ? '99+' : undefined;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoBadgeBaseComponent } from './po-badge-base.component';\r\n\r\n/**\r\n * @docsExtends PoBadgeBaseComponent\r\n *\r\n * @docsPrivate\r\n */\r\n@Component({\r\n  selector: 'po-badge',\r\n  templateUrl: './po-badge.component.html'\r\n})\r\nexport class PoBadgeComponent extends PoBadgeBaseComponent {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoBadgeComponent } from './po-badge.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-badge.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [PoBadgeComponent],\r\n  exports: [PoBadgeComponent]\r\n})\r\nexport class PoBadgeModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { PoMenuItemFiltered } from '../po-menu-item/po-menu-item-filtered.interface';\r\nimport { PoMenuFilter } from '../po-menu-filter/po-menu-filter.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço que implementa a interface `PoMenuFilter`, utilizado para fazer requisições ao serviço informado pelo usuário,\r\n * caso for uma URL, no componente `po-menu`.\r\n */\r\n@Injectable()\r\nexport class PoMenuService implements PoMenuFilter {\r\n  private _url: string;\r\n\r\n  get url(): string {\r\n    return this._url;\r\n  }\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  configProperties(url: string) {\r\n    this._url = url;\r\n  }\r\n\r\n  getFilteredData(search: string, params?: any): Observable<Array<PoMenuItemFiltered>> {\r\n    const filterParams = {\r\n      search,\r\n      ...params\r\n    };\r\n\r\n    return this.http\r\n      .get(this.url, { params: filterParams })\r\n      .pipe(map((response: { items: Array<PoMenuItemFiltered> }) => response && response.items));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { PoMenuComponent } from '../po-menu.component';\r\nimport { PoMenuItem } from '../po-menu-item.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoMenuGlobalService {\r\n  private applicationMenu = new Subject<PoMenuComponent>();\r\n  private menus = new Subject<Array<PoMenuItem>>();\r\n  private removedApplicationMenu = new Subject<string>();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  receiveApplicationMenu$ = this.applicationMenu.asObservable();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  receiveMenus$ = this.menus.asObservable();\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  receiveRemovedApplicationMenu$ = this.removedApplicationMenu.asObservable();\r\n\r\n  sendApplicationMenu(menu: PoMenuComponent) {\r\n    this.applicationMenu.next(menu);\r\n  }\r\n\r\n  sendMenus(menus: Array<PoMenuItem>) {\r\n    this.menus.next(menus);\r\n  }\r\n\r\n  sendRemovedApplicationMenu(id: string) {\r\n    this.removedApplicationMenu.next(id);\r\n  }\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport {\r\n  browserLanguage,\r\n  convertToBoolean,\r\n  convertToInt,\r\n  isExternalLink,\r\n  isTypeof,\r\n  validValue,\r\n  uuid\r\n} from '../../utils/util';\r\n\r\nimport { PoMenuFilter } from './po-menu-filter/po-menu-filter.interface';\r\nimport { PoMenuItem } from './po-menu-item.interface';\r\nimport { PoMenuService } from './services/po-menu.service';\r\nimport { PoMenuGlobalService } from './services/po-menu-global.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../services/po-language/po-language.constant';\r\n\r\nexport const poMenuLiteralsDefault = {\r\n  en: { itemNotFound: 'Item not found.', emptyLabelError: 'Attribute PoMenuItem.label can not be empty.' },\r\n  es: { itemNotFound: 'Elemento no encontrado.', emptyLabelError: 'El atributo PoMenuItem.label no puede ser vacío.' },\r\n  pt: { itemNotFound: 'Item não encontrado.', emptyLabelError: 'O atributo PoMenuItem.label não pode ser vazio.' },\r\n  ru: { itemNotFound: 'Предмет не найден.', emptyLabelError: 'Атрибут PoMenuItem.label не может быть пустым.' }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * Este é um componente de menu lateral que é utilizado para navegação nas páginas de uma aplicação.\r\n *\r\n * O componente po-menu recebe uma lista de objetos do tipo `MenuItem` com as informações dos itens de menu como\r\n * textos, links para redirecionamento, ações, até 4 níveis de menu e ícones para o primeiro nível de menu.\r\n */\r\n@Directive()\r\nexport abstract class PoMenuBaseComponent {\r\n  allowIcons: boolean;\r\n  allowCollapseMenu: boolean;\r\n\r\n  filteredItems;\r\n  filterService: PoMenuFilter;\r\n\r\n  readonly literals = {\r\n    ...poMenuLiteralsDefault[this.languageService.getLanguageDefault()],\r\n    ...poMenuLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  private _collapsed = false;\r\n  private _filter = false;\r\n  private _level;\r\n  private _logo: string;\r\n  private _maxLevel = 4;\r\n  private _menus = [];\r\n  private _params: any;\r\n  private _service: string | PoMenuFilter;\r\n  private _shortLogo: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Colapsa (retrai) o menu e caso receba o valor `false` expande o menu.\r\n   *\r\n   * > Utilize esta propriedade para iniciar o menu colapsado.\r\n   *\r\n   * > Ao utilizar os métodos [`colapse`](documentation/po-menu#colapseMethod), [`expand`](documentation/po-menu#expandMethod) e\r\n   * [`toggle`](documentation/po-menu#toggleMethod) o valor desta propriedade não é alterado.\r\n   *\r\n   * **Importante:**\r\n   *\r\n   * > O menu será colapsado/expandido apenas se todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-collapsed') set collapsed(collapsed: boolean) {\r\n    this._collapsed = convertToBoolean(collapsed);\r\n\r\n    this.validateCollapseClass();\r\n  }\r\n\r\n  get collapsed() {\r\n    return this._collapsed;\r\n  }\r\n\r\n  /** Lista dos itens do menu. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */\r\n  @Input('p-menus') set menus(menus: Array<PoMenuItem>) {\r\n    this._menus = Array.isArray(menus) ? menus : [];\r\n\r\n    this.menuGlobalService.sendMenus(menus);\r\n\r\n    setTimeout(() => {\r\n      const urlRouter = this.checkingRouterChildrenFragments();\r\n      this.checkActiveMenuByUrl(urlRouter);\r\n    });\r\n  }\r\n\r\n  get menus() {\r\n    return this._menus;\r\n  }\r\n\r\n  get maxLevel() {\r\n    return this._maxLevel;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita um campo para pesquisa no menu.\r\n   * A pesquisa é realizada em todos os níveis do menu e busca apenas pelos itens que contém uma ação e/ou link definidos,\r\n   * ou também, pode ser realizada através de um serviço definido na propriedade `p-service`.\r\n   *\r\n   * > O campo de pesquisa é desabilitado se o menu estiver colapsado.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-filter') set filter(filter: boolean) {\r\n    this._filter = <any>filter === '' ? true : convertToBoolean(filter);\r\n    this.filteredItems = [...this._menus];\r\n  }\r\n\r\n  get filter() {\r\n    return this._filter;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nesta propriedade deve ser informada a URL do serviço em que será utilizado para realizar o filtro de itens do\r\n   * menu quando realizar uma busca. Caso haja a necessidade de customização, pode ser informado um\r\n   * serviço implementando a interface `PoMenuFilter`.\r\n   *\r\n   * Caso utilizada uma URL, o serviço deve retornar os dados conforme o\r\n   * [Guia de implementação de APIs](https://po-ui.io/guides/api) do PO UI.\r\n   *\r\n   * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando o valor digitado\r\n   * no parâmetro `search`, veja exemplo:\r\n   *\r\n   * > O filtro no serviço será realizado caso contenha no mínimo três caracteres no campo de busca, por exemplo `tot`.\r\n   *\r\n   * ```\r\n   * <po-menu p-service=\"/api/v1/fnd/menu\">\r\n   * </po-menu>\r\n   *\r\n   * Requisição: GET /api/v1/fnd/menu?search=contas\r\n   * ```\r\n   *\r\n   * > É necessário que propriedade `p-filter` esteja habilitada.\r\n   */\r\n  @Input('p-service') set service(value: string | PoMenuFilter) {\r\n    this._service = value || undefined;\r\n\r\n    this.configService(this.service);\r\n  }\r\n\r\n  get service() {\r\n    return this._service;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Deve ser informado um objeto que deseja-se utilizar na requisição de filtro dos itens de menu.\r\n   *\r\n   * Caso utilizado um serviço customizado, implementando a interface `PoMenuFilter`, o valor desta propriedade\r\n   * será passado como parâmetro, na função `getFilteredData`.\r\n   *\r\n   * Quando utilizada uma URL de serviço, será realizado um *GET* na URL informada, passando os valores informados\r\n   * nesta propriedade em conjunto com o parâmetro `search`, veja exemplo:\r\n   *\r\n   * ```\r\n   * <po-menu p-service=\"/api/v1/fnd/menu\" [p-params]=\"{ company: 1, user: 297767512 }\">\r\n   * </po-menu>\r\n   *\r\n   * Requisição: GET /api/v1/fnd/menu?search=contas&company=1&user=297767512\r\n   * ```\r\n   */\r\n  @Input('p-params') set params(value: any) {\r\n    this._params = value && isTypeof(value, 'object') ? value : undefined;\r\n  }\r\n\r\n  get params() {\r\n    return this._params;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca, que será exibida quando o componente estiver expandido, localizada na parte superior.\r\n   *\r\n   * > **Importante:**\r\n   * - Caso esta propriedade estiver indefinida ou inválida o espaço para logomarca será removido.\r\n   * - Como boa prática, indica-se utilizar imagens com até `24px` de altura e `224px` de largura,\r\n   * caso ultrapassar esses valores a imagem será readequada no espaço disponível.\r\n   */\r\n  @Input('p-logo') set logo(value: any) {\r\n    this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca, que será exibida quando o componente estiver colapsado, localizada na parte superior.\r\n   *\r\n   * > **Importante:**\r\n   * - Caso esta propriedade estiver indefinida ou inválida passa a assumir o valor informado na propriedade `p-logo` e na ausência desta o\r\n   * espaço para logomarca será removido.\r\n   * - Como boa prática, indica-se utilizar imagens com até `48px` de altura e `48px` de largura,\r\n   * caso ultrapassar esses valores a imagem será readequada no espaço disponível.\r\n   * - Caso não informar um valor, esta propriedade passa a assumir o valor informado na propriedade `p-logo`.\r\n   */\r\n  @Input('p-short-logo') set shortLogo(value: any) {\r\n    this._shortLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;\r\n  }\r\n\r\n  get shortLogo() {\r\n    return this._shortLogo;\r\n  }\r\n\r\n  constructor(\r\n    public menuGlobalService: PoMenuGlobalService,\r\n    public menuService: PoMenuService,\r\n    public languageService: PoLanguageService\r\n  ) {}\r\n\r\n  protected setMenuExtraProperties() {\r\n    this.allowIcons = !!this.menus.length;\r\n    this.allowCollapseMenu = !!this.menus.length;\r\n\r\n    this.menus.forEach(menuItem => {\r\n      this._level = 1;\r\n      this.allowIcons = this.allowIcons ? validValue(menuItem.icon) : false;\r\n      this.allowCollapseMenu = this.allowCollapseMenu && this.allowIcons ? validValue(menuItem.shortLabel) : false;\r\n      this.removeBadgeAlert(menuItem);\r\n      this.setMenuItemProperties(menuItem);\r\n\r\n      if (menuItem.subItems) {\r\n        this._level++;\r\n        this.processSubItems(menuItem);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected setMenuItemProperties(menuItem: PoMenuItem): void {\r\n    menuItem['id'] = menuItem['id'] || uuid();\r\n    menuItem['level'] = this._level;\r\n    menuItem['type'] = this.setMenuType(menuItem);\r\n  }\r\n\r\n  protected validateMenus(menus): void {\r\n    menus.forEach(menu => this.validateMenu(menu));\r\n  }\r\n\r\n  protected setMenuType(menuItem: PoMenuItem): string {\r\n    if (menuItem.subItems && menuItem.subItems.length > 0 && this._level < this.maxLevel) {\r\n      return 'subItems';\r\n    }\r\n    if (!menuItem.link) {\r\n      return 'noLink';\r\n    }\r\n    if (isExternalLink(menuItem.link)) {\r\n      return 'externalLink';\r\n    }\r\n    return 'internalLink';\r\n  }\r\n\r\n  private configService(service: string | PoMenuFilter) {\r\n    if (typeof service === 'string' && service.trim()) {\r\n      // service url\r\n      this.menuService.configProperties(service);\r\n      this.filterService = this.menuService;\r\n    } else if (typeof service === 'object' && service.getFilteredData) {\r\n      // custom service\r\n      this.filterService = service;\r\n    } else {\r\n      this.filterService = undefined;\r\n    }\r\n  }\r\n\r\n  private processSubItems(menu) {\r\n    menu.subItems.forEach((menuItem, index, menuItems) => {\r\n      const previousItem = menuItems[index - 1];\r\n      if (previousItem && previousItem.subItems) {\r\n        this._level = previousItem['level'];\r\n      }\r\n\r\n      if (this._level <= this.maxLevel) {\r\n        this.setMenuItemProperties(menuItem);\r\n\r\n        if (menuItem.subItems) {\r\n          this._level++;\r\n          this.processSubItems(menuItem);\r\n        }\r\n      }\r\n\r\n      if (!menu['badgeAlert']) {\r\n        menu = this.setMenuBadgeAlert(menu, menuItem);\r\n      }\r\n    });\r\n\r\n    menu.subItems = Object.assign([], menu.subItems);\r\n  }\r\n\r\n  private removeBadgeAlert(menuItem: PoMenuItem): void {\r\n    if (menuItem['badgeAlert']) {\r\n      delete menuItem['badgeAlert'];\r\n    }\r\n\r\n    if (menuItem.subItems) {\r\n      menuItem.subItems.forEach(subItem => this.removeBadgeAlert(subItem));\r\n    }\r\n  }\r\n\r\n  private setMenuBadgeAlert(parent: PoMenuItem, child: PoMenuItem): PoMenuItem {\r\n    const childHasSubItems = child.subItems && child.subItems.length;\r\n    const childHasBadgeAlert = child['badgeAlert'];\r\n    const childHasBadge = child.badge && convertToInt(child.badge.value) >= 0;\r\n\r\n    parent['badgeAlert'] = childHasBadgeAlert || (childHasBadge && !childHasSubItems);\r\n\r\n    return parent;\r\n  }\r\n\r\n  private validateMenu(menuItem: PoMenuItem): void {\r\n    if (!menuItem.label || menuItem.label.trim() === '') {\r\n      throw new Error(this.literals.emptyLabelError);\r\n    } else if (menuItem.subItems) {\r\n      menuItem.subItems.forEach(subItem => {\r\n        this.validateMenu(subItem);\r\n      });\r\n    }\r\n  }\r\n\r\n  protected abstract checkActiveMenuByUrl(urlRouter);\r\n  protected abstract checkingRouterChildrenFragments();\r\n  protected abstract validateCollapseClass();\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoMenuComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite adicionar um conteúdo personalizado entre a logo e o campo de filtro do cabeçalho do\r\n * [`po-menu`](/documentation/po-menu).\r\n *\r\n * Para personalizar o conteúdo do cabeçalho deve-se utilizar a diretiva `p-menu-header-template` dentro da *tag* do\r\n * [`po-menu`](/documentation/po-menu). Podendo ser utilizada de duas formas:\r\n *\r\n * Com `ng-template`\r\n * ```\r\n * ...\r\n * <po-menu [p-menus]=\"menus\">\r\n *   <ng-template p-menu-header-template>\r\n *     ...\r\n *   </ng-template>\r\n * </po-menu>\r\n * ...\r\n * ```\r\n *\r\n * ou com *syntax sugar*\r\n * ```\r\n * ...\r\n * <po-menu [p-menus]=\"menus\">\r\n *   <div *p-menu-header-template>\r\n *     ...\r\n *   </div>\r\n * </po-menu>\r\n * ...\r\n * ```\r\n *\r\n * > Quando o menu estiver colapsado ou tela for _mobile_ o conteúdo personalizado não será exibido.\r\n */\r\n@Directive({\r\n  selector: '[p-menu-header-template]'\r\n})\r\nexport class PoMenuHeaderTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço que implementa a comunicação entre os items do po-menu.\r\n */\r\n@Injectable()\r\nexport class PoMenuItemsService {\r\n  private subjectParent = new Subject<any>();\r\n  private subjectChild = new Subject<any>();\r\n\r\n  // Envia informações do click do po-menu-item para o po-menu\r\n  sendToParentMenuClicked(menu: object) {\r\n    this.subjectChild.next(menu);\r\n  }\r\n\r\n  // Recebe do po-menu-item sua informação de click.\r\n  receiveFromChildMenuClicked() {\r\n    return this.subjectChild.asObservable();\r\n  }\r\n\r\n  // Envia para os po-menu-item a resposta do processamento de click de um po-menu-item.\r\n  sendToChildMenuClicked(menu: object) {\r\n    this.subjectParent.next(menu);\r\n  }\r\n\r\n  // Recebe do po-menu as informações processadas do click de um po-menu-item.\r\n  receiveFromParentMenuClicked(): Observable<any> {\r\n    return this.subjectParent.asObservable();\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  DoCheck,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\r\n\r\nimport { map } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { getFormattedLink, isMobile, openExternalLink, uuid } from '../../utils/util';\r\n\r\nimport { PoMenuBaseComponent } from './po-menu-base.component';\r\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\r\nimport { PoMenuItem } from './po-menu-item.interface';\r\nimport { PoMenuItemFiltered } from './po-menu-item/po-menu-item-filtered.interface';\r\nimport { PoMenuItemsService } from './services/po-menu-items.service';\r\nimport { PoMenuGlobalService } from './services/po-menu-global.service';\r\nimport { PoMenuService } from './services/po-menu.service';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\nconst poMenuDebounceTime = 400;\r\nconst poMenuMinLength = 3;\r\nconst poMenuRootLevel = 1;\r\n\r\n/**\r\n * @docsExtends PoMenuBaseComponent\r\n *\r\n * @description\r\n *\r\n * Aparece completo em telas com largura maior que 1200px, caso contrário o menu é escondido e chamado por meio de um botão.\r\n *\r\n * O menu também pode ser colapsado. Essa opção é habilitada quando todos os itens de primeiro nível possuírem ícones e textos curtos.\r\n * Se colapsado, somente os itens de primeiro nível serão exibidos e, caso o item selecionado possua sub-níveis,\r\n * então o menu alternará novamente para o estado aberto.\r\n *\r\n * Existe a possibilidade de customizar a logomarca, que é exibida na parte superior do componente.\r\n *\r\n * E para adicionar um conteúdo personalizado entre a logomarca e o campo de filtro,\r\n * basta adicionar este conteúdo com a diretiva [**p-menu-header-template**](/documentation/po-menu-header-template).\r\n *\r\n * Caso utilizar o filtro de menus, é possível realizar buscas em serviço, apenas informando a URL do serviço ou a instância de\r\n * um serviço customizado implementando a interface `PoMenuFilter`.\r\n *\r\n * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de\r\n *  sua aplicação:\r\n *\r\n * ````\r\n * import { RouterModule, Routes } from '@angular/router';\r\n *\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     RouterModule,\r\n *     Routes,\r\n *     ...\r\n *     PoModule,\r\n *     ...\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n *\r\n * Além disso é necessário criar um módulo configurando as rotas da aplicação.\r\n *\r\n * ```\r\n * import { NgModule } from '@angular/core';\r\n *\r\n * import { RouterModule, Routes } from '@angular/router';\r\n *\r\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\r\n *\r\n * const routes: Routes = [\r\n *   {path: 'hello-world', component: HelloWorldComponent}\r\n * ];\r\n *\r\n * @NgModule({\r\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n *   exports: [RouterModule]\r\n * })\r\n * export class AppRoutingModule {}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-menu-basic\" title=\"PO Menu Basic\">\r\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-basic/sample-po-menu-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-menu-labs\" title=\"PO Menu Labs\">\r\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-labs/sample-po-menu-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-menu-human-resources\" title=\"PO Menu - Human Resources\">\r\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.component.ts\"> </file>\r\n *   <file name=\"sample-po-menu-human-resources/sample-po-menu-human-resources.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-menu',\r\n  templateUrl: './po-menu.component.html',\r\n  providers: [PoMenuItemsService, PoMenuService]\r\n})\r\nexport class PoMenuComponent extends PoMenuBaseComponent implements AfterViewInit, OnDestroy, OnInit, DoCheck {\r\n  @ContentChild(PoMenuHeaderTemplateDirective, { static: true }) menuHeaderTemplate: PoMenuHeaderTemplateDirective;\r\n\r\n  activeMenuItem: PoMenuItem;\r\n  collapsedMobile: boolean;\r\n  filterLoading = false;\r\n  groupedMenuItem: PoMenuItem;\r\n  id = uuid();\r\n  linkActive: string;\r\n  mobileOpened: boolean = false;\r\n  noData: boolean = false;\r\n  timeoutFilter: any;\r\n\r\n  private filteringItems: boolean = false;\r\n  private menuInitialized: boolean = false;\r\n  private menuPrevious = null;\r\n  private resizeListener: () => void;\r\n\r\n  private itemSubscription: Subscription;\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(\r\n    public changeDetector: ChangeDetectorRef,\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    private router: Router,\r\n    private menuItemsService: PoMenuItemsService,\r\n    menuGlobalService: PoMenuGlobalService,\r\n    menuService: PoMenuService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(menuGlobalService, menuService, languageService);\r\n  }\r\n\r\n  private get isActiveItemMenuSubMenu() {\r\n    return this.activeMenuItem['level'] > this.groupedMenuItem['level'];\r\n  }\r\n\r\n  get enableCollapse() {\r\n    return this.isCollapsed && !this.collapsedMobile;\r\n  }\r\n\r\n  get enableCollapseButton() {\r\n    return this.allowCollapseMenu && !this.collapsed && !this.mobileOpened;\r\n  }\r\n\r\n  get hasFooter() {\r\n    return this.enableCollapseButton || this.enableCollapse;\r\n  }\r\n\r\n  get isCollapsed() {\r\n    return this.allowCollapseMenu && this.collapsed;\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (this.filteringItems && this.filter) {\r\n      return;\r\n    }\r\n\r\n    const menuCurrent = this.stringify(this.menus);\r\n\r\n    if (this.menuPrevious !== menuCurrent || !this.menuInitialized) {\r\n      this.updateMenu();\r\n      this.validateCollapseClass();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.itemSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n\r\n    if (this.resizeListener) {\r\n      this.resizeListener();\r\n    }\r\n\r\n    this.menuGlobalService.sendRemovedApplicationMenu(this.id);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeToMenuItem();\r\n    this.subscribeToRoute();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.menuGlobalService.sendApplicationMenu(this);\r\n  }\r\n\r\n  activateMenuByUrl(urlPath: string, menus: Array<PoMenuItem>) {\r\n    if (menus) {\r\n      const urlPathWithoutLastFragment = urlPath.substr(0, urlPath.lastIndexOf('/'));\r\n      return menus.some(menu => {\r\n        const formattedMenuLink = getFormattedLink(menu.link);\r\n        const menuLinkPath = `${urlPathWithoutLastFragment}${formattedMenuLink.substr(\r\n          formattedMenuLink.lastIndexOf('/')\r\n        )}`;\r\n\r\n        if (menuLinkPath === urlPath && menuLinkPath === formattedMenuLink) {\r\n          this.linkActive = formattedMenuLink;\r\n          this.activateMenuItem(menu);\r\n          return true;\r\n        } else {\r\n          return this.activateMenuByUrl(urlPath, menu.subItems);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  checkActiveMenuByUrl(urlPath: string): void {\r\n    if (!this.linkActive || this.linkActive !== urlPath) {\r\n      this.activateMenuByUrl(urlPath, this.menus);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * <a id=\"colapseMethod\"></a>\r\n   *\r\n   * *Método para colapsar (retrair) o menu.\r\n   */\r\n  collapse() {\r\n    this.validateToggleMenu(true);\r\n  }\r\n\r\n  debounceFilter(filter: string) {\r\n    clearTimeout(this.timeoutFilter);\r\n\r\n    this.timeoutFilter = setTimeout(() => {\r\n      this.filterProcess(filter);\r\n    }, poMenuDebounceTime);\r\n  }\r\n\r\n  /**\r\n   * <a id=\"expandMethod\"></a>\r\n   *\r\n   * *Método para expandir (aumentar) o menu.\r\n   */\r\n  expand() {\r\n    this.validateToggleMenu(false);\r\n  }\r\n\r\n  subscribeToMenuItem() {\r\n    this.itemSubscription = this.menuItemsService.receiveFromChildMenuClicked().subscribe((menu: PoMenuItem) => {\r\n      this.clickMenuItem(menu);\r\n    });\r\n  }\r\n\r\n  subscribeToRoute() {\r\n    this.routeSubscription = this.router.events.subscribe(val => {\r\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\r\n        const urlRouter = this.checkingRouterChildrenFragments();\r\n        this.checkActiveMenuByUrl(urlRouter);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * <a id=\"toggleMethod\"></a>\r\n   * *Método que colapsa e expande o menu alternadamente.\r\n   *\r\n   * > *Os métodos apenas vão colapsar/expandir o menu se:\r\n   *  - Todos os itens de menu tiverem valor nas propriedades `icon` e `shortLabel`.\r\n   */\r\n  toggle() {\r\n    this.validateToggleMenu(!this.collapsed);\r\n  }\r\n\r\n  toggleMenuMobile(): void {\r\n    this.mobileOpened = !this.mobileOpened;\r\n    this.collapsedMobile = this.collapsed && this.mobileOpened;\r\n\r\n    this.validateCollapseClass(this.collapsedMobile);\r\n\r\n    if (isMobile()) {\r\n      return;\r\n    }\r\n\r\n    if (this.mobileOpened) {\r\n      this.createResizeListener();\r\n    }\r\n  }\r\n\r\n  protected checkingRouterChildrenFragments() {\r\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\r\n\r\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '';\r\n  }\r\n\r\n  protected validateCollapseClass(collapsedMobile: boolean = false) {\r\n    const wrapper = this.element.nativeElement.parentNode;\r\n    this.renderer[this.isCollapsed && !collapsedMobile ? 'addClass' : 'removeClass'](wrapper, 'po-collapsed-menu');\r\n  }\r\n\r\n  private activateCollapseSubMenuItem() {\r\n    this.clearGroupMenuIfFirstLevel(this.activeMenuItem);\r\n\r\n    if (!this.collapsed && this.activeMenuItem['level'] > poMenuRootLevel && this.isActiveItemMenuSubMenu) {\r\n      this.openParentMenu(this.activeMenuItem);\r\n    }\r\n  }\r\n\r\n  private activateMenuItem(menu: PoMenuItem): void {\r\n    this.activeMenuItem = menu;\r\n    this.linkActive = menu.link;\r\n    if (this.activeMenuItem['level'] > poMenuRootLevel) {\r\n      this.openParentMenu(this.activeMenuItem);\r\n    } else {\r\n      this.groupedMenuItem = null;\r\n    }\r\n    this.menuItemsService.sendToChildMenuClicked({\r\n      active: this.activeMenuItem,\r\n      grouped: this.groupedMenuItem,\r\n      activatedByRoute: true\r\n    });\r\n  }\r\n\r\n  private areSubMenus(menus: Array<PoMenuItem>) {\r\n    return menus.every(menu => menu['level'] > poMenuRootLevel);\r\n  }\r\n\r\n  private clearGroupMenuIfFirstLevel(activeMenuItem: PoMenuItem) {\r\n    if (activeMenuItem['level'] === poMenuRootLevel) {\r\n      this.groupedMenuItem = undefined;\r\n    }\r\n  }\r\n\r\n  private clickMenuItem(menu: PoMenuItem) {\r\n    if (menu.action) {\r\n      this.executeMenuAction(menu);\r\n    }\r\n\r\n    if (menu['type'] === 'externalLink') {\r\n      openExternalLink(menu.link);\r\n    } else if (menu['type'] === 'internalLink') {\r\n      this.activateMenuItem(menu);\r\n    } else if (menu['type'] === 'subItems') {\r\n      if (this.filteringItems) {\r\n        this.filteringItems = false;\r\n      }\r\n\r\n      this.groupMenuItem(menu);\r\n    }\r\n\r\n    if (menu['type'] !== 'subItems') {\r\n      this.mobileOpened = false;\r\n    }\r\n  }\r\n\r\n  private convertToMenuItemFiltered(menuItem: any = { label: '', link: '' }): PoMenuItemFiltered {\r\n    const { label, link } = menuItem;\r\n\r\n    const menuItemFiltered: PoMenuItemFiltered = { label, link };\r\n\r\n    this.setMenuItemProperties(menuItemFiltered);\r\n\r\n    return menuItemFiltered;\r\n  }\r\n\r\n  private createResizeListener() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.toggleResize();\r\n      this.resizeListener();\r\n    });\r\n  }\r\n\r\n  private executeMenuAction(menu: PoMenuItem): void {\r\n    menu.action(menu);\r\n  }\r\n\r\n  private async filterItems(filter: string) {\r\n    const trimFilter = filter && filter.trim();\r\n\r\n    if (trimFilter) {\r\n      this.filteredItems = [];\r\n      this.filteredItems = this.filterService\r\n        ? await this.filterOnService(trimFilter)\r\n        : this.filterLocalItems(trimFilter);\r\n      this.filteringItems = true;\r\n    } else {\r\n      this.filteredItems = [...this.menus];\r\n      this.filteringItems = false;\r\n    }\r\n  }\r\n\r\n  private filterLocalItems(filter: string) {\r\n    const filteredItems = [];\r\n\r\n    this.findItems(this.menus, filter.toLowerCase(), filteredItems);\r\n\r\n    return filteredItems;\r\n  }\r\n\r\n  private filterProcess(filter: string) {\r\n    this.filterLoading = true;\r\n\r\n    this.filterItems(filter)\r\n      .then(() => {\r\n        this.filterLoading = false;\r\n\r\n        this.showNoData();\r\n        this.changeDetector.detectChanges();\r\n        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\r\n      })\r\n      .catch(error => {\r\n        this.filterLoading = false;\r\n        Promise.reject(error);\r\n      });\r\n  }\r\n\r\n  private async filterOnService(search: string = '') {\r\n    if (search.length >= poMenuMinLength) {\r\n      return await this.filterService\r\n        .getFilteredData(search, this.params)\r\n        .pipe(map(menuItemsFiltered => menuItemsFiltered.map(menuItem => this.convertToMenuItemFiltered(menuItem))))\r\n        .toPromise();\r\n    } else {\r\n      return this.filteredItems;\r\n    }\r\n  }\r\n\r\n  private findItems(menus: Array<PoMenuItem>, filter: string, filteredItems: Array<any>) {\r\n    menus.forEach(menu => {\r\n      const hasAction = menu.action || menu.link;\r\n      const labelHasFilter = menu.label.toLowerCase().includes(filter);\r\n\r\n      if (labelHasFilter && hasAction) {\r\n        const newMenu = { ...menu };\r\n\r\n        if (newMenu.subItems?.length) {\r\n          delete newMenu.subItems;\r\n          newMenu['type'] = this.setMenuType(newMenu);\r\n        }\r\n\r\n        filteredItems.push(newMenu);\r\n      }\r\n\r\n      if (menu.subItems) {\r\n        this.findItems(menu.subItems, filter, filteredItems);\r\n      }\r\n    });\r\n  }\r\n\r\n  private findParent(menus: Array<PoMenuItem>, menuItem: PoMenuItem): PoMenuItem {\r\n    const getParent = function (menuItems: Array<PoMenuItem>, id) {\r\n      if (menuItems) {\r\n        for (let index = 0; index < menuItems.length; index++) {\r\n          const menu = menuItems[index];\r\n          if (menu.subItems && menu.subItems.find(subItem => subItem['id'] === id)) {\r\n            return menu;\r\n          }\r\n          const found = getParent(menu.subItems, id);\r\n          if (found) {\r\n            return found;\r\n          }\r\n        }\r\n      }\r\n    };\r\n    return getParent(menus, menuItem['id']);\r\n  }\r\n\r\n  private findRootParent(menus: Array<PoMenuItem>, menu: PoMenuItem): PoMenuItem {\r\n    const findParent = this.findParent;\r\n\r\n    const getRootParent = function (menuItems: Array<PoMenuItem>, menuItem): PoMenuItem {\r\n      let parent = findParent(menuItems, menuItem);\r\n\r\n      if (parent['level'] !== poMenuRootLevel) {\r\n        parent = getRootParent(menuItems, parent);\r\n      }\r\n      return parent;\r\n    };\r\n    return getRootParent(menus, menu);\r\n  }\r\n\r\n  private getActiveMenuParent(menus: Array<PoMenuItem>, activeMenuItem: PoMenuItem, groupedMenuItem: PoMenuItem) {\r\n    if (this.areSubMenus([groupedMenuItem, activeMenuItem])) {\r\n      return this.findRootParent(menus, activeMenuItem);\r\n    }\r\n  }\r\n\r\n  private groupMenuItem(menu: PoMenuItem): void {\r\n    if (this.collapsed) {\r\n      this.toggleMenuCollapse();\r\n    }\r\n\r\n    menu['isOpened'] = !menu['isOpened'];\r\n    this.groupedMenuItem = menu;\r\n\r\n    if (\r\n      this.activeMenuItem &&\r\n      menu['isOpened'] &&\r\n      this.isActiveItemMenuSubMenu &&\r\n      this.isRootMenuEqualGroupedMenu(this.menus, this.activeMenuItem, menu)\r\n    ) {\r\n      this.activateMenuItem(this.activeMenuItem);\r\n    }\r\n\r\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, grouped: this.groupedMenuItem });\r\n  }\r\n\r\n  private isRootMenuEqualGroupedMenu(\r\n    menus: Array<PoMenuItem>,\r\n    activeMenuItem: PoMenuItem,\r\n    groupedMenuItem: PoMenuItem\r\n  ) {\r\n    const activeMenuRootParent = this.findRootParent(menus, activeMenuItem);\r\n    return activeMenuRootParent['id'] === groupedMenuItem['id'];\r\n  }\r\n\r\n  private openParentMenu(childMenu: PoMenuItem): void {\r\n    const parent = this.findParent(this.menus, childMenu);\r\n    parent['isOpened'] = true;\r\n    this.groupedMenuItem = parent;\r\n  }\r\n\r\n  private showNoData() {\r\n    this.noData = this.filteredItems.length === 0;\r\n  }\r\n\r\n  private stringify(menus: Array<PoMenuItem>): string {\r\n    // não faz o stringify da propriedade icon, pois pode conter objeto complexo e disparar um erro.\r\n    return JSON.stringify(this.menus, (key, value) => {\r\n      if (key !== 'icon') {\r\n        return value;\r\n      }\r\n    });\r\n  }\r\n\r\n  private toggleGroupedMenuItem() {\r\n    this.groupedMenuItem['isOpened'] = !this.collapsed && this.allowCollapseMenu;\r\n  }\r\n\r\n  private toggleMenuCollapse(collapsed: boolean = false) {\r\n    this.collapsed = collapsed;\r\n\r\n    if (this.groupedMenuItem && this.activeMenuItem) {\r\n      this.groupedMenuItem =\r\n        this.getActiveMenuParent(this.menus, this.activeMenuItem, this.groupedMenuItem) || this.groupedMenuItem;\r\n      this.toggleGroupedMenuItem();\r\n    }\r\n\r\n    if (this.activeMenuItem) {\r\n      this.activateCollapseSubMenuItem();\r\n      this.menuItemsService.sendToChildMenuClicked({\r\n        active: this.activeMenuItem,\r\n        grouped: this.groupedMenuItem,\r\n        activatedByRoute: true\r\n      });\r\n    }\r\n\r\n    this.updateMenu();\r\n  }\r\n\r\n  private toggleResize() {\r\n    if (this.mobileOpened) {\r\n      this.mobileOpened = false;\r\n      this.collapsedMobile = false;\r\n      this.validateCollapseClass(this.collapsedMobile);\r\n    }\r\n  }\r\n\r\n  private validateToggleMenu(collapsed: boolean) {\r\n    if (!this.allowCollapseMenu) {\r\n      return;\r\n    }\r\n\r\n    this.toggleMenuCollapse(collapsed);\r\n  }\r\n\r\n  private updateMenu() {\r\n    this.menuInitialized = true;\r\n    this.setMenuExtraProperties();\r\n    this.filteredItems = [...this.menus];\r\n    this.menuPrevious = this.stringify(this.menus);\r\n    this.validateMenus(this.menus);\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { PoMenuFilterLiterals } from './po-menu-filter-literals.interface';\r\n\r\nexport const poMenuFilterLiteralsDefault = {\r\n  en: <PoMenuFilterLiterals>{ search: 'Search' },\r\n  es: <PoMenuFilterLiterals>{ search: 'Buscar' },\r\n  pt: <PoMenuFilterLiterals>{ search: 'Pesquisar' },\r\n  ru: <PoMenuFilterLiterals>{ search: 'Поиск' }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que apresenta o campo de pesquisa no po-menu.\r\n */\r\n@Component({\r\n  selector: 'po-menu-filter',\r\n  templateUrl: './po-menu-filter.component.html'\r\n})\r\nexport class PoMenuFilterComponent {\r\n  @Input('p-loading') loading: boolean;\r\n\r\n  // utilizado para repassar ao po-clean\r\n  @ViewChild('inputFilter', { read: ElementRef, static: true }) inputFilterElement: ElementRef;\r\n\r\n  @Output('p-filter') filter = new EventEmitter();\r\n\r\n  public literals = {\r\n    ...poMenuFilterLiteralsDefault[this.languageService.getLanguageDefault()],\r\n    ...poMenuFilterLiteralsDefault[this.languageService.getShortLanguage()]\r\n  };\r\n\r\n  constructor(public languageService: PoLanguageService) {}\r\n  filterItems(search: string) {\r\n    this.filter.emit(search);\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { convertToInt, convertToBoolean } from '../../../utils/util';\r\n\r\nimport { PoMenuItem } from '../po-menu-item.interface';\r\nimport { PoMenuItemsService } from '../services/po-menu-items.service';\r\n\r\n// valor para que caibam 3 linhas de `label`\r\nconst poMenuItemSubItemSize = 98;\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que implementa cada item do po-menu.\r\n */\r\n@Component({\r\n  selector: 'po-menu-item',\r\n  templateUrl: './po-menu-item.component.html'\r\n})\r\nexport class PoMenuItemComponent implements OnDestroy, OnInit {\r\n  // Ação que será chamada ao clicar no item.\r\n  @Input('p-action') action: Function;\r\n\r\n  // Indica se contém algum item filho com o badge.\r\n  @Input('p-badge-alert') badgeAlert: boolean;\r\n\r\n  // Cor do badge.\r\n  @Input('p-badge-color') badgeColor: string;\r\n\r\n  // Indica se o menu está colapsado\r\n  @Input('p-collapsed-menu') collapsedMenu: boolean;\r\n\r\n  // Ícone de menu\r\n  @Input('p-icon') icon: string | TemplateRef<void>;\r\n\r\n  // Identificador do item.\r\n  @Input('p-id') id: string;\r\n\r\n  // Indica se o item está aberto (menu agrupado)\r\n  @Input('p-is-opened') isOpened: boolean;\r\n\r\n  // Texto que aparecerá representando o item.\r\n  @Input('p-label') label: string;\r\n\r\n  // Indica qual em nível do po-menu encontra-se.\r\n  @Input('p-level') level: number;\r\n\r\n  // Link do item.\r\n  @Input('p-link') link?: string;\r\n\r\n  // Texto que aparecerá representando o item.\r\n  @Input('p-short-label') shortLabel: string;\r\n\r\n  // Indica o tipo de item, como 'internalLink' ou 'subItems'.\r\n  @Input('p-type') type: string;\r\n\r\n  @ViewChild('menuSubItems') menuSubItems: ElementRef;\r\n\r\n  isSelectedSubItem;\r\n  maxHeight: number = 0;\r\n\r\n  private itemSubscription: Subscription;\r\n  private _badgeValue: number;\r\n  private _isSelected: boolean = false;\r\n  private _isSubItem: boolean = false;\r\n  private _subItems: Array<PoMenuItem>;\r\n\r\n  // Valor do badge.\r\n  @Input('p-badge-value') set badgeValue(badgeValue: number) {\r\n    this._badgeValue = convertToInt(badgeValue);\r\n  }\r\n\r\n  get badgeValue() {\r\n    return this._badgeValue;\r\n  }\r\n\r\n  // Indica se o item está selecionado.\r\n  @Input('p-is-selected') set isSelected(value: boolean) {\r\n    this._isSelected = convertToBoolean(value);\r\n\r\n    this.isSelectedSubItem = this.isSelected && this.isSubItem;\r\n  }\r\n  get isSelected() {\r\n    return this._isSelected;\r\n  }\r\n\r\n  // Indica se o item é um sub item\r\n  @Input('p-is-sub-item') set isSubItem(value: boolean) {\r\n    this._isSubItem = convertToBoolean(value);\r\n  }\r\n\r\n  get isSubItem() {\r\n    return this._isSubItem;\r\n  }\r\n\r\n  // Lista de sub-items.\r\n  @Input('p-sub-items') set subItems(subitems: Array<PoMenuItem>) {\r\n    this._subItems = subitems;\r\n    if (this.isOpened) {\r\n      this.calcMenuSubItemsMaxHeight();\r\n    }\r\n  }\r\n\r\n  get subItems() {\r\n    return this._subItems;\r\n  }\r\n\r\n  get canShowBadge() {\r\n    return this.type !== 'subItems' && (this.badgeValue || this.badgeValue === 0) && this.badgeValue >= 0;\r\n  }\r\n\r\n  constructor(private menuItemsService: PoMenuItemsService) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.itemSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // subscribe to menu component messages\r\n    this.itemSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\r\n      this.processMenuItem(menu);\r\n    });\r\n  }\r\n\r\n  clickMenuItem(event): void {\r\n    if (!(event.ctrlKey || event.metaKey)) {\r\n      event.preventDefault();\r\n\r\n      // Emmit to parent\r\n      this.menuItemsService.sendToParentMenuClicked({\r\n        link: this.link,\r\n        action: this.action,\r\n        id: this.id,\r\n        icon: this.icon,\r\n        label: this.label,\r\n        level: this.level,\r\n        subItems: this.subItems,\r\n        isSelected: this.isSelected,\r\n        isOpened: this.isOpened,\r\n        shortLabel: this.shortLabel,\r\n        type: this.type\r\n      });\r\n    }\r\n  }\r\n\r\n  private accordionAnimation(\r\n    menuActive: PoMenuItem,\r\n    menuOpened: PoMenuItem,\r\n    hasSubItemOpened: boolean,\r\n    activatedByRoute: boolean\r\n  ) {\r\n    if (this.id === menuOpened['id']) {\r\n      this.maxHeight = this.subItems.length * poMenuItemSubItemSize;\r\n    }\r\n\r\n    if (hasSubItemOpened) {\r\n      this.maxHeight = menuOpened['isOpened']\r\n        ? this.maxHeight + menuOpened.subItems.length * poMenuItemSubItemSize\r\n        : this.maxHeight - menuOpened.subItems.length * poMenuItemSubItemSize;\r\n\r\n      if (activatedByRoute) {\r\n        this.maxHeight = this.getMinimumHeight(0, this, menuActive);\r\n      }\r\n    }\r\n  }\r\n\r\n  private activateMenu(menu: any): void {\r\n    this.isSelected = menu && this.id === menu.id;\r\n  }\r\n\r\n  private calcMenuSubItemsMaxHeight() {\r\n    setTimeout(() => {\r\n      const subItems = Array.from(this.menuSubItems.nativeElement.querySelectorAll('.po-menu-item'));\r\n      subItems.forEach((menuItem: any) => (this.maxHeight += menuItem.offsetHeight));\r\n    });\r\n  }\r\n\r\n  private getMinimumHeight(minimumHeight: number, menuItem: PoMenuItem, menuActive: PoMenuItem) {\r\n    minimumHeight += poMenuItemSubItemSize;\r\n\r\n    if (menuItem.subItems && this.hasSubItem(menuItem.subItems, menuActive['id'])) {\r\n      for (let index = 0; index < menuItem.subItems.length; index++) {\r\n        minimumHeight = this.getMinimumHeight(minimumHeight, menuItem.subItems[index], menuActive);\r\n      }\r\n    }\r\n\r\n    return minimumHeight;\r\n  }\r\n\r\n  private groupedMenu(menuActive: PoMenuItem, menuOpened: PoMenuItem, activatedByRoute: boolean = false): void {\r\n    const hasSubItemOpened =\r\n      menuOpened && this.id !== menuOpened['id'] ? this.hasSubItem(this.subItems, menuOpened['id']) : false;\r\n\r\n    this.isOpened = this.isMenuOpened(menuOpened, hasSubItemOpened);\r\n\r\n    this.isSelected = menuActive && !this.isOpened ? this.hasSubItem(this.subItems, menuActive['id']) : false;\r\n\r\n    if (!this.isOpened) {\r\n      this.maxHeight = 0;\r\n      return;\r\n    }\r\n    this.accordionAnimation(menuActive, menuOpened, hasSubItemOpened, activatedByRoute);\r\n  }\r\n\r\n  private hasSubItem(subItems: Array<PoMenuItem>, id: string): boolean {\r\n    if (subItems) {\r\n      return subItems.some(item => (item['id'] === id ? true : this.hasSubItem(item.subItems, id)));\r\n    }\r\n  }\r\n\r\n  private isMenuOpened(menuOpened: PoMenuItem, hasSubItemOpened: boolean): boolean {\r\n    if (menuOpened) {\r\n      return this.id === menuOpened['id'] ? menuOpened['isOpened'] : hasSubItemOpened;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private processMenuItem(menu) {\r\n    if (this.type === 'internalLink') {\r\n      this.activateMenu(menu.active);\r\n      return;\r\n    }\r\n\r\n    if (this.type === 'subItems') {\r\n      this.groupedMenu(menu.active, menu.grouped, menu.activatedByRoute);\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoBadgeModule } from '../po-badge/po-badge.module';\r\nimport { PoFieldModule } from '../po-field/po-field.module';\r\nimport { PoLoadingModule } from '../po-loading/po-loading.module';\r\n\r\nimport { PoMenuComponent } from './po-menu.component';\r\nimport { PoMenuFilterComponent } from './po-menu-filter/po-menu-filter.component';\r\nimport { PoMenuHeaderTemplateDirective } from './po-menu-header-template/po-menu-header-template.directive';\r\nimport { PoMenuItemComponent } from './po-menu-item/po-menu-item.component';\r\nimport { PoIconModule } from '../po-icon/po-icon.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-menu.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, PoBadgeModule, PoFieldModule, PoLoadingModule, PoIconModule],\r\n  declarations: [PoMenuComponent, PoMenuFilterComponent, PoMenuHeaderTemplateDirective, PoMenuItemComponent],\r\n  exports: [PoMenuComponent, PoMenuHeaderTemplateDirective]\r\n})\r\nexport class PoMenuModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { isExternalLink, uuid } from '../../utils/util';\r\n\r\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\r\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\r\n\r\nconst poDefaultLogo = 'https://po-ui.io/assets/po-logos/po_black.svg';\r\n\r\n/**\r\n * @description\r\n *\r\n * Este é um componente de menu lateral composto apenas por ícones e com um nível, utilizado para navegação\r\n * em páginas internas, externas da aplicação ou aciona uma ação.\r\n *\r\n * O componente `po-menu-panel` recebe uma lista de objetos do tipo `MenuPanelItem` com as informações dos\r\n * itens de menu como textos, links para redirecionamento, ações e ícones.\r\n */\r\n@Directive()\r\nexport class PoMenuPanelBaseComponent {\r\n  private _menus;\r\n  private _logo: string = poDefaultLogo;\r\n\r\n  /** Lista dos itens do `po-menu-panel`. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio. */\r\n  @Input('p-menus') set menus(menus: Array<PoMenuPanelItem>) {\r\n    this._menus = Array.isArray(menus) ? menus : [];\r\n\r\n    this.setMenuExtraProperties(this._menus);\r\n    this.validateMenus(this._menus);\r\n  }\r\n\r\n  get menus() {\r\n    return this._menus;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Caminho para a logomarca localizada na parte superior do menu.\r\n   *\r\n   * > Caso seja indefinida será aplicada a imagem default do PO UI.\r\n   */\r\n  @Input('p-logo') set logo(src: string) {\r\n    this._logo = src ?? poDefaultLogo;\r\n  }\r\n\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  private setMenuExtraProperties(menus: Array<PoMenuPanelItem>) {\r\n    menus.forEach(menuItem => this.setMenuItemProperties(<PoMenuPanelItemInternal>menuItem));\r\n  }\r\n\r\n  private setMenuItemProperties(menuItem: PoMenuPanelItemInternal) {\r\n    menuItem.id = menuItem.id || uuid();\r\n    menuItem.type = this.setMenuType(menuItem);\r\n  }\r\n\r\n  private setMenuType(menuItem: PoMenuPanelItem): string {\r\n    if (!menuItem.link) {\r\n      return 'noLink';\r\n    }\r\n\r\n    if (isExternalLink(menuItem.link)) {\r\n      return 'externalLink';\r\n    }\r\n\r\n    return 'internalLink';\r\n  }\r\n\r\n  private validateMenu(menuItem: PoMenuPanelItem) {\r\n    if (!menuItem.label) {\r\n      throw new Error('O atributo PoMenuPanelItem.label não pode ser vazio.');\r\n    }\r\n\r\n    if (!menuItem.icon) {\r\n      throw new Error('O atributo PoMenuPanelItem.icon não pode ser vazio.');\r\n    }\r\n  }\r\n\r\n  private validateMenus(menus): void {\r\n    menus.forEach(menu => this.validateMenu(menu));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Serviço que implementa a comunicação entre os items do po-menu-panel.\r\n */\r\n@Injectable()\r\nexport class PoMenuPanelItemsService {\r\n  private subjectChild = new Subject<any>();\r\n  private subjectParent = new Subject<any>();\r\n\r\n  // Recebe do po-menu-panel-item sua informação de click.\r\n  receiveFromChildMenuClicked() {\r\n    return this.subjectChild.asObservable();\r\n  }\r\n\r\n  // Recebe do po-menu-panel as informações processadas do click de um po-menu-panel-item.\r\n  receiveFromParentMenuClicked(): Observable<any> {\r\n    return this.subjectParent.asObservable();\r\n  }\r\n\r\n  // Envia informações do click do po-menu-panel-item para o po-menu\r\n  sendToParentMenuClicked(menu: object) {\r\n    this.subjectChild.next(menu);\r\n  }\r\n\r\n  // Envia para os po-menu-panel-item a resposta do processamento de click de um po-menu-panel-item.\r\n  sendToChildMenuClicked(menu: object) {\r\n    this.subjectParent.next(menu);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { callFunction, getFormattedLink, openExternalLink } from '../../utils/util';\r\n\r\nimport { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';\r\nimport { PoMenuPanelItem } from './po-menu-panel-item/po-menu-panel-item.interface';\r\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item/po-menu-panel-item-internal.interface';\r\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\r\n\r\n/**\r\n * @docsExtends PoMenuPanelBaseComponent\r\n *\r\n * @description\r\n *\r\n * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de\r\n *  sua aplicação:\r\n *\r\n * ````\r\n * import { RouterModule, Routes } from '@angular/router';\r\n *\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     RouterModule,\r\n *     Routes,\r\n *     ...\r\n *     PoModule,\r\n *     ...\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n *\r\n * Além disso é necessário criar um módulo configurando as rotas da aplicação.\r\n *\r\n * ```\r\n * import { NgModule } from '@angular/core';\r\n *\r\n * import { RouterModule, Routes } from '@angular/router';\r\n *\r\n * import { HelloWorldComponent } from './hello-world/hello-world.component';\r\n *\r\n * const routes: Routes = [\r\n *   {path: 'hello-world', component: HelloWorldComponent}\r\n * ];\r\n *\r\n * @NgModule({\r\n *   imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n *   exports: [RouterModule]\r\n * })\r\n * export class AppRoutingModule {}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-menu-panel-basic\" title=\"PO Menu Panel Basic\">\r\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-menu-panel-labs\" title=\"PO Menu Panel Labs\">\r\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-menu-panel-customer\" title=\"PO Menu Panel - Customers\">\r\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html\"> </file>\r\n *   <file name=\"sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts\"> </file>\r\n * </example>\r\n */\r\n\r\n@Component({\r\n  selector: 'po-menu-panel',\r\n  templateUrl: './po-menu-panel.component.html'\r\n})\r\nexport class PoMenuPanelComponent extends PoMenuPanelBaseComponent implements OnDestroy, OnInit {\r\n  activeMenuItem: PoMenuPanelItem;\r\n  linkActive: string;\r\n\r\n  private routeSubscription: Subscription;\r\n  private itemSubscription: Subscription;\r\n\r\n  constructor(\r\n    viewRef: ViewContainerRef,\r\n    private location: Location,\r\n    private menuItemsService: PoMenuPanelItemsService,\r\n    private router: Router\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.itemSubscription.unsubscribe();\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeToMenuItem();\r\n    this.subscribeToRoute();\r\n  }\r\n\r\n  private activateMenuByUrl(urlPath: string, menus: Array<PoMenuPanelItem>) {\r\n    if (menus) {\r\n      return menus.some(menu => {\r\n        if (getFormattedLink(menu.link) === urlPath) {\r\n          this.activateMenuItem(menu);\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private activateMenuItem(menu: PoMenuPanelItem): void {\r\n    this.activeMenuItem = menu;\r\n    this.linkActive = getFormattedLink(menu.link);\r\n    this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });\r\n  }\r\n\r\n  private checkActiveMenuByUrl(urlPath: string): void {\r\n    if (!this.linkActive || this.linkActive !== urlPath) {\r\n      this.activateMenuByUrl(urlPath, this.menus);\r\n    }\r\n  }\r\n\r\n  private clickMenuItem(menu: PoMenuPanelItemInternal) {\r\n    if (menu.action) {\r\n      menu.action(menu);\r\n    }\r\n\r\n    if (menu.type === 'externalLink') {\r\n      openExternalLink(menu.link);\r\n    } else if (menu.type === 'internalLink') {\r\n      this.activateMenuItem(menu);\r\n    }\r\n  }\r\n\r\n  private subscribeToRoute() {\r\n    this.routeSubscription = this.router.events.subscribe(rounterEvent => {\r\n      if (rounterEvent instanceof NavigationEnd) {\r\n        this.checkActiveMenuByUrl(this.location.path());\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeToMenuItem() {\r\n    this.itemSubscription = this.menuItemsService\r\n      .receiveFromChildMenuClicked()\r\n      .subscribe((menu: PoMenuPanelItemInternal) => this.clickMenuItem(menu));\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoMenuPanelItemInternal } from './po-menu-panel-item-internal.interface';\r\nimport { PoMenuPanelItemsService } from '../services/po-menu-panel-items.service';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que implementa cada item do po-menu-panel.\r\n */\r\n@Component({\r\n  selector: 'po-menu-panel-item',\r\n  templateUrl: './po-menu-panel-item.component.html'\r\n})\r\nexport class PoMenuPanelItemComponent implements OnDestroy, OnInit {\r\n  @Input('p-menu-item-internal') menuItemInternal: PoMenuPanelItemInternal;\r\n\r\n  itemsSubscription: Subscription;\r\n\r\n  constructor(private menuItemsService: PoMenuPanelItemsService) {}\r\n\r\n  ngOnDestroy() {\r\n    this.itemsSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // subscribe to menu component messages\r\n    this.subscribeMenuClickedFromParent();\r\n  }\r\n\r\n  clickMenuItem(event) {\r\n    if (!(event.ctrlKey || event.metaKey)) {\r\n      event.preventDefault();\r\n\r\n      // Emmit to parent\r\n      this.menuItemsService.sendToParentMenuClicked(this.menuItemInternal);\r\n    }\r\n  }\r\n\r\n  private activateMenu(menu: PoMenuPanelItemInternal) {\r\n    this.menuItemInternal.isSelected = this.menuItemInternal.id === menu.id;\r\n  }\r\n\r\n  private processMenuItem(menu) {\r\n    if (this.menuItemInternal.type === 'internalLink') {\r\n      this.activateMenu(menu.active);\r\n    }\r\n  }\r\n\r\n  private subscribeMenuClickedFromParent() {\r\n    this.itemsSubscription = this.menuItemsService.receiveFromParentMenuClicked().subscribe(menu => {\r\n      this.processMenuItem(menu);\r\n    });\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoFieldModule } from '../po-field/po-field.module';\r\nimport { PoMenuPanelComponent } from './po-menu-panel.component';\r\nimport { PoMenuPanelItemComponent } from './po-menu-panel-item/po-menu-panel-item.component';\r\nimport { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';\r\nimport { PoTooltipModule } from '../../directives/po-tooltip/index';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-menu-panel.\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, PoFieldModule, PoTooltipModule],\r\n  declarations: [PoMenuPanelComponent, PoMenuPanelItemComponent],\r\n  exports: [PoMenuPanelComponent],\r\n  providers: [PoMenuPanelItemsService]\r\n})\r\nexport class PoMenuPanelModule {}\r\n","import { Component, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { callFunction, isExternalLink, openExternalLink } from '../../../../utils/util';\r\n\r\n@Component({\r\n  selector: 'po-navbar-action',\r\n  templateUrl: './po-navbar-action.component.html'\r\n})\r\nexport class PoNavbarActionComponent {\r\n  @Input('p-action') action?: Function;\r\n\r\n  @Input('p-icon') icon: string | TemplateRef<void>;\r\n\r\n  @Input('p-label') label: string;\r\n\r\n  @Input('p-link') link?: string;\r\n\r\n  @Input('p-tooltip-text') tooltip?: string;\r\n\r\n  constructor(viewContainerRef: ViewContainerRef, private router: Router) {}\r\n\r\n  click() {\r\n    if (this.action) {\r\n      this.action();\r\n      return;\r\n    }\r\n\r\n    if (this.link) {\r\n      return this.openUrl(this.link);\r\n    }\r\n  }\r\n\r\n  private openUrl(url: string) {\r\n    if (isExternalLink(url)) {\r\n      return openExternalLink(url);\r\n    }\r\n\r\n    if (url) {\r\n      return this.router.navigate([url]);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoNavbarIconAction } from '../../interfaces/po-navbar-icon-action.interface';\r\n\r\n@Component({\r\n  selector: 'po-navbar-action-popup',\r\n  templateUrl: './po-navbar-action-popup.component.html'\r\n})\r\nexport class PoNavbarActionPopupComponent {\r\n  @Input('p-icon-actions') iconActions: Array<PoNavbarIconAction>;\r\n\r\n  getLastIconAction() {\r\n    if (this.iconActions && this.iconActions.length) {\r\n      return this.iconActions[this.iconActions.length - 1].icon;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoNavbarIconAction } from '../interfaces/po-navbar-icon-action.interface';\r\n\r\n@Component({\r\n  selector: 'po-navbar-actions',\r\n  templateUrl: './po-navbar-actions.component.html'\r\n})\r\nexport class PoNavbarActionsComponent {\r\n  private _iconActions: Array<PoNavbarIconAction>;\r\n\r\n  @Input('p-icon-actions') set iconActions(actions: Array<PoNavbarIconAction>) {\r\n    this._iconActions = actions.map(action => ({ ...action, separator: true, url: action.link }));\r\n  }\r\n\r\n  get iconActions() {\r\n    return this._iconActions;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoNavbarActionComponent } from './po-navbar-action/po-navbar-action.component';\r\nimport { PoNavbarActionPopupComponent } from './po-navbar-action-popup/po-navbar-action-popup.component';\r\nimport { PoNavbarActionsComponent } from './po-navbar-actions.component';\r\nimport { PoPopupModule } from '../../po-popup/po-popup.module';\r\nimport { PoTooltipModule } from '../../../directives/po-tooltip/po-tooltip.module';\r\nimport { PoIconModule } from './../../po-icon/po-icon.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PoPopupModule, PoTooltipModule, PoIconModule],\r\n  declarations: [PoNavbarActionComponent, PoNavbarActionPopupComponent, PoNavbarActionsComponent],\r\n  exports: [PoNavbarActionsComponent]\r\n})\r\nexport class PoNavbarActionsModule {}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../services/po-language/po-language.constant';\r\nimport { PoMenuComponent } from '../po-menu';\r\n\r\nimport { PoNavbarIconAction } from './interfaces/po-navbar-icon-action.interface';\r\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\r\nimport { PoNavbarLiterals } from './interfaces/po-navbar-literals.interface';\r\n\r\nexport const poNavbarLiteralsDefault = {\r\n  en: <PoNavbarLiterals>{\r\n    navbarLinks: 'Navbar links'\r\n  },\r\n  es: <PoNavbarLiterals>{\r\n    navbarLinks: 'Navbar links'\r\n  },\r\n  pt: <PoNavbarLiterals>{\r\n    navbarLinks: 'Navbar links'\r\n  },\r\n  ru: <PoNavbarLiterals>{\r\n    navbarLinks: 'Navbar связи'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-navbar` é um cabeçalho fixo que permite apresentar uma lista de links para facilitar a navegação pelas\r\n * páginas da aplicação. Também possui ícones com ações.\r\n *\r\n * Quando utilizado em uma resolução menor que `768px`, o componente utilizará o menu corrente da aplicação para\r\n * incluir seus itens.\r\n *\r\n * Ao utilizar Navbar com Menu e ambos tiverem logo, será mantido o logo do Navbar.\r\n */\r\n@Directive()\r\nexport abstract class PoNavbarBaseComponent {\r\n  /**\r\n   * @deprecated 6.x.x\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   * **Depreciado 6.x.x**\r\n   *\r\n   * Caso já possua um menu na aplicação o mesmo deve ser repassado para essa propriedade para que quando entre em modo\r\n   * responsivo os items do `po-navbar` possam ser adicionados no primeiro item do menu definido.\r\n   *\r\n   * > Ao utilizar menu e navbar com logo mantém apenas a logo do navbar.\r\n   *\r\n   * Exemplo:\r\n   *\r\n   * ```\r\n   * <po-navbar\r\n   *  [p-items]=\"items\"\r\n   *  [p-icon-actions]=\"iconActions\"\r\n   *  [p-menu]=\"userMenu\">\r\n   * </po-navbar>\r\n   * <div class=\"po-wrapper\">\r\n   *  <po-menu #userMenu\r\n   *   [p-menus]=\"[{ label: 'Item 1', link: '/' }]\">\r\n   *  </po-menu>\r\n   * </div>\r\n   * ```\r\n   */\r\n  @Input('p-menu') menu?: PoMenuComponent;\r\n\r\n  // Menu que esta sendo exibido na pagina corrente.\r\n  applicationMenu: PoMenuComponent;\r\n\r\n  private _iconActions: Array<PoNavbarIconAction> = [];\r\n  private _items: Array<PoNavbarItem> = [];\r\n  private _literals: PoNavbarLiterals;\r\n  private _logo: string;\r\n  private _menu: PoMenuComponent;\r\n  private _shadow: boolean = false;\r\n  private language: string = poLocaleDefault;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma lista de ações apresentadas em ícones no lado direito do `po-navbar`.\r\n   */\r\n  @Input('p-icon-actions') set iconActions(value: Array<PoNavbarIconAction>) {\r\n    this._iconActions = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get iconActions(): Array<PoNavbarIconAction> {\r\n    return this._iconActions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma lista de items do `po-navbar`.\r\n   */\r\n  @Input('p-items') set items(value: Array<PoNavbarItem>) {\r\n    this._items = Array.isArray(value) ? value : [];\r\n  }\r\n\r\n  get items(): Array<PoNavbarItem> {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com a literal usada na propriedade `p-literals`.\r\n   *\r\n   * Para customizar a literal, basta declarar um objeto do tipo `PoNavbarLiterals` conforme exemplo abaixo:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoNavbarLiterals = {\r\n   *    navbarLinks: 'Itens de navegação'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-navbar\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-navbar>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoNavbarLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poNavbarLiteralsDefault[poLocaleDefault],\r\n        ...poNavbarLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poNavbarLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poNavbarLiteralsDefault[this.language];\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a logo apresentada `po-navbar`.\r\n   */\r\n  @Input('p-logo') set logo(value: string) {\r\n    this._logo = value;\r\n\r\n    if (this.applicationMenu) {\r\n      this.validateMenuLogo();\r\n    }\r\n  }\r\n  get logo() {\r\n    return this._logo;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplica uma sombra na parte inferior do `po-navbar`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-shadow') set shadow(value: boolean) {\r\n    this._shadow = convertToBoolean(value);\r\n  }\r\n\r\n  get shadow(): boolean {\r\n    return this._shadow;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  protected abstract validateMenuLogo(): void;\r\n}\r\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { PoNavbarItem } from '../../interfaces/po-navbar-item.interface';\r\n\r\nimport { isExternalLink } from '../../../../utils/util';\r\n\r\n@Component({\r\n  selector: 'po-navbar-item',\r\n  templateUrl: './po-navbar-item.component.html'\r\n})\r\nexport class PoNavbarItemComponent {\r\n  @Input('p-action') action: Function;\r\n\r\n  @Input('p-clickable') clickable?: boolean;\r\n\r\n  @Input('p-label') label: string;\r\n\r\n  @Input('p-link') link?: string;\r\n\r\n  @Output('p-click') click: EventEmitter<PoNavbarItem> = new EventEmitter<PoNavbarItem>();\r\n\r\n  get type() {\r\n    return isExternalLink(this.link) ? 'externalLink' : 'internalLink';\r\n  }\r\n\r\n  itemClick(label?: string, link?: string) {\r\n    if (this.action) {\r\n      this.action({ label, link });\r\n    }\r\n\r\n    this.click.emit();\r\n  }\r\n}\r\n","import { Component, ElementRef, Input, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\r\nimport { NavigationCancel, NavigationEnd, Router } from '@angular/router';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { PoNavbarItem } from '../interfaces/po-navbar-item.interface';\r\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\r\n\r\n@Component({\r\n  selector: 'po-navbar-items',\r\n  templateUrl: './po-navbar-items.component.html'\r\n})\r\nexport class PoNavbarItemsComponent implements OnInit, OnDestroy {\r\n  @ViewChild('navbarItemsContainer', { read: ElementRef, static: true }) navbarItemsContainer: ElementRef;\r\n\r\n  @ViewChildren(PoNavbarItemComponent, { read: ElementRef }) allNavbarItems: QueryList<any>;\r\n\r\n  @Input('p-items') items: Array<PoNavbarItem>;\r\n\r\n  selectedItem: PoNavbarItem;\r\n\r\n  private routeSubscription: Subscription;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnDestroy() {\r\n    this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeToRoute();\r\n  }\r\n\r\n  private checkActiveItemByUrl(urlRouter: string) {\r\n    const urlArray = urlRouter.split('/');\r\n    let counter = urlArray.length;\r\n\r\n    while (counter >= 0) {\r\n      const url = urlArray.slice(0, counter).join('/');\r\n      this.selectedItem = this.items.find(item => item.link === url);\r\n\r\n      if (this.selectedItem) {\r\n        break;\r\n      }\r\n      counter--;\r\n    }\r\n  }\r\n\r\n  private checkRouterChildrenFragments() {\r\n    const childrenPrimary = this.router.parseUrl(this.router.url).root.children['primary'];\r\n\r\n    return childrenPrimary ? `/${childrenPrimary.segments.map(it => it.path).join('/')}` : '/';\r\n  }\r\n\r\n  private subscribeToRoute() {\r\n    this.routeSubscription = this.router.events.subscribe(val => {\r\n      if (val instanceof NavigationEnd || val instanceof NavigationCancel) {\r\n        const urlRouter = this.checkRouterChildrenFragments();\r\n        this.checkActiveItemByUrl(urlRouter);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\r\n\r\nimport { delay, filter, finalize } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { uuid } from '../../utils/util';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\nimport { PoMenuGlobalService } from '../po-menu/services/po-menu-global.service';\r\nimport { PoMenuItem } from '../po-menu/po-menu-item.interface';\r\nimport { PoMenuComponent } from '../po-menu/po-menu.component';\r\n\r\nimport { PoNavbarBaseComponent } from './po-navbar-base.component';\r\nimport { PoNavbarItem } from './interfaces/po-navbar-item.interface';\r\nimport { PoNavbarItemsComponent } from './po-navbar-items/po-navbar-items.component';\r\n\r\nconst poNavbarNavigationWidth = 88;\r\nconst poNavbarMenuMedia = 768;\r\nconst poNavbarMatchMedia = `(max-width: ${poNavbarMenuMedia}px)`;\r\nconst poNavbarTiming = '250ms ease';\r\n\r\n/**\r\n * @docsExtends PoNavbarBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-navbar',\r\n  templateUrl: './po-navbar.component.html'\r\n})\r\nexport class PoNavbarComponent extends PoNavbarBaseComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  @ViewChild(PoNavbarItemsComponent, { read: ElementRef, static: true }) navbarItemsElement: ElementRef;\r\n\r\n  @ViewChild(PoNavbarItemsComponent, { static: true }) navbarItems: PoNavbarItemsComponent;\r\n\r\n  disableRight: boolean;\r\n  showItemsNavigation: boolean = false;\r\n\r\n  protected windowResizeListener: () => void;\r\n\r\n  private _menuComponent;\r\n\r\n  private isNavbarUpdateMenu: boolean = false;\r\n  private id = uuid();\r\n  private mediaQuery: any;\r\n  private offset: number = 0;\r\n  private player: AnimationPlayer;\r\n  private menuItems: Array<PoMenuItem>;\r\n  private previousMenuComponentId;\r\n  private previousMenusItems = [];\r\n\r\n  private applicationMenuSubscription: Subscription;\r\n  private menusSubscription: Subscription;\r\n  private removedMenuSubscription: Subscription;\r\n\r\n  get navbarItemNavigationDisableLeft() {\r\n    return this.offset === 0;\r\n  }\r\n\r\n  get navbarItemNavigationDisableRight() {\r\n    return this.disableRight && this.offset !== 0;\r\n  }\r\n\r\n  @ViewChild(PoMenuComponent) set menuComponent(menu: PoMenuComponent) {\r\n    this._menuComponent = menu;\r\n\r\n    this.previousMenuComponentId = menu?.id || this.previousMenuComponentId;\r\n  }\r\n\r\n  private get isCollapsedMedia() {\r\n    return window.innerWidth < poNavbarMenuMedia;\r\n  }\r\n\r\n  constructor(\r\n    poLanguageService: PoLanguageService,\r\n    private renderer: Renderer2,\r\n    private builder: AnimationBuilder,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private menuGlobalService: PoMenuGlobalService\r\n  ) {\r\n    super(poLanguageService);\r\n    this.windowResizeListener = this.renderer.listen(window, 'resize', this.displayItemsNavigation.bind(this));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // necessário para quando o menu da aplicação carregar os itens lazy e navbar estiver colapsado,\r\n    // quando isso acontece, o navbar inclui 1 item de menu \"Navbar links\", portanto é removido quando\r\n    // os novos itens de menu é carregado, a partir disso este tratamento é necessario para incluir\r\n    // o navbar links apos a adição dos itens de menu da aplicação.\r\n    this.menusSubscription = this.menuGlobalService.receiveMenus$.subscribe(newMenus => {\r\n      const previousMenusiIsNavbarLinks =\r\n        this.previousMenusItems?.length === 1 && this.previousMenusItems[0].id === this.id;\r\n\r\n      if (this.applicationMenu && this.isCollapsedMedia && this.isNavbarUpdateMenu && previousMenusiIsNavbarLinks) {\r\n        this.isNavbarUpdateMenu = false;\r\n\r\n        this.applicationMenu.menus = [\r\n          { label: this.literals.navbarLinks, subItems: this.items, id: this.id },\r\n          ...newMenus\r\n        ];\r\n      }\r\n\r\n      this.isNavbarUpdateMenu = false;\r\n      this.previousMenusItems = newMenus;\r\n    });\r\n\r\n    this.removedMenuSubscription = this.menuGlobalService.receiveRemovedApplicationMenu$.subscribe(removedMenuId => {\r\n      // verifica se o menu removido foi o presente no navbar, caso sim, ele mantem o applictionMenu.\r\n      // é preciso para tratar a sequencia do ngDestroy, quando o menu do navbar era removido do DOM\r\n      // disparava esse evento, sendo necessario tratar, para não tornar indefinido o applicationMenu\r\n      this.applicationMenu =\r\n        this.applicationMenu && this.previousMenuComponentId === removedMenuId ? this.applicationMenu : undefined;\r\n\r\n      this.changeDetector.detectChanges();\r\n\r\n      if (!this.applicationMenu && this.mediaQuery) {\r\n        this.mediaQuery.removeListener(this.onMediaQueryChange);\r\n      }\r\n    });\r\n\r\n    this.applicationMenuSubscription = this.menuGlobalService.receiveApplicationMenu$\r\n      .pipe(delay(100))\r\n      .subscribe(newMenu => {\r\n        this.applicationMenu = this.previousMenuComponentId === newMenu.id ? undefined : newMenu;\r\n\r\n        this.changeDetector.detectChanges();\r\n\r\n        if (this.applicationMenu) {\r\n          this.initNavbarMenu();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.displayItemsNavigation();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mediaQuery) {\r\n      this.mediaQuery.removeListener(this.onMediaQueryChange);\r\n    }\r\n\r\n    this.removedMenuSubscription?.unsubscribe();\r\n    this.applicationMenuSubscription?.unsubscribe();\r\n    this.menusSubscription?.unsubscribe();\r\n  }\r\n\r\n  navigateItems(orientation: string) {\r\n    orientation === 'left' ? this.navigateLeft() : this.navigateRight();\r\n\r\n    this.animate(this.offset);\r\n  }\r\n\r\n  protected validateMenuLogo() {\r\n    if (this.applicationMenu.logo && this.logo) {\r\n      this.applicationMenu.logo = undefined;\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  private allNavbarItemsWidth() {\r\n    return this.navbarItems.allNavbarItems.reduce(\r\n      (previous: any, current: any) => previous + current.nativeElement.offsetWidth,\r\n      0\r\n    );\r\n  }\r\n\r\n  private animate(offset: number) {\r\n    const animation: AnimationFactory = this.buildTransitionAnimation(offset);\r\n\r\n    this.player = animation.create(this.navbarItems.navbarItemsContainer.nativeElement);\r\n    this.player.play();\r\n  }\r\n\r\n  private buildTransitionAnimation(offset: number) {\r\n    return this.builder.build([animate(poNavbarTiming, keyframes([style({ transform: `translateX(${-offset}px)` })]))]);\r\n  }\r\n\r\n  private changeNavbarMenuItems(isCollapsedMedia: any, navbarItems: Array<PoNavbarItem>, label: string) {\r\n    if (isCollapsedMedia) {\r\n      this.applicationMenu.menus = [{ label, subItems: navbarItems, id: this.id }, ...this.applicationMenu.menus];\r\n    } else {\r\n      this.applicationMenu.menus = this.applicationMenu.menus.filter(m => m.id !== this.id);\r\n    }\r\n\r\n    this.isNavbarUpdateMenu = true;\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  private calculateLeftNavigation() {\r\n    let calculatedOffset: number;\r\n\r\n    this.navbarItems.allNavbarItems.some(navbarItem => {\r\n      const navbarItemOffset = navbarItem.nativeElement.offsetLeft;\r\n      const navbarItemWidth = navbarItem.nativeElement.offsetWidth;\r\n\r\n      if (navbarItemOffset >= this.offset) {\r\n        calculatedOffset = navbarItemOffset - (this.navbarItemsWidth() - navbarItemWidth);\r\n        return true;\r\n      }\r\n    });\r\n    return calculatedOffset;\r\n  }\r\n\r\n  private calculateRightNavigation(itemBreakPoint: number) {\r\n    let calculatedOffset: number;\r\n\r\n    this.navbarItems.allNavbarItems.some(navbarItem => {\r\n      const offsetLeft = navbarItem.nativeElement.offsetLeft;\r\n      const finalPosition = navbarItem.nativeElement.offsetWidth + offsetLeft;\r\n\r\n      if (itemBreakPoint < finalPosition) {\r\n        calculatedOffset = offsetLeft;\r\n        return true;\r\n      }\r\n    });\r\n    return calculatedOffset;\r\n  }\r\n\r\n  private displayItemsNavigation() {\r\n    this.showItemsNavigation = this.navbarItemsWidth() < this.allNavbarItemsWidth() + poNavbarNavigationWidth;\r\n\r\n    this.changeDetector.detectChanges();\r\n\r\n    if (this.offset !== 0) {\r\n      this.setOffsetToZero();\r\n      this.animate(this.offset);\r\n    }\r\n  }\r\n\r\n  private initNavbarMenu() {\r\n    this.mediaQuery = window.matchMedia(poNavbarMatchMedia);\r\n\r\n    if (this.isCollapsedMedia) {\r\n      this.changeNavbarMenuItems(true, this.items, this.literals.navbarLinks);\r\n    }\r\n\r\n    this.validateMenuLogo();\r\n\r\n    this.mediaQuery.addListener(this.onMediaQueryChange);\r\n  }\r\n\r\n  private navbarItemsWidth() {\r\n    return this.navbarItemsElement.nativeElement.offsetWidth;\r\n  }\r\n\r\n  private navigateLeft() {\r\n    this.disableRight = false;\r\n\r\n    this.offset = this.calculateLeftNavigation();\r\n\r\n    if (this.offset < 0) {\r\n      this.setOffsetToZero();\r\n    }\r\n  }\r\n\r\n  private navigateRight() {\r\n    const maxAllowedOffset = this.allNavbarItemsWidth() - this.navbarItemsWidth();\r\n    const itemBreakPoint = this.offset + this.navbarItemsWidth();\r\n\r\n    this.offset = this.calculateRightNavigation(itemBreakPoint);\r\n\r\n    this.validateMaxOffset(maxAllowedOffset);\r\n  }\r\n\r\n  private onMediaQueryChange = changed => {\r\n    this.changeNavbarMenuItems(changed.matches, this.items, this.literals.navbarLinks);\r\n  };\r\n\r\n  private setOffsetToZero() {\r\n    this.offset = 0;\r\n  }\r\n\r\n  private validateMaxOffset(maxAllowedOffset: number) {\r\n    if (this.offset >= maxAllowedOffset) {\r\n      this.offset = maxAllowedOffset;\r\n      this.disableRight = true;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoNavbarItemComponent } from './po-navbar-item/po-navbar-item.component';\r\nimport { PoNavbarItemsComponent } from './po-navbar-items.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [PoNavbarItemComponent, PoNavbarItemsComponent],\r\n  exports: [PoNavbarItemsComponent]\r\n})\r\nexport class PoNavbarItemsModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-navbar-logo',\r\n  templateUrl: './po-navbar-logo.component.html'\r\n})\r\nexport class PoNavbarLogoComponent {\r\n  @Input('p-logo') logo?: string;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-navbar-item-navigation',\r\n  templateUrl: './po-navbar-item-navigation.component.html'\r\n})\r\nexport class PoNavbarItemNavigationComponent {\r\n  @Input('p-disable-left') disableLeft: boolean;\r\n\r\n  @Input('p-disable-right') disableRight: boolean;\r\n\r\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'po-navbar-item-navigation-icon',\r\n  templateUrl: './po-navbar-item-navigation-icon.component.html'\r\n})\r\nexport class PoNavbarItemNavigationIconComponent {\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  @Input('p-icon') icon: boolean;\r\n\r\n  @Output('p-click') click: EventEmitter<any> = new EventEmitter<any>();\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoNavbarItemNavigationComponent } from './po-navbar-item-navigation.component';\r\nimport { PoNavbarItemNavigationIconComponent } from './po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [PoNavbarItemNavigationComponent, PoNavbarItemNavigationIconComponent],\r\n  exports: [PoNavbarItemNavigationComponent]\r\n})\r\nexport class PoNavbarItemNavigationModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoMenuModule } from '../po-menu/po-menu.module';\r\nimport { PoNavbarActionsModule } from './po-navbar-actions/po-navbar-actions.module';\r\nimport { PoNavbarComponent } from './po-navbar.component';\r\nimport { PoNavbarItemsModule } from './po-navbar-items/po-navbar-items.module';\r\nimport { PoNavbarLogoComponent } from './po-navbar-logo/po-navbar-logo.component';\r\nimport { PoNavbarItemNavigationModule } from './po-navbar-item-navigation/po-navbar-item-navigation.module';\r\nimport { PoIconModule } from './../po-icon/po-icon.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-navbar`.\r\n *\r\n * > Para o correto funcionamento do componente `po-navbar`, deve ser importado o módulo `BrowserAnimationsModule` no\r\n * > módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PoNavbarActionsModule,\r\n    PoNavbarItemsModule,\r\n    PoNavbarItemNavigationModule,\r\n    PoMenuModule,\r\n    PoIconModule\r\n  ],\r\n  declarations: [PoNavbarComponent, PoNavbarLogoComponent],\r\n  exports: [PoNavbarComponent]\r\n})\r\nexport class PoNavbarModule {}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente **po-page-content** é utilizado como o container para o conteúdo da página.\r\n */\r\nexport class PoPageContentBaseComponent {\r\n  protected resizeListener: () => void;\r\n}\r\n","import { AfterViewInit, Component, OnDestroy, Renderer2 } from '@angular/core';\r\n\r\nimport { PoPageContentBaseComponent } from './po-page-content-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoPageContentBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-page-content',\r\n  templateUrl: './po-page-content.component.html'\r\n})\r\nexport class PoPageContentComponent extends PoPageContentBaseComponent implements AfterViewInit, OnDestroy {\r\n  contentOpacity: number = 0;\r\n  height: string = '90%';\r\n  overflowY: string = 'none';\r\n\r\n  constructor(public renderer: Renderer2) {\r\n    super();\r\n    this.initializeListeners();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.recalculateHeaderSize();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  recalculateHeaderSize() {\r\n    setTimeout(() => {\r\n      const pageHeaderElement: HTMLElement = document.querySelector('div.po-page-header');\r\n\r\n      this.setHeightContent(pageHeaderElement);\r\n      this.contentOpacity = 1;\r\n    });\r\n  }\r\n\r\n  setHeightContent(poPageHeader: HTMLElement) {\r\n    const bodyHeight = document.body.clientHeight;\r\n    const pageHeaderHeight = poPageHeader ? poPageHeader.offsetTop + poPageHeader.offsetHeight : 0;\r\n    const newHeight = bodyHeight - pageHeaderHeight;\r\n\r\n    this.height = `${newHeight}px`;\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', () => {\r\n      this.recalculateHeaderSize();\r\n    });\r\n  }\r\n\r\n  private removeListeners() {\r\n    this.resizeListener();\r\n  }\r\n}\r\n","import { Input, ViewChild, Directive } from '@angular/core';\r\n\r\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from './../../../services/po-language/po-language.constant';\r\n\r\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\r\nimport { PoPageAction } from '../po-page-action.interface';\r\nimport { PoPageDefaultLiterals } from './po-page-default-literals.interface';\r\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\r\n\r\nexport const poPageDefaultLiteralsDefault = {\r\n  en: <PoPageDefaultLiterals>{\r\n    otherActions: 'Other actions'\r\n  },\r\n  es: <PoPageDefaultLiterals>{\r\n    otherActions: 'Otras acciones'\r\n  },\r\n  pt: <PoPageDefaultLiterals>{\r\n    otherActions: 'Outras ações'\r\n  },\r\n  ru: <PoPageDefaultLiterals>{\r\n    otherActions: 'Другие действия'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-default` é utilizado como o container principal para as telas sem um template definido.\r\n */\r\n@Directive()\r\nexport abstract class PoPageDefaultBaseComponent {\r\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\r\n\r\n  visibleActions: Array<PoPageAction> = [];\r\n\r\n  protected language: string;\r\n\r\n  private _actions?: Array<PoPageAction> = [];\r\n  private _literals: PoPageDefaultLiterals;\r\n  private _title: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.\r\n   */\r\n  @Input('p-actions') set actions(actions: Array<PoPageAction>) {\r\n    this._actions = Array.isArray(actions) ? actions : [];\r\n    this.visibleActions = this.actions.filter(action => action.visible !== false);\r\n    this.setDropdownActions();\r\n  }\r\n\r\n  get actions(): Array<PoPageAction> {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-default`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDefaultLiterals = {\r\n   *    otherActions: 'Mais ações'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDefaultLiterals = {\r\n   *    otherActions: 'Ações da página'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-default\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-default>\r\n   * ```\r\n   *\r\n   * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageDefaultLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageDefaultLiteralsDefault[poLocaleDefault],\r\n        ...poPageDefaultLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageDefaultLiteralsDefault[this.language];\r\n    }\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poPageDefaultLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') set title(title: string) {\r\n    this._title = title;\r\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  // Seta a lista de ações no dropdown.\r\n  abstract setDropdownActions();\r\n}\r\n","import { AfterContentInit, Component, OnChanges, Renderer2, SimpleChange, ViewContainerRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\r\n\r\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';\r\nimport { PoPageAction } from '../po-page-action.interface';\r\n\r\nimport { PoPageDefaultBaseComponent } from './po-page-default-base.component';\r\n\r\n/**\r\n * @docsExtends PoPageDefaultBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-default-basic\" title=\"PO Page Default Basic\">\r\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-default-basic/sample-po-page-default-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-default-labs\" title=\"PO Page Default Labs\">\r\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-default-labs/sample-po-page-default-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-default-dashboard\" title=\"PO Page Default - Dashboard\">\r\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.html\"> </file>\r\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-default-dashboard/sample-po-page-default-dashboard.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-default',\r\n  templateUrl: './po-page-default.component.html'\r\n})\r\nexport class PoPageDefaultComponent extends PoPageDefaultBaseComponent implements AfterContentInit, OnChanges {\r\n  limitPrimaryActions: number = 3;\r\n  dropdownActions: Array<PoPageAction>;\r\n  isMobile: boolean;\r\n\r\n  private maxWidthMobile: number = 480;\r\n\r\n  constructor(\r\n    viewRef: ViewContainerRef,\r\n    languageService: PoLanguageService,\r\n    private renderer: Renderer2,\r\n    private router: Router\r\n  ) {\r\n    super(languageService);\r\n  }\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.setIsMobile();\r\n    this.setDropdownActions();\r\n\r\n    this.renderer.listen('window', 'resize', (event: Event) => {\r\n      this.onResize(event);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\r\n    this.setDropdownActions();\r\n  }\r\n\r\n  actionIsDisabled(action: any) {\r\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\r\n  }\r\n\r\n  callAction(item: PoPageAction): void {\r\n    if (item.url) {\r\n      isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);\r\n    } else if (item.action) {\r\n      item.action();\r\n    }\r\n  }\r\n\r\n  hasPageHeader() {\r\n    return !!(\r\n      this.title ||\r\n      (this.visibleActions && this.visibleActions.length) ||\r\n      (this.breadcrumb && this.breadcrumb.items.length)\r\n    );\r\n  }\r\n\r\n  setDropdownActions(): void {\r\n    if (this.visibleActions.length > this.limitPrimaryActions) {\r\n      this.dropdownActions = this.visibleActions.slice(this.limitPrimaryActions - 1);\r\n    }\r\n  }\r\n\r\n  private onResize(event: Event): void {\r\n    const width = (event.target as Window).innerWidth;\r\n\r\n    if (width < this.maxWidthMobile) {\r\n      this.isMobile = true;\r\n      this.limitPrimaryActions = 2;\r\n      this.setDropdownActions();\r\n    } else {\r\n      this.isMobile = false;\r\n      this.limitPrimaryActions = 3;\r\n      this.setDropdownActions();\r\n    }\r\n  }\r\n\r\n  private setIsMobile(): void {\r\n    if (window.innerWidth < this.maxWidthMobile) {\r\n      this.isMobile = true;\r\n      this.limitPrimaryActions = 2;\r\n    }\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\n\r\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\r\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\r\nimport { PoPageDetailLiterals } from './po-page-detail-literals.interface';\r\n\r\nexport const poPageDetailLiteralsDefault = {\r\n  en: <PoPageDetailLiterals>{\r\n    back: 'Back',\r\n    edit: 'Edit',\r\n    remove: 'Remove'\r\n  },\r\n  es: <PoPageDetailLiterals>{\r\n    back: 'Volver',\r\n    edit: 'Editar',\r\n    remove: 'Eliminar'\r\n  },\r\n  pt: <PoPageDetailLiterals>{\r\n    back: 'Voltar',\r\n    edit: 'Editar',\r\n    remove: 'Remover'\r\n  },\r\n  ru: <PoPageDetailLiterals>{\r\n    back: 'возвращение',\r\n    edit: 'редактировать',\r\n    remove: 'удаление'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente **po-page-detail** é utilizado como container principal para a tela de\r\n * detalhamento de um registro, tendo a possibilidade de usar as ações de \"Voltar\", \"Editar\" e \"Remover\".\r\n */\r\n@Directive()\r\nexport class PoPageDetailBaseComponent {\r\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb: PoBreadcrumb;\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Voltar\".\r\n   *\r\n   * ```\r\n   * <po-page-detail (p-back)=\"myBackFunction()\">\r\n   * </po-page-detail>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Voltar\" não será exibido.\r\n   */\r\n  @Output('p-back') back = new EventEmitter();\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Editar\".\r\n   *\r\n   * ```\r\n   * <po-page-detail (p-edit)=\"myEditFunction()\">\r\n   * </po-page-detail>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Editar\" não será exibido.\r\n   */\r\n  @Output('p-edit') edit = new EventEmitter();\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Remover\".\r\n   *\r\n   * ```\r\n   * <po-page-detail (p-remove)=\"myRemoveFunction()\">\r\n   * </po-page-detail>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Remover\" não será exibido.\r\n   */\r\n  @Output('p-remove') remove = new EventEmitter();\r\n\r\n  private _literals: PoPageDetailLiterals;\r\n  private _title: string;\r\n  private language: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-detail`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDetailLiterals = {\r\n   *    edit: 'Edição',\r\n   *    remove: 'Exclusão',\r\n   *    back: 'Menu'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageDetailLiterals = {\r\n   *    remove: 'Excluir registro permanentemente'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-detail\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-detail>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageDetailLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageDetailLiteralsDefault[poLocaleDefault],\r\n        ...poPageDetailLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageDetailLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poPageDetailLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') set title(title: string) {\r\n    this._title = title;\r\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoPageDetailBaseComponent } from './po-page-detail-base.component';\r\n\r\n/**\r\n * @docsExtends PoPageDetailBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-detail-basic\" title=\"PO Page Detail Basic\">\r\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-detail-basic/sample-po-page-detail-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-detail-labs\" title=\"PO Page Detail Labs\">\r\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-detail-labs/sample-po-page-detail-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-detail-user\" title=\"PO Page Detail - User\">\r\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-detail-user/sample-po-page-detail-user.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-detail',\r\n  templateUrl: './po-page-detail.component.html'\r\n})\r\nexport class PoPageDetailComponent extends PoPageDetailBaseComponent {\r\n  hasAnyAction(): boolean {\r\n    return this.hasEvent('back') || this.hasEvent('edit') || this.hasEvent('remove');\r\n  }\r\n\r\n  hasEditFn(property: string): string {\r\n    if (property === 'icon') {\r\n      return this.hasEvent('edit') ? '' : 'po-icon-delete';\r\n    } else if (property === 'type') {\r\n      return this.hasEvent('edit') ? 'default' : 'primary';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  hasEditOrRemoveFn(property: string): string {\r\n    if (property === 'icon') {\r\n      return this.hasEvent('edit') || this.hasEvent('remove') ? '' : 'po-icon-arrow-left';\r\n    } else if (property === 'type') {\r\n      return this.hasEvent('edit') || this.hasEvent('remove') ? 'default' : 'primary';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  hasEvent(event: string) {\r\n    return !!this[event].observers.length;\r\n  }\r\n\r\n  hasPageHeader(): boolean {\r\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { poLocaleDefault } from '../../../services/po-language/po-language.constant';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\r\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\r\nimport { PoPageEditLiterals } from './po-page-edit-literals.interface';\r\n\r\nexport const poPageEditLiteralsDefault = {\r\n  en: <PoPageEditLiterals>{\r\n    cancel: 'Cancel',\r\n    save: 'Save',\r\n    saveNew: 'Save and New'\r\n  },\r\n  es: <PoPageEditLiterals>{\r\n    cancel: 'Cancelar',\r\n    save: 'Guardar',\r\n    saveNew: 'Guardar y Nuevo'\r\n  },\r\n  pt: <PoPageEditLiterals>{\r\n    cancel: 'Cancelar',\r\n    save: 'Salvar',\r\n    saveNew: 'Salvar e Novo'\r\n  },\r\n  ru: <PoPageEditLiterals>{\r\n    cancel: 'отменить',\r\n    save: 'экономить',\r\n    saveNew: 'Сохранить и новый'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente **po-page-edit** é utilizado como container principal para tela de edição ou adição de um\r\n * registro, tendo a possibilidade de usar as ações de \"Salvar\", \"Salvar e Novo\" e \"Cancelar\".\r\n *\r\n * Os botões \"Salvar\" e \"Salvar e Novo\" podem ser habilitados/desabilitados utilizando a propriedade `p-disable-submit`.\r\n * Esta propriedade pode ser utilizada para desabilitar os botões caso exista um formulário inválido na página ou alguma\r\n * regra de negócio não tenha sido atendida.\r\n */\r\n@Directive()\r\nexport class PoPageEditBaseComponent {\r\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\r\n\r\n  /** Desabilita botões de submissão (save e saveNew) */\r\n  @Input('p-disable-submit') disableSubmit?: boolean;\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Cancelar\".\r\n   *\r\n   * ```\r\n   * <po-page-edit (p-cancel)=\"myCancelFunction()\">\r\n   * </po-page-edit>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Cancelar\" não será exibido.\r\n   */\r\n  @Output('p-cancel') cancel = new EventEmitter();\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Salvar\".\r\n   *\r\n   * ```\r\n   * <po-page-edit (p-save)=\"mySaveFunction()\">\r\n   * </po-page-edit>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Salvar\" não será exibido.\r\n   */\r\n  @Output('p-save') save = new EventEmitter();\r\n\r\n  /**\r\n   * Evento que será disparado ao clicar no botão de \"Salvar e Novo\".\r\n   *\r\n   * ```\r\n   * <po-page-edit (p-save-new)=\"mySaveNewFunction()\">\r\n   * </po-page-edit>\r\n   * ```\r\n   *\r\n   * > Caso não utilizar esta propriedade, o botão de \"Salvar e Novo\" não será exibido.\r\n   */\r\n  @Output('p-save-new') saveNew = new EventEmitter();\r\n\r\n  private _literals: PoPageEditLiterals;\r\n  private _title: string;\r\n  private language: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-edit`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageEditLiterals = {\r\n   *    cancel: 'Voltar',\r\n   *    save: 'Confirmar',\r\n   *    saveNew: 'Confirmar e criar um novo'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageEditLiterals = {\r\n   *    cancel: 'Cancelar processo'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-edit\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-edit>\r\n   * ```\r\n   *\r\n   * > O objeto padrão de literais será traduzido de acordo com o idioma do\r\n   * [`PoI18nService`](/documentation/po-i18n) ou do browser.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageEditLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageEditLiteralsDefault[poLocaleDefault],\r\n        ...poPageEditLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageEditLiteralsDefault[this.language];\r\n    }\r\n  }\r\n  get literals() {\r\n    return this._literals || poPageEditLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') set title(title: string) {\r\n    this._title = title;\r\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoPageEditBaseComponent } from './po-page-edit-base.component';\r\n\r\n/**\r\n * @docsExtends PoPageEditBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-edit-basic\" title=\"PO Page Edit Basic\">\r\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-edit-basic/sample-po-page-edit-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-edit-labs\" title=\"PO Page Edit Labs\">\r\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-edit-labs/sample-po-page-edit-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-edit-user\" title=\"PO Page Edit - User\">\r\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-edit-user/sample-po-page-edit-user.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-edit',\r\n  templateUrl: './po-page-edit.component.html'\r\n})\r\nexport class PoPageEditComponent extends PoPageEditBaseComponent {\r\n  getIcon(icon: string): string {\r\n    if (icon === 'cancel') {\r\n      return this.isPrimaryAction('cancel') ? 'po-icon-close' : '';\r\n    }\r\n\r\n    if (icon === 'saveNew') {\r\n      return this.isPrimaryAction('saveNew') ? 'po-icon-ok' : '';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getType(type: string): string {\r\n    const isCancelPrimaryAction = type === 'cancel' && this.isPrimaryAction('cancel');\r\n    const isSaveNewPrimaryAction = type === 'saveNew' && this.isPrimaryAction('saveNew');\r\n\r\n    return isCancelPrimaryAction || isSaveNewPrimaryAction ? 'primary' : 'default';\r\n  }\r\n\r\n  hasAnyAction(): boolean {\r\n    return this.hasEvent('cancel') || this.hasEvent('saveNew') || this.hasEvent('save');\r\n  }\r\n\r\n  hasPageHeader(): boolean {\r\n    return !!(this.title || this.hasAnyAction() || (this.breadcrumb && this.breadcrumb.items.length));\r\n  }\r\n\r\n  hasEvent(event: string) {\r\n    return !!this[event].observers.length;\r\n  }\r\n\r\n  private isPrimaryAction(action: string): boolean {\r\n    const hasSaveAction = this.hasEvent('save');\r\n\r\n    if (action === 'saveNew') {\r\n      return !hasSaveAction;\r\n    }\r\n\r\n    if (action === 'cancel') {\r\n      const hasSaveNewAction = this.hasEvent('saveNew');\r\n\r\n      return !hasSaveNewAction && !hasSaveAction;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente **po-page-header** é responsável pelo título da página e container dos botões de ações dos componentes\r\n * po-page-list e po-page-base.\r\n */\r\n@Directive()\r\nexport class PoPageHeaderBaseComponent {\r\n  /** Título da página. */\r\n  @Input('p-title') title: string;\r\n\r\n  private _breadcrumb: PoBreadcrumb;\r\n\r\n  /** Objeto com propriedades do breadcrumb. */\r\n\r\n  @Input('p-breadcrumb') set breadcrumb(value: PoBreadcrumb) {\r\n    this._breadcrumb = value;\r\n  }\r\n  get breadcrumb(): PoBreadcrumb {\r\n    return this._breadcrumb;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoPageHeaderBaseComponent } from './po-page-header-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n * @docsExtends PoPageHeaderBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-page-header',\r\n  templateUrl: './po-page-header.component.html'\r\n})\r\nexport class PoPageHeaderComponent extends PoPageHeaderBaseComponent {}\r\n","import { Input, Directive, ViewChild } from '@angular/core';\r\n\r\nimport { poLocaleDefault } from './../../../services/po-language/po-language.constant';\r\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\r\n\r\nimport { PoBreadcrumb } from '../../po-breadcrumb/po-breadcrumb.interface';\r\nimport { PoDisclaimerGroup } from '../../po-disclaimer-group/po-disclaimer-group.interface';\r\nimport { PoPageAction } from '../po-page-action.interface';\r\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\r\nimport { PoPageFilter } from './../po-page-filter.interface';\r\nimport { PoPageListLiterals } from './po-page-list-literals.interface';\r\n\r\nexport const poPageListLiteralsDefault = {\r\n  en: <PoPageListLiterals>{\r\n    otherActions: 'Other actions'\r\n  },\r\n  es: <PoPageListLiterals>{\r\n    otherActions: 'Otras acciones'\r\n  },\r\n  pt: <PoPageListLiterals>{\r\n    otherActions: 'Outras ações'\r\n  },\r\n  ru: <PoPageListLiterals>{\r\n    otherActions: 'Другие действия'\r\n  }\r\n};\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-list` é utilizado como o container principal para as telas de listagem de dados,\r\n * podendo ser apresentado como lista ou tabela.\r\n *\r\n * Este componente possibilita realizar filtro dos dados, no qual permite que seja atribuido uma função que será executada no momento\r\n * da filtragem. Este comportamento pode ser acionado tanto ao *click* do ícone [po-icon-search](/guides/icons)\r\n * quanto ao pressionar da tecla *ENTER* quando o foco estiver no campo de pesquisa.\r\n *\r\n * Para facilitar a manipulação e visualização dos filtros aplicados, é possível também utilizar o componente\r\n * [`po-disclaimer-group`](/documentation/po-disclaimer-group).\r\n */\r\n@Directive()\r\nexport abstract class PoPageListBaseComponent {\r\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que implementa as propriedades da interface `PoBreadcrumb`.\r\n   */\r\n  @Input('p-breadcrumb') breadcrumb?: PoBreadcrumb;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Objeto que implementa as propriedades da interface `PoPageFilter`.\r\n   */\r\n  @Input('p-filter') filter: PoPageFilter;\r\n\r\n  visibleActions: Array<PoPageAction> = [];\r\n\r\n  protected language: string;\r\n  protected resizeListener: () => void;\r\n\r\n  private _actions?: Array<PoPageAction> = [];\r\n  private _disclaimerGroup?: PoDisclaimerGroup;\r\n  private _literals: PoPageListLiterals;\r\n  private _title: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`.\r\n   */\r\n  @Input('p-actions') set actions(actions: Array<PoPageAction>) {\r\n    this._actions = Array.isArray(actions) ? actions : [];\r\n    this.visibleActions = this.actions.filter(action => action.visible !== false);\r\n    this.setDropdownActions();\r\n  }\r\n\r\n  get actions(): Array<PoPageAction> {\r\n    return this._actions;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto que implementa as propriedades da interface `PoDisclaimerGroup`.\r\n   */\r\n  @Input('p-disclaimer-group') set disclaimerGroup(value: PoDisclaimerGroup) {\r\n    if (!value) {\r\n      value = <any>{};\r\n    }\r\n\r\n    this._disclaimerGroup = value;\r\n  }\r\n\r\n  get disclaimerGroup(): PoDisclaimerGroup {\r\n    return this._disclaimerGroup;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Objeto com as literais usadas no `po-page-list`.\r\n   *\r\n   * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageListLiterals = {\r\n   *    otherActions: 'Mais ações'\r\n   *  };\r\n   * ```\r\n   *\r\n   * Ou passando apenas as literais que deseja customizar:\r\n   *\r\n   * ```\r\n   *  const customLiterals: PoPageListLiterals = {\r\n   *    otherActions: 'Ações da página'\r\n   *  };\r\n   * ```\r\n   *\r\n   * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.\r\n   *\r\n   * ```\r\n   * <po-page-list\r\n   *   [p-literals]=\"customLiterals\">\r\n   * </po-page-list>\r\n   * ```\r\n   *\r\n   * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.\r\n   */\r\n  @Input('p-literals') set literals(value: PoPageListLiterals) {\r\n    if (value instanceof Object && !(value instanceof Array)) {\r\n      this._literals = {\r\n        ...poPageListLiteralsDefault[poLocaleDefault],\r\n        ...poPageListLiteralsDefault[this.language],\r\n        ...value\r\n      };\r\n    } else {\r\n      this._literals = poPageListLiteralsDefault[this.language];\r\n    }\r\n  }\r\n\r\n  get literals() {\r\n    return this._literals || poPageListLiteralsDefault[this.language];\r\n  }\r\n\r\n  /** Título da página. */\r\n  @Input('p-title') set title(title: string) {\r\n    this._title = title;\r\n    setTimeout(() => this.poPageContent.recalculateHeaderSize());\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  constructor(languageService: PoLanguageService) {\r\n    this.language = languageService.getShortLanguage();\r\n  }\r\n\r\n  // Seta a lista de ações no dropdown.\r\n  abstract setDropdownActions();\r\n}\r\n","import {\r\n  AfterContentInit,\r\n  Component,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChange,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ChangeDetectorRef,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { callFunction, isExternalLink, isTypeof, openExternalLink } from '../../../utils/util';\r\nimport { PoLanguageService } from './../../../services/po-language/po-language.service';\r\n\r\nimport { PoPageAction } from '../po-page-action.interface';\r\nimport { PoDisclaimer } from '../../po-disclaimer/po-disclaimer.interface';\r\nimport { PoDisclaimerGroupRemoveAction } from '../../po-disclaimer-group/po-disclaimer-group-remove-action.interface';\r\n\r\nimport { PoPageContentComponent } from '../po-page-content/po-page-content.component';\r\nimport { PoPageListBaseComponent } from './po-page-list-base.component';\r\n\r\n/**\r\n * @docsExtends PoPageListBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-list-basic\" title=\"PO Page List Basic\">\r\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-list-basic/sample-po-page-list-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-list-labs\" title=\"PO Page List Labs\">\r\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-list-labs/sample-po-page-list-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-list-hiring-processes\" title=\"PO Page List - Hiring Processes\">\r\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.html\"> </file>\r\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.component.ts\"> </file>\r\n *  <file name=\"sample-po-page-list-hiring-processes/sample-po-page-list-hiring-processes.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-list',\r\n  templateUrl: './po-page-list.component.html'\r\n})\r\nexport class PoPageListComponent\r\n  extends PoPageListBaseComponent\r\n  implements AfterContentInit, OnChanges, OnDestroy, OnInit {\r\n  @ViewChild('filterInput') filterInput: ElementRef;\r\n  @ViewChild(PoPageContentComponent, { static: true }) poPageContent: PoPageContentComponent;\r\n\r\n  advancedSearch: string;\r\n  dropdownActions: Array<PoPageAction>;\r\n  isMobile: boolean;\r\n  limitPrimaryActions: number = 3;\r\n\r\n  callFunction = callFunction;\r\n\r\n  private isRecalculate = true;\r\n  private maxWidthMobile: number = 480;\r\n\r\n  /* istanbul ignore next */\r\n  constructor(\r\n    viewRef: ViewContainerRef,\r\n    languageService: PoLanguageService,\r\n    public renderer: Renderer2,\r\n    private router: Router,\r\n    private changeDetector: ChangeDetectorRef\r\n  ) {\r\n    super(languageService);\r\n    this.initializeListeners();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.advancedSearch = this.initializeFixedLiterals();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.setIsMobile();\r\n    this.setDropdownActions();\r\n  }\r\n\r\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\r\n    this.setDropdownActions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  actionIsDisabled(action: any) {\r\n    return isTypeof(action.disabled, 'function') ? action.disabled(action) : action.disabled;\r\n  }\r\n\r\n  callAction(item: PoPageAction): void {\r\n    if (item.url) {\r\n      isExternalLink(item.url) ? openExternalLink(item.url) : this.router.navigate([item.url]);\r\n    } else if (item.action) {\r\n      item.action();\r\n    }\r\n  }\r\n\r\n  hasPageHeader(): boolean {\r\n    return !!(\r\n      this.title ||\r\n      (this.visibleActions && this.visibleActions.length) ||\r\n      (this.breadcrumb && this.breadcrumb.items.length)\r\n    );\r\n  }\r\n\r\n  hasCustomFilterSize(): boolean {\r\n    if (!this.filter) {\r\n      return false;\r\n    }\r\n    return this.filter.width >= 1 && this.filter.width <= 6;\r\n  }\r\n\r\n  filterSizeClass(width: number): string {\r\n    const smWidth = Math.max(this.filter?.advancedAction ? 6 : 2, width);\r\n    const mdWidth = Math.max(this.filter?.advancedAction ? 4 : 1, width);\r\n    if (this.filter?.advancedAction) {\r\n      width = Math.max(width, 2);\r\n    }\r\n    return `po-sm-${smWidth} po-md-${mdWidth} po-lg-${width} po-xl-${width}`;\r\n  }\r\n\r\n  setDropdownActions(): void {\r\n    if (this.visibleActions.length > this.limitPrimaryActions) {\r\n      this.dropdownActions = this.visibleActions.slice(this.limitPrimaryActions - 1);\r\n    }\r\n  }\r\n\r\n  callActionFilter(field: string) {\r\n    this.filter[field](this.filterInput.nativeElement.value);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  /**\r\n   * Limpa o campo de pesquisa.\r\n   */\r\n  clearInputSearch() {\r\n    this.filterInput.nativeElement.value = null;\r\n  }\r\n\r\n  onkeypress(key) {\r\n    if (key === 13) {\r\n      this.callActionFilter('action');\r\n    }\r\n  }\r\n\r\n  // Recebe evento change do disclaimer e recalcula tela\r\n  onChangeDisclaimerGroup(disclaimers) {\r\n    if (\r\n      (disclaimers && disclaimers.length && this.isRecalculate) ||\r\n      (disclaimers.length === 0 && !this.isRecalculate)\r\n    ) {\r\n      this.poPageContent.recalculateHeaderSize();\r\n      this.isRecalculate = !this.isRecalculate;\r\n    }\r\n\r\n    if (this.disclaimerGroup && this.disclaimerGroup.change) {\r\n      this.disclaimerGroup.change(disclaimers);\r\n    }\r\n  }\r\n\r\n  onRemoveDisclaimer(removeData: PoDisclaimerGroupRemoveAction) {\r\n    if (this.disclaimerGroup.remove) {\r\n      this.disclaimerGroup.remove(removeData);\r\n    }\r\n  }\r\n\r\n  onRemoveAllDisclaimers(removedDisclaimers: Array<PoDisclaimer>) {\r\n    if (this.disclaimerGroup.removeAll) {\r\n      this.disclaimerGroup.removeAll(removedDisclaimers);\r\n    }\r\n  }\r\n\r\n  private initializeFixedLiterals() {\r\n    const literal = {\r\n      pt: {\r\n        advancedSearch: 'Busca avançada'\r\n      },\r\n      en: {\r\n        advancedSearch: 'Advanced search'\r\n      },\r\n      es: {\r\n        advancedSearch: 'Búsqueda avanzada'\r\n      },\r\n      ru: {\r\n        advancedSearch: 'полный поиск'\r\n      }\r\n    };\r\n\r\n    return literal[this.language].advancedSearch;\r\n  }\r\n\r\n  private initializeListeners() {\r\n    this.resizeListener = this.renderer.listen('window', 'resize', (event: MouseEvent) => {\r\n      this.onResize(event);\r\n    });\r\n  }\r\n\r\n  private removeListeners() {\r\n    this.resizeListener();\r\n  }\r\n\r\n  private onResize(event: Event): void {\r\n    const width = (event.target as Window).innerWidth;\r\n\r\n    if (width < this.maxWidthMobile) {\r\n      this.isMobile = true;\r\n      this.limitPrimaryActions = 2;\r\n      this.setDropdownActions();\r\n    } else {\r\n      this.isMobile = false;\r\n      this.limitPrimaryActions = 3;\r\n      this.setDropdownActions();\r\n    }\r\n  }\r\n\r\n  private setIsMobile(): void {\r\n    if (window.innerWidth < this.maxWidthMobile) {\r\n      this.isMobile = true;\r\n      this.limitPrimaryActions = 2;\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\n\r\nimport { InputBoolean } from '../../../decorators';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-slide` é utilizado para incluir conteúdos secundários\r\n * adicionando controles e navegações adicionais, mas mantendo o usuário na\r\n * página principal.\r\n *\r\n * Este componente é ativado a partir do método `#open()` e pode ser  encerrado\r\n * através do botão que encontra-se no cabeçalho do mesmo ou através do método\r\n * `#close()`.\r\n *\r\n * > Para o correto funcionamento do componente `po-page-slide`, deve ser\r\n * > importado o módulo `BrowserAnimationsModule` no módulo principal da sua\r\n * > aplicação.\r\n */\r\n@Directive()\r\nexport class PoPageSlideBaseComponent {\r\n  /**\r\n   * @description\r\n   *\r\n   * Título da página.\r\n   */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Subtítulo da página.\r\n   */\r\n  @Input('p-subtitle') subtitle?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta o botão de encerramento da página.\r\n   *\r\n   * Esta opção só é possível se a propriedade `p-click-out` estiver habilitada.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-close') @InputBoolean() hideClose?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se permite o encerramento da página ao clicar fora da mesma.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-click-out') @InputBoolean() clickOut?: boolean = false;\r\n\r\n  // Controla se a página está ou não oculta, por padrão é oculto.\r\n  public hidden = true;\r\n\r\n  private _size = 'md';\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tamanho da página.\r\n   *\r\n   * Valores válidos:\r\n   *  - `sm` (pequeno)\r\n   *  - `md` (médio)\r\n   *  - `lg` (grande)\r\n   *  - `xl` (extra-grande)\r\n   *  - `auto` (automático)\r\n   *\r\n   * > Todas as opções de tamanho possuem uma largura máxima de **768px**.\r\n   *\r\n   * @default `md`\r\n   */\r\n  @Input('p-size') set size(value: string) {\r\n    const sizes = ['sm', 'md', 'lg', 'xl', 'auto'];\r\n    this._size = sizes.indexOf(value) > -1 ? value : 'md';\r\n  }\r\n\r\n  get size() {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * Ativa a visualização da página.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo\r\n   * ser utilizado o `ViewChild` da seguinte forma:\r\n   *\r\n   * ```typescript\r\n   * import { PoPageSlideComponent } from '@po/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoPageSlideComponent, { static: true }) pageSlide: PoPageSlideComponent;\r\n   *\r\n   * public openPage() {\r\n   *   this.pageSlide.open();\r\n   * }\r\n   * ```\r\n   */\r\n  public open() {\r\n    // Evita com que a página seja aberta sem que seja possível fechá-la.\r\n    if (this.hideClose && !this.clickOut) {\r\n      this.hideClose = false;\r\n    }\r\n\r\n    this.hidden = false;\r\n  }\r\n\r\n  /**\r\n   * Encerra a visualização da página.\r\n   *\r\n   * Para utilizá-la é necessário ter a instância do componente no DOM, podendo\r\n   * ser utilizado o `ViewChild` da seguinte forma:\r\n   *\r\n   * ```typescript\r\n   * import { PoPageSlideComponent } from '@po-ui/ng-components';\r\n   *\r\n   * ...\r\n   *\r\n   * @ViewChild(PoPageSlideComponent, { static: true }) pageSlide: PoPageSlideComponent;\r\n   *\r\n   * public closePage() {\r\n   *   this.pageSlide.close();\r\n   * }\r\n   * ```\r\n   */\r\n  public close(): void {\r\n    this.hidden = true;\r\n  }\r\n}\r\n","import { animate, animateChild, group, query, style, transition, trigger } from '@angular/animations';\r\nimport { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { delay, take } from 'rxjs/operators';\r\n\r\nimport { getFocusableElements, uuid } from '../../../utils/util';\r\n\r\nimport { PoActiveOverlayService } from '../../../services/po-active-overlay/po-active-overlay.service';\r\nimport { PoPageSlideBaseComponent } from './po-page-slide-base.component';\r\n\r\n/**\r\n * @docsExtends PoPageSlideBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-slide-basic\" title=\"PO Page Slide Basic\">\r\n *  <file name=\"sample-po-page-slide-basic/sample-po-page-slide-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-basic/sample-po-page-slide-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-slide-labs\" title=\"PO Page Slide Labs\">\r\n *  <file name=\"sample-po-page-slide-labs/sample-po-page-slide-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-labs/sample-po-page-slide-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-page-slide-configuration\" title=\"PO Page Slide - Configuration\">\r\n *  <file name=\"sample-po-page-slide-configuration/sample-po-page-slide-configuration.component.html\"> </file>\r\n *  <file name=\"sample-po-page-slide-configuration/sample-po-page-slide-configuration.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-page-slide',\r\n  templateUrl: './po-page-slide.component.html',\r\n  providers: [],\r\n  animations: [\r\n    trigger('fade', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        group([animate('150ms', style({ opacity: 1 })), query('@slide', animateChild())])\r\n      ]),\r\n      transition(':leave', group([query('@slide', animateChild()), animate('150ms', style({ opacity: 0 }))]))\r\n    ]),\r\n    trigger('slide', [\r\n      transition(':enter', [\r\n        style({ transform: 'translateX(50px)' }),\r\n        animate('691ms ease-in-out', style({ transform: 'none' }))\r\n      ]),\r\n      transition(':leave', [animate('150ms', style({ transform: 'translateX(50px)' }))])\r\n    ])\r\n  ]\r\n})\r\nexport class PoPageSlideComponent extends PoPageSlideBaseComponent {\r\n  private _pageContent: ElementRef;\r\n\r\n  private firstElement: any;\r\n  private id: string = uuid();\r\n  private loadingCompleted = new ReplaySubject<void>();\r\n  private sourceElement: any;\r\n\r\n  private focusEvent: EventListener;\r\n\r\n  @ViewChild('pageContent', { read: ElementRef }) set pageContent(pageContent: ElementRef) {\r\n    if (pageContent) {\r\n      this._pageContent = pageContent;\r\n      this.loadingCompleted.next();\r\n    }\r\n  }\r\n\r\n  get pageContent(): ElementRef {\r\n    return this._pageContent;\r\n  }\r\n\r\n  constructor(private poActiveOverlayService: PoActiveOverlayService) {\r\n    super();\r\n  }\r\n\r\n  public open(): void {\r\n    this.sourceElement = document.activeElement;\r\n    super.open();\r\n    this.loadingCompleted.pipe(take(1)).pipe(delay(0)).subscribe(this.handleFocus.bind(this));\r\n  }\r\n\r\n  public close(): void {\r\n    this.poActiveOverlayService.activeOverlay.pop();\r\n    super.close();\r\n\r\n    this.removeEventListeners();\r\n    this.sourceElement.focus();\r\n  }\r\n\r\n  public onClickOut(event: MouseEvent): void {\r\n    if (this.clickOut && !this.pageContent.nativeElement.contains(event.target)) {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  private handleFocus(): void {\r\n    this.poActiveOverlayService.activeOverlay.push(this.id);\r\n    this.loadFirstElement();\r\n    this.initFocus();\r\n\r\n    document.addEventListener('focus', this.focusEvent, true);\r\n  }\r\n\r\n  private initFocus() {\r\n    // O foco não pode sair da página.\r\n    this.focusEvent = (event: Event) => {\r\n      if (\r\n        !this.pageContent.nativeElement.contains(event.target) &&\r\n        this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length - 1] === this.id\r\n      ) {\r\n        event.stopPropagation();\r\n        this.firstElement.focus();\r\n      }\r\n    };\r\n\r\n    if (this.hideClose) {\r\n      this.firstElement.focus();\r\n    } else {\r\n      const elements = getFocusableElements(this.pageContent.nativeElement);\r\n      const element = elements[1] || this.pageContent.nativeElement;\r\n      element.focus();\r\n    }\r\n  }\r\n\r\n  private loadFirstElement(): void {\r\n    this.firstElement = getFocusableElements(this.pageContent.nativeElement)[0] || this.pageContent.nativeElement;\r\n  }\r\n\r\n  private removeEventListeners(): void {\r\n    document.removeEventListener('focus', this.focusEvent, true);\r\n    this.loadingCompleted.complete();\r\n  }\r\n}\r\n","/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * O componente **po-page** é utilizado como container principal para os componentes po-page-header, po-page-content\r\n * e para as ações dos componentes po-page-edit e po-page-detail.\r\n *\r\n * Quando estiver sendo utilizado o componente po-menu junto ao po-page, ambos devem estar no mesmo nível\r\n * e inseridos em uma div com a classe **po-wrapper**. Esta classe será responsável por fazer os cálculos\r\n * necessários de alinhamento dos componentes.\r\n *\r\n * O componente **po-page** também pode ser utilizado sem o po-menu e neste caso o corpo da página deve ser\r\n * definido com a altura de 100% para que o po-page maximize seu tamanho.\r\n * ```\r\n * html, body {\r\n *   height:100%;\r\n * }\r\n * ```\r\n */\r\nexport class PoPageBaseComponent {}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { PoPageBaseComponent } from './po-page-base.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoPageBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-page',\r\n  templateUrl: './po-page.component.html'\r\n})\r\nexport class PoPageComponent extends PoPageBaseComponent {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoBreadcrumbModule } from '../po-breadcrumb/po-breadcrumb.module';\r\nimport { PoButtonModule } from '../po-button/po-button.module';\r\nimport { PoDisclaimerGroupModule } from '../po-disclaimer-group/po-disclaimer-group.module';\r\nimport { PoDropdownModule } from '../po-dropdown/po-dropdown.module';\r\nimport { PoFieldModule } from '../po-field/po-field.module';\r\nimport { PoLanguageModule } from './../../services/po-language/po-language.module';\r\nimport { PoModalModule } from './../po-modal/po-modal.module';\r\nimport { PoPageContentComponent } from './po-page-content/po-page-content.component';\r\nimport { PoPageDefaultComponent } from './po-page-default/po-page-default.component';\r\nimport { PoPageDetailComponent } from './po-page-detail/po-page-detail.component';\r\nimport { PoPageEditComponent } from './po-page-edit/po-page-edit.component';\r\nimport { PoPageHeaderComponent } from './po-page-header/po-page-header.component';\r\nimport { PoPageListComponent } from './po-page-list/po-page-list.component';\r\nimport { PoPageSlideComponent } from './po-page-slide/po-page-slide.component';\r\nimport { PoPageComponent } from './po-page.component';\r\n\r\n/**\r\n * @description\r\n * Módulo dos componentes po-page-default, po-page-detail, po-page-edit,\r\n * po-page-list e po-page-slide.\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    PoBreadcrumbModule,\r\n    PoButtonModule,\r\n    PoDisclaimerGroupModule,\r\n    PoDropdownModule,\r\n    PoFieldModule,\r\n    PoLanguageModule,\r\n    PoModalModule\r\n  ],\r\n  declarations: [\r\n    PoPageComponent,\r\n    PoPageContentComponent,\r\n    PoPageDefaultComponent,\r\n    PoPageDetailComponent,\r\n    PoPageEditComponent,\r\n    PoPageHeaderComponent,\r\n    PoPageListComponent,\r\n    PoPageSlideComponent\r\n  ],\r\n  exports: [\r\n    PoPageDefaultComponent,\r\n    PoPageDetailComponent,\r\n    PoPageEditComponent,\r\n    PoPageListComponent,\r\n    PoPageSlideComponent\r\n  ]\r\n})\r\nexport class PoPageModule {}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para o conjunto de círculos que faz a passagem de itens do `po-slide`.\r\n */\r\n@Component({\r\n  selector: 'po-slide-circles',\r\n  templateUrl: './po-slide-circles.component.html'\r\n})\r\nexport class PoSlideCirclesComponent {\r\n  /** Index do slide atual. */\r\n  @Input('p-current-slide-index') currentSlideIndex: number;\r\n\r\n  /** Itens do slide. */\r\n  @Input('p-items') items: Array<any>;\r\n\r\n  /** Evento emitido ao clicar em um controle. */\r\n  @Output('p-click') click = new EventEmitter<any>();\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { InputBoolean } from '../../decorators';\r\nimport { convertToInt } from './../../utils/util';\r\n\r\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\r\n\r\nconst poSlideIntervalDefault = 4000;\r\n\r\n/**\r\n * @description\r\n *\r\n * Componente de slide para visualização e controle de elementos de forma cíclica. Exibe um conjunto de imagens ou dados que permitem\r\n * customizar sua visualização utilizando a diretiva **[p-slide-content-template](/documentation/po-slide-content-template)**.\r\n *\r\n * #### Boas práticas:\r\n * - Utilizar imagens no slide, mesmo quando possui conteúdo personalizado.\r\n * - Evitar utilizar apenas um slide isolado, utilize pelo menos dois.\r\n * - Evitar utilizar mais de 5 slides, pois a ideia do componente é destacar apenas informações importantes.\r\n */\r\n@Directive()\r\nexport abstract class PoSlideBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a exibição das setas de navegação.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide-arrows') @InputBoolean() hideArrows: boolean = false;\r\n\r\n  private _interval: number = poSlideIntervalDefault;\r\n  private _height?: number;\r\n  private _slides: Array<PoSlideItem | string | any>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Altura do po-slide, caso seja slide com template customizado, não assume o valor `default`.\r\n   *\r\n   * @default `336`\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    this._height = convertToInt(value);\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Valor em milissegundos que define o tempo de troca dos slides, caso o valor seja menor que `1000` os slides não trocam automaticamente.\r\n   *\r\n   * @default `4000`\r\n   */\r\n  @Input('p-interval') set interval(value: number) {\r\n    this._interval = convertToInt(value, poSlideIntervalDefault);\r\n    this._interval >= 1000 ? this.startInterval() : this.cancelInterval();\r\n  }\r\n\r\n  get interval(): number {\r\n    return this._interval;\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   *\r\n   * Array de imagens ou dados para o slide, pode ser de três formas:\r\n   *\r\n   * - Array implementando objetos da interface `PoSlideItem`:\r\n   * ```\r\n   * [{ image: '/assets/image-1', action: 'imageClick.bind(this)'}, { image: '/assets/image-2' }]\r\n   * ```\r\n   * - Array de `strings` com os caminhos das imagens:\r\n   * ```\r\n   * ['/assets/image-1', '/assets/image-2' ]\r\n   * ```\r\n   * - Array com lista de itens (para utilizar template):\r\n   * ```\r\n   * [{ label: '1', img: '/assets/image-1' }, { label: '2', img: '/assets/image-1' }]\r\n   * ```\r\n   *\r\n   * > As setas de navegação e o controle com círculos apenas serão renderizados caso possua mais de um slide.\r\n   */\r\n  @Input('p-slides') set slides(value: Array<PoSlideItem | string | any>) {\r\n    this._slides = value;\r\n    this.setSlideItems(value);\r\n\r\n    if (value && value.length) {\r\n      this.startSlide();\r\n    }\r\n  }\r\n\r\n  get slides(): Array<PoSlideItem | string | any> {\r\n    return this._slides;\r\n  }\r\n\r\n  abstract setSlideHeight(height: number): void;\r\n\r\n  protected abstract cancelInterval(): void;\r\n  protected abstract setSlideItems(value: Array<PoSlideItem | string | any>): void;\r\n  protected abstract startSlide(): void;\r\n  protected abstract startInterval(): void;\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n/**\r\n * @usedBy PoSlideComponent\r\n *\r\n * @description\r\n *\r\n * Esta diretiva permite a customização de um slide.\r\n *\r\n * Deve-se utilizar como parâmetro a referência do item e/ou índice, sendo por padrão o item.\r\n *  - Item: `item` determina o item do slide corrente.\r\n *  - Índice: `index` determina o índice do slide corrente.\r\n *\r\n * Esta diretiva pode ser usada de duas formas: explícita ou *syntax sugar*. Veja a seguir ambos, respectivamente:\r\n *\r\n * ```\r\n * ...\r\n * <po-slide\r\n *   [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]\">\r\n *\r\n *   <ng-template p-slide-content-template let-item let-code=\"index\">\r\n *     <div class=\"po-row\">\r\n *       <po-info class=\"po-md-6\" p-label=\"Code\" [p-value]=\"item.id\"></po-info>\r\n *       <po-info class=\"po-md-6\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *     </div>\r\n *   </ng-template>\r\n *\r\n * </po-slide>\r\n *\r\n * ...\r\n * ```\r\n *\r\n * ```\r\n * ...\r\n * <po-slide\r\n *    [p-slides]=\"[{ id: 1, name: 'Register', email: 'register@po-ui.com' }]\">\r\n *\r\n *    <div *p-slide-content-template=\"let item, let i=index\" class=\"po-row\">\r\n *      <po-info class=\"po-md-12\" p-label=\"Email\" [p-value]=\"item.email\"></po-info>\r\n *    </div>\r\n * </po-slide>\r\n * ...\r\n *\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[p-slide-content-template]'\r\n})\r\nexport class PoSlideContentTemplateDirective {\r\n  // Necessário manter templateRef para o funcionamento do row template.\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\nimport { isIEOrEdge } from '../../../utils/util';\r\n\r\nimport { PoSlideContentTemplateDirective } from '../directives/po-slide-content-template.directive';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para cada item do po-slide.\r\n */\r\n@Component({\r\n  selector: 'po-slide-item',\r\n  templateUrl: './po-slide-item.component.html'\r\n})\r\nexport class PoSlideItemComponent {\r\n  @ViewChild('slideItem', { static: true }) itemElement: ElementRef;\r\n\r\n  /** Ação executada ao clicar em uma imagem */\r\n  @Input('p-action') action: Function;\r\n\r\n  /** Texto alternativo quando a imagem não é encontrada */\r\n  @Input('p-alt') alt: string;\r\n\r\n  /** Dados para o template customizado */\r\n  @Input('p-data') data: Array<any>;\r\n\r\n  /** Caminho da imagem */\r\n  @Input('p-image') image: string;\r\n\r\n  /** Altura da imagem */\r\n  @Input('p-image-height') imageHeight: number;\r\n\r\n  /** Template customizado */\r\n  @Input('p-template') template: PoSlideContentTemplateDirective;\r\n\r\n  /** Link executado ao clicar em uma imagem */\r\n  @Input('p-link') link: string;\r\n\r\n  isIEOrEdge: any = isIEOrEdge();\r\n\r\n  setLinkType() {\r\n    if (!this.template && this.link) {\r\n      return this.link.startsWith('http') ? 'externalLink' : 'internalLink';\r\n    }\r\n\r\n    return 'noLink';\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ContentChild,\r\n  DoCheck,\r\n  ElementRef,\r\n  HostListener,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, keyframes, style } from '@angular/animations';\r\n\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { PoSlideBaseComponent } from './po-slide-base.component';\r\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\r\nimport { PoSlideItem } from './interfaces/po-slide-item.interface';\r\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\r\n\r\nconst poSlideDefaultHeight = 336;\r\nconst poSlideIntervalMin = 1000;\r\nconst poSlideMinHeight = 192;\r\nconst poSlideTiming = '250ms ease';\r\n\r\n/**\r\n * @docsExtends PoSlideBaseComponent\r\n *\r\n * @example\r\n * <example name=\"po-slide-basic\" title=\"PO Slide Basic\">\r\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-basic/sample-po-slide-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-labs\" title=\"PO Slide Labs\">\r\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-labs/sample-po-slide-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-useful-articles\" title=\"PO Slide - Useful articles\">\r\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-landscapes\" title=\"PO Slide - Landscapes\">\r\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.html\"> </file>\r\n *   <file name=\"sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-slide-external-controls\" title=\"PO Slide - External Controls\">\r\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.html\"> </file>\r\n *  <file name=\"sample-po-slide-external-controls/sample-po-slide-external-controls.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-slide',\r\n  templateUrl: './po-slide.component.html'\r\n})\r\nexport class PoSlideComponent extends PoSlideBaseComponent implements OnInit, DoCheck, OnChanges, OnDestroy {\r\n  @ContentChild(PoSlideContentTemplateDirective, { static: true })\r\n  slideContentTemplate: PoSlideContentTemplateDirective;\r\n\r\n  @ViewChild('slide', { static: true }) private slide: ElementRef;\r\n\r\n  @ViewChildren(PoSlideItemComponent) private itemsElements: QueryList<PoSlideItemComponent>;\r\n\r\n  currentSlideIndex = 0;\r\n  imageHeight: number;\r\n  slideItems: Array<PoSlideItem | any> = [];\r\n  slideItemWidth: number;\r\n\r\n  private isLoaded: boolean = false;\r\n  private player: AnimationPlayer;\r\n  private setInterval: any;\r\n  private resize$ = new Subject<any>();\r\n  private resizeSubscription: Subscription;\r\n\r\n  private get hasElements() {\r\n    return !!this.slide.nativeElement.offsetWidth && !!this.itemsElements && !!this.itemsElements.length;\r\n  }\r\n\r\n  private get isImageSlide() {\r\n    return !this.slideContentTemplate;\r\n  }\r\n\r\n  private get offset() {\r\n    return this.currentSlideIndex * this.slideItemWidth;\r\n  }\r\n\r\n  get hasSlides() {\r\n    return !!this.slides && !!this.slides.length;\r\n  }\r\n\r\n  constructor(private builder: AnimationBuilder) {\r\n    super();\r\n  }\r\n\r\n  @HostListener('window:resize') onResize() {\r\n    this.resize$.next();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resizeSubscription = this.resize$.pipe(debounceTime(150)).subscribe(() => {\r\n      this.setSlideItemWidth();\r\n      this.goToItem(this.currentSlideIndex);\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.isLoaded && this.hasElements) {\r\n      this.setSlideItemWidth();\r\n      this.isLoaded = true;\r\n\r\n      if (this.hasSlides) {\r\n        this.startSlide();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.height) {\r\n      this.setSlideHeight(this.height);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resizeSubscription?.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Método que retorna o index do slide atual\r\n   *\r\n   * ```\r\n   * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n   *  myFunction() {\r\n   *    let currentIndex = this.slideComponent.getCurrentSlideIndex();\r\n   * }\r\n   *\r\n   * ```\r\n   */\r\n  getCurrentSlideIndex(): number {\r\n    return this.currentSlideIndex;\r\n  }\r\n\r\n  goToItem(index: number) {\r\n    if (this.interval > poSlideIntervalMin) {\r\n      this.startInterval();\r\n    }\r\n\r\n    this.currentSlideIndex = index;\r\n    this.animate(this.offset);\r\n  }\r\n\r\n  nextControl() {\r\n    if (this.interval > poSlideIntervalMin) {\r\n      this.startInterval();\r\n    }\r\n\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Método para chamar o próximo slide.\r\n   *\r\n   * ```\r\n   * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n   *\r\n   * myFunction() {\r\n   *  this.slideComponent.next();\r\n   * }\r\n   * ```\r\n   */\r\n  next() {\r\n    if (this.currentSlideIndex + 1 === this.slideItems.length) {\r\n      this.currentSlideIndex = 0;\r\n      this.animate(0);\r\n      return;\r\n    }\r\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.slideItems.length;\r\n    this.animate(this.offset);\r\n  }\r\n  /**\r\n   * Método para chamar o slide anterior.\r\n   *\r\n   * ```\r\n   * @ViewChild('slideComponent', { static: true }) slideComponent: PoSlideComponent;\r\n   *\r\n   * myFunction() {\r\n   *  this.slideComponent.previous();\r\n   * }\r\n   * ```\r\n   */\r\n  previous() {\r\n    if (this.currentSlideIndex === 0) {\r\n      this.currentSlideIndex = this.slideItems.length - 1;\r\n      this.animate(this.offset);\r\n      return;\r\n    }\r\n    this.currentSlideIndex = (this.currentSlideIndex - 1 + this.slideItems.length) % this.slideItems.length;\r\n    this.animate(this.offset);\r\n  }\r\n\r\n  previousControl() {\r\n    if (this.interval > poSlideIntervalMin) {\r\n      this.startInterval();\r\n    }\r\n\r\n    this.previous();\r\n  }\r\n\r\n  setSlideHeight(height: number) {\r\n    this.setHeight(height);\r\n  }\r\n\r\n  protected cancelInterval() {\r\n    clearInterval(this.setInterval);\r\n  }\r\n\r\n  protected setSlideItems(slides: Array<PoSlideItem | string | any>) {\r\n    if (this.hasSlides) {\r\n      this.slideContentTemplate ? this.createArrayForTemplate(slides) : this.createArrayFromSlides(slides);\r\n    } else {\r\n      this.slideItems = [];\r\n      this.cancelInterval();\r\n    }\r\n  }\r\n\r\n  protected startSlide() {\r\n    this.setSlideHeight(this.height);\r\n\r\n    if (this.interval > poSlideIntervalMin) {\r\n      this.startInterval();\r\n    }\r\n\r\n    this.currentSlideIndex = 0;\r\n  }\r\n\r\n  protected startInterval() {\r\n    if (this.setInterval) {\r\n      this.cancelInterval();\r\n    }\r\n\r\n    this.setInterval =\r\n      this.hasSlides && this.hasElements\r\n        ? setInterval(() => {\r\n            this.next();\r\n          }, this.interval)\r\n        : undefined;\r\n  }\r\n\r\n  private animate(offset: number) {\r\n    if (this.hasElements) {\r\n      const animation: AnimationFactory = this.buildTransitionAnimation(offset);\r\n\r\n      this.player = animation.create(this.slide.nativeElement);\r\n      this.player.play();\r\n    }\r\n  }\r\n\r\n  private buildTransitionAnimation(offset: number) {\r\n    return this.builder.build([animate(poSlideTiming, keyframes([style({ transform: `translateX(-${offset}px)` })]))]);\r\n  }\r\n\r\n  private createArrayForTemplate(slides: Array<any>) {\r\n    this.slideItems = [...slides];\r\n  }\r\n\r\n  private createArrayFromSlides(slides: Array<PoSlideItem | string | any>) {\r\n    const isStringArray = slides.every(item => typeof item === 'string');\r\n\r\n    if (isStringArray) {\r\n      slides.forEach(element => this.slideItems.push({ image: `${element}` }));\r\n    } else {\r\n      this.slideItems = [...(<Array<PoSlideItem>>slides)];\r\n    }\r\n  }\r\n\r\n  private setDefaultHeight(height: number) {\r\n    if ((height && height <= poSlideMinHeight) || (!height && this.isImageSlide)) {\r\n      this.slide.nativeElement.style.height = `${poSlideDefaultHeight}px`;\r\n      this.imageHeight = poSlideDefaultHeight;\r\n    } else {\r\n      this.imageHeight = undefined;\r\n    }\r\n  }\r\n\r\n  private setHeight(height: number) {\r\n    if (height && height > poSlideMinHeight) {\r\n      this.slide.nativeElement.style.height = `${height}px`;\r\n      this.imageHeight = height;\r\n    } else {\r\n      this.setDefaultHeight(height);\r\n    }\r\n  }\r\n\r\n  private setSlideItemWidth() {\r\n    if (this.hasElements) {\r\n      this.slideItemWidth = this.itemsElements.first.itemElement.nativeElement.getBoundingClientRect().width;\r\n    }\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a seta que controla a passagem de itens do `po-slide`.\r\n */\r\n@Component({\r\n  selector: 'po-slide-control',\r\n  templateUrl: './po-slide-control.component.html'\r\n})\r\nexport class PoSlideControlComponent {\r\n  /** Tipo de controle que aceita os valores: 'previous' e 'next'. */\r\n  @Input('p-control') control: string;\r\n\r\n  /** Evento emitido ao clicar em um controle. */\r\n  @Output('p-click') click = new EventEmitter<any>();\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PoContainerModule } from '../po-container/po-container.module';\r\n\r\nimport { PoSlideCirclesComponent } from './po-slide-circles/po-slide-circles.component';\r\nimport { PoSlideComponent } from './po-slide.component';\r\nimport { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';\r\nimport { PoSlideControlComponent } from './po-slide-control/po-slide-control.component';\r\nimport { PoSlideItemComponent } from './po-slide-item/po-slide-item.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-slide`.\r\n *\r\n * > Para o correto funcionamento do componente `po-slide`, deve ser importado o módulo `BrowserAnimationsModule` no\r\n * > módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, PoContainerModule],\r\n  declarations: [\r\n    PoSlideCirclesComponent,\r\n    PoSlideComponent,\r\n    PoSlideControlComponent,\r\n    PoSlideContentTemplateDirective,\r\n    PoSlideItemComponent\r\n  ],\r\n  exports: [PoSlideComponent, PoSlideContentTemplateDirective],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoSlideModule {}\r\n","/**\r\n * @usedBy PoStepperComponent\r\n *\r\n * @description\r\n *\r\n * <a id=\"stepperStatus\"></a>\r\n *\r\n * *Enums* para os status do `po-stepper` quando utilizada a propriedade `p-steps`.\r\n */\r\nexport enum PoStepperStatus {\r\n  /** Define o estado do *step* como ativo. */\r\n  Active = 'active',\r\n\r\n  /** Define o estado do *step* como padrão. */\r\n  Default = 'default',\r\n\r\n  /** Define o estado do *step* como desabilitado. */\r\n  Disabled = 'disabled',\r\n\r\n  /** Define o estado do *step* como concluído. */\r\n  Done = 'done',\r\n\r\n  /** Define o estado do *step* com erro. */\r\n  Error = 'error'\r\n}\r\n","import { AfterContentInit, Component, ElementRef, Input } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { uuid } from '../../../utils/util';\r\n\r\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-step` é utilizado para envolver e renderizar o conteúdo de um passo (*step*) do `po-stepper`, por exemplo:\r\n *\r\n * ```\r\n * <po-stepper>\r\n *\r\n *    <po-step p-label=\"Endereço\">\r\n *\r\n *        <!-- Conteúdo referente ao endereço -->\r\n *\r\n *    </po-step>\r\n *\r\n *    <po-step p-label=\"Pagamento\">\r\n *\r\n *        <!-- Conteúdo referente ao pagamento -->\r\n *\r\n *    </po-step>\r\n *\r\n *  </po-stepper>\r\n * ```\r\n *\r\n * A renderização do conteúdo envolvido na tela e o controle dos status são feitos automaticamente. No qual, o primeiro\r\n * `po-step` encontrado será colocado como ativo, o próximo fica com o status *default* e os demais ficam\r\n * desabilitados (*disabled*).\r\n *\r\n * Ao clicar no `po-step` que está com o status *default*, o que está ativo ficará com o\r\n * status de concluído (*done*) e o próximo que estava desabilitado ficará com o status *default* e o restante permanecerá\r\n * com o status desabilitado.\r\n *\r\n * > Ao utilizar o `po-step`, o componente `po-stepper` funcionará de forma sequencial, ou seja, não será possível\r\n * pular para outro `po-step` que esteja com o status igual a desabilitado (*disabled*).\r\n *\r\n * Acesse a [documentação do `po-stepper`](/documentation/po-stepper) para ter mais informações sobre o seu funcionamento\r\n * e exemplos de uso.\r\n */\r\n@Component({\r\n  selector: 'po-step',\r\n  templateUrl: 'po-step.component.html'\r\n})\r\nexport class PoStepComponent implements AfterContentInit {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função chamada quando o próximo *step* for clicado ou quando o método `PoStepperComponent.next()` for chamado.\r\n   * Ao retornar `true` define que esse *step* ficará ativo e o atual como concluído (*done*).\r\n   * Também aceita funções que retornem `Observable<boolean>`. Ao retornar um `Observable<boolean>`,\r\n   * garanta que esse `Observable` será completado, caso houver algum erro durante o processo não será possível prosseguir\r\n   * ao próximo *step*.\r\n   *\r\n   * Ao ser disparada, a mesma receberá por parâmetro o `PoStepComponent` atual.\r\n   *\r\n   * O contexto da função que será chamada, será o mesmo que o do `PoStepComponent`, então para poder alterar\r\n   * para o contexto do componente que o está utilizando, pode ser utilizado a propriedade `bind` do Javascript.\r\n   * Por exemplo, para a função `validate`:\r\n   *\r\n   * ```\r\n   * <po-step p-label=\"Step 1\" [p-can-active-next-step]=\"validate.bind(this)\">\r\n   * ...\r\n   * </po-step>\r\n   * ```\r\n   */\r\n  @Input('p-can-active-next-step') canActiveNextStep:\r\n    | ((currentStep) => boolean)\r\n    | ((currentStep) => Observable<boolean>);\r\n\r\n  /** Título que será exibido descrevendo o passo (*step*). */\r\n  @Input('p-label') label: string;\r\n\r\n  // ID do step\r\n  id?: string = uuid();\r\n\r\n  private _status?: PoStepperStatus = PoStepperStatus.Disabled;\r\n\r\n  // Estado de exibição do `po-step`.\r\n  @Input('p-status') set status(status: PoStepperStatus) {\r\n    this._status = status;\r\n\r\n    this.setDisplayOnActiveOrError();\r\n  }\r\n\r\n  get status() {\r\n    return this._status;\r\n  }\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this.setDisplayOnActiveOrError();\r\n  }\r\n\r\n  protected setDisplayOnActiveOrError() {\r\n    this.elementRef.nativeElement.style.display =\r\n      this.status === PoStepperStatus.Active || this.status === PoStepperStatus.Error ? '' : 'none';\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\r\n\r\nconst poMediumStepSize = 32;\r\nconst poLargeStepSize = 48;\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por exibir os círculos dos *steps*.\r\n */\r\n@Component({\r\n  selector: 'po-stepper-circle',\r\n  templateUrl: './po-stepper-circle.component.html'\r\n})\r\nexport class PoStepperCircleComponent {\r\n  // Conteúdo que irá aparecer no círculo do *step*.\r\n  @Input('p-content') content: any;\r\n\r\n  // Define se serão exibidos ícones no lugar de números nos steps.\r\n  @Input('p-icons') icons: boolean;\r\n\r\n  // Tamanho do *step-circle*.\r\n  @Input('p-size') size: number;\r\n\r\n  // Status do *step*.\r\n  @Input('p-status') status: string;\r\n\r\n  get isActive(): boolean {\r\n    return this.status === PoStepperStatus.Active;\r\n  }\r\n\r\n  get isDefault(): boolean {\r\n    return this.status === PoStepperStatus.Default;\r\n  }\r\n\r\n  get isDisabled(): boolean {\r\n    return this.status === PoStepperStatus.Disabled;\r\n  }\r\n\r\n  get isDone(): boolean {\r\n    return this.status === PoStepperStatus.Done;\r\n  }\r\n\r\n  get isError(): boolean {\r\n    return this.status === PoStepperStatus.Error;\r\n  }\r\n\r\n  get isLargeStep(): boolean {\r\n    return this.size >= poLargeStepSize;\r\n  }\r\n\r\n  get isMediumStep(): boolean {\r\n    return this.size >= poMediumStepSize && !this.isLargeStep;\r\n  }\r\n}\r\n","/**\r\n *\r\n * @usedBy PoStepperComponent\r\n *\r\n * @description\r\n *\r\n * <a id=\"stepperOrientation\"></a>\r\n *\r\n * *Enums* para definição da orientação do `po-stepper`.\r\n */\r\nexport enum PoStepperOrientation {\r\n  /** Define a exibição do componente na horizontal. */\r\n  Horizontal = 'horizontal',\r\n\r\n  /** Define a exibição do componente na vertical. */\r\n  Vertical = 'vertical'\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\nimport { PoStepComponent } from './po-step/po-step.component';\r\nimport { PoStepperItem } from './po-stepper-item.interface';\r\nimport { PoStepperOrientation } from './enums/po-stepper-orientation.enum';\r\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\r\n\r\nconst poStepperOrientationDefault = PoStepperOrientation.Horizontal;\r\n\r\n/**\r\n * @description\r\n *\r\n * O `po-stepper` permite que um processo seja dividido em passos para que o usuário o realize\r\n * mais facilmente.\r\n *\r\n * Existem duas formas de utilização:\r\n *\r\n * 1 - Usando o componente [**po-step**](/documentation/po-step) para renderizar e descrever os passos.\r\n *\r\n * 2 - Através da propriedade `p-steps` para descrever os passos do processo, sendo responsabilidade do desenvolvedor o controle\r\n * de renderização do que será exibido a cada *step* ativo.\r\n *\r\n * Através de suas propriedades, é possível definir se sua orientação será horizontal ou vertical,\r\n * além da possibilidade de aumentar o tamanho dos *steps*.\r\n *\r\n * Também é possível navegar entre os *steps* através do teclado utilizando a tecla *tab* e, para ativar o *step* em foco basta\r\n * pressionar a tecla *enter*. Além disso, é possível ativar a exibição de ícones no lugar de números nos *steps* através da\r\n * propriedade [`p-step-icons`](/documentation/po-stepper#stepIconsProperty).\r\n *\r\n * #### Utilizando os métodos do componente:\r\n *\r\n * Para acessar os métodos do componente é necessário ter a referência do mesmo.\r\n *\r\n * Por exemplo, utilizando um [**ViewChild**](https://angular.io/api/core/ViewChild):\r\n *\r\n * ```\r\n * @ViewChild(PoStepperComponent) poStepperComponent: PoStepperComponent;\r\n * ```\r\n *\r\n * E para acessar o método:\r\n *\r\n * ```\r\n * poStepperComponent.next();\r\n * ```\r\n *\r\n * #### Boas práticas\r\n *\r\n * - Evite `labels` extensos que quebram o layout do `po-stepper`, use `labels` diretos, curtos e intuitivos.\r\n * - Utilize apenas um `po-stepper` por página.\r\n */\r\n@Directive()\r\nexport class PoStepperBaseComponent {\r\n  /**\r\n   *\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * <a id=\"stepIconsProperty\"></a>\r\n   *\r\n   * Habilita a exibição de ícone ao invés de número no centro do círculo dos *steps*.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-step-icons') stepIcons: boolean;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define o tamanho dos *steps* em *pixels*, possibilitando um maior destaque.\r\n   *\r\n   * O valor informado deve ser entre `24` e `64`.\r\n   *\r\n   * > Valores que não se enquadrarem a esta regra serão ignorados, mantendo-se o valor *default*.\r\n   *\r\n   * @default `24`\r\n   */\r\n  @Input('p-step-size') stepSize: number;\r\n\r\n  /** Ação que será executada quando o usuário mudar o passo do `po-stepper`. */\r\n  @Output('p-change-step') onChangeStep = new EventEmitter<number | PoStepComponent>();\r\n\r\n  private _orientation?: PoStepperOrientation = poStepperOrientationDefault;\r\n  private _sequential?: boolean = true;\r\n  private _step: number = 1;\r\n  private _steps: Array<PoStepperItem> = [];\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a orientação de exibição do `po-stepper`.\r\n   *\r\n   * > Veja os valores válidos no *enum* [PoStepperOrientation](documentation/po-stepper#stepperOrientation).\r\n   *\r\n   * @default `PoStepperOrientation.Horizontal`\r\n   */\r\n  @Input('p-orientation') set orientation(value: PoStepperOrientation) {\r\n    this._orientation = (<any>Object).values(PoStepperOrientation).includes(value)\r\n      ? value\r\n      : poStepperOrientationDefault;\r\n  }\r\n\r\n  get orientation(): PoStepperOrientation {\r\n    return this._orientation;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Controla o passo atual do `po-stepper`.\r\n   *\r\n   * > Ao utilizar esta propriedade e também utilizar o componente [**po-step**](/documentation/po-step),\r\n   * o valor desta propriedade será ignorada permanecendo a definição do [**po-step**](/documentation/po-step).\r\n   *\r\n   * @default `1`\r\n   */\r\n  @Input('p-step') set step(step: number) {\r\n    if (step >= 1 && step <= this.steps.length) {\r\n      this._step = step;\r\n      this._steps[this._step - 1].status = PoStepperStatus.Active;\r\n    }\r\n  }\r\n\r\n  get step(): number {\r\n    return this._step;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista dos itens do stepper. Se o valor estiver indefinido ou inválido, será inicializado como um array vazio.\r\n   *\r\n   * > Ao utilizar esta propriedade e também utilizar o componente [**po-step**](/documentation/po-step),\r\n   * o valor desta propriedade será ignorada permanecendo a definição do [**po-step**](/documentation/po-step).\r\n   */\r\n  @Input('p-steps') set steps(steps: Array<PoStepperItem>) {\r\n    this._steps = Array.isArray(steps) ? steps : [];\r\n    this._steps.forEach(step => (step.status = PoStepperStatus.Default));\r\n    this.step = 1;\r\n  }\r\n\r\n  get steps(): Array<PoStepperItem> {\r\n    return this._steps;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define se o `po-stepper` será sequencial ou aleatório.\r\n   *\r\n   * > Ao utilizar o componente [**po-step**](/documentation/po-step), o valor desta propriedade sempre será verdadeiro.\r\n   *\r\n   * @default `true`\r\n   */\r\n  @Input('p-sequential') set sequential(sequential: boolean) {\r\n    this._sequential = convertToBoolean(sequential);\r\n  }\r\n\r\n  get sequential(): boolean {\r\n    return this._sequential;\r\n  }\r\n}\r\n","import { AfterContentInit, ChangeDetectorRef, Component, ContentChildren, QueryList } from '@angular/core';\r\n\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { take, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { PoStepperStatus } from './enums/po-stepper-status.enum';\r\nimport { PoStepComponent } from './po-step/po-step.component';\r\nimport { PoStepperBaseComponent } from './po-stepper-base.component';\r\nimport { PoStepperItem } from './po-stepper-item.interface';\r\n\r\n/**\r\n * @docsExtends PoStepperBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-stepper-basic\" title=\"PO Stepper Basic\">\r\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-stepper-basic/sample-po-stepper-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-stepper-labs\" title=\"PO Stepper Labs\">\r\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-stepper-labs/sample-po-stepper-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-stepper-sales\" title=\"PO Stepper - Sales\">\r\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.html\"> </file>\r\n *  <file name=\"sample-po-stepper-sales/sample-po-stepper-sales.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-stepper-active\" title=\"PO Stepper - Active\">\r\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.component.html\"> </file>\r\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.component.ts\"> </file>\r\n *  <file name=\"sample-po-stepper-active/sample-po-stepper-active.service.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-stepper',\r\n  templateUrl: './po-stepper.component.html'\r\n})\r\nexport class PoStepperComponent extends PoStepperBaseComponent implements AfterContentInit {\r\n  @ContentChildren(PoStepComponent) poSteps: QueryList<PoStepComponent>;\r\n\r\n  private currentActiveStep: PoStepComponent;\r\n\r\n  get currentStepIndex(): number {\r\n    return this.step - 1;\r\n  }\r\n\r\n  get stepList(): QueryList<PoStepComponent> | Array<PoStepperItem> {\r\n    return (this.usePoSteps && this.poSteps) || this.steps;\r\n  }\r\n\r\n  get usePoSteps(): boolean {\r\n    return !!this.poSteps.length;\r\n  }\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.activeFirstStep();\r\n\r\n    this.poSteps.changes.subscribe(() => {\r\n      this.controlStepsStatus(0, this.poSteps.first);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Altera o status do *step* para ativo.\r\n   *\r\n   * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\r\n   *\r\n   * @param {number} index Índice do `po-step` que se deseja ativar.\r\n   */\r\n  active(index: number): void {\r\n    if (!this.usePoSteps) {\r\n      return;\r\n    }\r\n\r\n    const stepsArray = this.getPoSteps();\r\n    const step = stepsArray[index];\r\n    this.changeStep(index, step);\r\n  }\r\n\r\n  /**\r\n   * Ativa o primeiro *step*.\r\n   *\r\n   * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\r\n   */\r\n  first(): void {\r\n    if (!this.usePoSteps) {\r\n      return;\r\n    }\r\n\r\n    const firstStep = this.poSteps.first;\r\n    const firstStepIndex = 0;\r\n\r\n    this.changeStep(firstStepIndex, firstStep);\r\n  }\r\n\r\n  /**\r\n   * Ativa o próximo *step*.\r\n   *\r\n   * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\r\n   */\r\n  next(): void {\r\n    if (!this.usePoSteps) {\r\n      return;\r\n    }\r\n\r\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\r\n    const nextIndex = stepIndex + 1;\r\n    const nextStep = steps[nextIndex];\r\n\r\n    this.changeStep(nextIndex, nextStep);\r\n  }\r\n\r\n  /**\r\n   * Ativa o *step* anterior.\r\n   *\r\n   * > Este método é valido apenas para as implementações que utilizam o componente [**po-step**](/documentation/po-step).\r\n   */\r\n  previous(): void {\r\n    if (!this.usePoSteps) {\r\n      return;\r\n    }\r\n\r\n    const { steps, stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\r\n    const previousIndex = stepIndex - 1;\r\n    const previousStep = steps[previousIndex];\r\n\r\n    this.changeStep(previousIndex, previousStep);\r\n  }\r\n\r\n  changeStep(stepIndex: number, step?: PoStepComponent): void {\r\n    this.allowNextStep(stepIndex)\r\n      .pipe(take(1))\r\n      .subscribe(nextStepAllowed => {\r\n        if (nextStepAllowed) {\r\n          const isDifferentStep = !this.currentActiveStep || step.id !== this.currentActiveStep.id;\r\n\r\n          if (this.usePoSteps && isDifferentStep) {\r\n            this.controlStepsStatus(stepIndex, step);\r\n            this.onChangeStep.emit(step);\r\n          } else if (!this.usePoSteps && stepIndex !== this.currentStepIndex) {\r\n            // if para tratamento do modelo antigo do po-stepper\r\n            this.onChangeStep.emit(stepIndex + 1);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  onStepActive(step: PoStepComponent) {\r\n    this.currentActiveStep = step;\r\n\r\n    const { stepIndex } = this.getStepsAndIndex(this.currentActiveStep);\r\n\r\n    this.poSteps.forEach((stepChild, i) => {\r\n      if (i < stepIndex) {\r\n        stepChild.status = PoStepperStatus.Done;\r\n      }\r\n    });\r\n  }\r\n\r\n  trackByFn(step: PoStepComponent) {\r\n    return step.id;\r\n  }\r\n\r\n  private activeFirstStep() {\r\n    const hasStepActive = this.poSteps.some(poStep => poStep.status === PoStepperStatus.Active);\r\n\r\n    if (this.usePoSteps && !hasStepActive) {\r\n      this.changeStep(0, this.poSteps.first);\r\n    }\r\n  }\r\n\r\n  private allowNextStep(nextStepIndex: number): Observable<boolean> {\r\n    if (!this.sequential) {\r\n      return of(true);\r\n    }\r\n\r\n    const isAllowNextStep$ = this.usePoSteps\r\n      ? this.isBeforeStep(nextStepIndex) || this.canActiveNextStep(this.currentActiveStep)\r\n      : this.steps.slice(this.step, nextStepIndex).every(step => step.status === PoStepperStatus.Done);\r\n\r\n    return typeof isAllowNextStep$ === 'boolean' ? of(isAllowNextStep$) : isAllowNextStep$;\r\n  }\r\n\r\n  private canActiveNextStep(currentActiveStep = <PoStepComponent>{}): Observable<boolean> {\r\n    if (!currentActiveStep.canActiveNextStep) {\r\n      return of(true);\r\n    }\r\n\r\n    const canActiveNextStep = currentActiveStep.canActiveNextStep(currentActiveStep);\r\n\r\n    const canActiveNextStep$ = canActiveNextStep instanceof Observable ? canActiveNextStep : of(canActiveNextStep);\r\n\r\n    return canActiveNextStep$.pipe(\r\n      tap(isCanActiveNextStep => {\r\n        currentActiveStep.status = this.getStepperStatusByCanActive(isCanActiveNextStep);\r\n      }),\r\n      catchError(err => {\r\n        currentActiveStep.status = PoStepperStatus.Error;\r\n\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n\r\n  private controlStepsStatus(stepIndex: number, step: PoStepComponent): void {\r\n    if (this.usePoSteps) {\r\n      this.setStepAsActive(step);\r\n      this.setNextStepAsDefault(step);\r\n\r\n      if (this.isBeforeStep(stepIndex)) {\r\n        this.setFinalSteppersAsDisabled(stepIndex);\r\n      }\r\n\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  private getStepperStatusByCanActive(canActiveNextStep: boolean): PoStepperStatus {\r\n    return canActiveNextStep ? PoStepperStatus.Done : PoStepperStatus.Error;\r\n  }\r\n\r\n  private getStepsAndIndex(step: PoStepComponent = <any>{}): { steps: Array<PoStepComponent>; stepIndex: number } {\r\n    const steps = this.getPoSteps();\r\n    const stepIndex = steps.findIndex(poStep => poStep.id === step.id);\r\n\r\n    return { steps, stepIndex };\r\n  }\r\n\r\n  private getPoSteps(): Array<PoStepComponent> {\r\n    return this.poSteps.toArray();\r\n  }\r\n\r\n  private isBeforeStep(stepIndex: number): boolean {\r\n    const currentActiveStepIndex = () => this.getPoSteps().findIndex(step => step.id === this.currentActiveStep.id);\r\n\r\n    return !!this.currentActiveStep && currentActiveStepIndex() >= stepIndex;\r\n  }\r\n\r\n  private setFinalSteppersAsDisabled(stepIndex: number): void {\r\n    this.getPoSteps()\r\n      .filter((step, index) => step && index >= stepIndex + 2)\r\n      .forEach(step => (step.status = PoStepperStatus.Disabled));\r\n  }\r\n\r\n  private setStepAsActive(step: PoStepComponent): void {\r\n    step.status = PoStepperStatus.Active;\r\n  }\r\n\r\n  private setNextStepAsDefault(currentStep: PoStepComponent): void {\r\n    const { steps, stepIndex } = this.getStepsAndIndex(currentStep);\r\n    const nextIndex = stepIndex + 1;\r\n\r\n    if (nextIndex < this.poSteps.length) {\r\n      steps[nextIndex].status = PoStepperStatus.Default;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por exibir as legendas dos *steps*.\r\n */\r\n@Component({\r\n  selector: 'po-stepper-label',\r\n  templateUrl: './po-stepper-label.component.html'\r\n})\r\nexport class PoStepperLabelComponent {\r\n  // Conteúdo da label.\r\n  @Input('p-content') content: string;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { browserLanguage, convertToBoolean, isTypeof } from './../../../utils/util';\r\nimport { poLocaleDefault } from './../../../services/po-language/po-language.constant';\r\nimport { PoStepperOrientation } from '../enums/po-stepper-orientation.enum';\r\nimport { PoStepperStatus } from '../enums/po-stepper-status.enum';\r\n\r\nconst poStepperStepSizeDefault = 24;\r\nconst poStepperStepSizeMax = 64;\r\nconst poStepLiteralsDefault = {\r\n  en: { label: 'Step' },\r\n  es: { label: 'Paso' },\r\n  pt: { label: 'Passo' }\r\n};\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente que representa um *step* contendo as ligações das laterais (`po-stepper-step-bar`) e a label.\r\n */\r\n@Component({\r\n  selector: 'po-stepper-step',\r\n  templateUrl: 'po-stepper-step.component.html'\r\n})\r\nexport class PoStepperStepComponent {\r\n  // Conteúdo que será repassado para o componente `p-circle-content` através da propriedade `p-content`.\r\n  @Input('p-circle-content') circleContent: any;\r\n\r\n  // Define a orientação de exibição.\r\n  @Input('p-orientation') orientation: PoStepperOrientation;\r\n\r\n  // Informa o status da proxima etapa.\r\n  @Input('p-next-status') nextStatus;\r\n\r\n  // Evento que será emitido quando o status do *step* estiver ativo (`PoStepperStatus.Active`).\r\n  @Output('p-activated') activated = new EventEmitter<any>();\r\n\r\n  // Evento que será emitido ao clicar no *step*.\r\n  @Output('p-click') click = new EventEmitter<any>();\r\n\r\n  // Evento que será emitido ao focar no *step* e pressionar a tecla *enter*.\r\n  @Output('p-enter') enter = new EventEmitter<any>();\r\n\r\n  readonly literals = {\r\n    ...poStepLiteralsDefault[poLocaleDefault],\r\n    ...poStepLiteralsDefault[browserLanguage()]\r\n  };\r\n\r\n  private _label: string;\r\n  private _status: PoStepperStatus;\r\n  private _stepIcons?: boolean = false;\r\n  private _stepSize: number = poStepperStepSizeDefault;\r\n\r\n  // Label do *step*.\r\n  @Input('p-label') set label(value: string) {\r\n    this._label = isTypeof(value, 'string') ? value : `${this.literals.label} ${this.circleContent}`;\r\n  }\r\n\r\n  get label(): string {\r\n    return this._label;\r\n  }\r\n\r\n  // Define o estado de exibição.\r\n  @Input('p-status') set status(value: PoStepperStatus) {\r\n    this._status = (value as string) ? value : undefined;\r\n\r\n    if (this.status === PoStepperStatus.Active) {\r\n      this.activated.emit();\r\n    }\r\n  }\r\n\r\n  get status(): PoStepperStatus {\r\n    return this._status;\r\n  }\r\n\r\n  @Input('p-step-icons') set stepIcons(stepIcons: boolean) {\r\n    this._stepIcons = convertToBoolean(stepIcons);\r\n  }\r\n\r\n  get stepIcons(): boolean {\r\n    return this._stepIcons;\r\n  }\r\n\r\n  // Tamanho do `step` em *pixels*, possibilitando um maior destaque.\r\n  // O valor informado deve ser entre `24` e `64`.\r\n  @Input('p-step-size') set stepSize(value: number) {\r\n    this._stepSize =\r\n      value >= poStepperStepSizeDefault && value <= poStepperStepSizeMax ? value : poStepperStepSizeDefault;\r\n  }\r\n\r\n  get stepSize(): number {\r\n    return this._stepSize;\r\n  }\r\n\r\n  get halfStepSize(): number {\r\n    return this.stepSize / 2;\r\n  }\r\n\r\n  get isVerticalOrientation(): boolean {\r\n    return this.orientation === PoStepperOrientation.Vertical;\r\n  }\r\n\r\n  get marginHorizontalBar(): number {\r\n    return this.isVerticalOrientation ? undefined : this.halfStepSize;\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status) {\r\n      case PoStepperStatus.Active:\r\n        return 'po-stepper-step-default';\r\n      case PoStepperStatus.Disabled:\r\n        return 'po-stepper-step-disabled';\r\n      case PoStepperStatus.Done:\r\n        return 'po-stepper-step-default';\r\n      case PoStepperStatus.Error:\r\n        return 'po-stepper-step-error';\r\n      default:\r\n        return 'po-stepper-step-default';\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    if (this.status !== PoStepperStatus.Disabled) {\r\n      this.click.emit();\r\n    }\r\n  }\r\n\r\n  onEnter(): void {\r\n    if (this.status !== PoStepperStatus.Disabled) {\r\n      this.enter.emit();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoStepComponent } from './po-step/po-step.component';\r\nimport { PoStepperCircleComponent } from './po-stepper-circle/po-stepper-circle.component';\r\nimport { PoStepperComponent } from './po-stepper.component';\r\nimport { PoStepperLabelComponent } from './po-stepper-label/po-stepper-label.component';\r\nimport { PoStepperStepComponent } from './po-stepper-step/po-stepper-step.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-stepper\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [\r\n    PoStepComponent,\r\n    PoStepperCircleComponent,\r\n    PoStepperComponent,\r\n    PoStepperLabelComponent,\r\n    PoStepperStepComponent\r\n  ],\r\n  exports: [PoStepComponent, PoStepperComponent]\r\n})\r\nexport class PoStepperModule {}\r\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../../utils/util';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente responsável por manipular os botões de aba.\r\n */\r\n@Component({\r\n  selector: 'po-tab-button',\r\n  templateUrl: './po-tab-button.component.html'\r\n})\r\nexport class PoTabButtonComponent implements OnChanges {\r\n  // Desabilita o botão\r\n  @Input('p-disabled') disabled: boolean;\r\n\r\n  // Identificador do componente\r\n  @Input('p-id') id: string;\r\n\r\n  // Rótulo do botão\r\n  @Input('p-label') label: string;\r\n\r\n  // Diminui o tamanho do botão\r\n  @Input('p-small') small: boolean;\r\n\r\n  // Função sera emitida quando a tab ficar ativada\r\n  @Output('p-activated') activated = new EventEmitter();\r\n\r\n  // Função sera emitida quando a tab ficar desabilitada ou escondida\r\n  @Output('p-change-state') changeState = new EventEmitter();\r\n\r\n  // Método recebido do usuário para ser disparado quando clicar na aba\r\n  @Output('p-click') click = new EventEmitter();\r\n\r\n  private _active: boolean;\r\n  private _hide: boolean;\r\n\r\n  // Ativa o botão\r\n  @Input('p-active') set active(value: boolean) {\r\n    this._active = value;\r\n\r\n    this.emitActivated();\r\n  }\r\n\r\n  get active() {\r\n    return this._active;\r\n  }\r\n\r\n  // Oculta o botão\r\n  @Input('p-hide') set hide(value: boolean) {\r\n    this._hide = convertToBoolean(value);\r\n\r\n    this.setDisplayOnHide();\r\n  }\r\n\r\n  get hide(): boolean {\r\n    return this._hide;\r\n  }\r\n\r\n  constructor(private elementRef: ElementRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ((changes.hide && changes.hide.currentValue) || (changes.disabled && changes.disabled.currentValue)) {\r\n      this.changeState.emit(this);\r\n    }\r\n  }\r\n\r\n  onClick() {\r\n    if (!this.disabled) {\r\n      this.click.emit(this.id);\r\n    }\r\n  }\r\n\r\n  private emitActivated() {\r\n    if (this.active) {\r\n      this.activated.emit(this);\r\n    }\r\n  }\r\n\r\n  private setDisplayOnHide() {\r\n    this.elementRef.nativeElement.style.display = this.hide ? 'none' : '';\r\n  }\r\n}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, uuid } from '../../../utils/util';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.\r\n *\r\n * Com este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,\r\n * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.\r\n *\r\n * > Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).\r\n */\r\n@Directive()\r\nexport abstract class PoTabBaseComponent {\r\n  /** Rótulo da aba. */\r\n  @Input('p-label') label: string;\r\n\r\n  /** Método disparado ao clicar na aba. */\r\n  @Output('p-click') click = new EventEmitter();\r\n\r\n  // ID da aba\r\n  id?: string = uuid();\r\n\r\n  private _active?: boolean = false;\r\n  private _disabled?: boolean = false;\r\n  private _hide?: boolean = false;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ativa a aba exibindo seu conteúdo.\r\n   *\r\n   * > Sugere-se utilizar na aba de conteúdo inicial.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-active') set active(active: boolean) {\r\n    this._active = convertToBoolean(active);\r\n    this.setDisplayOnActive();\r\n  }\r\n\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita a aba.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(disabled: boolean) {\r\n    this._disabled = convertToBoolean(disabled);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Oculta a aba.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-hide') set hide(hide: boolean) {\r\n    this._hide = convertToBoolean(hide);\r\n  }\r\n\r\n  get hide(): boolean {\r\n    return this._hide;\r\n  }\r\n\r\n  protected abstract setDisplayOnActive();\r\n}\r\n","import { AfterContentInit, Component, ElementRef } from '@angular/core';\r\n\r\nimport { PoTabBaseComponent } from './po-tab-base.component';\r\n\r\n/**\r\n * @docsExtends PoTabBaseComponent\r\n */\r\n@Component({\r\n  selector: 'po-tab',\r\n  templateUrl: './po-tab.component.html'\r\n})\r\nexport class PoTabComponent extends PoTabBaseComponent implements AfterContentInit {\r\n  constructor(private elementRef: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.setDisplayOnActive();\r\n  }\r\n\r\n  protected setDisplayOnActive() {\r\n    this.elementRef.nativeElement.style.display = this.active ? '' : 'none';\r\n  }\r\n}\r\n","import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoPopoverComponent } from '../../po-popover/po-popover.component';\r\nimport { PoTabComponent } from '../po-tab/po-tab.component';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para agrupamento de componentes `po-tab-button` que os rendereiza em uma um caixa de diálogo\r\n * no formato de lista.\r\n */\r\n@Component({\r\n  selector: 'po-tab-dropdown',\r\n  templateUrl: './po-tab-dropdown.component.html'\r\n})\r\nexport class PoTabDropdownComponent {\r\n  @ViewChild('popover', { static: true }) popover: PoPopoverComponent;\r\n  @ViewChild('tabDrop', { read: ElementRef, static: true }) tabDropdown: ElementRef;\r\n\r\n  // Rótulo do `po-tab-button`\r\n  @Input('p-label') label: string;\r\n\r\n  // Diminui o tamanho do botão\r\n  @Input('p-small') small: boolean;\r\n\r\n  // Lista de abas\r\n  @Input('p-tabs') tabs: Array<PoTabComponent> = [];\r\n\r\n  // Evento que será emitido ao ativar uma aba\r\n  @Output('p-activated') activated = new EventEmitter<any>();\r\n\r\n  // Evento que será emitido a aba for desabilitada ou ocultada\r\n  @Output('p-change-state') changeState = new EventEmitter<any>();\r\n\r\n  // Evento de click\r\n  @Output('p-click') click = new EventEmitter<any>();\r\n\r\n  getContainerClass() {\r\n    return this.small ? 'po-tab-dropdown-container-sm' : 'po-tab-dropdown-container';\r\n  }\r\n\r\n  togglePopover(): void {\r\n    this.popover.isHidden ? this.popover.open() : this.popover.close();\r\n  }\r\n}\r\n","import { Input, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-tabs` é responsável por agrupar [abas](/documentation/po-tab) dispostas numa linha horizontal,\r\n * ideal para facilitar a organização de conteúdos.\r\n *\r\n * Em dispositivos móveis o componente exibirá tadas as abas de maneira linear gerando um *scroll* na horizontal. Já em telas telas com\r\n * resoluções maiores, o componente exibirá até cinco abas normalmente, porém, à partir de seis abas o componente automaticamente torna\r\n * visível apenas as quatro primeiras, agrupando as subsequentes na quinta aba rotulada de **Mais**.\r\n *\r\n * > As abas que estiverem agrupadas serão dispostas numa cascata suspensa que será exibida ao clicar no botão **Mais**.\r\n *\r\n * É possível realizar a navegação entre as abas através da tecla TAB do teclado.\r\n * Caso uma aba estiver desabilitada, não receberá foco de navegação.\r\n *\r\n * #### Boas práticas\r\n *\r\n * - Evite utilizar uma quantidade excessiva de abas, pois irá gerar um *scroll* muito longo no `dropdown`;\r\n * - Evite `labels` extensos para as `tabs` pois podem quebrar seu *layout*, use `labels` diretos, curtos e intuitivos.\r\n */\r\n@Directive()\r\nexport class PoTabsBaseComponent {\r\n  private _small?: boolean = false;\r\n\r\n  /**\r\n   * @optinal\r\n   *\r\n   * @description\r\n   *\r\n   * Diminui o tamanho das abas.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-small') set small(value: boolean) {\r\n    this._small = convertToBoolean(value);\r\n  }\r\n\r\n  get small(): boolean {\r\n    return this._small;\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, ContentChildren, QueryList, ViewChild } from '@angular/core';\r\n\r\nimport { isMobile } from './../../utils/util';\r\n\r\nimport { PoTabComponent } from './po-tab/po-tab.component';\r\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\r\nimport { PoTabsBaseComponent } from './po-tabs-base.component';\r\n\r\nconst poTabsMaxNumberOfTabs = 5;\r\n\r\n/**\r\n * @docsExtends PoTabsBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-tabs-basic\" title=\"PO Tabs Basic\">\r\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-tabs-basic/sample-po-tabs-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tabs-labs\" title=\"PO Tabs Labs\">\r\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-tabs-labs/sample-po-tabs-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tabs-travel\" title=\"PO Tabs - Travel\">\r\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.html\"> </file>\r\n *  <file name=\"sample-po-tabs-travel/sample-po-tabs-travel.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tabs-business-conf\" title=\"PO Tabs - Business Conference\">\r\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.html\"> </file>\r\n *  <file name=\"sample-po-tabs-business-conf/sample-po-tabs-business-conf.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-tabs',\r\n  templateUrl: './po-tabs.component.html'\r\n})\r\nexport class PoTabsComponent extends PoTabsBaseComponent {\r\n  // Tabs utilizados no ng-content\r\n  @ContentChildren(PoTabComponent) tabs: QueryList<PoTabComponent>;\r\n\r\n  @ViewChild('tabDropdown', { static: true }) tabDropdown: PoTabDropdownComponent;\r\n\r\n  maxNumberOfTabs = poTabsMaxNumberOfTabs;\r\n\r\n  private previousActiveTab: PoTabComponent;\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef) {\r\n    super();\r\n  }\r\n\r\n  get isMobileDevice() {\r\n    return isMobile();\r\n  }\r\n\r\n  get isShowTabDropdown() {\r\n    return !this.isMobileDevice && this.visibleTabs.length > this.maxNumberOfTabs;\r\n  }\r\n\r\n  // tabs que serão apresentadas na aba \"Mais\"\r\n  get overflowedTabs() {\r\n    return this.visibleTabs.filter((_tab, index) => index > this.maxNumberOfTabs - 2);\r\n  }\r\n\r\n  get visibleTabs() {\r\n    return this.tabs.filter(tab => !tab.hide);\r\n  }\r\n\r\n  closePopover(): void {\r\n    const containsPopoverVisible = this.tabDropdown && this.tabDropdown.popover && !this.tabDropdown.popover.isHidden;\r\n\r\n    if (containsPopoverVisible) {\r\n      this.tabDropdown.popover.close();\r\n    }\r\n  }\r\n\r\n  isVisibleTab(tab) {\r\n    if (this.isMobileDevice) {\r\n      return true;\r\n    }\r\n\r\n    const visibleTabIndex = this.visibleTabs.findIndex(visibleTab => visibleTab.id === tab.id);\r\n\r\n    return this.visibleTabs.length <= this.maxNumberOfTabs || visibleTabIndex < this.maxNumberOfTabs - 1;\r\n  }\r\n\r\n  // Função disparada quando alguma tab ficar ativa\r\n  onTabActive(tab) {\r\n    this.previousActiveTab = this.tabs.find(tabChild => tabChild.active && tabChild.id !== tab.id);\r\n\r\n    this.deactivateTab();\r\n  }\r\n\r\n  // funcao será disparada quando mudar o estado do poTab para desabilitado ou escondido.\r\n  onTabChangeState(tab: PoTabComponent) {\r\n    if (tab.active) {\r\n      tab.active = false;\r\n\r\n      this.activeDistinctTab();\r\n\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  // selectiona a aba informada por parametro, caso houver click faz a emição do evento.\r\n  selectedTab(tab: PoTabComponent) {\r\n    tab.active = true;\r\n\r\n    if (tab.click) {\r\n      tab.click.emit(tab);\r\n    }\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  trackByFn(_i, tab: PoTabComponent) {\r\n    return tab.id;\r\n  }\r\n\r\n  // ativa a previousActiveTab ou primeira tab encontrada.\r\n  private activeDistinctTab() {\r\n    if (this.previousActiveTab) {\r\n      this.previousActiveTab.active = true;\r\n    } else {\r\n      this.activeFirstTab();\r\n    }\r\n  }\r\n\r\n  // Ativa a primeira Tab que não estiver desabilitada ou escondida.\r\n  private activeFirstTab() {\r\n    this.tabs.some(tabChild => {\r\n      if (!tabChild.disabled && !tabChild.hide) {\r\n        tabChild.active = true;\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n  // desativa previousActiveTab e dispara a detecção de mudança.\r\n  private deactivateTab() {\r\n    if (this.previousActiveTab) {\r\n      this.previousActiveTab.active = false;\r\n\r\n      this.changeDetector.detectChanges();\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoPopoverModule } from '../po-popover/po-popover.module';\r\n\r\nimport { PoTabButtonComponent } from './po-tab-button/po-tab-button.component';\r\nimport { PoTabComponent } from './po-tab/po-tab.component';\r\nimport { PoTabDropdownComponent } from './po-tab-dropdown/po-tab-dropdown.component';\r\nimport { PoTabsComponent } from './po-tabs.component';\r\n\r\n/**\r\n * @description\r\n * Módulo do componente po-tabs\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoPopoverModule],\r\n  declarations: [PoTabButtonComponent, PoTabComponent, PoTabDropdownComponent, PoTabsComponent],\r\n  exports: [PoTabComponent, PoTabsComponent]\r\n})\r\nexport class PoTabsModule {}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\n\r\nimport { isTypeof } from '../../../utils/util';\r\n\r\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\r\n\r\nconst poToolbarActionsIconDefault = 'po-icon-more';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoToolbarComponent\r\n *\r\n * @description\r\n *\r\n * O componente `po-toolbar-actions` tem como objetivo receber uma lista de ações e um ícone que podem ser personalizados.\r\n */\r\n@Component({\r\n  selector: 'po-toolbar-actions',\r\n  templateUrl: './po-toolbar-actions.component.html'\r\n})\r\nexport class PoToolbarActionsComponent {\r\n  /** Define uma lista de ações. */\r\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\r\n\r\n  private _actionsIcon?: string | TemplateRef<void> = poToolbarActionsIconDefault;\r\n\r\n  /** Define o ícone das ações. */\r\n  @Input('p-actions-icon') set actionsIcon(icon: string | TemplateRef<void>) {\r\n    this._actionsIcon = isTypeof(icon, 'string') || icon instanceof TemplateRef ? icon : poToolbarActionsIconDefault;\r\n  }\r\n\r\n  get actionsIcon() {\r\n    return this._actionsIcon;\r\n  }\r\n}\r\n","import { Input, Directive, TemplateRef } from '@angular/core';\r\n\r\nimport { convertToInt } from '../../utils/util';\r\n\r\nimport { PoToolbarAction } from './po-toolbar-action.interface';\r\nimport { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.\r\n */\r\n@Directive()\r\nexport class PoToolbarBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define uma lista de ações que serão exibidas ao clicar no ícone declarado em `p-actions-icon`.\r\n   */\r\n  @Input('p-actions') actions?: Array<PoToolbarAction>;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define um [ícone](/guides/icons) para a propriedade `p-actions`.\r\n   *\r\n   * É possível usar qualquer um dos ícones da [Biblioteca de ícones](/guides/icons). conforme exemplo abaixo:\r\n   * ```\r\n   * <po-toolbar p-actions-icon=\"po-icon-user\" [p-actions]=\"actions\"></po-toolbar>\r\n   * ```\r\n   * Também é possível utilizar outras fontes de ícones, por exemplo a biblioteca *Font Awesome*, da seguinte forma:\r\n   * ```\r\n   * <po-toolbar p-actions-icon=\"far fa-comment-alt\" [p-actions]=\"actions\"></po-toolbar>\r\n   * ```\r\n   * Outra opção seria a customização do ícone através do `TemplateRef`, conforme exemplo abaixo:\r\n   * ```\r\n   * <po-toolbar [p-actions-icon]=\"template\" [p-actions]=\"actions\"></po-toolbar>\r\n   *\r\n   * <ng-template #template>\r\n   *  <ion-icon style=\"font-size: inherit\" name=\"heart\"></ion-icon>\r\n   * </ng-template>\r\n   * ```\r\n   * > Para o ícone enquadrar corretamente, deve-se utilizar `font-size: inherit` caso o ícone utilizado não aplique-o.\r\n   *\r\n   * > Caso não haja ações definidas em `p-actions`, o ícone não será exibido.\r\n   *\r\n   * @default `po-icon-more`\r\n   */\r\n  @Input('p-actions-icon') actionsIcon?: string | TemplateRef<void>;\r\n\r\n  /** Define o objeto que será o cabeçalho da lista de ações com as informações do perfil. */\r\n  @Input('p-profile') profile?: PoToolbarProfile;\r\n\r\n  /** Define uma lista de ações que serão exibidas ao clicar no ícone do perfil. */\r\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\r\n\r\n  /** Se falso, oculta o ícone de notificações. */\r\n  @Input('p-show-notification') showNotification?: boolean = true;\r\n\r\n  /** Título do *toolbar* e aplicação. */\r\n  @Input('p-title') title: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Lista de ações da notificação.\r\n   */\r\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\r\n\r\n  private _notificationNumber?: number;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Número de notificações.\r\n   */\r\n  @Input('p-notification-number') set notificationNumber(value: number) {\r\n    this._notificationNumber = convertToInt(value, 0);\r\n  }\r\n\r\n  get notificationNumber(): number {\r\n    return this._notificationNumber;\r\n  }\r\n\r\n  get isShowProfile(): boolean {\r\n    return !!(this.profile || this.profileActions);\r\n  }\r\n}\r\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { PoToolbarBaseComponent } from './po-toolbar-base.component';\r\n\r\n/**\r\n * @docsExtends PoToolbarBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-toolbar-basic\" title=\"PO Toolbar Basic\">\r\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-toolbar-basic/sample-po-toolbar-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-toolbar-labs\" title=\"PO Toolbar Labs\">\r\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-toolbar-labs/sample-po-toolbar-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-toolbar-logged\" title=\"PO Toolbar - Logged\">\r\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.html\"> </file>\r\n *  <file name=\"sample-po-toolbar-logged/sample-po-toolbar-logged.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-toolbar',\r\n  templateUrl: './po-toolbar.component.html'\r\n})\r\nexport class PoToolbarComponent extends PoToolbarBaseComponent implements OnInit {\r\n  constructor(private titleService: Title, viewRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setTitle(this.title);\r\n  }\r\n\r\n  private setTitle(newTitle: string) {\r\n    this.titleService.setTitle(newTitle);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\r\n\r\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @usedBy PoToolbarComponent\r\n *\r\n * @description\r\n *\r\n * O componente `po-toolbar-notification` tem como objetivo notificar o usuário de novas ações da aplicação que necessitam de atenção,\r\n * como por exemplo um alerta de nova mensagem.\r\n *\r\n * O mesmo também permite que a cada nova notificação seja incrementado e exibido, ou não, este número em uma *tag* ao lado do\r\n * ícone de notificações.\r\n */\r\n@Component({\r\n  selector: 'po-toolbar-notification',\r\n  templateUrl: './po-toolbar-notification.component.html',\r\n  providers: [PoControlPositionService]\r\n})\r\nexport class PoToolbarNotificationComponent {\r\n  /** Define uma lista de ações. */\r\n  @Input('p-notification-actions') notificationActions?: Array<PoToolbarAction>;\r\n\r\n  private _notificationNumber?: number = 0;\r\n\r\n  /** Define o número de notificações. */\r\n  @Input('p-notification-number') set notificationNumber(value: number) {\r\n    this._notificationNumber = Number.isInteger(value) ? value : 0;\r\n  }\r\n\r\n  get notificationNumber() {\r\n    return this._notificationNumber;\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { PoControlPositionService } from '../../../services/po-control-position/po-control-position.service';\r\n\r\nimport { PoToolbarProfile } from './po-toolbar-profile.interface';\r\nimport { PoToolbarAction } from '../po-toolbar-action.interface';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @docsExtends PoToolbarProfileComponent\r\n *\r\n * @description\r\n *\r\n * Componente `po-toolbar-profile`.\r\n */\r\n@Component({\r\n  selector: 'po-toolbar-profile',\r\n  templateUrl: './po-toolbar-profile.component.html',\r\n  providers: [PoControlPositionService]\r\n})\r\nexport class PoToolbarProfileComponent {\r\n  /** Objeto que implementa a interface `PoToolbarProfile`. */\r\n  @Input('p-profile') profile: PoToolbarProfile;\r\n\r\n  /** Define uma lista de ações. */\r\n  @Input('p-profile-actions') profileActions?: Array<PoToolbarAction>;\r\n\r\n  get profileAvatar() {\r\n    return this.profile ? this.profile.avatar : undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoAvatarModule } from './../po-avatar/po-avatar.module';\r\nimport { PoIconModule } from './../po-icon/po-icon.module';\r\nimport { PoPopupModule } from '../po-popup/po-popup.module';\r\nimport { PoToolbarActionsComponent } from './po-toolbar-actions/po-toolbar-actions.component';\r\nimport { PoToolbarComponent } from './po-toolbar.component';\r\nimport { PoToolbarNotificationComponent } from './po-toolbar-notification/po-toolbar-notification.component';\r\nimport { PoToolbarProfileComponent } from './po-toolbar-profile/po-toolbar-profile.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-toolbar\r\n *\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoAvatarModule, PoPopupModule, PoIconModule],\r\n  declarations: [\r\n    PoToolbarActionsComponent,\r\n    PoToolbarComponent,\r\n    PoToolbarNotificationComponent,\r\n    PoToolbarProfileComponent\r\n  ],\r\n  exports: [PoToolbarComponent],\r\n  providers: [],\r\n  schemas: []\r\n})\r\nexport class PoToolbarModule {}\r\n","import { EventEmitter, Input, Output, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean } from '../../utils/util';\r\n\r\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\r\n\r\nconst poTreeViewMaxLevel = 4;\r\n\r\n/**\r\n * @description\r\n *\r\n * O componente fornece um modelo de visualização em árvore, possibilitando a visualização das informações de maneira\r\n * hierárquica, desta forma sendo possível utilizar até 4 níveis.\r\n *\r\n * Nele é possível navegar entre os itens através da tecla *tab*, permitindo expandir ou colapsar o item em foco\r\n * por meio das teclas *enter* e *space*.\r\n *\r\n * Além da navegação, o componente possibilita também a seleção dos itens do primeiro ao último nível, tanto de forma parcial como completa.\r\n *\r\n * O componente também possui eventos disparados ao marcar/desmarcar e expandir/colapsar os itens.\r\n */\r\n@Directive()\r\nexport class PoTreeViewBaseComponent {\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será disparada ao colapsar um item.\r\n   *\r\n   * > Como parâmetro o componente envia o item colapsado.\r\n   */\r\n  @Output('p-collapsed') collapsed = new EventEmitter<PoTreeViewItem>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será disparada ao expandir um item.\r\n   *\r\n   * > Como parâmetro o componente envia o item expandido.\r\n   */\r\n  @Output('p-expanded') expanded = new EventEmitter<PoTreeViewItem>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será disparada ao selecionar um item.\r\n   *\r\n   * > Como parâmetro o componente envia o item selecionado.\r\n   */\r\n  @Output('p-selected') selected = new EventEmitter<PoTreeViewItem>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será disparada ao desfazer a seleção de um item.\r\n   *\r\n   * > Como parâmetro o componente envia o item que foi desmarcado.\r\n   */\r\n  @Output('p-unselected') unselected = new EventEmitter<PoTreeViewItem>();\r\n\r\n  private _items: Array<PoTreeViewItem> = [];\r\n  private _selectable: boolean = false;\r\n\r\n  /**\r\n   * Lista de itens do tipo `PoTreeViewItem` que será renderizada pelo componente.\r\n   */\r\n  @Input('p-items') set items(value: Array<PoTreeViewItem>) {\r\n    this._items = Array.isArray(value) ? this.getItemsByMaxLevel(value) : [];\r\n  }\r\n\r\n  get items() {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Habilita uma caixa de seleção para selecionar e/ou desmarcar um item da lista.\r\n   *\r\n   * @default false\r\n   */\r\n  @Input('p-selectable') set selectable(value: boolean) {\r\n    this._selectable = convertToBoolean(value);\r\n  }\r\n\r\n  get selectable() {\r\n    return this._selectable;\r\n  }\r\n\r\n  protected emitExpanded(treeViewItem: PoTreeViewItem) {\r\n    const event = treeViewItem.expanded ? 'expanded' : 'collapsed';\r\n\r\n    this[event].emit({ ...treeViewItem });\r\n  }\r\n\r\n  protected emitSelected(treeViewItem: PoTreeViewItem) {\r\n    const event = treeViewItem.selected ? 'selected' : 'unselected';\r\n\r\n    this.updateItemsOnSelect(treeViewItem);\r\n\r\n    this[event].emit({ ...treeViewItem });\r\n  }\r\n\r\n  private addChildItemInParent(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\r\n    if (!parentItem.subItems) {\r\n      parentItem.subItems = [];\r\n    }\r\n\r\n    parentItem.subItems.push(childItem);\r\n  }\r\n\r\n  // caso houver parentItem:\r\n  //  - expande o parentItem caso o filho estiver expandido;\r\n  //  - adiciona o childItem no parentItem;\r\n  //  - marca o parentItem caso conter subItems marcodos ou nulos;\r\n  // Se não conter parentItem, adiciona o childItem no items.\r\n  private addItem(items: Array<PoTreeViewItem>, childItem: PoTreeViewItem, parentItem?: PoTreeViewItem) {\r\n    if (parentItem) {\r\n      this.expandParentItem(childItem, parentItem);\r\n      this.addChildItemInParent(childItem, parentItem);\r\n      this.selectItemBySubItems(parentItem);\r\n\r\n      items.push(parentItem);\r\n    } else {\r\n      items.push(childItem);\r\n    }\r\n  }\r\n\r\n  private selectAllItems(items: Array<PoTreeViewItem>, isSelected: boolean) {\r\n    items.forEach(item => {\r\n      if (item.subItems) {\r\n        this.selectAllItems(item.subItems, isSelected);\r\n      }\r\n\r\n      item.selected = isSelected;\r\n    });\r\n  }\r\n\r\n  private selectItemBySubItems(item: PoTreeViewItem) {\r\n    item.selected = this.everyItemSelected(item.subItems);\r\n  }\r\n\r\n  // retornará:\r\n  //  - true: se todos os items estiverem marcados;\r\n  //  - null: se no minimo um item esteja marcado ou nullo (indeterminate)\r\n  //  - false: caso não corresponda em nenhuma das opções acima, no caso, nenhum marcado ou nulo;\r\n  private everyItemSelected(items: Array<PoTreeViewItem> = []): boolean | null {\r\n    const itemsLength = items.length;\r\n\r\n    const lengthCheckedItems = items.filter(item => item.selected).length;\r\n\r\n    if (itemsLength && itemsLength === lengthCheckedItems) {\r\n      return true;\r\n    }\r\n\r\n    const hasIndeterminateItems = items.filter(item => item.selected || item.selected === null).length;\r\n\r\n    if (hasIndeterminateItems) {\r\n      return null;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // expande o item pai caso o filho estiver expandido.\r\n  private expandParentItem(childItem: PoTreeViewItem, parentItem: PoTreeViewItem) {\r\n    if (childItem.expanded) {\r\n      parentItem.expanded = true;\r\n    }\r\n  }\r\n\r\n  private getItemsByMaxLevel(\r\n    items: Array<PoTreeViewItem> = [],\r\n    level: number = 0,\r\n    parentItem?: PoTreeViewItem,\r\n    newItems = []\r\n  ) {\r\n    items.forEach(item => {\r\n      const { subItems, ...currentItem } = item;\r\n\r\n      if (level === poTreeViewMaxLevel) {\r\n        return;\r\n      }\r\n\r\n      if (Array.isArray(subItems)) {\r\n        // caso um item pai iniciar selecionado, deve selecionar os filhos.\r\n        if (currentItem.selected) {\r\n          this.selectAllItems(subItems, currentItem.selected);\r\n        }\r\n\r\n        this.getItemsByMaxLevel(subItems, ++level, currentItem);\r\n        --level;\r\n      }\r\n\r\n      this.addItem(newItems, currentItem, parentItem);\r\n    });\r\n\r\n    return newItems;\r\n  }\r\n\r\n  private getItemsWithParentSelected(items: Array<PoTreeViewItem> = [], parentItem?: PoTreeViewItem, newItems = []) {\r\n    items.forEach(item => {\r\n      const { subItems, ...currentItem } = item;\r\n\r\n      if (Array.isArray(subItems)) {\r\n        this.getItemsWithParentSelected(subItems, currentItem);\r\n      }\r\n\r\n      this.addItem(newItems, currentItem, parentItem);\r\n    });\r\n\r\n    return newItems;\r\n  }\r\n\r\n  private updateItemsOnSelect(selectedItem: PoTreeViewItem) {\r\n    if (selectedItem.subItems) {\r\n      this.selectAllItems(selectedItem.subItems, selectedItem.selected);\r\n    }\r\n\r\n    this._items = this.getItemsWithParentSelected(this.items);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\r\n\r\n@Injectable()\r\nexport class PoTreeViewService {\r\n  private expandedEvent = new Subject<PoTreeViewItem>();\r\n  private selectedEvent = new Subject<PoTreeViewItem>();\r\n\r\n  emitExpandedEvent(treeViewItem: PoTreeViewItem) {\r\n    return this.expandedEvent.next(treeViewItem);\r\n  }\r\n\r\n  emitSelectedEvent(treeViewItem: PoTreeViewItem) {\r\n    return this.selectedEvent.next(treeViewItem);\r\n  }\r\n\r\n  onExpand() {\r\n    return this.expandedEvent.asObservable();\r\n  }\r\n\r\n  onSelect() {\r\n    return this.selectedEvent.asObservable();\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\nimport { PoTreeViewBaseComponent } from './po-tree-view-base.component';\r\nimport { PoTreeViewItem } from './po-tree-view-item/po-tree-view-item.interface';\r\nimport { PoTreeViewService } from './services/po-tree-view.service';\r\n\r\n/**\r\n * @docsExtends PoTreeViewBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-tree-view-basic\" title=\"PO Tree View Basic\">\r\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-tree-view-basic/sample-po-tree-view-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tree-view-labs\" title=\"PO Tree View Labs\">\r\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-tree-view-labs/sample-po-tree-view-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tree-view-folder-structure\" title=\"PO Tree View - Folder Structure\">\r\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.html\"> </file>\r\n *  <file name=\"sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-tree-view-supermarket\" title=\"PO Tree View - Supermarket\">\r\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.html\"> </file>\r\n *  <file name=\"sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.ts\"> </file>\r\n * </example>\r\n */\r\n@Component({\r\n  selector: 'po-tree-view',\r\n  templateUrl: './po-tree-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [PoTreeViewService]\r\n})\r\nexport class PoTreeViewComponent extends PoTreeViewBaseComponent implements OnInit {\r\n  get hasItems() {\r\n    return !!(this.items && this.items.length);\r\n  }\r\n\r\n  constructor(private treeViewService: PoTreeViewService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.treeViewService.onExpand().subscribe((treeViewItem: PoTreeViewItem) => {\r\n      this.emitExpanded(treeViewItem);\r\n    });\r\n\r\n    this.treeViewService.onSelect().subscribe((treeViewItem: PoTreeViewItem) => {\r\n      this.emitSelected(treeViewItem);\r\n    });\r\n  }\r\n\r\n  trackByFunction(index: number) {\r\n    return index;\r\n  }\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\nimport { PoTreeViewItem } from './po-tree-view-item.interface';\r\nimport { PoTreeViewService } from '../services/po-tree-view.service';\r\n\r\n@Component({\r\n  selector: 'po-tree-view-item',\r\n  templateUrl: './po-tree-view-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('toggleBody', [\r\n      state(\r\n        'collapsed',\r\n        style({\r\n          'overflow-y': 'hidden',\r\n          visibility: 'hidden',\r\n          opacity: 0,\r\n          height: '0'\r\n        })\r\n      ),\r\n      transition('expanded => collapsed', [\r\n        style({ height: '*' }),\r\n        animate(100, style({ opacity: 0 })),\r\n        animate(200, style({ height: 0 }))\r\n      ]),\r\n      transition('collapsed => expanded', [\r\n        style({ height: '0' }),\r\n        animate(100, style({ opacity: 1 })),\r\n        animate(200, style({ height: '*' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class PoTreeViewItemComponent {\r\n  @Input('p-item') item: PoTreeViewItem;\r\n\r\n  @Input('p-selectable') selectable: boolean;\r\n\r\n  get hasSubItems() {\r\n    return !!(this.item.subItems && this.item.subItems.length);\r\n  }\r\n\r\n  constructor(private treeViewService: PoTreeViewService) {}\r\n\r\n  onClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.item.expanded = !this.item.expanded;\r\n\r\n    this.treeViewService.emitExpandedEvent({ ...this.item });\r\n  }\r\n\r\n  onSelect(selectedItem: PoTreeViewItem) {\r\n    this.treeViewService.emitSelectedEvent({ ...selectedItem });\r\n  }\r\n\r\n  trackByFunction(index: number) {\r\n    return index;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\n\r\nimport { PoTreeViewItem } from '../po-tree-view-item/po-tree-view-item.interface';\r\n\r\n@Component({\r\n  selector: 'po-tree-view-item-header',\r\n  templateUrl: './po-tree-view-item-header.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PoTreeViewItemHeaderComponent {\r\n  @ViewChild('inputCheckbox') inputCheckbox;\r\n\r\n  @Input('p-item') item: PoTreeViewItem;\r\n\r\n  @Input('p-selectable') selectable: boolean = false;\r\n\r\n  @Output('p-expanded') expanded = new EventEmitter<MouseEvent>();\r\n\r\n  @Output('p-selected') selected = new EventEmitter<any>();\r\n\r\n  get hasSubItems() {\r\n    return !!(this.item.subItems && this.item.subItems.length);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoContainerModule } from '../po-container/po-container.module';\r\nimport { PoFieldModule } from '../po-field/po-field.module';\r\n\r\nimport { PoTreeViewComponent } from './po-tree-view.component';\r\nimport { PoTreeViewItemComponent } from './po-tree-view-item/po-tree-view-item.component';\r\nimport { PoTreeViewItemHeaderComponent } from './po-tree-view-item-header/po-tree-view-item-header.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente `po-tree-view`.\r\n *\r\n * > Para o correto funcionamento do componente `po-tree-view`, deve ser importado o módulo `BrowserAnimationsModule` no\r\n * > módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n */\r\n@NgModule({\r\n  declarations: [PoTreeViewComponent, PoTreeViewItemComponent, PoTreeViewItemHeaderComponent],\r\n  exports: [PoTreeViewComponent],\r\n  imports: [CommonModule, FormsModule, PoContainerModule, PoFieldModule]\r\n})\r\nexport class PoTreeViewModule {}\r\n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\r\n\r\nimport { convertToBoolean, isTypeof } from '../../utils/util';\r\n\r\n/**\r\n *\r\n * @description\r\n *\r\n * O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado\r\n * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.\r\n *\r\n * Além da exibição de conteúdos, este componente possibilita adicionar ações e um link\r\n * para ajuda, como também possibilita ser utilizado com ou sem sombra.\r\n *\r\n * Para controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior\r\n * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções.\r\n */\r\n@Directive()\r\nexport abstract class PoWidgetBaseComponent {\r\n  /** Descrição da segunda ação. */\r\n  @Input('p-secondary-label') secondaryLabel?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Ação que será executada quando o usuário clicar sobre a área total do `po-widget`.\r\n   */\r\n  @Output('p-click') click: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será disparada com o valor do `p-disabled` quando esta propriedade for alterada.\r\n   */\r\n  @Output('p-on-disabled') onDisabled: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será chamada na primeira ação.\r\n   */\r\n  @Output('p-primary-action') primaryAction: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Função que será chamada na segunda ação.\r\n   */\r\n  @Output('p-secondary-action') secondaryAction: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Função chamada ao clicar no ícone de configuração\r\n   */\r\n  @Output('p-setting') setting: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   * Função que será chamada ao clicar no título.\r\n   */\r\n  @Output('p-title-action') titleAction: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  containerHeight?: string = 'auto';\r\n\r\n  private _background?: string;\r\n  private _disabled?: boolean = false;\r\n  private _height?: number;\r\n  private _help?: string;\r\n  private _noShadow?: boolean = false;\r\n  private _primary?: boolean = false;\r\n  private _primaryLabel?: string;\r\n  private _title?: string;\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Aplicação de imagem de fundo.\r\n   * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,\r\n   * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.\r\n   *\r\n   */\r\n  @Input('p-background') set background(value: string) {\r\n    this._background = value && typeof value === 'string' ? value : undefined;\r\n  }\r\n\r\n  get background() {\r\n    return this._background;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita todas as ações do componente.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-disabled') set disabled(value: boolean) {\r\n    this._disabled = convertToBoolean(value);\r\n\r\n    this.onDisabled.emit(this.disabled);\r\n  }\r\n\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Define a altura do `po-widget`.\r\n   * A altura mínima para o `po-widget` depende do que será exibido através das propriedades `p-primary-label`,\r\n   * `p-setting`, `p-help` e `p-title`.\r\n   * > Caso não seja informado valor, a propriedade irá assumir o tamanho do conteúdo.\r\n   */\r\n  @Input('p-height') set height(value: number) {\r\n    this._height = parseInt(<any>value, 10);\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Link de ajuda\r\n   */\r\n  @Input('p-help') set help(value: string) {\r\n    this._help = isTypeof(value, 'string') ? value : '';\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  get help(): string {\r\n    return this._help;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Desabilita a sombra do `po-widget`.\r\n   *\r\n   * @default `true`\r\n   */\r\n  @Input('p-no-shadow') set noShadow(value: boolean) {\r\n    this._noShadow = <any>value === '' ? true : convertToBoolean(value);\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  get noShadow(): boolean {\r\n    return this._noShadow;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Opção para que o `po-widget` fique em destaque.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-primary') set primary(value: boolean) {\r\n    this._primary = <any>value === '' ? true : convertToBoolean(value);\r\n  }\r\n\r\n  get primary(): boolean {\r\n    return this._primary;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Descrição da primeira ação.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-primary-label') set primaryLabel(value: string) {\r\n    this._primaryLabel = isTypeof(value, 'string') ? value : '';\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  get primaryLabel(): string {\r\n    return this._primaryLabel;\r\n  }\r\n\r\n  /**\r\n   * @optional\r\n   *\r\n   * @description\r\n   *\r\n   * Título do `po-widget`.\r\n   *\r\n   * @default `false`\r\n   */\r\n  @Input('p-title') set title(value: string) {\r\n    this._title = isTypeof(value, 'string') ? value : '';\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n\r\n  abstract setHeight(height: number);\r\n}\r\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\n\r\nimport { PoWidgetBaseComponent } from './po-widget-base.component';\r\n\r\n/**\r\n * @docsExtends PoWidgetBaseComponent\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-widget-basic\" title=\"PO Widget Basic\">\r\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.html\"> </file>\r\n *  <file name=\"sample-po-widget-basic/sample-po-widget-basic.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-widget-labs\" title=\"PO Widget Labs\">\r\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.html\"> </file>\r\n *  <file name=\"sample-po-widget-labs/sample-po-widget-labs.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-widget-finance-dashboard\" title=\"PO Widget - Finance dashboard\">\r\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.html\"> </file>\r\n *  <file name=\"sample-po-widget-finance-dashboard/sample-po-widget-finance-dashboard.component.ts\"> </file>\r\n * </example>\r\n *\r\n * <example name=\"po-widget-card\" title=\"PO Widget - Card\">\r\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.html\"> </file>\r\n *  <file name=\"sample-po-widget-card/sample-po-widget-card.component.ts\"> </file>\r\n * </example>\r\n *\r\n */\r\n@Component({\r\n  selector: 'po-widget',\r\n  templateUrl: './po-widget.component.html'\r\n})\r\nexport class PoWidgetComponent extends PoWidgetBaseComponent implements OnInit {\r\n  get showTitleAction(): boolean {\r\n    return !!this.titleAction.observers[0];\r\n  }\r\n\r\n  constructor(viewRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setHeight(this.height);\r\n  }\r\n\r\n  hasTitleHelpOrSetting(): boolean {\r\n    return !!this.title || !!this.help || !!this.setting.observers[0];\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      this.click.emit(event);\r\n    }\r\n  }\r\n\r\n  openHelp(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      event.stopPropagation();\r\n      window.open(this.help, '_blank');\r\n    }\r\n  }\r\n\r\n  runPrimaryAction(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      event.stopPropagation();\r\n      this.primaryAction.emit();\r\n    }\r\n  }\r\n\r\n  runSecondaryAction(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      event.stopPropagation();\r\n      this.secondaryAction.emit();\r\n    }\r\n  }\r\n\r\n  runTitleAction(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      event.stopPropagation();\r\n      this.titleAction.emit();\r\n    }\r\n  }\r\n\r\n  setHeight(height: number) {\r\n    if (height) {\r\n      let bodyHeight = height;\r\n      const hasSettingOrHelp = this.setting.observers.length > 0 || this.help;\r\n      const footerBorder = 1;\r\n      const footerHeight = 40;\r\n      const settingHeight = 37;\r\n      const shadowHeight = 2;\r\n      const titleHeight = 50;\r\n\r\n      if (this.noShadow) {\r\n        bodyHeight -= shadowHeight;\r\n      }\r\n\r\n      if (hasSettingOrHelp && !this.title) {\r\n        bodyHeight -= settingHeight;\r\n      }\r\n\r\n      if (this.title) {\r\n        bodyHeight -= titleHeight;\r\n      }\r\n\r\n      if (this.primaryLabel) {\r\n        bodyHeight -= footerHeight + footerBorder;\r\n      }\r\n\r\n      this.containerHeight = `${bodyHeight}px`;\r\n    } else {\r\n      this.containerHeight = `auto`;\r\n    }\r\n  }\r\n\r\n  settingOutput(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      event.stopPropagation();\r\n      this.setting.emit();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PoContainerModule } from '../po-container/index';\r\nimport { PoWidgetComponent } from './po-widget.component';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do componente po-widget\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, PoContainerModule],\r\n  exports: [PoWidgetComponent],\r\n  declarations: [PoWidgetComponent]\r\n})\r\nexport class PoWidgetModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoAccordionModule } from './po-accordion/po-accordion.module';\r\nimport { PoAvatarModule } from './po-avatar/po-avatar.module';\r\nimport { PoBreadcrumbModule } from './po-breadcrumb/po-breadcrumb.module';\r\nimport { PoButtonModule } from './po-button/po-button.module';\r\nimport { PoButtonGroupModule } from './po-button-group/po-button-group.module';\r\nimport { PoCalendarModule } from './po-calendar/po-calendar.module';\r\nimport { PoChartModule } from './po-chart/po-chart.module';\r\nimport { PoContainerModule } from './po-container/po-container.module';\r\nimport { PoDisclaimerGroupModule } from './po-disclaimer-group/po-disclaimer-group.module';\r\nimport { PoDisclaimerModule } from './po-disclaimer/po-disclaimer.module';\r\nimport { PoDividerModule } from './po-divider/po-divider.module';\r\nimport { PoDropdownModule } from './po-dropdown/po-dropdown.module';\r\nimport { PoDynamicModule } from './po-dynamic/po-dynamic.module';\r\nimport { PoFieldModule } from './po-field/po-field.module';\r\nimport { PoGaugeModule } from './po-gauge/po-gauge.module';\r\nimport { PoGridModule } from './po-grid/po-grid.module';\r\nimport { PoInfoModule } from './po-info/po-info.module';\r\nimport { PoListViewModule } from './po-list-view/po-list-view.module';\r\nimport { PoLoadingModule } from './po-loading/po-loading.module';\r\nimport { PoMenuModule } from './po-menu/po-menu.module';\r\nimport { PoMenuPanelModule } from './po-menu-panel/po-menu-panel.module';\r\nimport { PoModalModule } from './po-modal/po-modal.module';\r\nimport { PoNavbarModule } from './po-navbar/po-navbar.module';\r\nimport { PoPageModule } from './po-page/po-page.module';\r\nimport { PoPopoverModule } from './po-popover/po-popover.module';\r\nimport { PoPopupModule } from './po-popup/po-popup.module';\r\nimport { PoProgressModule } from './po-progress/po-progress.module';\r\nimport { PoSlideModule } from './po-slide/po-slide.module';\r\nimport { PoStepperModule } from './po-stepper/po-stepper.module';\r\nimport { PoTableModule } from './po-table/po-table.module';\r\nimport { PoTabsModule } from './po-tabs/po-tabs.module';\r\nimport { PoTagModule } from './po-tag/po-tag.module';\r\nimport { PoToolbarModule } from './po-toolbar/po-toolbar.module';\r\nimport { PoTreeViewModule } from './po-tree-view/po-tree-view.module';\r\nimport { PoWidgetModule } from './po-widget/po-widget.module';\r\nimport { PoIconModule } from './po-icon/po-icon.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PoAccordionModule,\r\n    PoAvatarModule,\r\n    PoBreadcrumbModule,\r\n    PoButtonModule,\r\n    PoButtonGroupModule,\r\n    PoCalendarModule,\r\n    PoChartModule,\r\n    PoContainerModule,\r\n    PoDisclaimerGroupModule,\r\n    PoDisclaimerModule,\r\n    PoDividerModule,\r\n    PoDropdownModule,\r\n    PoDynamicModule,\r\n    PoFieldModule,\r\n    PoGaugeModule,\r\n    PoGridModule,\r\n    PoIconModule,\r\n    PoInfoModule,\r\n    PoListViewModule,\r\n    PoLoadingModule,\r\n    PoMenuModule,\r\n    PoMenuPanelModule,\r\n    PoModalModule,\r\n    PoNavbarModule,\r\n    PoPageModule,\r\n    PoPopoverModule,\r\n    PoPopupModule,\r\n    PoProgressModule,\r\n    PoSlideModule,\r\n    PoStepperModule,\r\n    PoTableModule,\r\n    PoTabsModule,\r\n    PoTagModule,\r\n    PoToolbarModule,\r\n    PoTreeViewModule,\r\n    PoWidgetModule\r\n  ],\r\n  exports: [\r\n    PoAccordionModule,\r\n    PoAvatarModule,\r\n    PoBreadcrumbModule,\r\n    PoButtonModule,\r\n    PoButtonGroupModule,\r\n    PoCalendarModule,\r\n    PoChartModule,\r\n    PoContainerModule,\r\n    PoDisclaimerGroupModule,\r\n    PoDisclaimerModule,\r\n    PoDividerModule,\r\n    PoDropdownModule,\r\n    PoDynamicModule,\r\n    PoFieldModule,\r\n    PoGaugeModule,\r\n    PoGridModule,\r\n    PoIconModule,\r\n    PoInfoModule,\r\n    PoListViewModule,\r\n    PoLoadingModule,\r\n    PoMenuModule,\r\n    PoMenuPanelModule,\r\n    PoModalModule,\r\n    PoNavbarModule,\r\n    PoPageModule,\r\n    PoPopoverModule,\r\n    PoPopupModule,\r\n    PoProgressModule,\r\n    PoSlideModule,\r\n    PoStepperModule,\r\n    PoTableModule,\r\n    PoTabsModule,\r\n    PoTagModule,\r\n    PoToolbarModule,\r\n    PoTreeViewModule,\r\n    PoWidgetModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoComponentsModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoTooltipModule } from './po-tooltip/po-tooltip.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [PoTooltipModule],\r\n  exports: [PoTooltipModule],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoDirectivesModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoGuardsModule {}\r\n","export const poHttpInterceptorDetailLiteralsDefault = {\r\n  en: <any>{\r\n    closeButton: 'Close',\r\n    details: 'Details',\r\n    detail: 'Detail',\r\n    error: 'Error',\r\n    warning: 'Warning',\r\n    information: 'Information',\r\n    success: 'Success'\r\n  },\r\n  es: <any>{\r\n    closeButton: 'Cerrar',\r\n    details: 'Detalles',\r\n    detail: 'Detalle',\r\n    error: 'Error',\r\n    warning: 'Advertencia',\r\n    information: 'Informacion',\r\n    success: 'Éxito'\r\n  },\r\n  pt: <any>{\r\n    closeButton: 'Fechar',\r\n    details: 'Detalhes',\r\n    detail: 'Detalhe',\r\n    error: 'Erro',\r\n    warning: 'Aviso',\r\n    information: 'Informação',\r\n    success: 'Sucesso'\r\n  },\r\n  ru: <any>{\r\n    closeButton: 'Закрывать',\r\n    details: 'Детали',\r\n    detail: 'Деталь',\r\n    error: 'Ошибка',\r\n    warning: 'Предупреждение',\r\n    information: 'Информация',\r\n    success: 'Yспех'\r\n  }\r\n};\r\n","import { Component, EventEmitter, ViewChild } from '@angular/core';\r\n\r\nimport { PoModalAction } from '../../../components/po-modal/po-modal-action.interface';\r\nimport { PoModalComponent } from '../../../components/po-modal/po-modal.component';\r\n\r\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail.interface';\r\nimport { poHttpInterceptorDetailLiteralsDefault } from './po-http-interceptor-detail-literals.interface';\r\nimport { PoLanguageService } from '../../../services/po-language/po-language.service';\r\n\r\nexport const colors = { success: 'color-11', error: 'color-07', warning: 'color-08', info: '' };\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * @description\r\n *\r\n * Componente para a modal de detalhes exibida pelo interceptor\r\n */\r\n@Component({\r\n  selector: 'po-http-interceptor-detail',\r\n  templateUrl: './po-http-interceptor-detail.component.html'\r\n})\r\nexport class PoHttpInterceptorDetailComponent {\r\n  @ViewChild(PoModalComponent, { static: true }) modal: PoModalComponent;\r\n\r\n  closed = new EventEmitter<any>();\r\n  details: Array<PoHttpInterceptorDetail> = [];\r\n  title: string;\r\n\r\n  private language = this.languageService.getShortLanguage();\r\n  private literals = poHttpInterceptorDetailLiteralsDefault[this.language];\r\n\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  primaryAction: PoModalAction = {\r\n    action: () => this.close(),\r\n    label: this.literals.closeButton\r\n  };\r\n\r\n  constructor(private languageService: PoLanguageService) {}\r\n\r\n  set detail(details: Array<PoHttpInterceptorDetail>) {\r\n    if (details && details.length) {\r\n      this.details = this.filterByValidDetails(details);\r\n    }\r\n\r\n    this.title = this.formatTitle(this.details);\r\n  }\r\n\r\n  close() {\r\n    this.modal.close();\r\n    this.closed.emit();\r\n  }\r\n\r\n  formatDetailItemTitle(detail) {\r\n    return detail.detailTitle\r\n      ? detail.detailTitle\r\n      : detail.code\r\n      ? `${detail.code} - ${detail.message}`\r\n      : detail.message;\r\n  }\r\n\r\n  open() {\r\n    this.modal.open();\r\n  }\r\n\r\n  typeColor(type: string): string {\r\n    return colors[type];\r\n  }\r\n\r\n  typeValue(type: string): string {\r\n    return poHttpInterceptorDetailLiteralsDefault[this.language][type] || type;\r\n  }\r\n\r\n  private addValidDetail(newDetails: Array<PoHttpInterceptorDetail>, detail: PoHttpInterceptorDetail) {\r\n    return detail.message ? newDetails.concat(this.getValidDetailProperties(detail)) : newDetails;\r\n  }\r\n\r\n  private getValidDetailProperties({ code, message, detailedMessage, type, detailTitle }: PoHttpInterceptorDetail) {\r\n    return detailTitle\r\n      ? { code, message, detailedMessage, type, detailTitle }\r\n      : { code, message, detailedMessage, type };\r\n  }\r\n\r\n  private filterByValidDetails(details: Array<PoHttpInterceptorDetail>) {\r\n    return details.reduce((newDetails, detail) => this.addValidDetail(newDetails, detail), []);\r\n  }\r\n\r\n  private formatTitle(details: Array<PoHttpInterceptorDetail>) {\r\n    return details.length > 1\r\n      ? `${this.literals.details} (${details.length})`\r\n      : details.length === 1\r\n      ? this.formatDetailItemTitle(details[0])\r\n      : this.literals.detail;\r\n  }\r\n}\r\n","export const poHttpInterceptorLiterals = {\r\n  pt: <any>{\r\n    help: 'Ajuda',\r\n    details: 'Detalhes',\r\n    serverNotResponse: 'Servidor não está respondendo'\r\n  },\r\n  en: <any>{\r\n    help: 'Help',\r\n    details: 'Details',\r\n    serverNotResponse: 'Server is not responding'\r\n  },\r\n  es: <any>{\r\n    help: 'Ayuda',\r\n    details: 'Detalles',\r\n    serverNotResponse: 'El servidor no está respondiendo'\r\n  },\r\n  ru: <any>{\r\n    help: 'Помогите',\r\n    details: 'Детали',\r\n    serverNotResponse: 'Сервер не отвечает'\r\n  }\r\n};\r\n","import { ComponentRef } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\r\nimport { PoHttpInterceptorDetail } from './po-http-interceptor-detail/po-http-interceptor-detail.interface';\r\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\r\nimport { poHttpInterceptorLiterals } from './po-http-interceptor-literals';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\nconst NO_ERROR_HEADER_PARAM = 'X-PO-No-Error';\r\nconst NO_MESSAGE_HEADER_PARAM = 'X-PO-No-Message';\r\n\r\n/**\r\n * @description\r\n *\r\n * O *interceptor* tem a finalidade de exibir notificações com mensagens na tela, baseado nas respostas das requisições HTTP.\r\n *\r\n * Pode ser utilizado para dar feedback das ações do usuário como, por exemplo: erro de autorização, mensagens de regras de negócio,\r\n * atualizações de registros, erro quando o servidor estiver indisponível e entre outros.\r\n *\r\n * ## Configuração\r\n *\r\n * Para o correto funcionamento do interceptor `po-http-interceptor`, deve ser importado o `BrowserAnimationsModule` no\r\n * módulo principal da sua aplicação.\r\n *\r\n * Módulo da aplicação:\r\n * ```\r\n * import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n * import { PoModule } from '@po-ui/ng-components';\r\n * ...\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     BrowserModule,\r\n *     BrowserAnimationsModule,\r\n *     ...\r\n *     PoModule\r\n *   ],\r\n *   declarations: [\r\n *     AppComponent,\r\n *     ...\r\n *   ],\r\n *   providers: [],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * export class AppModule { }\r\n * ```\r\n *\r\n * Ao importar o módulo `PoModule` na aplicação, o `po-http-interceptor` é automaticamente configurado sem a necessidade\r\n * de qualquer configuração extra.\r\n *\r\n * Ao realizar requisições utilize o `HttpClient`, conforme exemplo abaixo:\r\n *\r\n * ```\r\n * import { HttpClient } from '@angular/common/http';\r\n *\r\n * ...\r\n *\r\n * @Injectable()\r\n * export class UserService {\r\n *\r\n *   constructor(private http: HttpClient) { }\r\n *\r\n *   getUsers() {\r\n *     return this.http.get('/api/users');\r\n *   }\r\n *\r\n *   ...\r\n *\r\n * }\r\n * ```\r\n *\r\n * ## Como usar\r\n *\r\n * Para exibir as noticações é necessário informar a mensagem no retorno da requisição. A estrutura da mensagem\r\n * é feita com base no status da resposta, conforme será apresentado nos próximos tópicos.\r\n *\r\n * ### Estrutura das mensagens\r\n *\r\n * #### Mensagens de sucesso `2xx`\r\n *\r\n * Para exibir mensagens ao retornar uma lista ou um item, deve-se incluir a propriedade `_messages` no objeto de retorno.\r\n * Por exemplo:\r\n * ```\r\n * {\r\n *   \"_messages\": [\r\n *     {\r\n *       \"type\": \"success\" || \"warning\" || \"error\" || \"information\" (será exibido a `tag` apenas se esta propriedade possuir valor),\r\n *       \"code\": \"título ou código da mensagem\",\r\n *       \"message\": \"texto da mensagem\",\r\n *       \"detailedMessage\": \"detalhamento da mensagem\"\r\n *     }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * #### Mensagens de erro `4xx` ou `5xx`\r\n *\r\n * Ao retornar erro, o objeto não necessita ter `_messages`, deve-se retornar o objeto diretamente:\r\n *\r\n * ```\r\n * {\r\n *    \"code\": \"título ou código da mensagem\",\r\n *    \"message\": \"texto da mensagem\",\r\n *    \"detailedMessage\": \"detalhamento da mensagem\"\r\n * }\r\n * ```\r\n *\r\n * Também é possível informar as seguintes propriedades:\r\n *\r\n * - `helpUrl`: link para a documentação do erro;\r\n *    - Caso for informado, será exibido uma ação de \"Ajuda\" na notificação, para isso não deverá ter a propriedade `detailedMessage`.\r\n * - `type`: É possível informar `error`, `warning` e `information`, sendo `error` o valor padrão.\r\n * - `details`: Uma lista de objetos de mensagem (recursiva) com mais detalhes sobre a mensagem principal.\r\n * - `detailTitle`: caso for informado, será apresentado como título dos detalhes substituindo o padrão `code - message`\r\n *\r\n * > Veja o [Guia de implementação de APIs](guides/api) para mais detalhes sobre a estrutura das mensagens.\r\n *\r\n * ### Cabeçalho\r\n *\r\n * É possível dispensar a notificação para o usuário utilizando no cabeçalho da requisição os parâmetros listados abaixo com o valor\r\n * igual a `true`:\r\n *\r\n * - `X-PO-No-Message`: Não exibe notificações de erro e/ou sucesso.\r\n *\r\n * - `X-PO-No-Error`: Não mostra notificações de erro com códigos `4xx` e `5xx`.\r\n *\r\n * ```\r\n * ...\r\n *  const headers = { 'X-PO-No-Message': 'true' };\r\n *\r\n *  this.http.get(`/customers/1`, { headers: headers });\r\n * ...\r\n *\r\n * ```\r\n *\r\n * > Após a validação no *interceptor*, os parâmetros serão removidos do cabeçalho da requisição.\r\n *\r\n */\r\nexport abstract class PoHttpInterceptorBaseService implements HttpInterceptor {\r\n  notificationTypes = ['success', 'warning', 'error', 'information'];\r\n\r\n  literals = poHttpInterceptorLiterals[this.languageService.getShortLanguage()];\r\n\r\n  private httpInterceptorDetailComponent: ComponentRef<PoHttpInterceptorDetailComponent> = undefined;\r\n\r\n  constructor(\r\n    private componentInjector: PoComponentInjectorService,\r\n    private notification: any,\r\n    private languageService: PoLanguageService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const cloneRequest = request.clone();\r\n\r\n    request = request && this.hasParameters(request) ? this.cloneRequestWithoutParameters(request) : request;\r\n\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        (response: HttpEvent<any>) => {\r\n          if (response instanceof HttpResponse) {\r\n            this.processResponse(response, cloneRequest);\r\n          }\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.processErrorResponse(error, cloneRequest);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  processResponse(response: HttpResponse<any>, request: HttpRequest<any>) {\r\n    const hasNoMessageParam = this.hasNoMessageParam(request);\r\n\r\n    if (!hasNoMessageParam && response.body && response.body._messages) {\r\n      const messages = response.body._messages;\r\n\r\n      if (messages instanceof Array) {\r\n        messages.forEach((message: PoHttpInterceptorDetail) => {\r\n          this.showNotification(message);\r\n        });\r\n      } else {\r\n        this.showNotification(messages);\r\n      }\r\n    }\r\n  }\r\n\r\n  processErrorResponse(response: HttpErrorResponse, request: HttpRequest<any>) {\r\n    const errorResponse =\r\n      response.status !== 0\r\n        ? response.error\r\n        : { code: 0, message: this.literals.serverNotResponse, detailedMessage: response.message };\r\n\r\n    const hasNoErrorParam = this.hasNoErrorParam(request);\r\n    const hasNoMessageParam = this.hasNoMessageParam(request);\r\n    const errorResponseValidTypes = this.notificationTypes.slice(1);\r\n\r\n    if (errorResponse && errorResponse.message && !hasNoErrorParam && !hasNoMessageParam) {\r\n      this.showNotification({\r\n        ...errorResponse,\r\n        type: errorResponseValidTypes.includes(errorResponse.type) ? errorResponse.type : 'error'\r\n      });\r\n    }\r\n  }\r\n\r\n  private cloneRequestWithoutParameters(request: HttpRequest<any>): HttpRequest<any> {\r\n    const headers = request.headers.delete(NO_ERROR_HEADER_PARAM).delete(NO_MESSAGE_HEADER_PARAM);\r\n\r\n    return request.clone({ headers });\r\n  }\r\n\r\n  private createModal(responseMessage: PoHttpInterceptorDetail) {\r\n    const details = responseMessage.details ? [responseMessage, ...responseMessage.details] : [responseMessage];\r\n\r\n    this.httpInterceptorDetailComponent = this.componentInjector.createComponentInApplication(\r\n      PoHttpInterceptorDetailComponent\r\n    );\r\n    this.httpInterceptorDetailComponent.instance.detail = details;\r\n    this.httpInterceptorDetailComponent.instance.closed.subscribe(() => this.destroyModal());\r\n    this.httpInterceptorDetailComponent.instance.open();\r\n  }\r\n\r\n  private destroyModal() {\r\n    if (this.httpInterceptorDetailComponent) {\r\n      this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent);\r\n      this.httpInterceptorDetailComponent = undefined;\r\n    }\r\n  }\r\n\r\n  private hasMessage(responseMessage: PoHttpInterceptorDetail) {\r\n    const hasMessageProperties = responseMessage.message;\r\n\r\n    return responseMessage && hasMessageProperties;\r\n  }\r\n\r\n  private hasNoErrorParam(request: HttpRequest<any>): boolean {\r\n    const noErrorParam = request && request.headers.get(NO_ERROR_HEADER_PARAM);\r\n\r\n    return noErrorParam && noErrorParam.toString().toLocaleLowerCase() === 'true';\r\n  }\r\n\r\n  private hasNoMessageParam(request: HttpRequest<any>): boolean {\r\n    const noMessageParam = request && request.headers.get(NO_MESSAGE_HEADER_PARAM);\r\n\r\n    return noMessageParam && noMessageParam.toString().toLocaleLowerCase() === 'true';\r\n  }\r\n\r\n  private hasParameters(request: HttpRequest<any>) {\r\n    return request.headers.has(NO_ERROR_HEADER_PARAM) || request.headers.has(NO_MESSAGE_HEADER_PARAM);\r\n  }\r\n\r\n  private showNotification(response: any) {\r\n    if (!this.hasMessage(response)) {\r\n      return;\r\n    }\r\n\r\n    const typeNotification = this.notificationTypes.includes(response.type) ? response.type : 'information';\r\n\r\n    const notificationAction = this.generateNotificationAction(response);\r\n\r\n    this.notification[typeNotification]({\r\n      message: response.message,\r\n      actionLabel: notificationAction.label,\r\n      action: notificationAction.action\r\n    });\r\n  }\r\n\r\n  private generateDetailModal(responseMessage: any) {\r\n    return () => {\r\n      if (!this.httpInterceptorDetailComponent) {\r\n        this.createModal(responseMessage);\r\n      }\r\n    };\r\n  }\r\n\r\n  private generateNotificationAction(responseMessage: any) {\r\n    let notificationAction;\r\n    let notificationLabel;\r\n\r\n    if (responseMessage.helpUrl && !(responseMessage.detailedMessage || responseMessage.details)) {\r\n      notificationLabel = this.literals.help;\r\n      notificationAction = this.generateUrlHelpFunction(responseMessage.helpUrl);\r\n    } else if (responseMessage.detailedMessage || responseMessage.details) {\r\n      notificationLabel = this.literals.details;\r\n      notificationAction = this.generateDetailModal(responseMessage);\r\n    }\r\n    return { label: notificationLabel, action: notificationAction };\r\n  }\r\n\r\n  private generateUrlHelpFunction(helpUrl: string) {\r\n    return () => {\r\n      window.open(helpUrl, '_blank');\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PoLanguageService } from '../../services/po-language/po-language.service';\r\n\r\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\r\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\r\n\r\nimport { PoHttpInterceptorBaseService } from './po-http-interceptor-base.service';\r\n\r\n/**\r\n * @docsExtends PoHttpInterceptorBaseService\r\n *\r\n * @example\r\n * <example name='po-http-interceptor-labs' title='PO Http Interceptor Labs'>\r\n *  <file name='sample-po-http-interceptor-labs.component.ts'> </file>\r\n *  <file name='sample-po-http-interceptor-labs.component.html'> </file>\r\n * </example>\r\n */\r\n@Injectable()\r\nexport class PoHttpInterceptorService extends PoHttpInterceptorBaseService {\r\n  constructor(\r\n    notification: PoNotificationService,\r\n    componentInjector: PoComponentInjectorService,\r\n    languageService: PoLanguageService\r\n  ) {\r\n    super(componentInjector, notification, languageService);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoAccordionModule } from '../../components/po-accordion/po-accordion.module';\r\nimport { PoModalModule } from '../../components/po-modal/po-modal.module';\r\nimport { PoNotificationModule } from '../../services/po-notification/po-notification.module';\r\nimport { PoNotificationService } from './../../services/po-notification/po-notification.service';\r\nimport { PoTagModule } from '../../components/po-tag/po-tag.module';\r\n\r\nimport { PoHttpInterceptorDetailComponent } from './po-http-interceptor-detail/po-http-interceptor-detail.component';\r\nimport { PoHttpInterceptorService } from './po-http-interceptor.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PoAccordionModule, PoModalModule, PoNotificationModule, PoTagModule],\r\n  declarations: [PoHttpInterceptorDetailComponent],\r\n  providers: [\r\n    PoHttpInterceptorService,\r\n    PoNotificationService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: PoHttpInterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoHttpInterceptorModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n/**\r\n * @docsPrivate\r\n *\r\n * Serviço responsável por efetuar o controle de interação com o serviço de interceptor `PoHttpRequestInterceptorService`\r\n * gerenciando o seu estado.\r\n */\r\n@Injectable()\r\nexport class PoHttpRequesControltService {\r\n  controlHttpRequest: Subject<number> = new Subject<number>();\r\n\r\n  getControlHttpRequest(): Observable<any> {\r\n    return this.controlHttpRequest.asObservable();\r\n  }\r\n\r\n  send(value: number = 0) {\r\n    this.controlHttpRequest.next(value);\r\n  }\r\n}\r\n","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { ComponentRef, Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\r\nimport { PoLoadingOverlayComponent } from '../../components/po-loading/po-loading-overlay/po-loading-overlay.component';\r\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\r\n\r\nconst noCountPendingRequests = 'X-PO-No-Count-Pending-Requests';\r\nconst screenLock = 'X-PO-Screen-Lock';\r\n\r\n/**\r\n * @description\r\n *\r\n * O serviço PO Http Request Interceptor realiza a contabilização de requisições pendentes na aplicação.\r\n *\r\n * Existe a possibilidade de não efetuar a contabilização das requisições pendentes, utilizando o parâmetro\r\n * `X-PO-No-Count-Pending-Requests`. Para isso deve ser informado no cabeçalho da requisição com o valor `'true'`,\r\n * por exemplo:\r\n *\r\n * ```\r\n * ...\r\n *  const headers = { 'X-PO-No-Count-Pending-Requests': 'true' };\r\n *\r\n *  this.http.get(`/customers/1`, { headers: headers });\r\n * ...\r\n *\r\n * ```\r\n * Para obter a quantidade de requisições pendentes, deve inscrever-se no método `getCountPendingRequests` do\r\n * serviço `PoHttpRequestInterceptorService`, com isso, ao realizar requisições utilizando `HttpClient`,\r\n * será retornado a quantidade de requisições pendentes.\r\n *\r\n * Também existe a possibildade de travar a tela e mostrar uma imagem de _loading_ durante o processamento de uma requisição\r\n * deve-se passar o parâmetro `X-PO-Screen-Lock` no cabeçalho da requisição com valor `'true'`.\r\n *\r\n * por exemplo:\r\n *\r\n * ```\r\n * ...\r\n *  const headers = { 'X-PO-Screen-Lock': 'true' };\r\n *\r\n *  this.http.get(`/customers/1`, { headers: headers });\r\n * ...\r\n *\r\n * ```\r\n * > Após a validação no interceptor, o parâmetro será removido do cabeçalho da requisição.\r\n *\r\n * Ao importar o módulo `PoModule` na aplicação, o `po-http-request-interceptor` é automaticamente configurado sem a necessidade\r\n * de qualquer configuração extra.\r\n *\r\n *\r\n * Segue abaixo um exemplo de uso:\r\n *\r\n * ```\r\n * import { HttpClient } from '@angular/common/http';\r\n *\r\n * ...\r\n *\r\n * @Injectable()\r\n * export class CustomersService {\r\n *\r\n *  headers = { 'X-PO-No-Count-Pending-Requests': true, 'X-PO-Screen-Lock': 'true' }\r\n *  pendingRequests: number = 0;\r\n *  subscription: Subscription;\r\n *\r\n *  constructor(\r\n *    private http: HttpClient,\r\n *    private httpRequestInterceptor: PoHttpRequestInterceptorService) { }\r\n *\r\n *  ngOnDestroy(): void {\r\n *    this.subscription.unsubscribe();\r\n *  }\r\n *\r\n *  ngOnInit(): void {\r\n *    this.subscription = this.httpRequestInterceptor.getCountPendingRequests().subscribe(data => {\r\n *      this.pendingRequests = data;\r\n *    });\r\n *  }\r\n *\r\n *  getCustomers() {\r\n *    return this.http.get(`/customers/1`, { headers: headers });\r\n *  }\r\n *\r\n *  ...\r\n *\r\n * }\r\n * ```\r\n *\r\n * @example\r\n * <example name='po-http-request-interceptor-labs' title='PO Http Request Interceptor Labs'>\r\n *  <file name='sample-po-http-request-interceptor-labs.component.ts'> </file>\r\n *  <file name='sample-po-http-request-interceptor-labs.component.html'> </file>\r\n * </example>\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PoHttpRequestInterceptorService implements HttpInterceptor {\r\n  private loadingOverlayComponent: ComponentRef<PoLoadingOverlayComponent> = undefined;\r\n\r\n  private pendingRequests: number = 0;\r\n  private overlayRequests: number = 0;\r\n\r\n  constructor(\r\n    private controlHttpRequest: PoHttpRequesControltService,\r\n    private poComponentInjector: PoComponentInjectorService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    const requestClone = request.clone();\r\n\r\n    request = this.requestCloneWithoutHeaderParam([noCountPendingRequests, screenLock], request);\r\n\r\n    this.setCountPendingRequests(true, requestClone);\r\n    this.setCountOverlayRequests(true, requestClone);\r\n\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.setCountPendingRequests(false, requestClone);\r\n        this.setCountOverlayRequests(false, requestClone);\r\n      })\r\n    );\r\n  }\r\n\r\n  getCountPendingRequests(): Observable<any> {\r\n    return this.controlHttpRequest.getControlHttpRequest();\r\n  }\r\n\r\n  private buildLoading() {\r\n    if (!this.loadingOverlayComponent) {\r\n      this.loadingOverlayComponent = this.poComponentInjector.createComponentInApplication(PoLoadingOverlayComponent);\r\n      this.loadingOverlayComponent.instance.screenLock = true;\r\n      this.loadingOverlayComponent.instance.changeDetector.detectChanges();\r\n    }\r\n  }\r\n\r\n  private destroyLoading() {\r\n    if (this.loadingOverlayComponent) {\r\n      this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent);\r\n      this.loadingOverlayComponent = undefined;\r\n    }\r\n  }\r\n\r\n  private requestCloneWithoutHeaderParam(headersParams: Array<string>, request: HttpRequest<any>): HttpRequest<any> {\r\n    let isRequestClone = false;\r\n\r\n    headersParams.forEach(headerParam => {\r\n      if (request.headers.has(headerParam)) {\r\n        request.headers.delete(headerParam);\r\n        isRequestClone = true;\r\n      }\r\n    });\r\n\r\n    return isRequestClone ? request.clone({ headers: request.headers }) : request;\r\n  }\r\n\r\n  private setCountPendingRequests(isIncrement: boolean, request: HttpRequest<any>) {\r\n    const hasCountPendingRequestHeaderParam = request.headers.has(noCountPendingRequests);\r\n    const headerParam = request.headers.get(noCountPendingRequests);\r\n\r\n    if (hasCountPendingRequestHeaderParam && headerParam.toString().toLowerCase() === 'true') {\r\n      return;\r\n    }\r\n\r\n    this.pendingRequests += isIncrement ? 1 : -1;\r\n    this.controlHttpRequest.send(this.pendingRequests);\r\n  }\r\n\r\n  private setCountOverlayRequests(isIncrement: boolean, request: HttpRequest<any>) {\r\n    const hasOverlayRequestHeaderParam = request.headers.has(screenLock);\r\n\r\n    if (hasOverlayRequestHeaderParam) {\r\n      const headerParam = request.headers.get(screenLock);\r\n\r\n      if (headerParam.toString().toLowerCase() === 'false') {\r\n        return;\r\n      }\r\n\r\n      this.overlayRequests += isIncrement ? 1 : -1;\r\n      this.overlayRequests > 0 ? this.buildLoading() : this.destroyLoading();\r\n    }\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PoLoadingModule } from '../../components/po-loading/po-loading.module';\r\n\r\nimport { PoComponentInjectorService } from '../../services/po-component-injector/po-component-injector.service';\r\nimport { PoHttpRequesControltService } from './po-http-request-control-service';\r\nimport { PoHttpRequestInterceptorService } from './po-http-request-interceptor.service';\r\n\r\n@NgModule({\r\n  imports: [PoLoadingModule],\r\n  providers: [\r\n    PoHttpRequesControltService,\r\n    PoHttpRequestInterceptorService,\r\n    PoComponentInjectorService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: PoHttpRequestInterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PoHttpRequestModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoHttpInterceptorModule } from './po-http-interceptor/po-http-interceptor.module';\r\nimport { PoHttpRequestModule } from './po-http-request/po-http-request.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [PoHttpInterceptorModule, PoHttpRequestModule],\r\n  exports: [PoHttpInterceptorModule, PoHttpRequestModule],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoInterceptorsModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoTimeModule } from '../pipes/po-time/po-time.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [PoTimeModule],\r\n  exports: [PoTimeModule],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class PoPipesModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { PoComponentsModule } from './components/components.module';\r\nimport { PoDirectivesModule } from './directives/directives.module';\r\nimport { PoGuardsModule } from './guards/guards.module';\r\nimport { PoInterceptorsModule } from './interceptors/interceptors.module';\r\nimport { PoPipesModule } from './pipes/pipes.module';\r\nimport { PoServicesModule } from './services/services.module';\r\nimport { PoNotificationService } from './services/po-notification/po-notification.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    PoComponentsModule,\r\n    PoDirectivesModule,\r\n    PoGuardsModule,\r\n    PoInterceptorsModule,\r\n    PoPipesModule,\r\n    PoServicesModule\r\n  ],\r\n  exports: [\r\n    PoComponentsModule,\r\n    PoDirectivesModule,\r\n    PoInterceptorsModule,\r\n    PoGuardsModule,\r\n    PoPipesModule,\r\n    PoServicesModule\r\n  ],\r\n  providers: [PoNotificationService],\r\n  bootstrap: []\r\n})\r\nexport class PoModule {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\r\n\r\nexport const I18N_CONFIG = new InjectionToken<PoI18nConfig>('I18N_CONFIG');\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { isLanguage, reloadCurrentPage } from '../../utils/util';\r\nimport { PoLanguageService } from '../po-language/po-language.service';\r\n\r\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\r\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\r\nimport { PoI18nLiterals } from './interfaces/po-i18n-literals.interface';\r\n\r\n/**\r\n * @description\r\n *\r\n * O serviço `PoI18nService` possibilita utilizar múltiplos idiomas e contextos na aplicação.\r\n *\r\n * > Antes da utilização do serviço, é necessário realizar a\r\n * [importação e configuração do módulo `PoI18nModule`](/documentation/po-i18n#i18n-config).\r\n *\r\n * **Utilização do serviço `PoI18nService`:**\r\n *\r\n * Para utilizar o serviço basta importá-lo nos componentes que necessitarem de literais e fazer a injeção de\r\n * dependência no construtor:\r\n * ```\r\n *  import { PoI18nService } from '@po-ui/ng-components';\r\n *  ...\r\n *  constructor(private poI18nService: PoI18nService) { }\r\n *  ...\r\n * ```\r\n *\r\n * Por fim realizar a busca pelas literais, inscrevendo-se no [Observable](https://angular.io/guide/observables) pelo\r\n * método `getLiterals()`.\r\n *\r\n * > O método `getLiterals()` pode receber um objeto do tipo da interface `PoI18nLiterals` como parâmetro,\r\n * porém, nenhuma das propriedades são obrigatórias. Caso nenhum parâmetro seja passado, serão buscadas\r\n * todas as literais do contexto definido com padrão, no idioma definido como padrão.\r\n *\r\n * Exemplos de requisição:\r\n * ```\r\n * literals = {};\r\n * literalsEn = {};\r\n * literalsCrm = {};\r\n *\r\n * constructor(private poI18nService: PoI18nService) {\r\n *   poI18nService.getLiterals()\r\n *     .subscribe((literals) => {\r\n *       this.literals = literals;\r\n *     });\r\n *\r\n *   poI18nService.getLiterals({context: 'crm', literals: ['add', 'remove']})\r\n *     .subscribe((literals) => {\r\n *       this.literalsCrm = literals;\r\n *     });\r\n *\r\n *   poI18nService.getLiterals({language: 'en-us'})\r\n *     .subscribe((literals) => {\r\n *       this.literalsEn = literals;\r\n *     });\r\n * }\r\n * ```\r\n *\r\n * Para apresentar as literais capturadas acima no HTML do componente, deve-se utilizar o\r\n * seguinte código:\r\n *\r\n * <pre ngNonBindable>\r\n * {{ literals?.add }}\r\n * {{ literals?.remove }}\r\n * </pre>\r\n *\r\n * Caso as literais contenham variáveis que precisem ser substituídas, pode-se utilizar o *pipe* `poI18n`.\r\n * É possível informar propriedades do componente como `name` e `nickname` ou\r\n * informar o valor diretamente com \"\" ou número, conforme o exemplo abaixo:\r\n *\r\n * <pre ngNonBindable>\r\n * {{ literals?.people | poI18n:[120] }}\r\n * {{ literals?.greeting | poI18n:[name, nickname] }}\r\n * {{ literals?.greeting | poI18n:[\"Brad\", \"Green\"] }}\r\n * </pre>\r\n *\r\n * > É importante o uso do operador `?` (Elvis) para evitar erros enquanto as literais não forem carregadas.\r\n *\r\n * ### Teste unitário\r\n *\r\n * Abaixo segue um exemplo de *setup* inicial de teste unitário do *AppComponent* que utiliza o `PoI18nService`:\r\n *\r\n * > Atenção: não declarar o `PoI18nService` no providers do TestBed pois a biblioteca realiza a injeção de dependência de forma dinâmica.\r\n * > Se o serviço for declarado o teste não fará a injeção e o teste apresentará erros.\r\n *\r\n * ```\r\n * import { async, TestBed } from '@angular/core/testing';\r\n * import { HttpClientTestingModule } from '@angular/common/http/testing';\r\n *\r\n * import { PoI18nModule } from '@po-ui/ng-components';\r\n *\r\n * import { AppComponent } from './app.component';\r\n *\r\n * describe('AppComponent', () => {\r\n *   const anotherPT = {\r\n *     text: 'texto',\r\n *     add: 'adicionar',\r\n *     remove: 'remover'\r\n *   };\r\n *\r\n *   const generalPT = {\r\n *     text: 'texto',\r\n *     add: 'adicionar',\r\n *     remove: 'remover'\r\n *   };\r\n *\r\n *   const config = {\r\n *     default: {\r\n *       language: 'pt-BR',\r\n *       context: 'general',\r\n *       cache: false\r\n *     },\r\n *     contexts: {\r\n *       general: {\r\n *         'pt-br': generalPT\r\n *       },\r\n *       another: {\r\n *         'pt-br': anotherPT\r\n *       }\r\n *     }\r\n *   };\r\n *\r\n *   beforeEach(async(() => {\r\n *     TestBed.configureTestingModule({\r\n *       declarations: [\r\n *         AppComponent\r\n *       ],\r\n *       imports: [\r\n *         HttpClientTestingModule,\r\n *         PoI18nModule.config(config)\r\n *       ]\r\n *     }).compileComponents();\r\n *   }));\r\n *\r\n *   it('should create the app', async(() => {\r\n *     const fixture = TestBed.createComponent(AppComponent);\r\n *     const app = fixture.debugElement.componentInstance;\r\n *\r\n *     expect(app).toBeTruthy();\r\n *   }));\r\n *\r\n * });\r\n * ```\r\n */\r\n\r\nexport class PoI18nBaseService {\r\n  private varI18n: any = {};\r\n\r\n  private contextDefault: string;\r\n\r\n  private useCache: boolean = false;\r\n\r\n  private servicesContext: any = {};\r\n\r\n  constructor(\r\n    @Inject(I18N_CONFIG) private config?: PoI18nConfig,\r\n    @Inject(HttpClient) private http?: HttpClient,\r\n    private languageService?: PoLanguageService\r\n  ) {\r\n    this.setConfig(config);\r\n  }\r\n\r\n  /**\r\n   * <a id=\"get-language\"></a>\r\n   * Método que retorna o idioma padrão ativo.\r\n   *\r\n   * A busca deste idioma pelo método será feita na seguinte ordem:\r\n   *\r\n   *   1 - o idioma que foi armazenado no *localStorage*, através do método [`setLanguage()`](documentation/po-i18n#setLanguage).\r\n   *\r\n   *   2 - o valor inserido no módulo do i18n através do parâmetro `config`, sendo o idioma inserido na propriedade\r\n   * `language` da interface [`PoI18nConfigDefault`](documentation/po-i18n#poI18nConfigDefault).\r\n   *\r\n   *   3 - o idioma do navegador utilizado.\r\n   *\r\n   * > Caso o idioma do navegador não seja suportado pelo PO (`pt`, `en`, `es` ou `ru`), será retornado valor `pt`.\r\n   *\r\n   * @returns {string} sigla do idioma padrão.\r\n   */\r\n  getLanguage(): string {\r\n    return this.languageService.getLanguage();\r\n  }\r\n\r\n  getLiterals(options: PoI18nLiterals = {}): Observable<object> {\r\n    const language = options['language'] ? options['language'].toLowerCase() : this.getLanguage();\r\n    const context = options['context'] ? options['context'] : this.contextDefault;\r\n    const literals: Array<string> = options['literals'] ? options['literals'] : [];\r\n\r\n    return new Observable(observer => {\r\n      if (this.servicesContext[context]) {\r\n        // Faz o processo de busca de um contexto que contém serviço\r\n        this.getLiteralsFromContextService(language, context, literals, observer);\r\n      } else {\r\n        // Faz o processo de busca de um contexto que utiliza constante\r\n        this.getLiteralsFromContextConstant(language, context, literals, observer);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Método que retorna o idioma padrão ativo, com somente a abreviação do idioma (duas primeiras letras).\r\n   * Por exemplo: \"pt\" ou \"es\".\r\n   *\r\n   * A busca deste idioma é baseada no método [**getLanguage()**](/documentation/po-i18n#get-language).\r\n   *\r\n   * @returns {string} sigla do idioma padrão.\r\n   */\r\n  getShortLanguage(): string {\r\n    return this.languageService.getShortLanguage();\r\n  }\r\n\r\n  /**\r\n   * <a id=\"setLanguage\"></a>\r\n   * Método para alterar o idioma padrão do módulo do i18n.\r\n   *\r\n   * Ao utilizar este método, o idioma ficará gravado no armazenamento local do navegador, que será utilizado pelo\r\n   * serviço do `i18n` para buscar as literais no idioma padrão.\r\n   *\r\n   * @param {string} language Sigla do idioma.\r\n   *\r\n   * Esta sigla deve ser composta por duas letras representando o idioma,\r\n   * podendo ser adicionado outras duas letras representando o país, por exemplo: `pt`, `pt-BR`, `pt-br`, `en` ou `en-US`.\r\n   *\r\n   * > Caso seja informado um valor diferente deste padrão, o mesmo será ignorado.\r\n   *\r\n   * @param {boolean} reload Indica se a página atual poderá ser recarregada após a alteração do idioma.\r\n   *\r\n   * Este recurso pode ser útil para os usuários que utilizam o método `getLiterals()` do serviço do i18n para poder\r\n   * buscar novamente as literais no novo idioma configurado.\r\n   */\r\n  setLanguage(language: string, reload: boolean = false): void {\r\n    if (!isLanguage(language)) {\r\n      return;\r\n    }\r\n\r\n    this.languageService.setLanguage(language);\r\n\r\n    if (reload) {\r\n      reloadCurrentPage();\r\n    }\r\n  }\r\n\r\n  private setConfig(config: PoI18nConfig) {\r\n    // Seta as configurações padrões definidas no importação do módulo\r\n    if (config['default']) {\r\n      this.languageService.setLanguageDefault(config['default']['language']);\r\n\r\n      this.contextDefault = config['default']['context'] ? config['default']['context'] : '';\r\n      this.useCache = config['default']['cache'] ? config['default']['cache'] : false;\r\n    }\r\n\r\n    // Carrega a lista dos contextos e as contantes informadas\r\n    if (config['contexts']) {\r\n      this.setVarI18n(config['contexts']);\r\n\r\n      // Se nenhum contexto foi definido como padrão,\r\n      // então define o primeiro contexto\r\n      if (!this.contextDefault) {\r\n        for (const context in config['contexts']) {\r\n          if (this.config['contexts'].hasOwnProperty(context)) {\r\n            this.contextDefault = context;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Processo de busca de um contexto que contém serviço.\r\n  //    1 - Procura na variável I18n deste serviço\r\n  //    2 - Procura no local storage (Se o cache estiver definido como true na configuração do módulo)\r\n  //    3 - Dispara o serviço, mesmo que já tenha encontrado no local storage, para garantir a atualização\r\n  //    4 - Se nenhuma literal for encontrada, então busca em pt-br\r\n  private getLiteralsFromContextService(\r\n    language: string,\r\n    context: string,\r\n    literals: Array<string>,\r\n    observer: any,\r\n    translations: any = {},\r\n    languageAlternative: string = null\r\n  ) {\r\n    // Idioma usado para tentar buscar as literais faltantes\r\n    const languageSearch = languageAlternative ? languageAlternative : language;\r\n\r\n    translations = this.mergeObject(translations, this.searchInVarI18n(languageSearch, context, literals));\r\n\r\n    if (this.countObject(translations) > 0) {\r\n      observer.next(translations);\r\n    }\r\n\r\n    // realiza a busca no localStorage e em seguida no serviço\r\n    this.getLiteralsLocalStorageAndCache(\r\n      languageSearch,\r\n      context,\r\n      literals,\r\n      observer,\r\n      translations,\r\n      languageAlternative\r\n    );\r\n  }\r\n\r\n  // Procura no local storage e em seguida no serviço\r\n  // Caso não encontre nem no serviço, recomeça a busca em pt-br\r\n  private getLiteralsLocalStorageAndCache(\r\n    language: string,\r\n    context: string,\r\n    literals: Array<string>,\r\n    observer: any,\r\n    translations: any,\r\n    languageAlternative: string = null\r\n  ) {\r\n    const languageSearch = languageAlternative ? languageAlternative : language;\r\n    let translationTemp;\r\n    // Verifica se usa cache\r\n    if (this.useCache) {\r\n      translationTemp = this.searchInLocalStorage(languageSearch, context, literals);\r\n      if (this.countObject(translationTemp) > 0) {\r\n        this.updateVarI18n(language, context, translationTemp);\r\n        translations = this.mergeObject(translationTemp, translations);\r\n        observer.next(translations);\r\n      }\r\n    }\r\n\r\n    // Busca do Serviço\r\n    this.getHttpService(this.servicesContext[context], languageSearch, literals).subscribe(response => {\r\n      if (response) {\r\n        this.updateLocalStorage(language, context, response);\r\n        this.updateVarI18n(language, context, response);\r\n        translationTemp = this.searchInVarI18n(language, context, literals);\r\n        translations = this.mergeObject(translationTemp, translations);\r\n        observer.next(translations);\r\n      }\r\n\r\n      // Se não encontrou todas as literais pesquisadas no idioma\r\n      // Então refaz o processo procurando em português\r\n      if (literals.length > this.countObject(translations)) {\r\n        if (languageAlternative === 'pt-br') {\r\n          // Se não encontrou nem em português, então retorna o nome das literais\r\n          translations = this.completeFaultLiterals(language, context, literals, translations);\r\n          this.updateLocalStorage(language, context, translations);\r\n          this.updateVarI18n(language, context, translations);\r\n          observer.next(translations);\r\n        } else {\r\n          this.getLiteralsFromContextService(language, context, literals, observer, translations, 'pt-br');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Procura pela lista de literais\r\n  // Se não encontrar todas, procura em pt-br\r\n  private getLiteralsFromContextConstant(\r\n    language: string,\r\n    context: string,\r\n    literals: Array<string>,\r\n    observer: any,\r\n    translations: any = {}\r\n  ) {\r\n    translations = this.mergeObject(translations, this.searchInVarI18n(language, context, literals));\r\n    if (this.countObject(translations) > 0) {\r\n      observer.next(translations);\r\n    }\r\n\r\n    // Se foi pesquisado por literais\r\n    if (literals.length > 0) {\r\n      // Se não encontrou todas as literais pesquisadas no idioma, procura em português\r\n      if (literals.length > this.countObject(translations)) {\r\n        if (language === 'pt-br') {\r\n          // Se não encontrou nem em português, então retorna o nome das literais\r\n          translations = this.completeFaultLiterals(language, context, literals, translations);\r\n          observer.next(translations);\r\n        } else {\r\n          this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\r\n        }\r\n      }\r\n    } else {\r\n      // Se não encontrar nenhuma literal, procura em português\r\n      if (this.countObject(translations) === 0 && language !== 'pt-br') {\r\n        this.getLiteralsFromContextConstant('pt-br', context, literals, observer, translations);\r\n      }\r\n\r\n      // caso não informar literais e não houver tradução\r\n      observer.next(translations);\r\n      observer.complete();\r\n    }\r\n  }\r\n\r\n  // Busca pelas literais no local storage\r\n  private searchInLocalStorage(language: string, context: string, literals: Array<string>): any {\r\n    const translations: any = {};\r\n\r\n    if (literals.length > 0) {\r\n      for (let i = 0; i < literals.length; i++) {\r\n        const literal = literals[i];\r\n        const translation = localStorage.getItem(language + '-' + context + '-' + literal);\r\n        if (translation) {\r\n          translations[literal] = translation;\r\n        }\r\n      }\r\n    }\r\n    return translations;\r\n  }\r\n\r\n  // Busca pelas literais na variável do serviço\r\n  private searchInVarI18n(language: string, context: string, literals: Array<string>): any {\r\n    let translations: any = {};\r\n\r\n    if (this.varI18n[language] && this.varI18n[language][context]) {\r\n      const content = this.varI18n[language][context];\r\n\r\n      if (literals.length > 0) {\r\n        // Busca as literais desejadas\r\n        for (let i = 0; i < literals.length; i++) {\r\n          const literal = literals[i];\r\n          if (content.hasOwnProperty(literal)) {\r\n            translations[literal] = content[literal];\r\n          }\r\n        }\r\n      } else {\r\n        // Atribui todas as literais\r\n        translations = { ...content };\r\n      }\r\n    }\r\n    return translations;\r\n  }\r\n\r\n  // Atualiza o local storage\r\n  private updateLocalStorage(language: string, context: string, data: any) {\r\n    if (this.useCache) {\r\n      for (const literal of Object.keys(data)) {\r\n        localStorage.setItem(language + '-' + context + '-' + literal, data[literal]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Atualiza a variável local com as literais com os objetos passados na configuração\r\n  private setVarI18n(contexts: Object) {\r\n    // Percorre os contextos\r\n    for (const context of Object.keys(contexts)) {\r\n      const contextContent = contexts[context];\r\n      // Percorre os idiomas dentro do contexto\r\n      for (const language of Object.keys(contextContent)) {\r\n        const languageContent = contextContent[language];\r\n        if (language === 'url') {\r\n          this.servicesContext[context] = languageContent;\r\n        } else {\r\n          this.updateVarI18n(language, context, languageContent);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Atualiza a variável local com as literais idioma e contexto\r\n  private updateVarI18n(language: string, context: string, data: any) {\r\n    language = language.toLowerCase();\r\n\r\n    if (!this.varI18n[language]) {\r\n      this.varI18n[language] = { [context]: {} };\r\n    }\r\n    if (!this.varI18n[language][context]) {\r\n      this.varI18n[language][context] = {};\r\n    }\r\n\r\n    // Cria ou atualiza o contexto dentro do storage\r\n    this.varI18n[language][context] = this.mergeObject(data, this.varI18n[language][context]);\r\n  }\r\n\r\n  private getHttpService(url: string, language: string, literals: Array<string>) {\r\n    let param = '?language=' + language;\r\n    if (literals.length > 0) {\r\n      param += '&literals=' + literals.join();\r\n    }\r\n\r\n    // Remove a barra final do endereço\r\n    url = url.replace(/\\/$/, '');\r\n\r\n    return this.http.get(`${url}${param}`);\r\n  }\r\n\r\n  // Completa com o nome da literais, as que não foram encontradas\r\n  private completeFaultLiterals(language: string, context: string, literals: Array<string>, translations: any) {\r\n    for (let i = 0; i < literals.length; i++) {\r\n      const literal = literals[i];\r\n      if (!translations[literal]) {\r\n        translations[literal] = literal;\r\n      }\r\n    }\r\n    return translations;\r\n  }\r\n\r\n  // Conta os atributos do objeto\r\n  private countObject(obj: object) {\r\n    return Object.keys(obj).length;\r\n  }\r\n\r\n  // Faz o merge dos objetos, sempre dando preferência para o primeiro objeto de parâmetro\r\n  private mergeObject(objPermanent: any, obj: any) {\r\n    return { ...obj, ...objPermanent };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { PoLanguageService } from './../po-language/po-language.service';\r\n\r\nimport { PoI18nBaseService } from './po-i18n-base.service';\r\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\r\n\r\n/**\r\n * @docsExtends PoI18nBaseService\r\n */\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PoI18nService extends PoI18nBaseService {}\r\n\r\n// Função usada para retornar instância para o módulo po-i18n.module\r\nexport function returnPoI18nService(config: PoI18nConfig, http: HttpClient, languageService: PoLanguageService) {\r\n  return new PoI18nService(config, http, languageService);\r\n}\r\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { PoLanguageService } from './../po-language/po-language.service';\r\n\r\nimport { I18N_CONFIG } from './po-i18n-config-injection-token';\r\nimport { returnPoI18nService, PoI18nService } from './po-i18n.service';\r\nimport { PoI18nConfig } from './interfaces/po-i18n-config.interface';\r\nimport { PoLanguageModule } from '../po-language/po-language.module';\r\n\r\n/**\r\n * @description\r\n *\r\n * Módulo do serviço `PoI18nService` para controle de idiomas com PO.\r\n *\r\n * Para utilização do serviço de idiomas `PoI18nService`, deve-se importar este módulo mesmo já havendo importado\r\n * o módulo `PoModule`. Na importação deve ser invocado o método `config`, informando um objeto que deve implementar\r\n * a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig) para configuração.\r\n *\r\n * <a id=\"i18n-config\"></a>\r\n * **Exemplo de configuração do módulo do i18n:**\r\n * ```\r\n * import { PoI18nConfig } from '@po-ui/ng-components';\r\n *\r\n * import { generalEn } from './i18n/general-en';\r\n * import { generalPt } from './i18n/general-pt';\r\n *\r\n * const i18nConfig: PoI18nConfig = {\r\n *   default: {\r\n *     language: 'pt-BR',\r\n *     context: 'general',\r\n *     cache: true\r\n *   },\r\n *   contexts: {\r\n *     general: {\r\n *       'pt-BR': generalPt,\r\n *       'en-US': generalEn\r\n *     },\r\n *     hcm: {\r\n *       url: 'http://10.1.1.1/api/translations/hcm/'\r\n *     }\r\n *   }\r\n * };\r\n *\r\n * @NgModule({\r\n *   declarations: [],\r\n *   imports: [\r\n *     PoModule,\r\n *     PoI18nModule.config(i18nConfig)\r\n *   ],\r\n *   bootstrap: [AppComponent]\r\n * })\r\n * ```\r\n *\r\n * Para cada contexto é possível definir a origem das literais, que podem ser de um serviço REST ou\r\n * de um objeto. Exemplo:\r\n *\r\n * Arquivo general-pt.ts\r\n * ```\r\n * export const generalPt = {\r\n *  add: 'Adicionar',\r\n *  greeting: 'Prazer, {0} {1}',\r\n *  people: '{0} Pessoas,\r\n *  remove: 'Remover'\r\n * }\r\n * ```\r\n *\r\n * Arquivo general-en.ts\r\n * ```\r\n * export const generalEn = {\r\n *  add: 'Add',\r\n *  greeting: 'Nice to meet you, {0} {1}',\r\n *  people: '{0} People,\r\n *  remove: 'Remove'\r\n * }\r\n * ```\r\n *\r\n * **Exemplo de configuração de contextos usando constantes externas:**\r\n * ```\r\n * import { PoI18nConfig } from '@po-ui/ng-components';\r\n *\r\n * import { generalEn } from './i18n/general-en';\r\n * import { generalPt } from './i18n/general-pt';\r\n *\r\n * const i18nConfig: PoI18nConfig = {\r\n *   contexts: {\r\n *     general: {\r\n *       'pt-BR': generalPt, // constantes em arquivos separados\r\n *       'en-US': generalEn // constantes em arquivos separados\r\n *     },\r\n *     crm: {\r\n *       url: 'http://10.0.0.1:3000/api/translations/crm'\r\n *     }\r\n *   },\r\n *   default: {}\r\n * }\r\n * ```\r\n *\r\n * **Exemplo de configuração de um contexto utilizando serviço:**\r\n *\r\n * Ao optar por utilizar um serviço para configuração de contexto, deverá ser definida a URL\r\n * específica do contexto, como nos exemplos abaixo:\r\n *\r\n *  - http://10.0.0.1:3000/api/translations/crm\r\n *  - http://10.0.0.1:3000/api/translations/general\r\n *\r\n * Os idiomas e literais serão automaticamente buscados com parâmetros na própria URL:\r\n * - **language**: o idioma será sempre passado por parâmetro e é recomendado utilizar uma das linguagens\r\n * suportadas pelo PO (`pt-br`, `en-us`, `es-es` ou `ru`).\r\n * - **literals**: as literais serão separadas por vírgula. Caso esse parâmetro não seja informado, o\r\n * serviço deve retornar todas as literais do idioma.\r\n *\r\n * Exemplos de requisição:\r\n *\r\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br\r\n *  - http://10.0.0.1:3000/api/translations/crm?language=pt-br&literals=add,remove,text\r\n *\r\n * > Sempre que o idioma solicitado não for encontrado, será buscado por `pt-br`.\r\n *\r\n * Além dos contextos, é possível definir as configurações *default* do sistema na configuração do\r\n * módulo utilizando a interface [`PoI18nConfig`](documentation/po-i18n#poI18nConfig):\r\n *\r\n * **Exemplo de padrões definidos:**\r\n * ```\r\n * const i18nConfig: PoI18nConfig = {\r\n *   contexts: {\r\n *     general: { }\r\n *   },\r\n *   default: {\r\n *    language: 'pt-BR',\r\n *    context: 'general',\r\n *    cache: true\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * **Importante:**\r\n *\r\n * Recomenda-se que as definições *default* sejam realizadas apenas uma vez na aplicação,\r\n * preferencialmente no módulo `AppModule`.\r\n *\r\n * **i18n com *Lazy loading***\r\n *\r\n * Para aplicações que utilizem a abordagem de módulos com carregamento *lazy loading*, caso seja\r\n * definida outra configuração do `PoI18nModule`, deve-se atentar os seguintes detalhes:\r\n *\r\n * - Caso existam literais comuns na aplicação, estas devem ser reimportadas;\r\n * - Não defina outra *default language* para este módulo. Caso for definida, será sobreposta para\r\n * toda a aplicação;\r\n * - Caso precise de módulos carregados via *lazy loading* com linguagens diferentes, utilize o\r\n * método [`setLanguage()`](documentation/po-i18n#setLanguage) disponibilizado pelo `PoI18nService`\r\n * para definir a linguagem da aplicação e dos módulos com as linguagens diferentes.\r\n */\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule, PoLanguageModule]\r\n})\r\nexport class PoI18nModule {\r\n  static config(config: PoI18nConfig): ModuleWithProviders<PoI18nModule> {\r\n    return {\r\n      ngModule: PoI18nModule,\r\n      providers: [\r\n        {\r\n          provide: I18N_CONFIG,\r\n          useValue: config\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: initializeLanguageDefault,\r\n          multi: true,\r\n          deps: [I18N_CONFIG, PoLanguageService]\r\n        },\r\n        {\r\n          provide: PoI18nService,\r\n          useFactory: returnPoI18nService,\r\n          deps: [I18N_CONFIG, HttpClient, PoLanguageService]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport function initializeLanguageDefault(config: PoI18nConfig, languageService: PoLanguageService) {\r\n  // eslint-disable-next-line sonarjs/prefer-immediate-return\r\n  const setDefaultLanguage = () => {\r\n    if (config.default.language) {\r\n      languageService.setLanguageDefault(config.default.language);\r\n    }\r\n  };\r\n  return setDefaultLanguage;\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {PoAccordionBaseComponent as ɵa} from './lib/components/po-accordion/po-accordion-base.component';\nexport {PoAccordionItemBodyComponent as ɵc} from './lib/components/po-accordion/po-accordion-item-body/po-accordion-item-body.component';\nexport {PoAccordionItemHeaderComponent as ɵd} from './lib/components/po-accordion/po-accordion-item-header/po-accordion-item-header.component';\nexport {PoAccordionService as ɵb} from './lib/components/po-accordion/services/po-accordion.service';\nexport {PoAvatarBaseComponent as ɵe} from './lib/components/po-avatar/po-avatar-base.component';\nexport {PoBadgeBaseComponent as ɵfo} from './lib/components/po-badge/po-badge-base.component';\nexport {PoBadgeComponent as ɵfn} from './lib/components/po-badge/po-badge.component';\nexport {PoBadgeModule as ɵfm} from './lib/components/po-badge/po-badge.module';\nexport {PoBreadcrumbBaseComponent as ɵf} from './lib/components/po-breadcrumb/po-breadcrumb-base.component';\nexport {PoBreadcrumbDropdownComponent as ɵg} from './lib/components/po-breadcrumb/po-breadcrumb-dropdown/po-breadcrumb-dropdown.component';\nexport {PoBreadcrumbFavoriteComponent as ɵh} from './lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.component';\nexport {PoBreadcrumbFavoriteService as ɵi} from './lib/components/po-breadcrumb/po-breadcrumb-favorite/po-breadcrumb-favorite.service';\nexport {PoBreadcrumbItemComponent as ɵj} from './lib/components/po-breadcrumb/po-breadcrumb-item/po-breadcrumb-item.component';\nexport {PoButtonGroupBaseComponent as ɵr} from './lib/components/po-button-group/po-button-group-base.component';\nexport {PoButtonBaseComponent as ɵm} from './lib/components/po-button/po-button-base.component';\nexport {PoCalendarBaseComponent as ɵs} from './lib/components/po-calendar/po-calendar-base.component';\nexport {PoCalendarHeaderComponent as ɵu} from './lib/components/po-calendar/po-calendar-header/po-calendar-header.component';\nexport {PoCalendarWrapperComponent as ɵv} from './lib/components/po-calendar/po-calendar-wrapper/po-calendar-wrapper.component';\nexport {PoCalendarLangService as ɵx} from './lib/components/po-calendar/services/po-calendar.lang.service';\nexport {PoCalendarService as ɵw} from './lib/components/po-calendar/services/po-calendar.service';\nexport {PoResizeObserverDirective as ɵca} from './lib/components/po-chart/directives/po-resize-observer.directive';\nexport {PoChartBaseComponent as ɵbe} from './lib/components/po-chart/po-chart-base.component';\nexport {PoChartAxisLabelComponent as ɵbd} from './lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis-label/po-chart-axis-label.component';\nexport {PoChartAxisPathComponent as ɵbc} from './lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis-path/po-chart-axis-path.component';\nexport {PoChartAxisComponent as ɵbb} from './lib/components/po-chart/po-chart-container/po-chart-axis/po-chart-axis.component';\nexport {PoChartBarBaseComponent as ɵbu} from './lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar-base.component';\nexport {PoChartBarPathComponent as ɵbw} from './lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar-path/po-chart-bar-path.component';\nexport {PoChartBarComponent as ɵbt} from './lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-bar.component';\nexport {PoChartColumnComponent as ɵbv} from './lib/components/po-chart/po-chart-container/po-chart-bar/po-chart-column/po-chart-column.component';\nexport {PoChartCircularLabelComponent as ɵby} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-label/po-chart-circular-label.component';\nexport {PoChartCircularPathComponent as ɵbx} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-circular-path.component';\nexport {PoChartTooltipDirective as ɵbz} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular-path/po-chart-tooltip.directive';\nexport {PoChartCircularComponent as ɵbq} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-circular.component';\nexport {PoChartDonutComponent as ɵbr} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-donut/po-chart-donut.component';\nexport {PoChartPieComponent as ɵbp} from './lib/components/po-chart/po-chart-container/po-chart-circular/po-chart-pie/po-chart-pie.component';\nexport {PoChartContainerComponent as ɵbh} from './lib/components/po-chart/po-chart-container/po-chart-container.component';\nexport {PoChartAreaComponent as ɵy} from './lib/components/po-chart/po-chart-container/po-chart-line/po-chart-area/po-chart-area.component';\nexport {PoChartLineBaseComponent as ɵz} from './lib/components/po-chart/po-chart-container/po-chart-line/po-chart-line-base.component';\nexport {PoChartLineComponent as ɵbn} from './lib/components/po-chart/po-chart-container/po-chart-line/po-chart-line.component';\nexport {PoChartPathComponent as ɵbo} from './lib/components/po-chart/po-chart-container/po-chart-line/po-chart-path/po-chart-path.component';\nexport {PoChartSeriesPointComponent as ɵbs} from './lib/components/po-chart/po-chart-container/po-chart-line/po-chart-series-point/po-chart-series-point.component';\nexport {PoChartLegendComponent as ɵbm} from './lib/components/po-chart/po-chart-legend/po-chart-legend.component';\nexport {PoChartCircular as ɵbj} from './lib/components/po-chart/po-chart-types/po-chart-circular/po-chart-circular';\nexport {PoChartDynamicTypeComponent as ɵbk} from './lib/components/po-chart/po-chart-types/po-chart-dynamic-type.component';\nexport {PoChartGaugeTextContentComponent as ɵbl} from './lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge-text-content/po-chart-gauge-text-content.component';\nexport {PoChartGaugeComponent as ɵbi} from './lib/components/po-chart/po-chart-types/po-chart-gauge/po-chart-gauge.component';\nexport {PoChartMathsService as ɵba} from './lib/components/po-chart/services/po-chart-maths.service';\nexport {PoChartSvgContainerService as ɵbg} from './lib/components/po-chart/services/po-chart-svg-container.service';\nexport {PoContainerBaseComponent as ɵcb} from './lib/components/po-container/po-container-base.component';\nexport {PoDisclaimerGroupBaseComponent as ɵcd} from './lib/components/po-disclaimer-group/po-disclaimer-group-base.component';\nexport {PoDisclaimerRemoveComponent as ɵce} from './lib/components/po-disclaimer-group/po-disclaimer-remove/po-disclaimer-remove.component';\nexport {PoDisclaimerBaseComponent as ɵcc} from './lib/components/po-disclaimer/po-disclaimer-base.component';\nexport {PoDividerBaseComponent as ɵcf} from './lib/components/po-divider/po-divider-base.component';\nexport {PoDropdownBaseComponent as ɵch} from './lib/components/po-dropdown/po-dropdown-base.component';\nexport {PoDynamicFormBaseComponent as ɵet} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-base.component';\nexport {PoDynamicFormFieldsBaseComponent as ɵey} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields-base.component';\nexport {PoDynamicFormFieldsComponent as ɵex} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-fields/po-dynamic-form-fields.component';\nexport {PoDynamicFormLoadService as ɵeu} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-load/po-dynamic-form-load.service';\nexport {PoDynamicFormOperation as ɵev} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-operation/po-dynamic-form-operation';\nexport {PoDynamicFormValidationService as ɵew} from './lib/components/po-dynamic/po-dynamic-form/po-dynamic-form-validation/po-dynamic-form-validation.service';\nexport {PoDynamicViewBaseComponent as ɵez} from './lib/components/po-dynamic/po-dynamic-view/po-dynamic-view-base.component';\nexport {PoDynamicViewService as ɵfa} from './lib/components/po-dynamic/po-dynamic-view/po-dynamic-view.service';\nexport {PoCheckboxGroupBaseComponent as ɵco} from './lib/components/po-field/po-checkbox-group/po-checkbox-group-base.component';\nexport {PoCheckboxBaseComponent as ɵdj} from './lib/components/po-field/po-checkbox/po-checkbox-base.component';\nexport {PoCleanBaseComponent as ɵck} from './lib/components/po-field/po-clean/po-clean-base.component';\nexport {PoCleanModule as ɵcj} from './lib/components/po-field/po-clean/po-clean.module';\nexport {PoComboBaseComponent as ɵdk} from './lib/components/po-field/po-combo/po-combo-base.component';\nexport {PoComboFilterService as ɵdl} from './lib/components/po-field/po-combo/po-combo-filter.service';\nexport {PoDatepickerRangeBaseComponent as ɵdn} from './lib/components/po-field/po-datepicker-range/po-datepicker-range-base.component';\nexport {PoDatepickerBaseComponent as ɵcp} from './lib/components/po-field/po-datepicker/po-datepicker-base.component';\nexport {PoFieldContainerBottomComponent as ɵcm} from './lib/components/po-field/po-field-container/po-field-container-bottom/po-field-container-bottom.component';\nexport {PoFieldContainerComponent as ɵcn} from './lib/components/po-field/po-field-container/po-field-container.component';\nexport {PoFieldContainerModule as ɵcl} from './lib/components/po-field/po-field-container/po-field-container.module';\nexport {PoFieldValidateModel as ɵea} from './lib/components/po-field/po-field-validate.model';\nexport {PoFieldModel as ɵeb} from './lib/components/po-field/po-field.model';\nexport {PoInputGeneric as ɵdo} from './lib/components/po-field/po-input-generic/po-input-generic';\nexport {PoInputBaseComponent as ɵdm} from './lib/components/po-field/po-input/po-input-base.component';\nexport {PoLookupBaseComponent as ɵdp} from './lib/components/po-field/po-lookup/po-lookup-base.component';\nexport {PoLookupModalBaseComponent as ɵds} from './lib/components/po-field/po-lookup/po-lookup-modal/po-lookup-modal-base.component';\nexport {PoLookupFilterService as ɵdq} from './lib/components/po-field/po-lookup/services/po-lookup-filter.service';\nexport {PoLookupModalService as ɵdr} from './lib/components/po-field/po-lookup/services/po-lookup-modal.service';\nexport {PoMultiselectBaseComponent as ɵdt} from './lib/components/po-field/po-multiselect/po-multiselect-base.component';\nexport {PoMultiselectDropdownComponent as ɵej} from './lib/components/po-field/po-multiselect/po-multiselect-dropdown/po-multiselect-dropdown.component';\nexport {PoMultiselectFilterService as ɵdu} from './lib/components/po-field/po-multiselect/po-multiselect-filter.service';\nexport {PoMultiselectItemComponent as ɵek} from './lib/components/po-field/po-multiselect/po-multiselect-item/po-multiselect-item.component';\nexport {PoMultiselectSearchComponent as ɵel} from './lib/components/po-field/po-multiselect/po-multiselect-search/po-multiselect-search.component';\nexport {PoNumberBaseComponent as ɵdv} from './lib/components/po-field/po-number/po-number-base.component';\nexport {PoRadioGroupBaseComponent as ɵdw} from './lib/components/po-field/po-radio-group/po-radio-group-base.component';\nexport {PoRichTextBaseComponent as ɵdx} from './lib/components/po-field/po-rich-text/po-rich-text-base.component';\nexport {PoRichTextBodyComponent as ɵdz} from './lib/components/po-field/po-rich-text/po-rich-text-body/po-rich-text-body.component';\nexport {PoRichTextImageModalComponent as ɵem} from './lib/components/po-field/po-rich-text/po-rich-text-image-modal/po-rich-text-image-modal.component';\nexport {PoRichTextLinkModalComponent as ɵen} from './lib/components/po-field/po-rich-text/po-rich-text-link-modal/po-rich-text-link-modal.component';\nexport {PoRichTextToolbarComponent as ɵeo} from './lib/components/po-field/po-rich-text/po-rich-text-toolbar/po-rich-text-toolbar.component';\nexport {PoRichTextService as ɵdy} from './lib/components/po-field/po-rich-text/po-rich-text.service';\nexport {PoTextareaBaseComponent as ɵec} from './lib/components/po-field/po-textarea/po-textarea-base.component';\nexport {PoUploadBaseComponent as ɵed} from './lib/components/po-field/po-upload/po-upload-base.component';\nexport {PoUploadBaseService as ɵef} from './lib/components/po-field/po-upload/po-upload-base.service';\nexport {PoUploadDragDropAreaOverlayComponent as ɵeq} from './lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area-overlay/po-upload-drag-drop-area-overlay.component';\nexport {PoUploadDragDropAreaComponent as ɵeh} from './lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop-area/po-upload-drag-drop-area.component';\nexport {PoUploadDragDropComponent as ɵeg} from './lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.component';\nexport {PoUploadDragDropDirective as ɵep} from './lib/components/po-field/po-upload/po-upload-drag-drop/po-upload-drag-drop.directive';\nexport {PoUploadFileRestrictionsComponent as ɵer} from './lib/components/po-field/po-upload/po-upload-file-restrictions/po-upload-file-restrictions.component';\nexport {PoUploadService as ɵee} from './lib/components/po-field/po-upload/po-upload.service';\nexport {PoGaugeBaseComponent as ɵfb} from './lib/components/po-gauge/po-gauge-base.component';\nexport {PoGaugeDescriptionComponent as ɵfg} from './lib/components/po-gauge/po-gauge-description/po-gauge-description.component';\nexport {PoGaugeLegendComponent as ɵfd} from './lib/components/po-gauge/po-gauge-legend/po-gauge-legend.component';\nexport {PoGaugePathComponent as ɵff} from './lib/components/po-gauge/po-gauge-svg/po-gauge-path/po-gauge-path.component';\nexport {PoGaugePointerComponent as ɵfh} from './lib/components/po-gauge/po-gauge-svg/po-gauge-pointer/po-gauge-pointer.component';\nexport {PoGaugeSvgComponent as ɵfe} from './lib/components/po-gauge/po-gauge-svg/po-gauge-svg.component';\nexport {PoGaugeTitleComponent as ɵfc} from './lib/components/po-gauge/po-gauge-title/po-gauge-title.component';\nexport {PoGridCellActionComponent as ɵfi} from './lib/components/po-grid/po-grid-cell-action/po-grid-cell-action.component';\nexport {PoGridCellComponent as ɵfj} from './lib/components/po-grid/po-grid-cell/po-grid-cell.component';\nexport {PoGridHeadComponent as ɵfk} from './lib/components/po-grid/po-grid-head/po-grid-head.component';\nexport {PoInfoBaseComponent as ɵci} from './lib/components/po-info/po-info-base.component';\nexport {PoListViewBaseComponent as ɵfl} from './lib/components/po-list-view/po-list-view-base.component';\nexport {PoLoadingBaseComponent as ɵk} from './lib/components/po-loading/po-loading-base.component';\nexport {PoLoadingOverlayBaseComponent as ɵl} from './lib/components/po-loading/po-loading-overlay/po-loading-overlay-base.component';\nexport {PoMenuPanelBaseComponent as ɵfu} from './lib/components/po-menu-panel/po-menu-panel-base.component';\nexport {PoMenuPanelItemComponent as ɵfw} from './lib/components/po-menu-panel/po-menu-panel-item/po-menu-panel-item.component';\nexport {PoMenuPanelItemsService as ɵfv} from './lib/components/po-menu-panel/services/po-menu-panel-items.service';\nexport {PoMenuBaseComponent as ɵfp} from './lib/components/po-menu/po-menu-base.component';\nexport {PoMenuFilterComponent as ɵfs} from './lib/components/po-menu/po-menu-filter/po-menu-filter.component';\nexport {PoMenuItemComponent as ɵft} from './lib/components/po-menu/po-menu-item/po-menu-item.component';\nexport {PoMenuItemsService as ɵfr} from './lib/components/po-menu/services/po-menu-items.service';\nexport {PoMenuService as ɵfq} from './lib/components/po-menu/services/po-menu.service';\nexport {PoModalBaseComponent as ɵcq} from './lib/components/po-modal/po-modal-base.component';\nexport {PoNavbarActionPopupComponent as ɵfz} from './lib/components/po-navbar/po-navbar-actions/po-navbar-action-popup/po-navbar-action-popup.component';\nexport {PoNavbarActionComponent as ɵfy} from './lib/components/po-navbar/po-navbar-actions/po-navbar-action/po-navbar-action.component';\nexport {PoNavbarActionsComponent as ɵga} from './lib/components/po-navbar/po-navbar-actions/po-navbar-actions.component';\nexport {PoNavbarActionsModule as ɵfx} from './lib/components/po-navbar/po-navbar-actions/po-navbar-actions.module';\nexport {PoNavbarBaseComponent as ɵgh} from './lib/components/po-navbar/po-navbar-base.component';\nexport {PoNavbarItemNavigationIconComponent as ɵgg} from './lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation-icon/po-navbar-item-navigation-icon.component';\nexport {PoNavbarItemNavigationComponent as ɵgf} from './lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.component';\nexport {PoNavbarItemNavigationModule as ɵge} from './lib/components/po-navbar/po-navbar-item-navigation/po-navbar-item-navigation.module';\nexport {PoNavbarItemComponent as ɵgc} from './lib/components/po-navbar/po-navbar-items/po-navbar-item/po-navbar-item.component';\nexport {PoNavbarItemsComponent as ɵgd} from './lib/components/po-navbar/po-navbar-items/po-navbar-items.component';\nexport {PoNavbarItemsModule as ɵgb} from './lib/components/po-navbar/po-navbar-items/po-navbar-items.module';\nexport {PoNavbarLogoComponent as ɵgi} from './lib/components/po-navbar/po-navbar-logo/po-navbar-logo.component';\nexport {PoPageBaseComponent as ɵgk} from './lib/components/po-page/po-page-base.component';\nexport {PoPageContentBaseComponent as ɵgm} from './lib/components/po-page/po-page-content/po-page-content-base.component';\nexport {PoPageContentComponent as ɵgl} from './lib/components/po-page/po-page-content/po-page-content.component';\nexport {PoPageDefaultBaseComponent as ɵgn} from './lib/components/po-page/po-page-default/po-page-default-base.component';\nexport {PoPageDetailBaseComponent as ɵgo} from './lib/components/po-page/po-page-detail/po-page-detail-base.component';\nexport {PoPageEditBaseComponent as ɵgp} from './lib/components/po-page/po-page-edit/po-page-edit-base.component';\nexport {PoPageHeaderBaseComponent as ɵgr} from './lib/components/po-page/po-page-header/po-page-header-base.component';\nexport {PoPageHeaderComponent as ɵgq} from './lib/components/po-page/po-page-header/po-page-header.component';\nexport {PoPageListBaseComponent as ɵgs} from './lib/components/po-page/po-page-list/po-page-list-base.component';\nexport {PoPageSlideBaseComponent as ɵgt} from './lib/components/po-page/po-page-slide/po-page-slide-base.component';\nexport {PoPageComponent as ɵgj} from './lib/components/po-page/po-page.component';\nexport {PoPopoverBaseComponent as ɵcx} from './lib/components/po-popover/po-popover-base.component';\nexport {PoPopupBaseComponent as ɵcg} from './lib/components/po-popup/po-popup-base.component';\nexport {PoProgressBarComponent as ɵcs} from './lib/components/po-progress/po-progress-bar/po-progress-bar.component';\nexport {PoProgressBaseComponent as ɵcr} from './lib/components/po-progress/po-progress-base.component';\nexport {PoSlideBaseComponent as ɵgv} from './lib/components/po-slide/po-slide-base.component';\nexport {PoSlideCirclesComponent as ɵgu} from './lib/components/po-slide/po-slide-circles/po-slide-circles.component';\nexport {PoSlideControlComponent as ɵgx} from './lib/components/po-slide/po-slide-control/po-slide-control.component';\nexport {PoSlideItemComponent as ɵgw} from './lib/components/po-slide/po-slide-item/po-slide-item.component';\nexport {PoStepperBaseComponent as ɵgz} from './lib/components/po-stepper/po-stepper-base.component';\nexport {PoStepperCircleComponent as ɵgy} from './lib/components/po-stepper/po-stepper-circle/po-stepper-circle.component';\nexport {PoStepperLabelComponent as ɵha} from './lib/components/po-stepper/po-stepper-label/po-stepper-label.component';\nexport {PoStepperStepComponent as ɵhb} from './lib/components/po-stepper/po-stepper-step/po-stepper-step.component';\nexport {PoTableBaseComponent as ɵcy} from './lib/components/po-table/po-table-base.component';\nexport {PoTableColumnIconComponent as ɵda} from './lib/components/po-table/po-table-column-icon/po-table-column-icon.component';\nexport {PoTableColumnLabelComponent as ɵdb} from './lib/components/po-table/po-table-column-label/po-table-column-label.component';\nexport {PoTableColumnLinkComponent as ɵdc} from './lib/components/po-table/po-table-column-link/po-table-column-link.component';\nexport {PoTableColumnManagerComponent as ɵdd} from './lib/components/po-table/po-table-column-manager/po-table-column-manager.component';\nexport {PoTableDetailComponent as ɵde} from './lib/components/po-table/po-table-detail/po-table-detail.component';\nexport {PoTableIconComponent as ɵdf} from './lib/components/po-table/po-table-icon/po-table-icon.component';\nexport {PoTableShowSubtitleComponent as ɵdg} from './lib/components/po-table/po-table-show-subtitle/po-table-show-subtitle.component';\nexport {PoTableSubtitleCircleComponent as ɵdh} from './lib/components/po-table/po-table-subtitle-circle/po-table-subtitle-circle.component';\nexport {PoTableSubtitleFooterComponent as ɵdi} from './lib/components/po-table/po-table-subtitle-footer/po-table-subtitle-footer.component';\nexport {PoTableService as ɵcz} from './lib/components/po-table/services/po-table.service';\nexport {PoTabButtonComponent as ɵhc} from './lib/components/po-tabs/po-tab-button/po-tab-button.component';\nexport {PoTabDropdownComponent as ɵhe} from './lib/components/po-tabs/po-tab-dropdown/po-tab-dropdown.component';\nexport {PoTabBaseComponent as ɵhd} from './lib/components/po-tabs/po-tab/po-tab-base.component';\nexport {PoTabsBaseComponent as ɵhf} from './lib/components/po-tabs/po-tabs-base.component';\nexport {PoTagBaseComponent as ɵes} from './lib/components/po-tag/po-tag-base.component';\nexport {PoToolbarActionsComponent as ɵhg} from './lib/components/po-toolbar/po-toolbar-actions/po-toolbar-actions.component';\nexport {PoToolbarBaseComponent as ɵhh} from './lib/components/po-toolbar/po-toolbar-base.component';\nexport {PoToolbarNotificationComponent as ɵhi} from './lib/components/po-toolbar/po-toolbar-notification/po-toolbar-notification.component';\nexport {PoToolbarProfileComponent as ɵhj} from './lib/components/po-toolbar/po-toolbar-profile/po-toolbar-profile.component';\nexport {PoTreeViewBaseComponent as ɵhk} from './lib/components/po-tree-view/po-tree-view-base.component';\nexport {PoTreeViewItemHeaderComponent as ɵhn} from './lib/components/po-tree-view/po-tree-view-item-header/po-tree-view-item-header.component';\nexport {PoTreeViewItemComponent as ɵhm} from './lib/components/po-tree-view/po-tree-view-item/po-tree-view-item.component';\nexport {PoTreeViewService as ɵhl} from './lib/components/po-tree-view/services/po-tree-view.service';\nexport {PoWidgetBaseComponent as ɵho} from './lib/components/po-widget/po-widget-base.component';\nexport {InputBoolean as ɵn} from './lib/decorators';\nexport {PoTooltipBaseDirective as ɵo} from './lib/directives/po-tooltip/po-tooltip-base.directive';\nexport {PoTooltipControlPositionService as ɵp} from './lib/directives/po-tooltip/po-tooltip-control-position.service';\nexport {PoHttpInterceptorBaseService as ɵhq} from './lib/interceptors/po-http-interceptor/po-http-interceptor-base.service';\nexport {PoHttpInterceptorDetailComponent as ɵhp} from './lib/interceptors/po-http-interceptor/po-http-interceptor-detail/po-http-interceptor-detail.component';\nexport {PoHttpRequesControltService as ɵhr} from './lib/interceptors/po-http-request/po-http-request-control-service';\nexport {PoColorService as ɵbf} from './lib/services/po-color/po-color.service';\nexport {PoControlPositionService as ɵq} from './lib/services/po-control-position/po-control-position.service';\nexport {PoDateService as ɵt} from './lib/services/po-date';\nexport {PoDialogBaseService as ɵcu} from './lib/services/po-dialog/po-dialog-base.service';\nexport {PoI18nBasePipe as ɵct} from './lib/services/po-i18n/po-i18n-base.pipe';\nexport {PoI18nBaseService as ɵhs} from './lib/services/po-i18n/po-i18n-base.service';\nexport {PoNotificationBaseService as ɵei} from './lib/services/po-notification/po-notification-base.service';\nexport {PoToasterBaseComponent as ɵcw} from './lib/services/po-notification/po-toaster/po-toaster-base.component';\nexport {PoToasterComponent as ɵcv} from './lib/services/po-notification/po-toaster/po-toaster.component';"],"names":["providers","poCalendarContentOffset","poCalendarPositionDefault"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;MA0Ba,wBAAwB;;;ACtBrC;;;;;;;;MASa,kBAAkB;IAD/B;QAEU,iBAAY,GAAG,IAAI,OAAO,EAAO,CAAC;KAW3C;;IARC,gCAAgC;QAC9B,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;;IAGD,gCAAgC,CAAC,aAAqB;QACpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACvC;;;YAZF,UAAU;;;ACRX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmCa,wBAAwB;IAQnC,YAAoB,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;KAAI;;;;IAK5D,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;KAC9D;;;;IAKD,MAAM;QACJ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;KAC9D;;;YA9BF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,8EAA+C;aAChD;;;YApCQ,kBAAkB;;;oBAuCxB,KAAK,SAAC,SAAS;0BAEf,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACnC1C;;;;;;;;;;;;;;;;;;;;;;MA2Ba,oBAAqB,SAAQ,wBAAwB;IAMhE,YAAoB,gBAAoC;QACtD,KAAK,EAAE,CAAC;QADU,qBAAgB,GAAhB,gBAAgB,CAAoB;QAEtD,IAAI,CAAC,qCAAqC,EAAE,CAAC;KAC9C;IAED,WAAW;QACT,IAAI,CAAC,4BAA4B,CAAC,WAAW,EAAE,CAAC;KACjD;IAED,YAAY,CAAC,KAAc,EAAE,eAAyC;QACpE,eAAe,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KAC9B;IAEO,qCAAqC;QAC3C,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,gBAAgB;aACtD,gCAAgC,EAAE;aAClC,SAAS,CAAC,eAAe,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;KAC/D;IAEO,MAAM,CAAC,eAAyC;QACtD,MAAM,2BAA2B,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;QAE9D,IAAI,2BAA2B,EAAE;YAC/B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;YACxC,OAAO;SACR;QAED,IAAI,IAAI,CAAC,2BAA2B,EAAE;YACpC,IAAI,CAAC,2BAA2B,CAAC,QAAQ,EAAE,CAAC;SAC7C;QAED,IAAI,CAAC,2BAA2B,GAAG,eAAe,CAAC;KACpD;;;YA7CF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,qtBAA0C;gBAC1C,SAAS,EAAE,CAAC,kBAAkB,CAAC;aAChC;;;YA5BQ,kBAAkB;;;+BA8BxB,eAAe,SAAC,wBAAwB;;;MCvB9B,4BAA4B;IAVzC;QAWuB,aAAQ,GAAY,KAAK,CAAC;KAChD;;;YAZA,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,gMAAoD;gBACpD,UAAU,EAAE;oBACV,OAAO,CAAC,YAAY,EAAE;wBACpB,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACrF,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;qBACxF,CAAC;iBACH;aACF;;;uBAEE,KAAK,SAAC,YAAY;;;MCPR,8BAA8B;IAL3C;QAMuB,aAAQ,GAAY,KAAK,CAAC;QAI3B,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;KAO1D;IALC,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjC;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,yWAAsD;gBACtD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;uBAEE,KAAK,SAAC,YAAY;oBAElB,KAAK,SAAC,SAAS;qBAEf,MAAM,SAAC,UAAU;;;ACJpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyCa,iBAAiB;;;YAV7B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE;oBACZ,oBAAoB;oBACpB,4BAA4B;oBAC5B,wBAAwB;oBACxB,8BAA8B;iBAC/B;gBACD,OAAO,EAAE,CAAC,oBAAoB,EAAE,wBAAwB,CAAC;aAC1D;;;AC9CD,MAAM,eAAe,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACvD,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAEpC;;;;;;;;;MAUa,qBAAqB;IADlC;;;;;;;;;;;;;;QAqBsB,YAAO,GAAqB,OAAO,CAAC;;QAGrC,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAE3C,UAAK,GAAW,IAAI,CAAC;KA4B9B;;;;;;;;;;;;;;;;;IAVC,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,sBAAsB,CAAC;KAC/E;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAI,aAAa;QACf,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;KACtC;;;YArDF,SAAS;;;kBAMP,KAAK,SAAC,OAAO;sBAeb,KAAK,SAAC,WAAW;oBAGjB,MAAM,SAAC,SAAS;mBAoBhB,KAAK,SAAC,QAAQ;;;ACtDjB;;;;;;;;;;;;;;;;;;;;;;MA2Ba,iBAAkB,SAAQ,qBAAqB;IAC1D,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;SACtB;KACF;IAED,OAAO;QACL,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;KACtB;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,6fAAyC;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;ACzBD;;;;;MAUa,cAAc;;;YAL1B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;;;ACVD;;;;;;;;;;;;;;;MAgBa,yBAAyB;IADtC;QA0EE,cAAS,GAA4B,EAAE,CAAC;QAKhC,WAAM,GAA4B,EAAE,CAAC;KAoB9C;;;;;;;;;;;IARC,IAAsB,KAAK,CAAC,KAA8B;QACxD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACnC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YAlGF,SAAS;;;8BA+DP,KAAK,SAAC,oBAAoB;4BAS1B,KAAK,SAAC,kBAAkB;oBAmBxB,KAAK,SAAC,SAAS;;;AChGlB;;;;;;;;;;;;;;;MAmBa,qBAAsB,SAAQ,yBAAyB;IAelE,YAAY,OAAwB,EAAU,OAAmB,EAAS,QAAmB;QAC3F,KAAK,EAAE,CAAC;QADoC,YAAO,GAAP,OAAO,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;QAX7F,iBAAY,GAAY,KAAK,CAAC;QAC9B,uBAAkB,GAAY,KAAK,CAAC;QAG5B,2BAAsB,GAAW,CAAC,CAAC;QACnC,sBAAiB,GAAG,KAAK,CAAC;QAE1B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,gBAAW,GAAG,KAAK,CAAC;QAyCpB,yBAAoB,GAAG,CAAC,KAAiB;YAC/C,MAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YAEnF,IAAI,sBAAsB,EAAE;gBAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;aAC/B;SACF,CAAC;QA3CA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,SAAS;QACP,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,CAAC;;;QAIzE,IAAI,eAAe,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClE,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,WAAW;QACT,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,cAAc;QACZ,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACnC;IAWO,oBAAoB,CAAC,KAAK,EAAE,OAAO;QACzC,OAAO,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACjE;IAEO,kBAAkB;QACxB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC;SACF;KACF;IAEO,cAAc;QACpB,MAAM,kBAAkB,GAAG,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;QAE/D,IAAI,UAAU,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC7C,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpC;KACF;IAEO,0BAA0B;QAChC,OAAO,IAAI,CAAC,eAAe;cACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC,WAAW,GAAG,EAAE;cACpF,CAAC,CAAC;KACP;IAEO,kBAAkB,CAAC,kBAAkB;QAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,WAAW,GAAG,kBAAkB,CAAC;KACpG;IAEO,wBAAwB;QAC9B,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAChE,sDAAsD,CACvD,CAAC;QAEF,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC;aACrD,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC;aAC5C,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;KAChC;IAEO,0BAA0B;QAChC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;KACxD;IAEO,2BAA2B;QACjC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAEO,cAAc;QACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,IACE,IAAI,CAAC,iBAAiB;gBACtB,CAAC,IAAI,CAAC,mBAAmB;gBACzB,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,WAAW,KAAK,CAAC,EACtD;gBACA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,kBAAkB;QACxB,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;IAEO,0BAA0B;QAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;KAC9F;IAEO,wBAAwB;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAiB;YAC/E,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACJ;IAEO,sBAAsB;QAC5B,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;IAEO,oBAAoB;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;YAlKF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,ojCAA6C;aAC9C;;;YA3BC,eAAe;YADf,UAAU;YAGV,SAAS;;;gCA2BR,SAAS,SAAC,YAAY,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;2BAC1D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;AC/BjD;;;;;;;MAWa,6BAA6B;;;YAJzC,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,yMAAsD;aACvD;;;oBAGE,KAAK,SAAC,SAAS;;;ACZlB;;;;;;;;;;;;;;MAea,2BAA2B;IAYtC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAI;IARxC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAID,aAAa,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI;QAC7B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,WAAW,GAAG;YACjB,UAAU,EAAE,KAAK;YACjB,GAAG,EAAE,IAAI,CAAC,IAAI;YACd,MAAM,EAAE,MAAM;SACf,CAAC;KACH;IAED,kBAAkB,CAAC,MAAM;QACvB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAClD;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;KACnG;;;YA/BF,UAAU;;;YAnBF,UAAU;;;ACEnB;;;;;;;;;;;;MAYa,iBAAiB,GAAsB;IAClD,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1C,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5C,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;EAC1C;WAY6C,QAAQ,IAAI,QAAQ,CAAC;AAVpE;;;;;;;;;;MAUa,SAAS,GAAG,iBAAiB,CAAC,GAAG,KAAgC;AAE9E;;;;;;;;;;MAUa,eAAe,GAAG,KAAK;AAEpC;;;;;;;;;;MAUa,4BAA4B,GAA6B;IACpE,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;EAClC;AAEF;;;;;;;;;;MAUa,6BAA6B,GAA6B;IACrE,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;IAClC,EAAE,SAAS,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE;;;ACzEpC;;;;;;;SAOgB,eAAe;IAC7B,OAAO,uBAAuB,EAAE,CAAC;AACnC,CAAC;AAED;;;;;;;;;;;SAWgB,WAAW,CAAC,KAAa,EAAE,QAAQ,GAAG,CAAC;IACrD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,UAAU,GAAG,IAAI,CAAC;IACxB,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAClE,QAAQ,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;IAEvC,OAAO,GAAG,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;AACpG,CAAC;AAED;;;SAGgB,kBAAkB;;IAEhC,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;IACjE,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAEjD,OAAO,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,QAAQ,GAAG,eAAe,CAAC;AACxE,CAAC;AAED;;;;;;SAMgB,uBAAuB;IACrC,OAAO,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAC;AAChD,CAAC;AAED;;;;;;;;;;SAUgB,gBAAgB,CAAC,QAAgB;IAC/C,OAAO,CAAC,QAAQ,IAAI,eAAe,EAAE,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrE,CAAC;SAEe,UAAU,CAAC,KAAK;IAC9B,MAAM,aAAa,GAAG,IAAI,MAAM,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;IAEhE,OAAO,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACnC,CAAC;AAED;SACgB,iBAAiB;IAC/B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACxC,CAAC;SAEe,gBAAgB,CAAC,GAAQ;IACvC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QAC/B,OAAO,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,EAAE,CAAC;KACrD;IAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,GAAG,KAAK,CAAC,CAAC;KAClB;IAED,OAAO,CAAC,CAAC,GAAG,CAAC;AACf,CAAC;SAEe,YAAY,CAAC,KAAU,EAAE,YAAkB;IACzD,MAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACxC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IACrD,MAAM,YAAY,GAAG,iBAAiB,IAAI,iBAAiB,KAAK,CAAC,GAAG,iBAAiB,GAAG,SAAS,CAAC;IAElG,OAAO,WAAW,IAAI,WAAW,KAAK,CAAC,GAAG,WAAW,GAAG,YAAY,CAAC;AACvE,CAAC;SAEe,QAAQ,CAAC,MAAW,EAAE,IAAS;IAC7C,OAAO,OAAO,MAAM,KAAK,IAAI,CAAC;AAChC,CAAC;AAED;;;;;;;SAOgB,YAAY,CAAC,EAAO,EAAE,OAAY,EAAE,KAAM;IACxD,IAAI,QAAQ,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE;QAC5B,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACzB;SAAM;QACL,OAAO,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;KACpB;AACH,CAAC;SAEe,gBAAgB,CAAC,KAAa,EAAE,KAAc,EAAE,GAAY;IAC1E,IAAI,KAAK,EAAE;QACT,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAClD,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjD,IAAI,KAAK,EAAE;YACT,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAErD,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,GAAG,EAAE;YACd,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAExD,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC;YACxD,OAAO,IAAI,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC;SAC1C;KACF;AACH,CAAC;SAEe,oBAAoB,CAAC,IAAU;IAC7C,IAAI,IAAI,EAAE;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACxE,MAAM,KAAK,GAAG,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC;QACxD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAE5C,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;KACvC;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;SAEe,wBAAwB,CAAC,IAAU,EAAE,IAAa;IAChE,IAAI,IAAI,EAAE;QACR,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACxE,MAAM,KAAK,GAAG,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC;QACxD,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAE5C,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEnC,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;SAC9C;aAAM;YACL,QACE,IAAI;gBACJ,GAAG;gBACH,KAAK;gBACL,GAAG;gBACH,GAAG;gBACH,GAAG;gBACH,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;gBAC5B,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;gBAC5B,GAAG;gBACH,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAC5B;SACH;KACF;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAED;;;;;SAKgB,UAAU,CAAC,IAAY;IACrC,IAAI,IAAI,IAAI,IAAI,EAAE;QAChB,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;KACxB;IAED,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE;QAC5B,OAAO,IAAI,IAAI,EAAE,CAAC;KACnB;IAED,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;QAC1B,OAAO,KAAK,IAAI,EAAE,CAAC;KACpB;IAED,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE;QAC1B,OAAO,MAAM,IAAI,EAAE,CAAC;KACrB;AACH,CAAC;AACD;SACgB,UAAU;IACxB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAE7C,OAAO,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACpD,CAAC;AAED;SACgB,IAAI;IAClB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAE7C,OAAO,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3C,CAAC;AAED;SACgB,SAAS;IACvB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAE7C,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACzD,CAAC;AAED;SACgB,QAAQ;IACtB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IAE7C,OAAO,SAAS,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;AACrF,CAAC;SAEe,QAAQ,CAAC,KAAK,EAAE,aAAa;IAC3C,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACjE,CAAC;SAEe,cAAc,CAAC,KAAU;IACvC,OAAO,KAAK,CAAC,OAAO,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,CAAC;AACpD,CAAC;AAED;;;;;;SAMgB,iBAAiB,CAAC,IAAU,EAAE,IAAY;IACxD,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACxB;AACH,CAAC;SAEe,qBAAqB,CAAC,OAAmB,EAAE,QAAgB;IACzE,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO;QAC5B,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QAErD,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,OAAO,GAAG,OAAO,EAAE;YACrB,OAAO,CAAC,CAAC;SACV;QACD,OAAO,CAAC,CAAC;KACV,CAAC,CAAC;AACL,CAAC;AAED;;;;;;;;;;;;SAYgB,UAAU,CAAC,MAAM,GAAG,EAAE,EAAE,eAAe,GAAG,CAAC,CAAC;IAC1D,MAAM,oBAAoB,GAAG,EAAE,gBAAgB,EAAE,CAAC,CAAC,EAAE,gBAAgB,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;IAE7F,MAAM,YAAY,GAAG,CAAC,KAAa,KAAK,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;IAC/E,MAAM,oBAAoB,GAAG,CAAC,KAAa,MAAM,YAAY,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,eAAe,CAAC,CAAC;IAEhG,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM;QAChC,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,MAAM,KAAK,MAAM,EAAE;YACrB,OAAO,oBAAoB,CAAC,aAAa,CAAC;SAC3C;QAED,IAAI,MAAM,KAAK,eAAe,EAAE;YAC9B,OAAO,oBAAoB,CAAC,gBAAgB,CAAC;SAC9C;QAED,IAAI,MAAM,KAAK,eAAe,EAAE;YAC9B,OAAO,oBAAoB,CAAC,gBAAgB,CAAC;SAC9C;QAED,OAAO,MAAM,GAAG,MAAM,CAAC;KACxB,CAAC,CAAC;AACL,CAAC;SAEe,uBAAuB,CAAC,IAAgB;IACtD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,SAAS;SACV;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YAC1D,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,CAAC,EAAE,CAAC;SACL;KACF;AACH,CAAC;SAEe,6BAA6B,CAAC,IAAgB;IAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,IAAI,EAAE;YACzD,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,CAAC,EAAE,CAAC;SACL;KACF;AACH,CAAC;SAEe,UAAU,CAAC,KAAU;IACnC,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,EAAE,KAAK,KAAK,KAAK,KAAK,CAAC;AACpF,CAAC;SAEe,cAAc,CAAC,GAAG;IAChC,OAAO,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;AAC9C,CAAC;SAEe,gBAAgB,CAAC,GAAG;IAClC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC7B,CAAC;SAEe,gBAAgB,CAAC,IAAY;IAC3C,IAAI,aAAa,GAAG,EAAE,CAAC;;IAEvB,IAAI,IAAI,EAAE;QACR,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;KAC7C;;IAED,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;QAClC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KAC3C;IACD,OAAO,aAAa,CAAC;AACvB,CAAC;AAED;;;;;;;SAOgB,UAAU,CAAC,QAAuB,EAAE,SAAwB,EAAE,YAAqB,IAAI;IACrG,MAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAI,QAAmB,CAAC,WAAW,EAAE,GAAG,QAAQ,CAAC;IAC1F,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAI,SAAoB,CAAC,WAAW,EAAE,GAAG,SAAS,CAAC;IAE9F,MAAM,aAAa,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAChF,MAAM,cAAc,GAAG,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAEpF,IAAI,SAAS,EAAE;QACb,IAAI,IAAI,GAAG,KAAK,IAAI,aAAa,EAAE;YACjC,OAAO,CAAC,CAAC,CAAC;SACX;aAAM,IAAI,IAAI,GAAG,KAAK,IAAI,cAAc,EAAE;YACzC,OAAO,CAAC,CAAC;SACV;KACF;SAAM,IAAI,SAAS,KAAK,KAAK,EAAE;QAC9B,IAAI,IAAI,GAAG,KAAK,IAAI,aAAa,EAAE;YACjC,OAAO,CAAC,CAAC;SACV;aAAM,IAAI,IAAI,GAAG,KAAK,IAAI,cAAc,EAAE;YACzC,OAAO,CAAC,CAAC,CAAC;SACX;KACF;IACD,OAAO,CAAC,CAAC;AACX,CAAC;SAEe,iBAAiB,CAAC,IAAU,EAAE,SAAe,EAAE,OAAa;IAC1E,IAAI,SAAS,IAAI,OAAO,EAAE;QACxB,OAAO,IAAI,IAAI,SAAS,IAAI,IAAI,IAAI,OAAO,CAAC;KAC7C;SAAM,IAAI,SAAS,IAAI,CAAC,OAAO,EAAE;QAChC,OAAO,IAAI,IAAI,SAAS,CAAC;KAC1B;SAAM,IAAI,CAAC,SAAS,IAAI,OAAO,EAAE;QAChC,OAAO,IAAI,IAAI,OAAO,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,CAAC;KACb;AACH,CAAC;SAEe,IAAI;IAClB,SAAS,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC;aAC7C,QAAQ,CAAC,EAAE,CAAC;aACZ,SAAS,CAAC,CAAC,CAAC,CAAC;KACjB;IAED,OAAO,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC;AACvG,CAAC;SAEe,qBAAqB,CAAC,IAAY;IAChD,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AAC3D,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA6CgB,oBAAoB,CAAC,QAAoB,EAAE,EAAE,aAA4B,EAAE;IACzF,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,qBAAqB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC;AACpE,CAAC;AAED;;;;;;;;;;;;;;;;;;;;SAoBgB,qBAAqB,CAAC,SAAc,EAAE,EAAE,aAA4B,EAAE;IACpF,MAAM,qBAAqB,GAAG,CAAC,kBAAkB,EAAE,QAAQ,sCACtD,kBAAkB,KACrB,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,IAC5B,CAAC;IAEH,OAAO,UAAU,CAAC,MAAM,CAAC,qBAAqB,EAAE,EAAE,CAAC,CAAC;AACtD,CAAC;AAED;;;;;;;SAOgB,gBAAgB,CAAC,SAAc,EAAE;IAC/C,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/D,CAAC;AAED;;;;;SAKgB,oBAAoB,CAAC,IAAU;IAC7C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QACjC,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,MAAM,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAE7C,MAAM,CAAC,OAAO,GAAG,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;KACzC,CAAC,CAAC;AACL,CAAC;AAED;;;;;;;;;SASgB,sBAAsB,CAAC,MAAW,EAAE,aAAqB;IACvE,MAAM,YAAY,GAAG,CAAC,MAAM,IAAI,MAAM,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAEhE,MAAM,UAAU,GAAG,YAAY,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;IAEjE,IAAI;QACF,OAAO,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;KACtD;IAAC,WAAM;QACN,OAAO,UAAU,CAAC;KACnB;AACH,CAAC;AAED;;;;;;SAMgB,WAAW,CAAC,WAAmB;IAC7C,MAAM,WAAW,GAAG,EAAE,CAAC;IAEvB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,GAAG;QAClC,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YAC/D,WAAW,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;SACrC;KACF,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;AACrB,CAAC;SAEe,kBAAkB,CAAC,KAAU;IAC3C,OAAO,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;AAChF,CAAC;AAED;;;;;;;;;SASgB,oBAAoB,CAAC,aAAsB;IACzD,MAAM,iBAAiB,GAAG,yFAAyF,CAAC;IACpH,OAAO,aAAa,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;AAC3D;;ACxjBA,MAAM,iBAAiB,GAAG,qBAAqB,CAAC;AAChD,MAAM,WAAW,GAAG,gBAAgB,CAAC;AAErC;;;;;;;MAUa,iBAAiB;IAC5B,iBAAgB;IAEhB,IAAI,eAAe,CAAC,QAAgB;QAClC,IAAI,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;YACpC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;SACnD;KACF;IAED,IAAI,eAAe;QACjB,OAAO,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;KAChD;;;;;;;;;;;;;;;;;;;IAoBD,WAAW;QACT,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,eAAe,IAAI,kBAAkB,EAAE,CAAC;QACnG,OAAO,QAAQ,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC;KAC3C;;;;;;;;;IAUD,kBAAkB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;IAWD,gBAAgB;QACd,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEjD,OAAO,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,aAAa,GAAG,eAAe,CAAC;KAC5E;;;;;;;;;;;;;;;IAgBD,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACzB,OAAO;SACR;QAED,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;KAC3D;;;;;;;;;;;;;;;IAgBD,kBAAkB,CAAC,QAAgB;QACjC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;KACjC;;;;;;;;;;;;IAaD,mBAAmB,CAAC,QAAiB;;QACnC,QAAQ,GAAG,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC/C,MAAM,OAAO,GAAG,MAAA,4BAA4B,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,KAAK,QAAQ,CAAC,mCAAI,EAAE,CAAC;QACtG,MAAM,QAAQ,GAAG,MAAA,6BAA6B,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,KAAK,QAAQ,CAAC,mCAAI,EAAE,CAAC;QACxG,MAAM,gBAAgB,GAAG,MAAA,OAAO,CAAC,SAAS,mCAAI,GAAG,CAAC;QAClD,MAAM,iBAAiB,GAAG,MAAA,QAAQ,CAAC,SAAS,mCAAI,GAAG,CAAC;QAEpD,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,CAAC;KAChD;;;;YA9HF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;ACdM,MAAM,oBAAoB,GAAW;IAC1C,EAAE,EAAO;QACP,QAAQ,EAAE,UAAU;QACpB,UAAU,EAAE,YAAY;KACzB;IACD,EAAE,EAAO;QACP,QAAQ,EAAE,OAAO;QACjB,UAAU,EAAE,cAAc;KAC3B;IACD,EAAE,EAAO;QACP,QAAQ,EAAE,WAAW;QACrB,UAAU,EAAE,cAAc;KAC3B;IACD,EAAE,EAAO;QACP,QAAQ,EAAE,SAAS;QACnB,UAAU,EAAE,WAAW;KACxB;CACF,CAAC;AAEF;;;;;;;MAaa,6BAA6B;IAgBxC,YAAoB,OAAoC,EAAU,eAAkC;QAAhF,YAAO,GAAP,OAAO,CAA6B;QAAU,oBAAe,GAAf,eAAe,CAAmB;QANpG,aAAQ,GAAY,KAAK,CAAC;QAOxB,MAAM,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAEpD,IAAI,CAAC,QAAQ,qBACR,oBAAoB,CAAC,QAAQ,CAAC,CAClC,CAAC;KACH;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACtF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;KACF;IAED,oBAAoB;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAC9E;IAEO,iBAAiB;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;KAC5G;IAEO,iBAAiB,CAAC,MAAM;QAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO;aAChC,kBAAkB,CAAC,MAAM,CAAC;aAC1B,SAAS,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;KAC7D;;;YAxDF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,wgBAAsD;gBACtD,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;YAlCQ,2BAA2B;YAC3B,iBAAiB;;;8BAoCvB,KAAK,SAAC,oBAAoB;yBAG1B,KAAK,SAAC,eAAe;4BAGrB,KAAK,SAAC,kBAAkB;;;AC9C3B;;;;;;;MAWa,yBAAyB;IAJtC;;QAe0B,eAAU,GAAY,KAAK,CAAC;KACrD;;;YAhBA,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,y0BAAkD;aACnD;;;qBAGE,KAAK,SAAC,UAAU;oBAGhB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;yBAGd,KAAK,SAAC,eAAe;;;ACfxB;;;;;;MAgBa,kBAAkB;;;YAV9B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE;oBACZ,qBAAqB;oBACrB,6BAA6B;oBAC7B,6BAA6B;oBAC7B,yBAAyB;iBAC1B;gBACD,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;ACtBD;;;;;;;;;MAca,eAAe;IAI1B,iBAAgB;;;;;;;;;;;;;;;;;;;;;;IAuBhB,IAAqB,IAAI,CAAC,KAAiC;QACzD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;aAAM,IAAI,KAAK,YAAY,WAAW,EAAE;YACvC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;KACF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEO,UAAU,CAAC,KAAa;QAC9B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC;eACpC,IAAI,CAAC,KAAK,GAAG,WAAW,KAAK,EAAE;eAC/B,IAAI,CAAC,KAAK,GAAG,iBAAiB,KAAK,EAAE,CAAC,CAAC;KAC7C;;;YAhDF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,oMAAuC;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;mBA4BE,KAAK,SAAC,QAAQ;;;ACtCjB;;;;;MAUa,YAAY;;;YALxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,eAAe,CAAC;gBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;aAC3B;;;ACNM,MAAM,+BAA+B,GAAG;IAC7C,EAAE,EAA4B;QAC5B,OAAO,EAAE,SAAS;KACnB;IACD,EAAE,EAA4B;QAC5B,OAAO,EAAE,UAAU;KACpB;IACD,EAAE,EAA4B;QAC5B,OAAO,EAAE,YAAY;KACtB;IACD,EAAE,EAA4B;QAC5B,OAAO,EAAE,UAAU;KACpB;CACF,CAAC;AAEF;;;;;;;MAQa,6BAA6B;IAqDxC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QApD9C,gBAAW,GAAa,KAAK,CAAC;QAqDpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;KACnC;;;;;;;;;;;;;;;;;;;;;;;IA7BD,IAA4B,UAAU,CAAC,UAAmB;QACxD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;KACjD;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;IAaD,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;KAC7C;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAMO,cAAc;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAEzD,OAAO,+BAA+B,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;KAC1D;;;YA9DF,SAAS;;;YA1BD,iBAAiB;;;yBAqDvB,KAAK,SAAC,eAAe;mBAmBrB,KAAK,SAAC,QAAQ;;;ACtEjB;;;;;;;;;;;;;;;;;;;;;MAyBa,yBAA0B,SAAQ,6BAA6B;IAC1E,YAAmB,cAAiC,EAAE,eAAkC;QACtF,KAAK,CAAC,eAAe,CAAC,CAAC;QADN,mBAAc,GAAd,cAAc,CAAmB;KAEnD;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,yMAAgD;aACjD;;;YA9BmB,iBAAiB;YAE5B,iBAAiB;;;ACE1B;;;;;;;;MAYa,sBAAsB;;;;;;;;;;IAYjC,IAA8B,YAAY,CAAC,KAAc;QACvD,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC9C;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;YAtBF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,wqBAA6C;aAC9C;;;2BAaE,KAAK,SAAC,iBAAiB;;;AC1B1B;;;;;;;;MASa,sBAAsB;IADnC;;;;QAKmB,SAAI,GAAY,YAAY,CAAC;KAC/C;;;YANA,SAAS;;;mBAKP,KAAK,SAAC,QAAQ;;;ACXjB;;;;;MASa,kBAAmB,SAAQ,sBAAsB;;;YAJ7D,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,qLAAwC;aACzC;;;ACRD;;;;;MAQa,gBAAgB;;;YAH5B,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,iBAAiB,CAAC;aAC/B;;;ACFD;;;;;;MAWa,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;gBACzC,YAAY,EAAE,CAAC,kBAAkB,EAAE,sBAAsB,EAAE,yBAAyB,CAAC;gBACrF,OAAO,EAAE,CAAC,kBAAkB,EAAE,sBAAsB,EAAE,yBAAyB,CAAC;aACjF;;;ACjBD;;;;;;;;SAQgB,2BAA2B,CACzC,mBAA+C,EAC/C,aAAqB,EACrB,QAAkB;IAElB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,mBAAmB,CAAC;IACjD,MAAM,aAAa,GAAG,SAAQ,CAAC;IAC/B,MAAM,sBAAsB,GAAoB,MAAM,CAAC,aAAa,CAAC,IAAI,aAAa,CAAC;IAEvF,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE;QAC3C,KAAK,EAAE;YACL,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACtC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;KACF,CAAC,CAAC;AACL,CAAC;AAED;;;;;;;;;;;;SAYgB,qBAAqB,CACnC,mBAA+C,EAC/C,aAAqB,EACrB,QAAkB;IAElB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAE,GAAG,mBAAmB,CAAC;IACrE,MAAM,mBAAmB,GAAG,qBAAqB,CAAC,MAAM,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;IAEnF,OAAO;QACL,GAAG,EAAE,MAAM,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;QACpD,GAAG,EAAE,MAAM,CAAC,kBAAkB,EAAE,QAAQ,EAAE,mBAAmB,CAAC;KAC/D,CAAC;AACJ,CAAC;AACD,SAAS,MAAM,CAAC,kBAAkB,EAAE,QAAkB,EAAE,mBAA2B;IACjF,OAAO,UAAU,KAAK;QACpB,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,GAAG,EAAE;YAChD,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,mBAAmB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7C,CAAC;AACJ,CAAC;AAED,SAAS,MAAM,CAAC,kBAAgD,EAAE,eAAuB;IACvF,OAAO;QACL,OAAO,kBAAkB,IAAI,kBAAkB,CAAC,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;KACnH,CAAC;AACJ,CAAC;SAEe,qBAAqB,CAAC,MAAW,EAAE,YAAoB,EAAE,aAAqB;IAC5F,MAAM,eAAe,GAAG,OAAO,YAAY,EAAE,CAAC;IAE9C,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,eAAe,CAAC,EAAE;QACjE,OAAO,CAAC,IAAI,CAAC,aAAa,eAAe,+CAA+C,aAAa,aAAa,CAAC,CAAC;KACrH;IAED,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,eAAe,EAAE;QAC7C,YAAY,EAAE,IAAI;QAClB,QAAQ,EAAE,IAAI;KACf,CAAC,CAAC;IAEH,OAAO,eAAe,CAAC;AACzB;;AC7EA;;;;;;;;;SAUgB,YAAY;IAC1B,OAAO,UAAU,MAAW,EAAE,QAAgB,EAAE,kBAAmB;QACjE,MAAM,mBAAmB,GAA+B,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAE,CAAC;QAEjG,OAAO,qBAAqB,CAAC,mBAAmB,EAAE,cAAc,EAAE,gBAAgB,CAAC,CAAC;KACrF,CAAC;AACJ;;ACjBA;;;;;;;;;;;;;;;;;;;;;SAsBgB,aAAa;IAC3B,OAAO,UAAU,MAAW,EAAE,QAAgB;QAC5C,MAAM,mBAAmB,GAA+B,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC;QAC7E,2BAA2B,CAAC,mBAAmB,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;KAChF,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,QAAgB,EAAE,MAAW;IACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;QAC1B,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,KAAK,QAAQ,oCAAoC,CAAC,CAAC;KAC3F;AACH;;AC/BA,MAAM,eAAe,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AACjE,MAAM,sBAAsB,GAAG,SAAS,CAAC;AAEzC;;;;;;;;;;;;;;MAea,qBAAqB;IADlC;;;;;;;;;;;;QAayC,cAAS,GAAY,KAAK,CAAC;;QAsC/C,UAAK,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE5C,cAAS,GAAa,KAAK,CAAC;QAC5B,aAAQ,GAAa,KAAK,CAAC;QAC3B,WAAM,GAAa,KAAK,CAAC;QACzB,UAAK,GAAY,SAAS,CAAC;KA0EpC;;;;;;;;;;;;IA7DC,IAAwB,OAAO,CAAC,KAAc;QAC5C,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACzC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAsB,KAAK,CAAC,KAAc;QACxC,IAAI,CAAC,MAAM,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClE;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;;;IAiBD,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,sBAAsB,CAAC;KAC/E;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACrE;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;YAjIF,SAAS;;;wBAaP,KAAK,SAAC,cAAc;oBASpB,KAAK,SAAC,SAAS;mBA0Bf,KAAK,SAAC,QAAQ;oBAGd,MAAM,SAAC,SAAS;sBAkBhB,KAAK,SAAC,WAAW;oBAiBjB,KAAK,SAAC,SAAS;mBAsBf,KAAK,SAAC,QAAQ;uBAgBd,KAAK,SAAC,YAAY;;AA/GoB;IAAf,YAAY,EAAE;wDAA4B;;AC/BpE;;;;;;;;;;;;;;;;;;;;;;;;MA6Ba,iBAAkB,SAAQ,qBAAqB;IAG1D,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC1C;KACF;IAED,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB;;;YAvCF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,wsBAAyC;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;4BAEE,SAAS,SAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;AC1BvC;;;;;MAUa,cAAc;;;YAL1B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,EAAE,YAAY,CAAC;gBACtD,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;;;ACjBD;MACa,oBAAoB,GAAG;IAClC,OAAO;IACP,WAAW;IACX,cAAc;IACd,KAAK;IACL,UAAU;IACV,WAAW;IACX,MAAM;IACN,UAAU;IACV,aAAa;IACb,QAAQ;IACR,aAAa;IACb,cAAc;;;ACPhB,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,2BAA2B,GAAG,QAAQ,CAAC;AAE7C;;;;;;;;;;;;MAcsB,sBAAsB;IAD5C;;;;;;;;;;;QAY6C,iBAAY,GAAY,KAAK,CAAC;QAE/D,qBAAgB,GAAY,QAAQ,CAAC;QAGvC,oBAAe,GAAY,KAAK,CAAC;QACjC,aAAQ,GAAW,EAAE,CAAC;KA6D/B;;;;;;IAtDC,IAAwB,OAAO,CAAC,OAAe;QAC7C,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,kBAAkB,EAAE;YAClD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;SAC1D;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;SACzB;KACF;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BD,IAAiC,eAAe,CAAC,QAAgB;QAC/D,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,2BAA2B,CAAC;KAC1G;IACD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;IAE2C,IAAI,cAAc,CAAC,KAAc;QAC3E,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC7E;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;YA3EF,SAAS;;;2BAYP,KAAK,SAAC,kBAAkB;sBAaxB,KAAK,SAAC,WAAW;8BAoCjB,KAAK,SAAC,oBAAoB;6BAO1B,KAAK,SAAC,mBAAmB;;AAxDiB;IAAf,YAAY,EAAE;4DAA+B;AAwD7B;IAAf,YAAY,EAAE;4DAG1C;;AC3FH;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAM,6BAA6B,GAAkB;IACnD,QAAQ;IACR,aAAa;IACb,cAAc;IACd,MAAM;IACN,UAAU;IACV,aAAa;IACb,KAAK;IACL,WAAW;IACX,UAAU;IACV,OAAO;IACP,cAAc;IACd,WAAW;CACZ,CAAC;MAGW,wBAAwB;IADrC;QAIU,mCAA8B,GAAW,CAAC,CAAC;QAI3C,sBAAiB,GAAY,KAAK,CAAC;;QAEnC,gBAAW,GAAW,EAAE,CAAC;KA8XlC;;;;;;IAtXC,cAAc,CAAC,KAAa;QAC1B,MAAM,QAAQ,GAAG,KAAK,IAAI,QAAQ,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM;cAC/C,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;cACnC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;KAC1C;;;;IAKD,iBAAiB;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;;IAYD,WAAW,CACT,OAAiC,EACjC,aAAqB,EACrB,aAAuC,EACvC,eAA+B,EAC/B,oBAA6B,KAAK,EAClC,kBAA2B,KAAK;QAEhC,IAAI,CAAC,OAAO,GAAG,OAAO,YAAY,UAAU,GAAG,OAAO,CAAC,aAAa,GAAG,OAAO,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,aAAa,YAAY,UAAU,GAAG,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;QAEvG,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;IAEO,oBAAoB,CAAC,QAAgB;QAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;QAEnD,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,OAAO,UAAU,EAAE,GAAG,cAAc,EAAE;YACpC,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;gBACnC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC7D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAChC;SACF;KACF;IAEO,qBAAqB,CAAC,QAAgB;QAC5C,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9C,MAAM,kBAAkB,GAAG,aAAa,CAAC,MAAM,CAAC;QAEhD,IAAI,cAAc,GAAG,CAAC,CAAC;QAEvB,OAAO,cAAc,EAAE,GAAG,kBAAkB,EAAE;YAC5C,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAE/B,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;gBACnC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;gBAC1D,SAAS;aACV;iBAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;gBAC1C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;gBAClC,OAAO;aACR;YAED,OAAO;SACR;KACF;IAEO,eAAe,CAAC,QAAgB;QACtC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;KACrG;IAEO,eAAe,CAAC,QAAgB;QACtC,OAAO,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC;KAC7F;IAEO,gBAAgB;QACtB,MAAM,oBAAoB,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QAEhE,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM;cACtD,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,eAAe,CAAC;cAC5D,oBAAoB,CAAC;KAC1B;IAEO,iCAAiC,CAAC,eAA8B;QACtE,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,MAAM,qBAAqB,GAAG,eAAe,CAAC,MAAM,CAAC;QAErD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,qBAAqB,EAAE,CAAC,EAAE,EAAE;YAC9C,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;YAEpC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAEpD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;gBACzC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC;SACF;QAED,OAAO,aAAa,CAAC;KACtB;IAEO,YAAY;QAClB,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEtD,OAAO;YACL,KAAK,EAAE,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAU;YAC5E,GAAG,EAAE,iBAAiB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;YACvC,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;YACzC,MAAM,EAAE,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,CAAC,WAAW;SAChF,CAAC;KACH;IAEO,oBAAoB;QAC1B,OAAO;YACL,MAAM,EAAE;gBACN,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,UAAU,EAAE,MAAM,CAAC,UAAU;gBAC7B,WAAW,EAAE,MAAM,CAAC,WAAW;aAChC;YACD,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE;YAC7C,MAAM,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACnH,CAAC;KACH;IAEO,YAAY,CAAC,QAAgB,EAAE,YAA2B,EAAE;QAClE,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;QAE5B,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE;YAC9C,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;SAC7B;aAAM;YACL,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;SACrB;KACF;IAEO,gBAAgB,CAAC,QAAgB;QACvC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtC,QAAQ,QAAQ;YACd,KAAK,KAAK;gBACR,OAAO,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,CAAC;YAC5D,KAAK,WAAW;gBACd,OAAO,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,CAAC;YAC5D,KAAK,UAAU;gBACb,OAAO,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC;YAC5D,KAAK,OAAO;gBACV,OAAO,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC;YAC9D,KAAK,WAAW;gBACd,OAAO,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG,CAAC;YAC1C,KAAK,cAAc;gBACjB,OAAO,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,MAAM,CAAC;YAC7C,KAAK,QAAQ;gBACX,OAAO,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,CAAC;YAC/D,KAAK,cAAc;gBACjB,OAAO,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,IAAI,CAAC;YAC/D,KAAK,aAAa;gBAChB,OAAO,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,CAAC;YAC/D,KAAK,MAAM;gBACT,OAAO,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC;YAC7D,KAAK,UAAU;gBACb,OAAO,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,GAAG,CAAC;YACzC,KAAK,aAAa;gBAChB,OAAO,SAAS,CAAC,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC;SAC7C;KACF;IAEO,YAAY,CAAC,QAAgB;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtC,QAAQ,QAAQ;YACd,KAAK,KAAK;gBACR,OAAO,SAAS,CAAC,GAAG,CAAC;YACvB,KAAK,OAAO;gBACV,OAAO,SAAS,CAAC,KAAK,CAAC;YACzB,KAAK,QAAQ;gBACX,OAAO,SAAS,CAAC,MAAM,CAAC;YAC1B,KAAK,MAAM;gBACT,OAAO,SAAS,CAAC,IAAI,CAAC;SACzB;KACF;IAEO,wBAAwB,CAAC,eAAuB;QACtD,QAAQ,eAAe;YACrB,KAAK,UAAU;gBACb,OAAO,aAAa,CAAC;YACvB,KAAK,WAAW;gBACd,OAAO,cAAc,CAAC;YACxB,KAAK,cAAc;gBACjB,OAAO,WAAW,CAAC;YACrB,KAAK,aAAa;gBAChB,OAAO,UAAU,CAAC;SACrB;KACF;IAEO,yBAAyB,CAAC,YAAoB,EAAE,iBAAiB;QACvE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QACrF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,GAAG,YAAY,GAAG,IAAI,CAAC;KAC/E;IAEO,yBAAyB,CAAC,QAAgB;QAChD,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,MAAM,iBAAiB,GAAQ,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE3D,QAAQ,QAAQ;YACd,KAAK,aAAa;gBAChB,IAAI,CAAC,yBAAyB,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBACrD,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,yBAAyB,CAC5B,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAChE,iBAAiB,CAClB,CAAC;gBACF,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAClD,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,sBAAsB,CACzB,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAChE,iBAAiB,CAClB,CAAC;gBACF,MAAM;SACT;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,CAAC;KAC/D;IAEO,sBAAsB,CAAC,YAAoB,EAAE,iBAAiB;QACpE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;YACpB,iBAAiB,CAAC,MAAM,CAAC,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,GAAG,YAAY,GAAG,IAAI,CAAC;KAC/E;IAEO,iBAAiB,CAAC,eAAuB;QAC/C,QAAQ,eAAe;YACrB,KAAK,KAAK;gBACR,OAAO,QAAQ,CAAC;YAClB,KAAK,UAAU;gBACb,OAAO,cAAc,CAAC;YACxB,KAAK,WAAW;gBACd,OAAO,aAAa,CAAC;YACvB,KAAK,OAAO;gBACV,OAAO,MAAM,CAAC;YAChB,KAAK,WAAW;gBACd,OAAO,aAAa,CAAC;YACvB,KAAK,cAAc;gBACjB,OAAO,UAAU,CAAC;YACpB,KAAK,QAAQ;gBACX,OAAO,KAAK,CAAC;YACf,KAAK,cAAc;gBACjB,OAAO,UAAU,CAAC;YACpB,KAAK,aAAa;gBAChB,OAAO,WAAW,CAAC;YACrB,KAAK,MAAM;gBACT,OAAO,OAAO,CAAC;YACjB,KAAK,aAAa;gBAChB,OAAO,WAAW,CAAC;YACrB,KAAK,UAAU;gBACb,OAAO,cAAc,CAAC;SACzB;KACF;IAEO,kBAAkB,CAAC,YAAoB,EAAE,iBAAiB;QAChE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QACrF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC;KACpH;IAEO,kBAAkB,CAAC,QAAgB;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEtD,QAAQ,QAAQ;YACd,KAAK,KAAK;gBACR,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAC7E,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,eAAe,CAClB,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,8BAA8B,EACxF,iBAAiB,CAClB,CAAC;gBACF,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,8BAA8B,EAAE,iBAAiB,CAAC,CAAC;gBAChG,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAChF,MAAM;YACR,KAAK,WAAW;gBACd,IAAI,CAAC,iBAAiB,CACpB,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,8BAA8B,EACzF,iBAAiB,CAClB,CAAC;gBACF,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;gBAC5D,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAChF,MAAM;YACR,KAAK,cAAc;gBACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,8BAA8B,EAAE,iBAAiB,CAAC,CAAC;gBACnG,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,kBAAkB,CACrB,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,8BAA8B,EACxF,iBAAiB,CAClB,CAAC;gBACF,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBAC/E,MAAM;YACR,KAAK,aAAa;gBAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;gBAC3D,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;gBAC9F,MAAM;SACT;QAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KACxD;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,aAAa,EAAE;YAChD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC;SAClE;KACF;IAEO,gBAAgB,CAAC,YAAoB,EAAE,iBAAiB;QAC9D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,GAAG,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;QAClH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;YACrB,iBAAiB,CAAC,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC/F;IAEO,iBAAiB,CAAC,YAAoB,EAAE,iBAAiB;QAC/D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,iBAAiB,CAAC,MAAM,CAAC,GAAG,GAAG,YAAY,GAAG,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;QAClH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KACtF;IAEO,eAAe,CAAC,YAAoB,EAAE,iBAAiB;QAC7D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG;YACpB,iBAAiB,CAAC,MAAM,CAAC,GAAG,GAAG,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9F,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAI,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,YAAY,GAAG,IAAI,CAAC;KACpH;IAEO,kBAAkB,CAAC,QAAgB;QACzC,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;YAC9B,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;SAChC;QAED,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAO,KAAK,EAAE,GAAG,CAAC,EAAE;YAClB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE;gBACnC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,6BAA6B,CAAC,CAAC;gBACtE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAChC;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;SACF;KACF;;;YAvYF,UAAU;;;MCpCE,+BAAgC,SAAQ,wBAAwB;;;YAD5E,UAAU;;;ACCX;;;;;;;;;;;;;;;;;;;;;MAyBa,kBAAmB,SAAQ,sBAAsB;IAW5D,YACU,UAAsB,EACtB,QAAmB,EACnB,iBAAkD;QAE1D,KAAK,EAAE,CAAC;QAJA,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAW;QACnB,sBAAiB,GAAjB,iBAAiB,CAAiC;QAPpD,kBAAa,GAAW,CAAC,CAAC;KAUjC;IAE2B,YAAY;QACtC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;IAE2B,YAAY;QACtC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;IAED,QAAQ;QACN,IAAI,CAAC,+BAA+B,EAAE,CAAC;KACxC;IAES,gBAAgB;QACxB,UAAU,CAAC;YACT,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;gBAEhE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEtC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;gBAC5D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;gBAEjE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAEnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;aACrC;SACF,CAAC,CAAC;KACJ;IAES,mBAAmB;;;QAG3B,UAAU,CAAC;YACT,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,EAAE;gBAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;gBAC9D,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF,CAAC,CAAC;KACJ;IAEO,QAAQ,CAAC,cAAc;QAC7B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,cAAc,EAAE,CAAC,CAAC;KACrE;IAEO,sBAAsB;QAC5B,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;KACrE;;IAGO,aAAa;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAE1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QAE1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;QAE9D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACvF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAE7D,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7F,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAEO,+BAA+B;QACrC,IAAI,CAAC,qBAAqB,GAAG;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,UAAU,CAAC;oBACT,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBAC7D,CAAC,CAAC;aACJ;SACF,CAAC;KACH;IAEO,WAAW;QACjB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;KACF;IAEO,WAAW,CAAC,cAAc;QAChC,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,cAAc,EAAE,CAAC,EAAE;YAC9E,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,cAAc,EAAE,CAAC,CAAC;SACxE;KACF;IAEO,yBAAyB;QAC/B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;KACxE;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAEO,iBAAiB;QACvB,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,OAAO,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9D;KACF;;;YAjJF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;YA7BmB,UAAU;YAAwB,SAAS;YAGtD,+BAA+B;;;2BA8CrC,YAAY,SAAC,YAAY;2BAMzB,YAAY,SAAC,YAAY;;;AClD5B;;;;;MAUa,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;ACdD;;;;;;;IAOY;AAAZ,WAAY,mBAAmB;;IAE7B,4CAAqB,CAAA;;IAGrB,oCAAa,CAAA;;IAGb,wCAAiB,CAAA;AACnB,CAAC,EATW,mBAAmB,KAAnB,mBAAmB;;ACD/B,MAAM,sBAAsB,GAAG,MAAM,CAAC;AAEtC;;;;;;;;;;;;;;;;;;;MAoBa,0BAA0B;IADvC;;QAGsB,YAAO,GAA6B,EAAE,CAAC;QAEnD,WAAM,GAAa,KAAK,CAAC;QACzB,YAAO,GAAY,sBAAsB,CAAC;KAgEnD;;;;;;;;;;IArDC,IAAsB,KAAK,CAAC,KAAc;QACxC,IAAI,CAAC,MAAM,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClE;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;IAaD,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAS,MAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,sBAAsB,CAAC;QAE1G,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,aAAa,CAAC,aAAgC,EAAE,WAAmB;QACjE,IAAI,IAAI,CAAC,MAAM,KAAK,mBAAmB,CAAC,MAAM,EAAE;YAC9C,IAAI,CAAC,OAAO,CAAC,OAAO,CAClB,CAAC,MAAM,EAAE,KAAK,MAAM,MAAM,CAAC,QAAQ,GAAG,KAAK,KAAK,WAAW,GAAG,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC,CAC/F,CAAC;SACH;aAAM,IAAI,IAAI,CAAC,MAAM,KAAK,mBAAmB,CAAC,QAAQ,EAAE;YACvD,aAAa,CAAC,QAAQ,GAAG,CAAC,aAAa,CAAC,QAAQ,CAAC;SAClD;KACF;IAEO,cAAc,CAAC,UAAkB;QACvC,IAAI,UAAU,KAAK,mBAAmB,CAAC,IAAI,EAAE;YAC3C,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM,IAAI,UAAU,KAAK,mBAAmB,CAAC,MAAM,EAAE;YACpD,MAAM,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACrF,IAAI,kBAAkB,EAAE;gBACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;SACF;KACF;IAEO,kBAAkB;QACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;KAC3D;;;YArEF,SAAS;;;sBAGP,KAAK,SAAC,WAAW;oBAcjB,KAAK,SAAC,SAAS;qBAmBf,KAAK,SAAC,UAAU;;;AC3DnB;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,sBAAuB,SAAQ,0BAA0B;IACpE,YAAY,OAAyB;QACnC,KAAK,EAAE,CAAC;KACT;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,6nBAA+C;aAChD;;;YAjCmB,gBAAgB;;;ACQpC;;;;;MAUa,mBAAmB;;;YAL/B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,eAAe,CAAC;gBACxD,YAAY,EAAE,CAAC,sBAAsB,CAAC;gBACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;ACbD;;;;;;;MAUa,aAAa;IAH1B;QAImB,cAAS,GAAG,IAAI,MAAM,CACrC,kCAAkC,GAAG,oBAAoB,GAAG,2BAA2B,CACxF,CAAC;QAEe,aAAQ,GAAG,IAAI,MAAM,CACpC,kCAAkC;YAChC,oBAAoB;YACpB,0BAA0B;YAC1B,kEAAkE;YAClE,gDAAgD;YAChD,kBAAkB,CACrB,CAAC;KA0LH;;;;;;;;IAjLC,gBAAgB,CAAC,UAAkB,EAAE,OAAiB,EAAE,OAAiB;QACvE,IAAI,UAAU,EAAE;YACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YAE7D,IAAI,OAAO,EAAE;gBACX,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,OAAO,EAAE;gBAClB,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBACxD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC3C,MAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC;gBACxD,OAAO,IAAI,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC;aACzC;SACF;KACF;;;;;;IAOD,gBAAgB,CAAC,IAAU;QACzB,IAAI,IAAI,EAAE;YACR,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YACrC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YACxE,MAAM,KAAK,GAAG,QAAQ,GAAG,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,QAAQ,CAAC;YACxD,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;SACvC;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;;;IAOD,UAAU,CAAC,IAAY;QACrB,IAAI,IAAI,GAAG,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SACxB;QAED,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE;YAC5B,OAAO,IAAI,IAAI,EAAE,CAAC;SACnB;QAED,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;YAC1B,OAAO,KAAK,IAAI,EAAE,CAAC;SACpB;QAED,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE;YAC1B,OAAO,MAAM,IAAI,EAAE,CAAC;SACrB;KACF;;;;;;IAOD,cAAc,CAAC,OAAe;QAC5B,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QACnD,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACpD,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAEnD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;KAC7B;;;;;;;;IASD,mBAAmB,CAAC,IAAS,EAAE,SAAkB;QAC/C,MAAM,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,IAAI,YAAY,IAAI,EAAE;YACxB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClD,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACxC,OAAO,SAAS,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC;SAC3D;KACF;;;;;;;IAQD,gBAAgB,CAAC,QAAgB,EAAE,EAAE,QAAgB,EAAE;QACrD,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACvE,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAEvE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC1D,IAAI,aAAa,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC/C,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,aAAa,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,EAAE;gBACtD,OAAO,KAAK,CAAC;aACd;SACF;QAED,OAAO,IAAI,CAAC;KACb;;;;;;IAOD,UAAU,CAAC,UAAkB;QAC3B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1E;;;;;;;IAQD,iBAAiB,CAAC,IAAU,EAAE,IAAY;QACxC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;KACF;;;;;;IAOD,SAAS,CAAC,IAAU;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;KAC7B;;;;;;;;IASD,iBAAiB,CAAC,IAAU,EAAE,OAAa,EAAE,OAAa;QACxD,IAAI,OAAO,IAAI,OAAO,EAAE;YACtB,OAAO,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,CAAC;SAC3C;aAAM,IAAI,OAAO,IAAI,CAAC,OAAO,EAAE;YAC9B,OAAO,IAAI,IAAI,OAAO,CAAC;SACxB;aAAM,IAAI,CAAC,OAAO,IAAI,OAAO,EAAE;YAC9B,OAAO,IAAI,IAAI,OAAO,CAAC;SACxB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;;;;;IAQO,YAAY,CAAC,IAAmB;QACtC,MAAM,SAAS,GAAG,IAAI,YAAY,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QAE5E,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;KAC3D;;;;YAxMF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;ACTD;;;;;MASa,gBAAgB;;;YAJ5B,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,aAAa,CAAC;gBAC1B,SAAS,EAAE,EAAE;aACd;;;ACZD;;;;;;;IAOY;AAAZ,WAAY,cAAc;;IAExB,iCAAe,CAAA;AACjB,CAAC,EAHW,cAAc,KAAd,cAAc;;ACC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCa,uBAAuB;IAkHlC,YAAmB,MAAqB,EAAU,eAAkC;QAAjE,WAAM,GAAN,MAAM,CAAe;QAAU,oBAAe,GAAf,eAAe,CAAmB;;QAhHhE,WAAM,GAAG,IAAI,YAAY,EAA2B,CAAC;QAK/D,cAAS,GAAQ,IAAI,CAAC;QACtB,oBAAe,GAAQ,IAAI,CAAC;QAC5B,UAAK,GAAS,IAAI,IAAI,EAAE,CAAC;QAG3B,YAAO,GAAW,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAuGhE,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACzD;;;;;;;;;;IA1FD,IAAuB,MAAM,CAAC,MAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;KACzE;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;;;;;;;;;;;;;;;;IA0BD,IAAyB,OAAO,CAAC,OAAY;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACjE;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;;;;;;;;;;IA0BD,IAAyB,OAAO,CAAC,OAAY;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAChE;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOD,IAAqB,IAAI,CAAC,KAAqB;QAC7C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,CAAC;KAC3C;IAMS,eAAe,CAAC,IAAoB;QAC5C,MAAM,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE7D,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,YAAY,GAChB,OAAO,YAAY,KAAK,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;YACzG,MAAM,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1F,IAAI,CAAC,YAAY,GAAG,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC;SAC9D;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5C;KACF;IAEO,kBAAkB;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE;YAC7C,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,EAAE;YACpD,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;SACtB;QACD,OAAO,KAAK,CAAC;KACd;;;YA5IF,SAAS;;;YAtCD,aAAa;YACb,iBAAiB;;;qBAwCvB,MAAM,SAAC,UAAU;qBAwBjB,KAAK,SAAC,UAAU;sBA+BhB,KAAK,SAAC,YAAY;sBA+BlB,KAAK,SAAC,YAAY;mBAYlB,KAAK,SAAC,QAAQ;;;AC7HjB;AACA,MAAMA,WAAS,GAAG;IAChB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;QAClD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;QAClD,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF,MAAM,oBAAoB,GAAG,GAAG,CAAC;AAEjC;;;;;;;;;;;;;;;;;;;;MA0Ba,mBAAoB,SAAQ,uBAAuB;IAG9D,YAAoB,cAAiC,EAAE,MAAqB,EAAE,eAAkC;QAC9G,KAAK,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;QADb,mBAAc,GAAd,cAAc,CAAmB;KAEpD;IAED,IAAI,YAAY;QACd,OAAO,MAAM,CAAC,UAAU,GAAG,oBAAoB,CAAC;KACjD;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;YACtC,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAED,eAAe,CAAC,QAAQ;QACtB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE;YACrC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;SACpC;aAAM;YACL,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;KACF;IAED,QAAQ,CAAC,QAAQ;QACf,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE;YAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAC7B;aAAM;YACL,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;KACF;IAED,YAAY,CAAC,YAAY,EAAE,QAAS;;QAClC,IAAI,QAAQ,CAAC;QAEb,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;YAEvD,IAAI,QAAQ,KAAK,KAAK,KAAK,EAAC,MAAA,IAAI,CAAC,KAAK,0CAAE,KAAK,CAAA,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;gBACtF,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;aACpC;SACF;aAAM;YACL,QAAQ,GAAG,YAAY,CAAC;YACxB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SACpC;QAED,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5B;IAED,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;IAED,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,QAAQ;QACtC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,QAAQ,CAAC;YACb,IAAI,MAAM,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC;YAEzC,IAAI,QAAQ,KAAK,KAAK,EAAE;gBACtB,MAAM,OAAO,GAAG,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;gBAE9C,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC9E,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACpE;iBAAM;gBACL,MAAM,OAAO,GAAG,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;gBAE/C,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1E,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE;YAED,IAAI,CAAC,YAAY,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;SACtD;KACF;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,QAAQ,CAAC,CAAkB;QACzB,OAAO,IAAI,CAAC;KACb;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;QAED,MAAM,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAEnC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACpC;IAEO,oBAAoB,CAAC,KAAK;QAChC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,KAAI,IAAI,CAAC;SAC7B;aAAM,IAAI,KAAK,YAAY,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7D,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;KACb;IAEO,wBAAwB,CAAC,YAAkB;;QACjD,IAAI,EAAC,MAAA,IAAI,CAAC,KAAK,0CAAE,KAAK,CAAA,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjG,OAAO,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;SACrD;QAED,OAAO,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;KAC3E;IAEO,gBAAgB,CAAC,IAAI;QAC3B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,KAAK,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,aAAY,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;YAC5F,MAAM,GAAG,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,aAAY,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;YAEtF,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;SACvB;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC3C;KACF;IAEO,kBAAkB,CAAC,UAAkB;QAC3C,IAAI,UAAU,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;YAChD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACpE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE1C,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC;KACb;IAEO,WAAW,CAAC,KAAK;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAEO,SAAS,CAAC,KAAU;QAC1B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,KAAK,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC;YAC3B,MAAM,GAAG,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC;YAEvB,MAAM,QAAQ,GAAG,KAAK,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC1F,MAAM,MAAM,GAAG,GAAG,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAElF,IAAI,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,YAAY,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SACvF;KACF;;;YA7KF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,2zCAA2C;gBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;2BAC/CA,WAAS;aACV;;;YAzDC,iBAAiB;YAWV,aAAa;YACb,iBAAiB;;;MCPb,yBAAyB;IASpC;QAR0B,iBAAY,GAAG,KAAK,CAAC;QAEzB,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,IAAI,YAAY,EAAQ,CAAC;QAExC,SAAI,GAAG,IAAI,YAAY,EAAQ,CAAC;KAElC;;;YAdjB,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,kiBAAkD;gBAClD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;;2BAEE,KAAK,SAAC,iBAAiB;uBAEvB,KAAK,SAAC,aAAa;uBAEnB,MAAM,SAAC,YAAY;mBAEnB,MAAM,SAAC,QAAQ;;;MCPL,qBAAqB;IAHlC;QAIU,aAAQ,GAAG,eAAe,CAAC;QAE3B,WAAM,GAAG;YACf;gBACE,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,QAAQ;aACb;YACD;gBACE,EAAE,EAAE,WAAW;gBACf,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,SAAS;aACd;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,MAAM;aACX;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,QAAQ;aACb;YACD;gBACE,EAAE,EAAE,MAAM;gBACV,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,MAAM;gBACV,EAAE,EAAE,KAAK;aACV;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,MAAM;gBACV,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,MAAM;aACX;YACD;gBACE,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,MAAM;gBACV,EAAE,EAAE,OAAO;gBACX,EAAE,EAAE,MAAM;aACX;YACD;gBACE,EAAE,EAAE,QAAQ;gBACZ,EAAE,EAAE,QAAQ;gBACZ,EAAE,EAAE,QAAQ;gBACZ,EAAE,EAAE,QAAQ;aACb;YACD;gBACE,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,WAAW;gBACf,EAAE,EAAE,WAAW;gBACf,EAAE,EAAE,UAAU;aACf;YACD;gBACE,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,SAAS;gBACb,EAAE,EAAE,SAAS;aACd;YACD;gBACE,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,WAAW;gBACf,EAAE,EAAE,QAAQ;aACb;YACD;gBACE,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,UAAU;gBACd,EAAE,EAAE,WAAW;gBACf,EAAE,EAAE,SAAS;aACd;SACF,CAAC;QAEM,kBAAa,GAAG;YACtB;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;YACD;gBACE,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,KAAK;gBACT,EAAE,EAAE,IAAI;aACT;SACF,CAAC;QAEM,eAAU,GAAG;YACnB,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,OAAO;YACX,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,OAAO;SACZ,CAAC;QAEM,cAAS,GAAG;YAClB,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,MAAM;YACV,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,KAAK;SACV,CAAC;QAEM,eAAU,GAAG;YACnB,EAAE,EAAE,MAAM;YACV,EAAE,EAAE,OAAO;YACX,EAAE,EAAE,KAAK;YACT,EAAE,EAAE,SAAS;SACd,CAAC;KA6CH;IA3CC,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvC;IAED,cAAc;QACZ,MAAM,SAAS,GAAG,KAAK,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3C,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC/C;QACD,OAAO,SAAS,CAAC;KAClB;IAED,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/C;IAED,gBAAgB;QACd,MAAM,WAAW,GAAG,KAAK,EAAE,CAAC;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrD,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;SACzC;QACD,OAAO,WAAW,CAAC;KACpB;IAED,YAAY;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YACpC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,eAAe,CAAC;SAC3E;KACF;;;;YA7LF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;ACJD,MAAM,oCAAoC,GAAW,CAAC,CAAC;MAG1C,iBAAiB;IAC5B,UAAU,CAAC,IAAS,EAAE,KAAU,EAAE,eAAoB,IAAI,EAAE,gBAAqB,IAAI;QACnF,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;YACxD,MAAM,KAAK,CAAC,mCAAmC,CAAC,CAAC;SAClD;QAED,MAAM,KAAK,GAAe,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAe,EAAE,CAAC;QAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAEpC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACxB;QAED,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAEhC,GAAG;YACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBACpD,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;aAClC;YACD,KAAK,CAAC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACvD,IAAI,GAAG,EAAE,CAAC;SACX,QAAQ,IAAI,CAAC,QAAQ,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,EAAE;QAClE,OAAO,KAAK,CAAC;KACd;IAED,SAAS,CAAC,IAAS,EAAE,KAAU;QAC7B,MAAM,YAAY,GAAG,UAAU,IAAS;YACtC,OAAO,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC;SAC7C,CAAC;QACF,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;KACnD;IAED,aAAa,CAAC,IAAS;QACrB,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3C,OAAO,SAAS,CAAC,MAAM,EAAE,KAAK,oCAAoC,EAAE;YAClE,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;SAC5C;QACD,OAAO,SAAS,CAAC;KAClB;;;YA3CF,UAAU;;;MCWE,0BAA0B;IAmFrC,YACU,iBAAoC,EACpC,qBAA4C,EAC5C,MAAqB;QAFrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAe;QAnFd,SAAI,GAA6B,KAAK,CAAC;QAEjC,eAAU,GAAY,KAAK,CAAC;QAIjC,UAAK,GAAY,KAAK,CAAC;QAEf,iBAAY,GAAG,IAAI,IAAI,EAAE,CAAC;QAUzB,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QAEzC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAEtC,cAAS,GAAG,IAAI,OAAO,EAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QAQhF,kBAAa,GAAe,KAAK,EAAE,CAAC;QAEpC,oBAAe,GAAe,KAAK,EAAE,CAAC;QAGtC,UAAK,GAAS,IAAI,IAAI,EAAE,CAAC;KAiDrB;IAzCJ,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,CAAC;KACnD;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;KAClD;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC;KAC5B;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;KAC9B;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC;KAC7B;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC;KAClC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC;KAChC;IAQD,QAAQ;QACN,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;IAED,WAAW,CAAC,OAAO;QACjB,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC;QAEjC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SAC5C;KACF;IAED,kBAAkB,CAAC,YAAoB,EAAE,aAAqB;QAC5D,OAAO,YAAY,KAAK,aAAa,GAAG,qCAAqC,GAAG,4BAA4B,CAAC;KAC9G;IAED,qBAAqB,CAAC,IAAU;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;KAC7C;IAED,qBAAqB,CAAC,IAAU;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;KAC7C;IAED,kBAAkB,CAAC,YAAoB,EAAE,aAAqB;QAC5D,OAAO,YAAY,KAAK,aAAa,GAAG,qCAAqC,GAAG,4BAA4B,CAAC;KAC9G;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;KAC/D;IAED,WAAW;QACT,IAAI,CAAC,kBAAkB,GAAG,EAAE;cACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;cACjE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KACpF;IAED,eAAe;QACb,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;SACnE;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KACpF;IAED,YAAY,CAAC,GAAG;QACE,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3C;IAED,YAAY;QACM,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5C;;IAGD,YAAY,CAAC,IAAU;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;;IAGD,aAAa,CAAC,IAAY,EAAE,KAAa;QACvC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;KACzC;;IAGD,YAAY,CAAC,IAAY,EAAE,KAAa;;QAEtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,KAAK,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;QAEvE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;KACzC;IAED,iBAAiB,CAAC,IAA8B;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACvE;IAEO,mBAAmB,CAAC,IAAY;QACtC,IAAI,CAAC,CAAC;QACN,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;KACF;IAEO,UAAU,CAAC,KAAW,EAAE,KAAW;QACzC,IAAI;YACF,QACE,KAAK,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,WAAW,EAAE;gBAC3C,KAAK,CAAC,QAAQ,EAAE,KAAK,KAAK,CAAC,QAAQ,EAAE;gBACrC,KAAK,CAAC,OAAO,EAAE,KAAK,KAAK,CAAC,OAAO,EAAE,EACnC;SACH;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,CAAC;SACd;KACF;;IAGO,cAAc,CAAC,IAAI;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,EAAE,CAAC;QAE7B,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,EAAE;YACnB,OAAO,IAAI,GAAG,EAAE,KAAK,CAAC,EAAE;gBACtB,IAAI,EAAE,CAAC;aACR;SACF;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;KACzB;IAEO,eAAe,CAAC,IAAU,EAAE,KAAa;QAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;cAClE,mBAAmB,KAAK,WAAW;cACnC,mBAAmB,KAAK,oBAAoB,CAAC;KAClD;IAEO,sBAAsB,CAAC,IAAU,EAAE,KAAa;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;cAClE,mBAAmB,KAAK,EAAE;cAC1B,mBAAmB,KAAK,WAAW,CAAC;KACzC;IAEO,gBAAgB,CAAC,IAAU,EAAE,KAAa;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;cAClE,mBAAmB,KAAK,QAAQ;cAChC,mBAAmB,KAAK,iBAAiB,CAAC;KAC/C;IAEO,oBAAoB,CAAC,IAAU,EAAE,KAAa;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;cAClE,mBAAmB,KAAK,WAAW;cACnC,mBAAmB,KAAK,oBAAoB,CAAC;KAClD;IAEO,WAAW,CAAC,IAAU,EAAE,KAAa;;QAC3C,MAAM,KAAK,GAAG,MAAA,IAAI,CAAC,aAAa,0CAAE,KAAK,CAAC;QACxC,MAAM,GAAG,GAAG,MAAA,IAAI,CAAC,aAAa,0CAAE,GAAG,CAAC;QAEpC,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE;YAC9E,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,EAAE;YACnE,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC/C;aAAM,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE;YAChF,OAAO,mBAAmB,KAAK,QAAQ,CAAC;SACzC;aAAM,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YAC3D,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC3C;aAAM;YACL,OAAO,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACjD;KACF;IAEO,IAAI;QACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,kBAAkB;QACxB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,CAAC;QACrE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;QACjE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,CAAC;KAChE;IAEO,UAAU,CAAC,QAAc,IAAI,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC/D;IAEO,YAAY,CAAC,IAAY;QAC/B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,CAAC,CAAC;KACpC;IAEO,aAAa,CAAC,IAAY,EAAE,KAAa;QAC/C,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KAC3B;;;YAvSF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,iqHAAmD;gBACnD,SAAS,EAAE,CAAC,iBAAiB,CAAC;gBAC9B,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YARQ,iBAAiB;YADjB,qBAAqB;YAErB,aAAa;;;oBASnB,KAAK,SAAC,SAAS;mBAEf,KAAK,SAAC,QAAQ;yBAEd,KAAK,SAAC,cAAc;uBAEpB,KAAK,SAAC,aAAa;oBAEnB,KAAK,SAAC,SAAS;2BAEf,KAAK,SAAC,iBAAiB;4BAEvB,KAAK,SAAC,kBAAkB;sBAExB,KAAK,SAAC,YAAY;sBAElB,KAAK,SAAC,YAAY;yBAElB,KAAK,SAAC,eAAe;2BAErB,MAAM,SAAC,iBAAiB;yBAExB,MAAM,SAAC,eAAe;wBAEtB,MAAM,SAAC,cAAc;qBAqBrB,KAAK,SAAC,UAAU;;;ACtDnB;;;;MASa,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,mBAAmB,EAAE,yBAAyB,EAAE,0BAA0B,CAAC;gBAC1F,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;ACfD;;;;;;;IAOY;AAAZ,WAAY,WAAW;;;;;IAKrB,4BAAa,CAAA;;;;IAKb,8BAAe,CAAA;;;;;;;;;;;;;IAcf,8BAAe,CAAA;;;;IAKf,0BAAW,CAAA;;;;;IAMX,4BAAa,CAAA;;;;;IAMb,gCAAiB,CAAA;;;;IAKjB,0BAAW,CAAA;AACb,CAAC,EA/CW,WAAW,KAAX,WAAW;;ACPvB;AACO,MAAM,cAAc,GAAG,EAAE,CAAC;AAEjC;AACO,MAAM,qBAAqB,GAAG,EAAE,CAAC;AAExC;AACO,MAAM,gBAAgB,GAAG,CAAC,CAAC;AAElC;AACO,MAAM,yBAAyB,GAAG,CAAC,CAAC;AAE3C;AACO,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAE9C;AACO,MAAM,4BAA4B,GAAG,EAAE,CAAC;AAE/C;AACO,MAAM,qBAAqB,GAAG,MAAM,CAAC;AAE5C;AACA,MAAM,YAAY,GAAG,IAAI,CAAC;AACnB,MAAM,wBAAwB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;;MCVxE,mBAAmB;;;;;;;IAO9B,wBAAwB,CAAC,MAAkB,EAAE,uBAAgC,IAAI;QAC/E,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAE/C,OAAO;YACL,QAAQ,EAAE,CAAC,oBAAoB,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ;YAC9D,QAAQ,EAAE,oBAAoB,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ;SAC9D,CAAC;KACH;;;;;;;;;IAUD,mBAAmB,CACjB,OAAqC,EAAE,EACvC,IAAiB,EACjB,OAAuB;QAEvB,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YAC5B,OAAO,IAAI,CAAC,cAAc,CAAS,IAAqB,CAAC,CAAC;SAC3D;aAAM;YACL,OAAO,IAAI,CAAC,yBAAyB,CAAC,IAA2B,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC;SAC3G;KACF;;;;;;IAOD,mBAAmB,CAAC,MAA2B;QAC7C,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAU,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5G;;;;;;;;;;;;;;;IAgBD,kBAAkB,CAAC,YAAiB,EAAE,UAAkB;QACtD,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;QAE5C,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;QAClC,MAAM,YAAY,GAAG,UAAU,GAAG,QAAQ,CAAC;QAC3C,MAAM,MAAM,GAAG,YAAY,GAAG,KAAK,CAAC;QAEpC,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KACnC;;;;;;;IAQD,KAAK,CAAC,YAAiC,EAAE,YAAoB,CAAC;QAC5D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;QAE5C,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAE3D,KAAK,IAAI,KAAK,GAAG,QAAQ,EAAE,KAAK,IAAI,QAAQ,EAAE,KAAK,GAAG,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,IAAI,EAAE,EAAE;YACnF,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpB;QAED,OAAO,MAAM,CAAC;KACf;;;;;;;IAQD,sBAAsB,CAAC,MAAc;QACnC,MAAM,WAAW,GAAG,OAAO,MAAM,KAAK,SAAS,CAAC;QAChD,MAAM,WAAW,GAAG,MAAM,KAAK,QAAQ,CAAC;QAExC,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC;QAC/E,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC;QAE7E,OAAO,CAAC,WAAW,IAAI,SAAS,MAAM,WAAW,IAAI,OAAO,CAAC,CAAC;KAC/D;IAEO,iBAAiB,CAAC,OAA2B;;QACnD,MAAM,SAAS,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,mCAAI,gBAAgB,CAAC;QAEzD,OAAO,SAAS,IAAI,SAAS,IAAI,CAAC,IAAI,SAAS,IAAI,EAAE,GAAG,SAAS,GAAG,gBAAgB,CAAC;KACtF;IAEO,yBAAyB,CAAC,IAAyB,EAAE,SAAiB;QAC5E,MAAM,iBAAiB,GAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC;QAC9F,MAAM,MAAM,GAAwB,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAC3F,MAAM,eAAe,GAAkB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAErE,OAAO,IAAI,CAAC,cAAc,CAAS,eAAe,CAAC,CAAC;KACrD;;IAGO,eAAe,CAAC,YAAiC,EAAE,SAAiB;QAC1E,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAC/D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;QAC5C,MAAM,MAAM,GAAG,CAAC,eAAe,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC;QAE/D,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KAClC;;IAGO,SAAS,CAAC,MAAkB,EAAE,IAAY;QAChD,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CACvB,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK;YACjB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;aAClC;SACF,CAAC,CACH,CAAC;QACF,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KACnC;;IAGO,kBAAkB,CAAC,KAAa;QACtC,OAAO,CAAC,CAAC,GAAG,KAAK,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;KAChC;IAEO,cAAc,CAAI,KAAe;QACvC,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,OAAO,KAAK,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;KACxG;;;;YAvJF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;MCCqB,wBAAwB;IAoE5C,YACY,YAAiC,EACjC,QAAmB,EACnB,UAAsB;QAFtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;QAtED,sBAAiB,GAAY,KAAK,CAAC;QAQ3C,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAErC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAK9D,YAAO,GAAY,IAAI,CAAC;QAGxB,4BAAuB,GAA2C,EAAE,CAAC;QAK7D,mBAAc,GAAyB,EAAE,CAAC;QAC1C,WAAM,GAAwB,EAAE,CAAC;QACjC,YAAO,GAAwB,EAAE,CAAC;KA8CtC;IA5CJ,IAAsB,KAAK,CAAC,KAA0B;QACpD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/E;KACF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAA+B,aAAa,CAAC,KAA2B;QACtE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9E;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,IAAuB,MAAM,CAAC,UAA+B;QAC3D,MAAM,qBAAqB,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpF,IAAI,qBAAqB,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;YACrC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,aAAa,EAAE,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SACvF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAQD,iBAAiB,CAAC,YAAiB;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpC;IAED,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,CAAC,IAAY,EAAE,KAAa,EAAE,YAAoB;QACvE,MAAM,SAAS,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAElC,OAAO,YAAY,IAAI,GAAG,SAAS,GAAG,SAAS,EAAE,CAAC;KACnD;IAEO,cAAc;QACpB,MAAM,OAAO,GAAG,IAAI,CAAC,4BAA4B,GAAG,GAAG,GAAG,GAAG,CAAC;;QAE9D,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAE1C,OAAO,OAAO,CAAC;KAChB;IAEO,WAAW,CAAC,KAAa,EAAE,aAAmC;QACpE,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB;cAC7C,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC;cAChF,CAAC,CAAC;QAEN,MAAM,yBAAyB,GAAG,KAAK,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/G,MAAM,MAAM,GAAG,KAAK,CAAC,yBAAyB,CAAC,GAAG,CAAC,GAAG,yBAAyB,CAAC;QAEhF,OAAO,IAAI,CAAC,KAAK,CACf,aAAa,CAAC,eAAe;YAC3B,iBAAiB;YACjB,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,MAAM,CACpE,CAAC;KACH;IAEO,aAAa,CAAC,KAAa,EAAE,aAA4B,EAAE;;QACjE,OAAO,MAAA,UAAU,CAAC,KAAK,CAAC,mCAAI,SAAS,CAAC;KACvC;IAEO,yBAAyB,CAC/B,aAAmC,EACnC,MAA2B,EAC3B,KAA0B;QAE1B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAElC,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAmB;YAC3D,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,eAAe,GAAW,EAAE,CAAC;gBACjC,IAAI,gBAAgB,GAAoC,EAAE,CAAC;gBAC3D,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC1B,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;gBAEzC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;oBAC7B,IAAI,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;wBAClD,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;wBAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;wBAC3D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;wBACjE,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC5D,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;wBAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;wBAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;wBAChE,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,KAAK,WAAW,CAAC,IAAI,CAAC;wBACrD,gBAAgB,GAAG;4BACjB,GAAG,gBAAgB;4BACnB,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE;yBACzF,CAAC;wBACF,eAAe,IAAI,IAAI,cAAc,GAAG,WAAW,IAAI,WAAW,EAAE,CAAC;qBACtE;iBACF,CAAC,CAAC;gBAEH,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;gBAE1G,IAAI,CAAC,uBAAuB,GAAG,CAAC,GAAG,IAAI,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;gBAEnF,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;aAChE;SACF,CAAC,CAAC;KACJ;IAEO,iBAAiB,CAAC,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa;QAC9E,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,aAAa,CAAC;QAEpD,IAAI,IAAI,CAAC,SAAS,KAAK,WAAW,CAAC,IAAI,EAAE;YACvC,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;YACjE,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC;YACrE,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CACjC,IAAI,CAAC,iBAAiB;kBAClB,eAAe;kBACf,eAAe,GAAG,CAAC,QAAQ,GAAG,eAAe,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAC3E,CAAC;YAEF,OAAO,GAAG,eAAe,IAAI,aAAa,IAAI,eAAe,KAAK,gBAAgB,IAAI,eAAe,IAAI,CAAC;SAC3G;QAED,OAAO,eAAe,CAAC;KACxB;IAEO,WAAW,CAAC,KAA0B,EAAE,IAAY,EAAE,aAAmC;QAC/F,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAClE,MAAM,WAAW,GACf,aAAa,CAAC,qBAAqB,GAAG,aAAa,CAAC,qBAAqB,GAAG,OAAO,GAAG,yBAAyB,CAAC;QAElH,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;KAChC;;;YAtLF,SAAS;;;YAND,mBAAmB;YANiC,SAAS;YAAlD,UAAU;;;gCAc3B,KAAK,SAAC,wBAAwB;yBAE9B,KAAK,SAAC,cAAc;oCAEpB,KAAK,SAAC,0BAA0B;uBAEhC,KAAK,SAAC,aAAa;yBAEnB,MAAM,SAAC,eAAe;yBAEtB,MAAM,SAAC,eAAe;wBAEtB,SAAS,SAAC,WAAW;oBAerB,KAAK,SAAC,SAAS;4BAYf,KAAK,SAAC,kBAAkB;qBAUxB,KAAK,SAAC,UAAU;;;MCjDN,oBAAqB,SAAQ,wBAAwB;IAKhE,YACY,YAAiC,EACjC,QAAmB,EACnB,UAAsB;QAEhC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAJhC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;KAGjC;IAED,OAAO,CAAC,UAAkB;QACxB,IAAI,CAAC,eAAe,CAAyB,IAAI,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC;QACtF,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IAED,OAAO,CAAC,UAAkB;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,CAAyB,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC1E,IAAI,CAAC,eAAe,CAA2B,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;KAChG;IAED,iBAAiB,CAAC,YAAiB;QACjC,MAAM,EAAE,UAAU,KAAc,YAAY,EAArB,IAAI,UAAK,YAAY,EAAtC,cAAuB,CAAe,CAAC;QAE7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;IAEO,eAAe,CAAI,IAAc,EAAE,KAAc;QACvD,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,WAAW;YAC9B,KAAK,CAAC,UAAU,CAAC,GAAG,KAAK,KAAK,SAAS,GAAG,IAAI,GAAG,KAAK,KAAK,WAAW,CAAC;SACxE,CAAC,CAAC;KACJ;IAEO,mBAAmB,CAAC,KAAiB;QAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjD,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;QAC3B,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC;;QAG3B,OAAO,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;KAC/C;IAEO,kBAAkB,CAAC,UAAkB;QAC3C,IAAI,aAAuB,CAAC;QAC5B,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;QAE1C,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC;aAChF,IAAI,CACH,YAAY,CAAC,EAAE,CAAC,EAChB,GAAG,CAAC,CAAC,KAAiB,MAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAC7E,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAC1D;aACA,SAAS,CAAC,cAAc;YACvB,IAAI,cAAc,KAAK,SAAS,EAAE;gBAChC,IAAI,CAAC,eAAe,CAA2B,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,EAAE,cAAc,CAAC,CAAC;aAC1G;SACF,CAAC,CAAC;KACN;IAEO,cAAc;QACpB,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;KAC3C;IAEO,gBAAgB,CAAC,aAAuB;QAC9C,MAAM,EAAE,CAAC,EAAE,GAAG,aAAa,CAAC;QAE5B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CACjE,CAAC,QAAQ,EAAE,KAAK,KACd,CAAC,CAAC,IAAI,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC;aAChE,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAChE,CAAC;QAEF,IAAI,IAAI,CAAC,uBAAuB,IAAI,CAAC,IAAI,IAAI,CAAC,uBAAuB,KAAK,IAAI,CAAC,wBAAwB,EAAE;YACvG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,uBAAuB,CAAC;YAC7D,OAAO,IAAI,CAAC,uBAAuB,CAAC;SACrC;QAED,OAAO,SAAS,CAAC;KAClB;;;YAxFF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,yoCAA6C;aAC9C;;;YAPQ,mBAAmB;YANI,SAAS;YAArB,UAAU;;;MCoBjB,oBAAoB;IAsF/B,YAAoB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QArFpB,sBAAiB,GAAY,KAAK,CAAC;QAMhC,0BAAqB,GAAgC,IAAI,YAAY,EAAE,CAAC;QAOpG,gBAAW,GAAkB,EAAE,CAAC;QAChC,gBAAW,GAAkB,EAAE,CAAC;QAChC,cAAS,GAAW,gBAAgB,CAAC;QACrC,iBAAY,GAAW,CAAC,CAAC;QAGzB,gBAAW,GAAkB,EAAE,CAAC;QAChC,mBAAc,GAAyB,EAAE,CAAC;QAC1C,YAAO,GAAe,EAAE,CAAC;KAgEwB;IA9DzD,IAAuB,MAAM,CAAC,UAAsB;QAClD,MAAM,qBAAqB,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpF,IAAI,qBAAqB,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;YAErC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACvG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxG;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAA2B,UAAU,CAAC,KAAoB;QACxD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxG;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxG;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAA+B,aAAa,CAAC,KAA2B;QACtE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACxG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACzG;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,IAAwB,WAAW,CAAC,KAAyB;QAC3D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YACjC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxG;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACxG;KACF;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAIO,mBAAmB,CACzB,SAAiB,EACjB,YAAoB,EACpB,aAAmC,EACnC,gBAAqC,EACrC,IAAiB;QAEjB,IAAI,YAAY,EAAE;YAChB,MAAM,kBAAkB,GAAG,IAAI,KAAK,WAAW,CAAC,GAAG,GAAG,YAAY,GAAG,SAAS,CAAC;YAC/E,IAAI,CAAC,8BAA8B,CAAC,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;SAChG;QAED,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,yBAAyB,CAAC,kBAAkB,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;KACrF;IAEO,kBAAkB,CAAC,YAAoB,EAAE,SAAiB,EAAE,IAAiB;QACnF,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YAC5B,OAAO,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;SACjD;QACD,OAAO,SAAS,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;KACxC;IAEO,mBAAmB,CACzB,SAAiB,EACjB,YAAoB,EACpB,aAAmC,EACnC,gBAAqC,EACrC,IAAiB;QAEjB,MAAM,aAAa,GAAG,IAAI,KAAK,WAAW,CAAC,GAAG,GAAG,SAAS,GAAG,YAAY,CAAC;QAE1E,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,aAAa,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC;SAC3F;QAED,IAAI,IAAI,KAAK,WAAW,CAAC,IAAI,EAAE;YAC7B,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;KACtF;IAEO,yBAAyB,CAC/B,aAAqB,EACrB,aAAmC,EACnC,KAA0B;QAE1B,MAAM,MAAM,GAAG,aAAa,CAAC,eAAe,CAAC;QAC7C,MAAM,IAAI,GAAG,aAAa,CAAC,QAAQ,CAAC;QAEpC,IAAI,wBAAwB,CAAC;QAC7B,IAAI,eAAe,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa;YACnE,MAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;YACxF,MAAM,WAAW,GAAG,IAAI,MAAM,IAAI,WAAW,KAAK,IAAI,KAAK,WAAW,EAAE,CAAC;YAEzE,OAAO,EAAE,WAAW,EAAE,CAAC;SACxB,CAAC,CAAC;;QAGH,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC1F,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAChG,eAAe,GAAG,CAAC,GAAG,eAAe,EAAE,wBAAwB,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;KACzC;IAEO,2BAA2B,CACjC,aAAmC,EACnC,KAA0B,EAC1B,KAAa,EACb,GAAW,EACX,UAAmB,KAAK;QAExB,MAAM,IAAI,GAAG,OAAO,GAAG,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;QACxF,MAAM,WAAW,GAAG;YAClB,MAAM,EAAE;gBACN,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,GAAG;gBACT,MAAM,EAAE,YAAY;gBACpB,IAAI,EAAE,YAAY;aACnB;YACD,GAAG,EAAE;gBACH,MAAM,EAAE,YAAY;gBACpB,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,KAAK;gBACb,IAAI,EAAE,GAAG;aACV;SACF,CAAC;QAEF,OAAO;YACL,WAAW,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;SAC7H,CAAC;KACH;IAEO,2BAA2B,CACjC,KAA0B,EAC1B,IAAY,EACZ,aAAmC,EACnC,OAAgB;QAEhB,MAAM,EAAE,eAAe,EAAE,QAAQ,EAAE,qBAAqB,EAAE,GAAG,aAAa,CAAC;QAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAEhE,OAAO,IAAI,CAAC,KAAK,CACf,OAAO;cACH,eAAe,GAAG,CAAC,QAAQ,GAAG,eAAe,IAAI,KAAK;cACtD,qBAAqB,GAAG,qBAAqB,GAAG,KAAK,GAAG,yBAAyB,CACtF,CAAC;KACH;IAEO,8BAA8B,CACpC,aAAqB,EACrB,aAAmC,EACnC,gBAAqC,EACrC,IAAiB;QAEjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;QAE9E,IAAI,CAAC,qBAAqB,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa;YAC1E,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACtC,MAAM,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;YACvF,MAAM,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAEnG,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;SAC5C,CAAC,CAAC;KACJ;IAEO,yBAAyB,CAC/B,aAAqB,EACrB,aAAmC,EACnC,IAAiB,EACjB,KAA0B;QAE1B,MAAM,MAAM,GAAG,yBAAyB,CAAC;QACzC,MAAM,IAAI,GAAG,aAAa,CAAC,qBAAqB,GAAG,yBAAyB,CAAC;;QAG7E,MAAM,MAAM,GAAG,aAAa,KAAK,CAAC,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,GAAG,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;QAEnG,IAAI,wBAAwB,CAAC;QAC7B,IAAI,eAAe,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa;YAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;YACxF,MAAM,WAAW,GAAG,IAAI,WAAW,IAAI,MAAM,KAAK,WAAW,KAAK,IAAI,EAAE,CAAC;YAEzE,OAAO,EAAE,WAAW,EAAE,CAAC;SACxB,CAAC,CAAC;;QAGH,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACrF,wBAAwB,GAAG,IAAI,CAAC,2BAA2B,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACtG,eAAe,GAAG,CAAC,GAAG,eAAe,EAAE,wBAAwB,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,eAAe,CAAC,CAAC;KAC9C;IAEO,8BAA8B,CACpC,aAAqB,EACrB,aAAmC,EACnC,gBAAqC,EACrC,IAAiB;QAEjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;QAE9E,IAAI,CAAC,qBAAqB,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa;YAC1E,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAEtC,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACxF,MAAM,WAAW,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,CAAC,CAAC;YAEvE,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;SAC5C,CAAC,CAAC;KACJ;IAEO,8BAA8B,CAAC,eAAuB;QAC5D,MAAM,mBAAmB,GAAG,cAAc,GAAG,CAAC,CAAC;QAE/C,OAAO,eAAe,GAAG,mBAAmB,CAAC;KAC9C;IAEO,8BAA8B,CACpC,aAAqB,EACrB,aAAmC,EACnC,IAAiB,EACjB,KAAa;QAEb,MAAM,aAAa,GAAG,IAAI,KAAK,WAAW,CAAC,GAAG,GAAG,aAAa,GAAG,aAAa,GAAG,CAAC,CAAC;QACnF,MAAM,MAAM,GAAG,KAAK,GAAG,aAAa,CAAC;QAErC,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YAC5B,QACE,aAAa,CAAC,qBAAqB,GAAG,aAAa,CAAC,qBAAqB,GAAG,MAAM,GAAG,yBAAyB,EAC9G;SACH;QAED,MAAM,kBAAkB,GAAG,aAAa,CAAC,qBAAqB,GAAG,aAAa,GAAG,CAAC,CAAC;QACnF,QACE,aAAa,CAAC,qBAAqB;YACnC,kBAAkB;YAClB,aAAa,CAAC,qBAAqB,GAAG,MAAM;YAC5C,yBAAyB,EACzB;KACH;IAEO,yBAAyB,CAAC,aAAqB,EAAE,aAAmC,EAAE,KAAa;QACzG,MAAM,MAAM,GAAG,KAAK,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;QAE3C,QACE,aAAa,CAAC,qBAAqB,GAAG,aAAa,CAAC,qBAAqB,GAAG,MAAM,GAAG,yBAAyB,EAC9G;KACH;IAEO,8BAA8B,CAAC,aAAmC;QACxE,MAAM,kBAAkB,GAAG,cAAc,GAAG,CAAC,CAAC;QAE9C,OAAO,aAAa,CAAC,SAAS,GAAG,kBAAkB,CAAC;KACrD;IAEO,sBAAsB,CAC5B,aAAmC,EACnC,aAAqB,EACrB,IAAiB,EACjB,KAAa;QAEb,MAAM,aAAa,GAAG,IAAI,KAAK,WAAW,CAAC,GAAG,GAAG,aAAa,GAAG,CAAC,GAAG,aAAa,CAAC;QACnF,MAAM,MAAM,GAAG,KAAK,GAAG,aAAa,CAAC;QAErC,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YAC5B,OAAO,IAAI,CAAC,KAAK,CACf,aAAa,CAAC,eAAe,GAAG,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,MAAM,CAClG,CAAC;SACH;QAED,MAAM,iBAAiB,GAAG,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,aAAa,GAAG,CAAC,CAAC;QACvG,OAAO,IAAI,CAAC,KAAK,CACf,aAAa,CAAC,eAAe;YAC3B,iBAAiB;YACjB,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,MAAM,CACpE,CAAC;KACH;IAEO,yBAAyB,CAC/B,aAAmC,EACnC,aAAqB,EACrB,KAAa,EACb,wBAAiC,KAAK;QAEtC,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,GAAG,aAAa,GAAG,CAAC,GAAG,aAAa,CAAC;QACjF,MAAM,iBAAiB,GACrB,IAAI,CAAC,iBAAiB,IAAI,qBAAqB;cAC3C,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,KAAK,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;cAClF,CAAC,CAAC;QACR,MAAM,0BAA0B,GAAG,KAAK,GAAG,aAAa,CAAC;QACzD,MAAM,MAAM,GAAG,0BAA0B,KAAK,QAAQ,GAAG,CAAC,GAAG,0BAA0B,CAAC;QAExF,OAAO,IAAI,CAAC,KAAK,CACf,aAAa,CAAC,eAAe;YAC3B,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,eAAe,IAAI,MAAM;YACjE,iBAAiB,CACpB,CAAC;KACH;IAEO,gBAAgB,CAAC,UAA8B,EAAE;QACvD,IAAI,CAAC,SAAS;YACZ,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,gBAAgB,CAAC;KACpH;IAEO,kBAAkB;QACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;KACvB;IAEO,mBAAmB,CACzB,aAAmC,EACnC,aAAqB,EACrB,IAAiB,EACjB,KAAa;QAEb,OAAO,IAAI,CAAC,iBAAiB;cACzB,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC;cACnE,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAC5E;IAEO,8BAA8B,CAAC,aAAqB,EAAE,aAAmC;QAC/F,MAAM,qBAAqB,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa,KAC3E,IAAI,CAAC,yBAAyB,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,CAC1E,CAAC;QAEF,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;KACxD;IAEO,4BAA4B,CAAC,SAAiB;QACpD,OAAO,SAAS,IAAI,CAAC,IAAI,SAAS,IAAI,EAAE,CAAC;KAC1C;IAEO,cAAc,CAAC,IAAiB,EAAE,gBAAqC,EAAE,aAAqB;QACpG,IAAI,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YAC5B,MAAM,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACpF,OAAO,eAAe,CAAC,OAAO,EAAE,CAAC;SAClC;QAED,OAAO,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;KACtE;IAEO,cAAc,CAAC,IAAiB,EAAE,gBAAqC,EAAE,aAAqB;QACpG,OAAO,IAAI,KAAK,WAAW,CAAC,GAAG;cAC3B,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,EAAE,aAAa,CAAC;cAC7D,IAAI,CAAC,sBAAsB,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KACjE;IAEO,sBAAsB,CAAC,aAAqB,EAAE,aAA4B,EAAE;QAClF,OAAO,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAa,eAAK,OAAA,MAAA,UAAU,CAAC,KAAK,CAAC,mCAAI,GAAG,CAAA,EAAA,CAAC,CAAC;KACtF;IAEO,uBAAuB,CAAC,gBAAqC,EAAE,iBAAyB;QAC9F,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC;QAEvF,OAAO,iBAAiB,CAAC,GAAG,CAAC,KAAK;YAChC,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;;YAGrD,MAAM,gBAAgB,GAAG,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEhF,OAAO,gBAAgB,CAAC,QAAQ,EAAE,CAAC;SACpC,CAAC,CAAC;KACJ;;;YAvaF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,kYAA4C;aAC7C;;;YAXQ,mBAAmB;;;gCAazB,KAAK,SAAC,wBAAwB;mBAE9B,KAAK,SAAC,QAAQ;oBAEd,KAAK,SAAC,SAAS;oCAEf,MAAM,SAAC,0BAA0B;qBAiBjC,KAAK,SAAC,UAAU;yBAoBhB,KAAK,SAAC,cAAc;4BAcpB,KAAK,SAAC,kBAAkB;0BAYxB,KAAK,SAAC,WAAW;;;MClFP,wBAAwB;IAKnC,iBAAgB;IAEhB,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;;;YAbF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,sYAAiD;aAClD;;;;+BAEE,KAAK,SAAC,sBAAsB;+BAE5B,KAAK,SAAC,sBAAsB;;;MCFlB,yBAAyB;IASpC;QARiC,sBAAiB,GAAY,KAAK,CAAC;KAQpD;IAEhB,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;;;YAjBF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,spBAAkD;aACnD;;;;gCAEE,KAAK,SAAC,wBAAwB;oCAE9B,KAAK,SAAC,4BAA4B;oCAElC,KAAK,SAAC,4BAA4B;mBAElC,KAAK,SAAC,QAAQ;;;MCNK,uBAAuB;IAqD3C,YAAsB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QAlDhC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QAEnC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QAMlD,mBAAc,GAAyB,EAAE,CAAC;QAC1C,WAAM,GAAwB,EAAE,CAAC;QACjC,YAAO,GAAwB,EAAE,CAAC;KAwCiB;IAtC3D,IAAsB,KAAK,CAAC,KAA0B;QACpD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;SACrF;KACF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAA+B,aAAa,CAAC,KAA2B;QACtE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACpF;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAED,IAAuB,MAAM,CAAC,UAA+B;QAC3D,MAAM,qBAAqB,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpF,IAAI,qBAAqB,CAAC,MAAM,EAAE;YAChC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;YACrC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC9E,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,aAAa,EAAE,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7F;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAID,eAAe,CAAC,YAAiB;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;IAED,eAAe,CAAC,YAAiB;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;IAED,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAEO,+BAA+B,CACrC,aAAmC,EACnC,MAA2B,EAC3B,KAA0B;QAE1B,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,KAAmB,EAAE,WAAW;YACxE,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;gBAC7B,IAAI,eAAe,GAAiC,EAAE,CAAC;gBAEvD,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,cAAc;oBACtC,IAAI,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;wBAClD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,cAAc,EAAE,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;wBAEjG,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBACrE,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC7B,MAAM,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;wBACjC,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;wBAEhE,eAAe,GAAG,CAAC,GAAG,eAAe,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;qBACrG;iBACF,CAAC,CAAC;gBAEH,OAAO,eAAe,CAAC;aACxB;SACF,CAAC,CAAC;KACJ;IAEO,eAAe,CAAC,IAAY,EAAE,KAAa,EAAE,YAAoB;QACvE,MAAM,SAAS,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAElC,OAAO,YAAY,IAAI,GAAG,SAAS,GAAG,SAAS,EAAE,CAAC;KACnD;IAEO,aAAa,CAAC,KAAa,EAAE,aAA4B,EAAE;;QACjE,OAAO,MAAA,UAAU,CAAC,KAAK,CAAC,mCAAI,SAAS,CAAC;KACvC;;;YAzGF,SAAS;;;YAPD,mBAAmB;;;yBASzB,KAAK,SAAC,cAAc;uBAEpB,MAAM,SAAC,aAAa;uBAEpB,MAAM,SAAC,aAAa;oBAUpB,KAAK,SAAC,SAAS;4BAYf,KAAK,SAAC,kBAAkB;qBAUxB,KAAK,SAAC,UAAU;;;MCjCN,mBAAoB,SAAQ,uBAAuB;IAG9D,YAAsB,YAAiC;QACrD,KAAK,CAAC,YAAY,CAAC,CAAC;QADA,iBAAY,GAAZ,YAAY,CAAqB;QAF9C,oBAAe,GAAG,OAAO,CAAC;KAIlC;IAES,cAAc,CACtB,WAAmB,EACnB,kBAA0B,EAC1B,aAAmC,EACnC,kBAAuC,EACvC,UAAkB;QAElB,MAAM,EAAE,oBAAoB,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,6BAA6B,CAAC,aAAa,CAAC,CAAC;QAEhH,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAClC,kBAAkB,EAClB,oBAAoB,EACpB,aAAa,CAAC,eAAe,EAC7B,aAAa,CAAC,QAAQ,EACtB,UAAU,CACX,CAAC;QACF,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAClC,WAAW,EACX,kBAAkB,EAClB,aAAa,CAAC,qBAAqB,EACnC,SAAS,EACT,gBAAgB,CACjB,CAAC;QAEF,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5E;IAEO,6BAA6B,CAAC,aAAmC;QACvE,MAAM,EAAE,QAAQ,EAAE,qBAAqB,EAAE,eAAe,EAAE,GAAG,aAAa,CAAC;;QAG3E,MAAM,oBAAoB,GAAG,QAAQ,GAAG,eAAe,CAAC;QACxD,MAAM,cAAc,GAAG,qBAAqB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QACxE,MAAM,cAAc,GAAG,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;QAGjE,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;QAGhG,MAAM,SAAS,GAAG,cAAc,GAAG,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE5G,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;KAC9D;IAEO,YAAY,CAClB,kBAAuC,EACvC,oBAA4B,EAC5B,eAAwD,EACxD,QAA0C,EAC1C,UAAkB;QAElB,MAAM,EAAE,QAAQ,EAAE,GAAG,kBAAkB,CAAC;QACxC,MAAM,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;QAClH,MAAM,EAAE,GAAG,eAAe,GAAG,CAAC,QAAQ,GAAG,eAAe,IAAI,mBAAmB,CAAC;QAEhF,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACpF,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,MAAM,GAAG,eAAe,CAAC,CAAC;QAEvE,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;KACnB;IAEO,YAAY,CAClB,WAAmB,EACnB,kBAA0B,EAC1B,qBAA6B,EAC7B,SAAiB,EACjB,gBAAwB;QAExB,MAAM,uBAAuB,GAAG,SAAS,CAAC;QAC1C,MAAM,MAAM,GAAG,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAE7D,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CACnB,yBAAyB;YACvB,qBAAqB,GAAG,MAAM;YAC9B,uBAAuB;YACvB,SAAS,GAAG,WAAW;YACvB,gBAAgB,GAAG,WAAW,CACjC,CAAC;QAEF,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC;QACtC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;KACnB;;;YA5FF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,wiBAA2C;aAC5C;;;YARQ,mBAAmB;;;MCSf,sBAAuB,SAAQ,uBAAuB;IAGjE,YAAsB,YAAiC;QACrD,KAAK,CAAC,YAAY,CAAC,CAAC;QADA,iBAAY,GAAZ,YAAY,CAAqB;QAF9C,oBAAe,GAAG,KAAK,CAAC;KAIhC;IAES,cAAc,CACtB,WAAmB,EACnB,kBAA0B,EAC1B,aAAmC,EACnC,kBAAuC,EACvC,UAAkB;QAElB,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,qBAAqB,EAAE,GAAG,aAAa,CAAC;QAC3E,MAAM,EAAE,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC,6BAA6B,CACzF,QAAQ,EACR,eAAe,CAChB,CAAC;QAEF,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAClC,WAAW,EACX,kBAAkB,EAClB,gBAAgB,EAChB,QAAQ,EACR,gBAAgB,EAChB,eAAe,CAChB,CAAC;QACF,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,UAAU,CAAC,CAAC;QAE5F,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5E;IAEO,6BAA6B,CACnC,QAA0C,EAC1C,eAAwD;;QAGxD,MAAM,gBAAgB,GAAG,QAAQ,GAAG,eAAe,CAAC;QACpD,MAAM,aAAa,GAAG,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAClE,MAAM,cAAc,GAAG,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;QAGhE,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;QAGhG,MAAM,QAAQ,GAAG,cAAc,GAAG,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE3G,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAC;KACzD;IAEO,YAAY,CAClB,WAAmB,EACnB,kBAA0B,EAC1B,gBAAwB,EACxB,QAAgB,EAChB,gBAAwB,EACxB,eAAwD;;QAGxD,MAAM,uBAAuB,GAAG,QAAQ,CAAC;QACzC,MAAM,MAAM,GAAG,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAE7D,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CACnB,eAAe;YACb,gBAAgB,GAAG,MAAM;YACzB,uBAAuB;YACvB,QAAQ,GAAG,WAAW;YACtB,gBAAgB,GAAG,WAAW,CACjC,CAAC;QAEF,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC;QAErC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;KACnB;IAEO,YAAY,CAAC,kBAAuC,EAAE,qBAA6B,EAAE,UAAkB;QAC7G,MAAM,EAAE,QAAQ,EAAE,GAAG,kBAAkB,CAAC;QACxC,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;QACjH,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CACnB,qBAAqB,GAAG,qBAAqB,GAAG,kBAAkB,GAAG,yBAAyB,CAC/F,CAAC;QAEF,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACpF,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,qBAAqB,GAAG,MAAM,GAAG,yBAAyB,CAAC,CAAC;QAE1G,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;KACnB;;;YA3FF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,wiBAA4C;aAC7C;;;YARQ,mBAAmB;;;ACL5B;AACO,MAAM,eAAe,GAAG;IAC7B,CAAC,SAAS,CAAC;IACX,CAAC,SAAS,EAAE,SAAS,CAAC;IACtB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACjC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5C,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACvD,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAClE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC7E,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACxF,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACnG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC9G;QACE,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;KACV;IACD;QACE,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;QACT,SAAS;KACV;CACF,CAAC;AAEF;AACO,MAAM,wBAAwB,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;;AC1C9D;;;;;;;AAOA,IAAY,kBAoCX;AApCD,WAAY,kBAAkB;;IAE5B,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;;IAGpB,0CAAoB,CAAA;AACtB,CAAC,EApCW,kBAAkB,KAAlB,kBAAkB;;ACF9B,MAAM,cAAc,GAAS,MAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;MASnD,cAAc;IAH3B;QAIE,kBAAa,GAAkB,EAAE,CAAC;KAwDnC;;;;;;IAjDC,SAAS,CAAwB,IAAc;QAC7C,IAAI,CAAC,wBAAwB,CAAI,IAAI,CAAC,CAAC;QAEvC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK;YAC9B,IAAI,QAAQ,CAAC,KAAK,EAAE;gBAClB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAE/D,OAAO,QAAQ,CAAC;aACjB;YAED,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACxC,uCAAY,QAAQ,KAAE,KAAK,IAAG;SAC/B,CAAC,CAAC;KACJ;IAEO,wBAAwB,CAAwB,IAAc;QACpE,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,cAAI,OAAA,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAA,MAAA,QAAQ,CAAC,KAAK,0CAAE,MAAM,IAAG,CAAC,CAAA,EAAA,CAAC,CAAC;QAChH,IAAI,CAAC,gBAAgB,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzD;KACF;IAEO,wBAAwB,CAAC,KAAa;QAC5C,IAAI,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAClC,OAAO,MAAM,KAAK,EAAE,CAAC;SACtB;QACD,OAAO,KAAK,CAAC;KACd;IAEO,gBAAgB,CAAC,MAAc;QACrC,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;SAC3B;QAED,MAAM,YAAY,GAAG,eAAe,CAAC,MAAM,CAAC;QAE5C,IAAI,MAAM,GAAG,YAAY,EAAE;YACzB,MAAM,kBAAkB,GAAG,MAAM,GAAG,YAAY,CAAC;YACjD,IAAI,MAAM,GAAG,eAAe,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;YAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,kBAAkB,EAAE,CAAC,EAAE,EAAE;gBAC5C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;aACvD;YAED,OAAO,MAAM,CAAC;SACf;QAED,OAAO,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACpC;;;;YA3DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;ACFD,MAAM,oBAAoB,GAAG,GAAG,CAAC;AACjC,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAE7B;;;;;;;;;;;;;;;;;;MAmBsB,oBAAoB;IAoLxC,YAAsB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;;;;;;;;;;;;QApKlD,gBAAW,GAAG,IAAI,YAAY,EAAoC,CAAC;;;;;;;;;;;;QAcnE,gBAAW,GAAG,IAAI,YAAY,EAAoC,CAAC;;QAGnE,gBAAW,GAA4C,EAAE,CAAC;KAmJJ;;;;;;;;;;;;IA5HtD,IAAuB,MAAM,CAAC,KAAa;QACzC,MAAM,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,MAAc,CAAC;QAEnB,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;YAC7B,MAAM,GAAG,QAAQ,IAAI,gBAAgB,GAAG,gBAAgB,GAAG,QAAQ,CAAC;SACrE;aAAM;YACL,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAClC;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAChD;;;;;;;;;;;;;;;;;;IAmBD,IAAqB,IAAI,CAAC,KAAkB;;QAE1C,IAAI,CAAC,KAAK,GAAS,MAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;QAEnF,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;IAOD,IAAuB,MAAM,CAAC,KAA8C;QAC1E,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QAE3B,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,MAA2B,CAAC,CAAC;YACpE,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;;;IAaD,IAA2B,UAAU,CAAC,KAAoB;QACxD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;;;;;;;;;;IAuBD,IAAwB,OAAO,CAAC,KAAqB;QACnD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,SAAS,EAAE;gBACvF,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;SACF;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAID,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC,KAAK,CAAC;KACvF;IAED,WAAW,CAAC,OAAsB;QAChC,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAE7E,IACE,CAAC,OAAO,CAAC,MAAM,IAAI,eAAe;aACjC,OAAO,CAAC,IAAI,IAAI,eAAe,CAAC;aAChC,OAAO,CAAC,UAAU,IAAI,eAAe,CAAC,EACvC;YACA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAA6B,CAAC,CAAC;SAClE;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,MAAM,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAC1F,IAAI,CAAC,gBAAgB,mCAChB,IAAI,CAAC,gBAAgB,KACxB,eAAe,EAAE,IAAI,CAAC,uBAAuB,EAAE,GAChD,CAAC;SACH;KACF;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,GAAG,gBAAgB,GAAG,oBAAoB,CAAC;KAClF;IAEO,4BAA4B,CAAC,KAAwB;QAC3D,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,mBAAM,KAAK,EAAG,GAAG,EAAE,CAAC;KACjG;IAEO,cAAc,CAAC,KAAmB;;QACxC,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,KAAK,CAAC;QACvC,MAAM,SAAS,GAAS,MAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC;QAElG,IAAI,CAAC,WAAW,GAAG,SAAS,GAAG,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC;KACvG;IAEO,uBAAuB,CAAC,MAA2B;QACzD,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IACxC,IAAI,CAAC,cAAc;cACf,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,QAAQ;cACjE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAC9B,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,CAAC;KACvE;IAEO,YAAY,CAAC,MAA2B;QAC9C,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAe,MAAM,CAAC,CAAC;KAC1D;IAEO,UAAU,CAAC,MAA2B;QAC5C,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK;YAC7B,IAAI,KAAK,KAAK,CAAC,EAAE;gBACf,IAAI,CAAC,SAAS,GAAS,MAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;sBACnE,KAAK,CAAC,IAAI;sBACV,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC;aACnC;YAED,uCAAY,KAAK,KAAE,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,IAAG;SACzD,CAAC,CAAC;KACJ;;;YA7PF,SAAS;;;YAvBD,cAAc;;;oBA0BpB,KAAK,SAAC,SAAS;0BAaf,MAAM,SAAC,gBAAgB;0BAcvB,MAAM,SAAC,gBAAgB;qBA2BvB,KAAK,SAAC,UAAU;mBAqChB,KAAK,SAAC,QAAQ;qBAgBd,KAAK,SAAC,UAAU;yBA0BhB,KAAK,SAAC,cAAc;sBA+BpB,KAAK,SAAC,WAAW;;;MC/LP,0BAA0B;IACrC,iBAAgB;;;;;;;;;IAUhB,iCAAiC,CAC/B,cAAsB,CAAC,EACvB,oBAA4B,CAAC,EAC7B,oBAA4B,CAAC,EAC7B,oBAA4B,CAAC;QAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAClD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;QACpF,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACvC,MAAM,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QAEpE,OAAO;YACL,QAAQ;YACR,SAAS;YACT,OAAO;YACP,OAAO;YACP,qBAAqB;SACtB,CAAC;KACH;;IAGO,QAAQ,CAAC,iBAAyB;QACxC,MAAM,YAAY,GAAG,iBAAiB,GAAG,cAAc,GAAG,CAAC,CAAC;QAE5D,OAAO,YAAY,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;KAC5C;;IAGO,MAAM,CAAC,SAAiB;QAC9B,OAAO,SAAS,GAAG,CAAC,CAAC;KACtB;;IAGO,SAAS,CAAC,WAAmB,EAAE,iBAAyB,EAAE,iBAAyB;QACzF,MAAM,iBAAiB,GAAG,WAAW,GAAG,iBAAiB,GAAG,iBAAiB,GAAG,cAAc,GAAG,CAAC,CAAC;QAEnG,OAAO,iBAAiB,IAAI,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAC;KACvD;;;;;IAMO,qBAAqB,CAAC,SAAiB;QAC7C,OAAO,SAAS,GAAG,cAAc,GAAG,CAAC,CAAC;KACvC;;;;YA5DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;ACPD,MAAM,4BAA4B,GAAG,IAAI,CAAC;AAEnC,MAAM,wBAAwB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,4BAA4B,GAAG,EAAE,CAAC,CAAC;AAC/F,MAAM,qBAAqB,GAAG,MAAM,CAAC;AACrC,MAAM,sBAAsB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACxC,MAAM,cAAc,GAAW,EAAE,CAAC;AAClC,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAE9C;AACO,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAE3C;AACO,MAAM,sBAAsB,GAAG,IAAI;;ACL1C,MAAM,OAAO,GAAW,EAAE,CAAC;AAE3B;MAEsB,2BAA2B;IADjD;QAeE,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAA+B,IAAI,OAAO,EAAE,CAAC;QACzD,iBAAY,GAA+B,IAAI,OAAO,EAAE,CAAC;;QAY/C,YAAO,GAA6B,EAAE,CAAC;KA+BlD;IA7BC,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC;KACxC;IAED,+BAA+B,CAAC,mBAA2B,EAAE,kBAA0B,EAAE,kBAA0B;QACjH,MAAM,sBAAsB,GAAG,IAAI,CAAC,MAAM,GAAG,kBAAkB,GAAG,kBAAkB,GAAG,OAAO,GAAG,CAAC,CAAC;QAEnG,IAAI,CAAC,SAAS,GAAG,sBAAsB,IAAI,CAAC,GAAG,CAAC,GAAG,sBAAsB,CAAC;QAC1E,IAAI,CAAC,OAAO,GAAG,mBAAmB,GAAG,CAAC,CAAC;KACxC;IAED,mBAAmB;QACjB,IAAI,CAAC,UAAU;YACb,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK;kBAC3B,GAAG;kBACH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,KAAK,KAAK,aAAa,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;KAChH;IAED,IAAI,MAAM,CAAC,KAAiB;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAC/C;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAES,kBAAkB,CAAC,KAAK;QAChC,OAAO,KAAK,CAAC;KACd;;;YA3DF,SAAS;;;wBAEP,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;2BAEvC,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACd7C;AAoBA,MAAM,iBAAiB,GAAG,SAAS,CAAC;AACpC,MAAM,iBAAiB,GAAG,SAAS,CAAC;MAGvB,eAAgB,SAAQ,2BAA2B;IAU9D,YAAsB,EAAc,EAAU,MAAc,EAAU,QAAmB;QACvF,KAAK,EAAE,CAAC;QADY,OAAE,GAAF,EAAE,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAW;QATzF,wBAAmB,GAAG,iBAAiB,CAAC;QACxC,wBAAmB,GAAiB,IAAI,OAAO,EAAE,CAAC;QAI1C,2BAAsB,GAAkB,EAAE,CAAC;QAC3C,wBAAmB,GAAkB,EAAE,CAAC;QACxC,wBAAmB,GAAkB,EAAE,CAAC;KAI/C;IAED,WAAW;QACT,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAC/B;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAED,aAAa;QACX,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;SAC7D;KACF;IAES,QAAQ,CAAC,IAAI,EAAE,mBAAmB,EAAE,iBAAiB;QAC7D,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAE/C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC5C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QACtD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAEnD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAE/D,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5D,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAE5D,MAAM,oBAAoB,GAAG;YAC3B,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;YACH,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,OAAO;YACZ,CAAC;YACD,KAAK;YACL,IAAI;YACJ,IAAI;YACJ,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,SAAS;YACT,SAAS;YACT,GAAG;YACH,IAAI,CAAC,WAAW;YAChB,IAAI,CAAC,WAAW;YAChB,CAAC;YACD,KAAK;YACL,WAAW;YACX,WAAW;YACX,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,MAAM;YACN,MAAM;YACN,GAAG;SACJ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEZ,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;KACrD;IAES,kBAAkB,CAAC,MAAgC;QAC3D,MAAM,SAAS,GAAG,EAAE,CAAC;QAErB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,KAAK;;YAC/B,MAAM,KAAK,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,KAAK,CAAC;YACxC,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,SAAS,CAAC,IAAI,iCAAM,KAAK,KAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAG,CAAC;aACzD;SACF,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;KAClB;IAEO,cAAc;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAEO,gCAAgC,CAAC,eAAoB;QAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACzE,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;KAC7D;IAEO,qBAAqB;QAC3B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;;YAC/B,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACpF,CAAC,CAAC;KACJ;IAEO,wBAAwB,CAAC,oBAA4B;QAC3D,MAAM,oBAAoB,GACxB,IAAI,CAAC,mBAAmB,GAAG,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAEtG,IAAI,oBAAoB,EAAE;YACxB,OAAO,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,GAAG,qBAAqB,CAAC;SAClF;aAAM;YACL,OAAO,IAAI,CAAC,mBAAmB,GAAG,oBAAoB,CAAC;SACxD;KACF;IAEO,iBAAiB,CAAC,KAAa,EAAE,UAAkB;QACzD,MAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,UAAU,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAEtD,OAAO,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC;KACxD;IAEO,sBAAsB;QAC5B,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAE5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD;IAEO,qBAAqB,CAAC,KAAiB;QAC7C,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;YACjF,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,GAAG,gBAAgB,CAAC,IAAI,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,GAAG,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;KACjF;IAEO,cAAc;QACpB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,2BAA2B;QACjC,MAAM,aAAa,GAAG,QAAQ,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;QAEzE,OAAO,aAAa,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;KACzD;IAEO,UAAU,CAAC,KAAwB,EAAE,eAAoB;QAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAE/D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAEzD,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE1C,eAAe,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAErC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAE5D,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxC;IAEO,WAAW;QACjB,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAEpE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gCAAgC,CAAC,eAAe,CAAC,CAAC;;YAEvD,IAAI,IAAI,CAAC,qBAAqB,EAAE,EAAE;gBAChC,OAAO;aACR;SACF;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;KACvE;IAEO,UAAU,CAAC,KAAwB;QACzC,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;QAEzB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAE/D,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEjD,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;QAExE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,EAAE,GAAG,CAAC,CAAC;QAEzD,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE1C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxC;IAEO,WAAW;QACjB,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SACtD;KACF;IAEO,iBAAiB;QACvB,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB;cACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,sBAAsB;cACpD,IAAI,CAAC,YAAY,CAAC;QACtB,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,GAAG,UAAU,GAAG,UAAU,CAAC;QAE5E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAEhE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,IAAI,CAAC,YAAY,IAAI,aAAa,EAAE,CAAC,CAAC;QACpG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,qBAAqB,EAAE,GAAG,mBAAmB,OAAO,CAAC,CAAC;QAClG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,sBAAsB,CAAC,CAAC;QAC7E,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAE3E,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7D,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,OAAO;SACR;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACxD;KACF;IAEO,UAAU,CAAC,oBAA4B,CAAC,EAAE,uBAA+B,CAAC;QAChF,MAAM,8BAA8B,GAAG,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACrF,MAAM,0BAA0B,GAAG,iBAAiB,KAAK,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;QAEzF,IAAI,0BAA0B,EAAE;YAC9B,OAAO;SACR;QAED,IAAI,8BAA8B,EAAE;YAClC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAC7E,iBAAiB,EAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,CAAC;YACxE,oBAAoB,GAAG,CAAC,CAAC;SAC1B;aAAM;YACL,oBAAoB,IAAI,wBAAwB,CAAC;YAEjD,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,EAC3C,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CACpD,CAAC;YAEF,IAAI,CAAC,iBAAiB,CACpB,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,EAC3C,IAAI,CAAC,mBAAmB,EACxB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CACpD,CAAC;SACH;QAED,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,EAAE,oBAAoB,CAAC,CAAC,CAAC;KACnG;IAEO,gBAAgB,CAAC,KAAwB;QAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;IAEO,WAAW;QACjB,MAAM,eAAe,GAAG,IAAI,CAAC;QAE7B,MAAM,QAAQ,GAAG,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;QAErD,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;KACnC;IAEO,eAAe,CAAC,KAAa,EAAE,UAAkB;QACvD,MAAM,YAAY,GAAG,CAAC,KAAK,GAAG,UAAU,IAAI,GAAG,CAAC;QAEhD,MAAM,iBAAiB,GAAG,sBAAsB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAElE,OAAO,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACpD;IAEO,YAAY,CAAC,KAAa;QAChC,IAAI,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,iBAAiB,CAAC;SAC1B;QAED,OAAO,iBAAiB,CAAC;KAC1B;IAEO,eAAe,CAAC,KAAa;QACnC,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,EAAE;YACjC,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;SACzB;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;KAC3D;IAEO,qBAAqB;QAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;KACzD;IAEO,YAAY;QAClB,IAAI,YAA+B,CAAC;QAEpC,MAAM,KAAsB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApC,EAAE,KAAK,OAA6B,EAAxB,KAAK,cAAjB,SAAmB,CAAiB,CAAC;QAC3C,YAAY,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACtC;IAEO,YAAY,CAAC,KAAK;QACxB,IAAI,YAA+B,CAAC;QAEpC,MAAM,KAAsB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAApC,EAAE,KAAK,OAA6B,EAAxB,KAAK,cAAjB,SAAmB,CAAiB,CAAC;QAE3C,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,uBAAuB,CAAC,CAAC;QAC1F,YAAY,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;KACrC;IAEO,cAAc;QACpB,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;KACjC;IAEO,0BAA0B;QAChC,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAEO,0BAA0B;QAChC,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAEO,iBAAiB;QACvB,IAAI,WAAW,GAAkB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QACzF,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,WAAW,CAAC,OAAO,CAAC,KAAK;YACvB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAExE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aAC1E;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAC9C,IAAI,CAAC,2BAA2B,EAAE,EAClC,QAAQ,EACR,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAC9B,CAAC;KACH;IAEO,cAAc,CAAC,IAAiB;QACtC,IAAI,UAAU,CAAC;QAEf,QAAQ,IAAI;YACV,KAAK,WAAW,CAAC,KAAK,EAAE;gBACtB,UAAU,GAAG,sBAAsB,CAAC;gBAEpC,MAAM;aACP;YACD,KAAK,WAAW,CAAC,KAAK,EAAE;gBACtB,UAAU,GAAG,sBAAsB,CAAC;gBACpC,MAAM;aACP;YACD,KAAK,WAAW,CAAC,GAAG,EAAE;gBACpB,OAAO,CAAC,CAAC;aACV;SACF;QAED,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;KACjD;IAEO,iBAAiB,CAAC,IAAI,EAAE,UAAkB,EAAE,QAAgB;;QAElE,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,MAAM,EAAE;;YAEnE,MAAM,WAAW,GAAG,CAAC,UAAU,GAAG,QAAQ,IAAI,CAAC,CAAC;YAChD,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAE/B,MAAM,aAAa,GAAG,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YACxC,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;YAG1C,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;YAExE,MAAM,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;YAClF,MAAM,WAAW,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc,GAAG,CAAC,CAAC;YACvF,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;SACxC;KACF;IAEO,mBAAmB,CAAC,KAAiB;QAC3C,MAAM,YAAY,GAAW,CAAC,CAAC;QAE/B,OAAO;YACL,IAAI,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,CAAC;YACzD,GAAG,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,YAAY;SACrE,CAAC;KACH;IAEO,oBAAoB,CAAC,UAAU,EAAE,KAAK;;QAC5C,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAC1B,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,KAAK,CAAC;QACvC,MAAM,KAAK,GAAG,MAAA,KAAK,CAAC,KAAK,oCAAK,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEnE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,oBAAoB,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;QAExE,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,0BAA0B,EAAE,KAAK,CAAC,CAAC;SAC3E;aAAM;YACL,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAEhD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,uBAAuB,EAAE,KAAK,CAAC,CAAC;YACvE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,mBAAmB,EAAE,OAAO,IAAI,GAAG,KAAK,KAAK,YAAY,EAAE,CAAC,CAAC;SACrG;KACF;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;KAChE;;;YA1cF,SAAS;;;YArBU,UAAU;YAAE,MAAM;YAAqB,SAAS;;;MCkBvD,gCAAgC;IAgC3C,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;KAAI;IAvB1D,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAAsB,KAAK,CAAC,KAAwB;QAClD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACzE,IAAI,CAAC,MAAM,qBAAQ,KAAK,CAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SACzB;KACF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAID,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;KAC7C;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;KAC5C;IAED,IAAI,mBAAmB;;QAErB,MAAM,eAAe,GAAG,IAAI,CAAC,UAAU,GAAG,sBAAsB,GAAG,CAAC,GAAG,CAAC,CAAC;QACzE,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;QAE3D,OAAO,EAAE,WAAW,EAAE,GAAG,gBAAgB,IAAI,EAAE,CAAC;KACjD;IAED,eAAe;QACb,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAEO,wBAAwB;QAC9B,IAAI,IAAI,CAAC,kBAAkB,EAAE;;YAE3B,UAAU,CAAC;gBACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACxC,CAAC,CAAC;YACH,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;SACtC;KACF;IAEO,2BAA2B,CAAC,KAAa;QAC/C,MAAM,YAAY,GAAG,MAAM,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAChF,OAAO,GAAG,YAAY,GAAG,CAAC;KAC3B;IAEO,gBAAgB;QACtB,MAAM,eAAe,GACnB,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,WAAW,CAAC;QAExG,OAAO,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC;KAC7D;;;YA/EF,SAAS,SAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,wXAA2D;gBAC3D,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAhBC,iBAAiB;;;iCAkBhB,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;yBAQ7C,KAAK,SAAC,eAAe;oBAUrB,KAAK,SAAC,SAAS;;;MClBL,qBAAsB,SAAQ,eAAe;;IAgBxD,YACU,eAAkC,EAClC,wBAAkD,EAC1D,EAAc,EACd,MAAc,EACd,QAAmB;QAEnB,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QANpB,oBAAe,GAAf,eAAe,CAAmB;QAClC,6BAAwB,GAAxB,wBAAwB,CAA0B;QAf5D,wBAAmB,GAAW,sBAAsB,CAAC;QAE3C,YAAO,GAA6B,EAAE,CAAC;KAmBhD;IAjBD,IAAI,MAAM,CAAC,MAAgC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KAC3C;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAaD,eAAe;QACb,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAEO,eAAe;QACrB,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,gCAAgC,CAAC,CAAC;QAExG,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACnE,MAAM,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;QAEvC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtD,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE/C,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;KAC3C;IAEO,qBAAqB,CAAC,KAAa;QACzC,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,OAAO,CAAC,CAAC;SACV;aAAM,IAAI,KAAK,IAAI,GAAG,EAAE;YACvB,OAAO,GAAG,CAAC;SACZ;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IAEO,YAAY;QAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAElF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;KACtD;IAEO,iBAAiB;QACvB,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAElF,IAAI,QAAQ,EAAE;YACZ,OAAO,QAAQ,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;SAC/C;KACF;IAEO,aAAa,CAAC,SAAmC,EAAE;QACzD,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QAEvB,IAAI,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YACtC,OAAO;gDAEA,KAAK,KACR,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EACrB,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,CAAC;aAEjD,CAAC;SACH;QAED,OAAO,EAAE,CAAC;KACX;IAEO,0BAA0B,CAAC,QAA0C;QAC3E,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;YACjC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC/C,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;SACtC,CAAC,CAAC;KACJ;;;YA5FF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,2XAAsD;aACvD;;;YAlBC,iBAAiB;YAEjB,wBAAwB;YACxB,UAAU;YACV,MAAM;YACN,SAAS;;;8BAeR,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,gBAAgB,EAAE;;;ACQrE;;;;;;;;;;;;;;;;;;;;MAwBa,gBAAiB,SAAQ,oBAAoB;IAoBxD,YACY,YAA4B,EAC9B,cAAiC,EACjC,gBAA4C,EAC5C,wBAAkD,EAClD,UAAsB,EACtB,YAAiC,EACjC,QAAmB;QAE3B,KAAK,CAAC,YAAY,CAAC,CAAC;QARV,iBAAY,GAAZ,YAAY,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAmB;QACjC,qBAAgB,GAAhB,gBAAgB,CAA4B;QAC5C,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAW;QAlBrB,kCAA6B,GAAY,KAAK,CAAC;QAC/C,kCAA6B,GAAY,KAAK,CAAC;QAE/C,gBAAW,GAAY,KAAK,CAAC;QAC7B,yBAAoB,GAAiB,IAAI,OAAO,EAAE,CAAC;QACnD,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,aAAQ,GAAG;YACjB,CAAC,WAAW,CAAC,KAAK,GAAG,qBAAqB;SAC3C,CAAC;QAmBF,aAAQ,GAAG;YACT,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;SAClC,CAAC;KAVD;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC;KACxC;IAQD,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,SAAS;QACP,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC;QACrE,MAAM,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;QAKxD,IAAI,gBAAgB,IAAI,IAAI,CAAC,WAAW,EAAE;YACxC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE;gBAC1D,IAAI,CAAC,mBAAmB,EAAE,CAAC;gBAC3B,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;aAC3C;iBAAM,IAAI,cAAc,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE;gBAChE,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,6BAA6B,GAAG,IAAI,CAAC;aAC3C;SACF;KACF;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,0BAA0B,EAAE,CAAC;KACnC;IAED,YAAY;QACV,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;QACjC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAE5B,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAChC;SACF;KACF;IAES,uBAAuB;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,KAAK,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAE5F,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;KACjH;IAES,mBAAmB;QAC3B,IAAI,eAAe,CAAC;QACpB,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEhG,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,eAAe,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAClD;QAED,IAAI,CAAC,gBAAgB,mCAChB,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,CACxD,IAAI,CAAC,MAAM,EACX,iBAAiB,EACjB,iBAAiB,EACjB,iBAAiB,CAClB,KACD,eAAe,GAChB,CAAC;KACH;IAEO,iBAAiB,CAAC,WAAuB;QAC/C,OAAO,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;KACjE;IAEO,eAAe;QACrB,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC,CAAC;QAErF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAEjE,MAAM,QAAQ,GAAgC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;QAEzE,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;QAEzC,OAAO,QAAQ,CAAC;KACjB;IAEO,uBAAuB;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAExC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;KAClC;IAEO,iBAAiB,CAAC,UAAe;QACvC,MAAM,mBAAmB,GAAG,cAAc,GAAG,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAExD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,EAAE,uBAAuB,CAAC,CAAC;QAC7D,WAAW,CAAC,SAAS,GAAG,UAAU,CAAC;QAEnC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACtE,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,mBAAmB,CAAC;QACjF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAEtE,OAAO,eAAe,GAAG,qBAAqB,GAAG,eAAe,GAAG,qBAAqB,CAAC;KAC1F;IAEO,gBAAgB,CAAC,QAAQ;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAChC;IAEO,oBAAoB;QAC1B,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC;QACtE,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC;QACtE,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEnE,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,CAAC;KACpE;IAEO,0BAA0B;QAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,SAAQ,CAAC;SAC1B;KACF;IAEO,yBAAyB,CAAC,QAAqC;QACrE,MAAM,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAEhG,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACzC,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC;QACzC,QAAQ,CAAC,YAAY,GAAG,iBAAiB,CAAC;QAC1C,QAAQ,CAAC,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACrC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;KAC1C;IAEO,iBAAiB,CAAC,QAAqC;QAC7D,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK;YACnC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B,CAAC,CACH,CAAC;KACH;IAEO,iBAAiB,CAAC,QAAqC;QAC7D,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK;YACnC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B,CAAC,CACH,CAAC;KACH;IAEO,0BAA0B,CAAC,QAAqC;QACtE,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;YAClC,MAAM,uBAAuB,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAE5D,QAAQ,CAAC,YAAY,GAAG,uBAAuB,CAAC,iBAAiB,CAAC;YAClE,QAAQ,CAAC,WAAW,GAAG,uBAAuB,CAAC,iBAAiB,CAAC;YACjE,QAAQ,CAAC,WAAW,GAAG,uBAAuB,CAAC,iBAAiB,CAAC;SAClE,CAAC,CACH,CAAC;KACH;;;YAvNF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,0iCAAwC;aACzC;;;YA1BQ,cAAc;YAzBrB,iBAAiB;YAoBV,0BAA0B;YAlBjC,wBAAwB;YAGxB,UAAU;YAqBH,mBAAmB;YAf1B,SAAS;;;6BA0CR,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,EAAE;0BAEpE,SAAS,SAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BAEzC,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;2BAE7C,SAAS,SAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;uBA6B1C,YAAY,SAAC,eAAe;;;MC5ElB,yBAAyB;IAmDpC,YAAoB,YAAiC;QAAjC,iBAAY,GAAZ,YAAY,CAAqB;QA5C5B,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAErC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAatD,YAAO,GAAwB,EAAE,CAAC;KA6Be;IA3BzD,IAAwB,OAAO,CAAC,KAAqB;QACnD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAuB,MAAM,CAAC,IAAyB;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAC3C;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC;KACzE;IAID,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,aAAa,EAAE;YACzC,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAED,wBAAwB,CAAC,KAAoB;QAC3C,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;KACpC;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;IAEO,QAAQ,CAAC,MAA2B,EAAE,UAA0B,EAAE;;QACxE,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QAClE,MAAM,QAAQ,GACZ,EAAC,MAAA,OAAO,CAAC,IAAI,0CAAE,QAAQ,CAAA,IAAI,MAAM,CAAC,QAAQ,GAAG,CAAC;cAC1C,CAAC;cACD,CAAA,MAAA,OAAO,CAAC,IAAI,0CAAE,QAAQ,IAAG,MAAM,CAAC,QAAQ;kBACxC,OAAO,CAAC,IAAI,CAAC,QAAQ;kBACrB,MAAM,CAAC,QAAQ,CAAC;QACtB,MAAM,QAAQ,GAAG,CAAA,MAAA,OAAO,CAAC,IAAI,0CAAE,QAAQ,IAAG,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QACpG,MAAM,mBAAmB,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QAEnD,uCAAY,MAAM,GAAK,mBAAmB,EAAG;KAC9C;IAEO,WAAW;;;QAEjB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;;;QAGhE,MAAM,YAAY,GAAG,MAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,YAAY,EAAE,0CAAE,OAAO,EAAE,CAAC;QAE7E,IAAI,CAAC,QAAQ,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;KAC5C;IAEO,oBAAoB,CAAC,MAA2B;QACtD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC;KACnH;IAEO,QAAQ,CAAC,MAA2B,EAAE,UAA0B,EAAE;QACxE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC7C;KACF;IAEO,eAAe,CAAC,MAA2B;QACjD,IAAI,CAAC,YAAY,GAAG;YAClB,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC;YAC3E,CAAC,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,MAAM,CAAC;YAC/E,CAAC,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,CAAC;YACzE,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC;YAC3E,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK,CAAC;YAC7E,CAAC,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC,GAAG,CAAC;SAC1E,CAAC;KACH;IAEO,UAAU;QAChB,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QACnD,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,GAAG,SAAS,GAAG,QAAQ,CAAC;;QAEhE,MAAM,QAAQ,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,GAAG,QAAQ,KAAK,QAAQ,IAAI,YAAY,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;KAC3F;IAEO,iBAAiB,CAAC,OAAuB;QAC/C,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YAC1D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACtD,IAAI,CAAC,WAAW,mCACX,IAAI,CAAC,WAAW,GAChB,OAAO,CAAC,IAAI,CAChB,CAAC;SACH;KACF;;;YA1IF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,2+FAAkD;aACnD;;;YAPQ,mBAAmB;;;yBASzB,KAAK,SAAC,cAAc;mBAEpB,KAAK,SAAC,QAAQ;4BAEd,KAAK,SAAC,kBAAkB;yBAExB,MAAM,SAAC,eAAe;yBAEtB,MAAM,SAAC,eAAe;yBAEtB,SAAS,SAAC,YAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;sBAaxC,KAAK,SAAC,WAAW;qBAYjB,KAAK,SAAC,UAAU;;;MCzCN,sBAAsB;IAKjC,IAAuB,MAAM,CAAC,KAAiB;QAC7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,0fAA+C;gBAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;mBAEE,KAAK,SAAC,QAAQ;qBAId,KAAK,SAAC,UAAU;;;MCLN,oBAAqB,SAAQ,wBAAwB;IAChE,YACY,YAAiC,EACjC,QAAmB,EACnB,UAAsB;QAEhC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;QAJhC,iBAAY,GAAZ,YAAY,CAAqB;QACjC,aAAQ,GAAR,QAAQ,CAAW;QACnB,eAAU,GAAV,UAAU,CAAY;KAGjC;IAED,OAAO,CAAC,UAAkB;QACxB,OAAO,IAAI,CAAC;KACb;IACD,OAAO,CAAC,UAAkB;QACxB,OAAO,IAAI,CAAC;KACb;IAED,iBAAiB,CAAC,YAAiB;QACjC,MAAM,EAAE,UAAU,KAAc,YAAY,EAArB,IAAI,UAAK,YAAY,EAAtC,cAAuB,CAAe,CAAC;QAE7C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B;;IAGO,eAAe,CAAC,SAAiB;QACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QAEzF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9E;;;YAjCF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,yoCAA4C;aAC7C;;;YALQ,mBAAmB;YAHI,SAAS;YAArB,UAAU;;;MCQjB,uBAAuB;IAWlC;QAJuB,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QAEnC,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;KAE1C;IAEhB,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAED,OAAO,CAAC,IAA2B;QACjC,MAAM,YAAY,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAErF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;IAED,YAAY,CAAC,IAA2B;QACtC,MAAM,YAAY,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAErF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;;;YA/BF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,obAAgD;aACjD;;;;oBAEE,KAAK,SAAC,SAAS;0BAEf,KAAK,SAAC,eAAe;8BAErB,KAAK,SAAC,oBAAoB;uBAE1B,MAAM,SAAC,aAAa;uBAEpB,MAAM,SAAC,aAAa;;;ACXvB,MAAM,0BAA0B,GAAG,CAAC,CAAC;MAMxB,oBAAoB;IAkC/B,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAjCf,aAAQ,GAAY,IAAI,CAAC;QAExB,cAAS,GAAY,KAAK,CAAC;KA+BT;IApBzD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,iBAAiB,CAAC,GAAG,KAAK,CAAC;KACnH;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAwB,OAAO,CAAC,KAAc;QAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;SAC7C;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAID,eAAe;QACb,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAEO,aAAa;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;KACzD;;IAGO,sBAAsB;QAC5B,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;KAC7C;;;YAvDF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,8dAA4C;aAC7C;;;YAXuB,iBAAiB;;;uBAatC,KAAK,SAAC,aAAa;wBAEnB,KAAK,SAAC,cAAc;0BAEpB,KAAK,SAAC,eAAe;wBAErB,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;oBAOvC,KAAK,SAAC,SAAS;sBAQf,KAAK,SAAC,WAAW;;AArBoB;IAAf,YAAY,EAAE;sDAA0B;AAExB;IAAf,YAAY,EAAE;uDAA4B;;ACNpE,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAC9B,MAAM,iBAAiB,GAAG,EAAE,CAAC;AAC7B,MAAM,uBAAuB,GAAG,GAAG,CAAC;MAMvB,2BAA2B;IA0CtC,YAAoB,QAAmB,EAAU,UAAsB;QAAnD,aAAQ,GAAR,QAAQ,CAAW;QAAU,eAAU,GAAV,UAAU,CAAY;QArChC,cAAS,GAAY,KAAK,CAAC;QAKzC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAErC,eAAU,GAAG,IAAI,YAAY,EAAO,CAAC;QAG9D,WAAM,GAAW,mBAAmB,CAAC;QAI7B,iBAAY,GAAoC,EAAE,CAAC;QAEnD,mBAAc,GAAY,IAAI,CAAC;KAqBoC;IAnB3E,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,iBAAiB,CAAC,GAAG,KAAK,CAAC;QACrG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAA4B,WAAW,CAAC,KAAsC;QAC5E,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpE;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAID,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAED,OAAO,CAAC,KAA+B;QACrC,MAAM,YAAY,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;QAExF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpC;IAED,YAAY,CAAC,KAAU,EAAE,KAA+B;QACtD,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAE3C,MAAM,YAAY,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;QACxF,IAAI,CAAC,UAAU,CAAC,IAAI,iBAAG,UAAU,EAAE,IAAI,CAAC,UAAU,IAAK,YAAY,EAAG,CAAC;KACxE;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;KAC7C;IAEO,sBAAsB,CAC5B,WAA4C;QAE5C,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,EAAE,EAAE;YAClC,MAAM,cAAc,GAAG,uBAAuB,GAAG,WAAW,CAAC,MAAM,CAAC;YAEpE,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAC3B,SAAS,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EACtG,IAAI,CAAC,CAAC,GAAG,EAAE,IAA8B,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EACnE,GAAG,CAAC,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CACzC,CAAC;SACH;aAAM;YACL,OAAO,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;SAC5B;KACF;IAEO,iBAAiB,CAAC,MAAkB,EAAE,OAAgB;QAC5D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,GAAG,iBAAiB,CAAC,QAAQ,EAAE,GAAG,mBAAmB,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjH,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACnC,IAAI,CAAC,QAAQ,CAAC,YAAY,CACxB,MAAM,EACN,OAAO,EACP,OAAO,GAAG,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,6CAA6C,IAAI,CAAC,WAAW,EAAE,CAChH,CAAC;SACH;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,UAAU,GAAG,aAAa,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;SACvG;KACF;;;YAhGF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,qrBAAoD;aACrD;;;YAhB4D,SAAS;YAAlD,UAAU;;;sBAkB3B,KAAK,SAAC,WAAW;uBAEjB,KAAK,SAAC,aAAa;wBAEnB,KAAK,SAAC,cAAc;yBAGpB,KAAK,SAAC,eAAe;yBAErB,MAAM,SAAC,eAAe;yBAEtB,MAAM,SAAC,eAAe;oBAWtB,KAAK,SAAC,SAAS;0BASf,KAAK,SAAC,eAAe;;AA7BgB;IAAf,YAAY,EAAE;6DAAmB;AAEjB;IAAf,YAAY,EAAE;8DAA4B;;MCI9C,wBAAwB;IA6C5C,YAAoB,MAAc,EAAU,cAAiC;QAAzD,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAmB;QA1CjD,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QAExC,kBAAa,GAAG,IAAI,YAAY,EAAO,CAAC;QAMpE,qBAAgB,GAAY,KAAK,CAAC;QAClC,iBAAY,GAAmC,EAAE,CAAC;QAElD,eAAU,GAAY,KAAK,CAAC;KA+BqD;IArBjF,IAAwB,OAAO,CAAC,KAAqB;QACnD,IAAI,CAAC,KAAK,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,CAAC,EAAE;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SAC1E;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAuB,MAAM,CAAC,KAA0B;QACtD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAID,YAAY,CAAC,YAAiB;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,YAAY,CAAC,YAAiB;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;IAES,cAAc,CAAC,IAAY,EAAE,UAAkB;QACvD,OAAO,CAAC,IAAI,GAAG,UAAU,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;KAC5C;IAES,UAAU,CAAC,SAA8B,EAAE,EAAE,MAAc;QACnE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAEpC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC3C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;aAC9D;SACF;KACF;IAEO,mBAAmB,CAAC,MAA2B;QACrD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,KAAU;YAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC;YAEnD,OAAO,aAAa,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;SAC9C,EAAE,CAAC,CAAC,CAAC;KACP;IAEO,yBAAyB,CAAC,MAAqC,EAAE,UAAkB,EAAE,MAAc;QACzG,IAAI,gBAAgB,CAAC;QACrB,IAAI,cAAc,GAAG,iBAAiB,CAAC;QAEvC,MAAM,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,KAAK;YAC/B,gBAAgB,GAAG,cAAc,CAAC;YAClC,cAAc,GAAG,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,qBAAqB,CAAC;YAExG,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YAExF,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACzC,CAAC,CAAC;KACJ;IAEO,iCAAiC,CACvC,MAAqC,EACrC,UAAkB,EAClB,MAAc,EACd,gBAAwB,EACxB,cAAsB,EACtB,qBAA6B,CAAC,EAC9B,cAAsB,CAAC;QAEvB,MAAM,oBAAoB,GAAG,kBAAkB,GAAG,cAAc,CAAC;QACjE,MAAM,iBAAiB,GAAG,WAAW,KAAK,MAAM,CAAC,MAAM,CAAC;QAExD,IAAI,iBAAiB,EAAE;YACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO;SACR;QAED,IAAI,oBAAoB,EAAE;YACxB,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;YAC3C,kBAAkB,GAAG,CAAC,CAAC;YACvB,WAAW,EAAE,CAAC;YACd,gBAAgB,GAAG,gBAAgB,GAAG,cAAc,CAAC;YACrD,cAAc;gBACZ,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,SAAS,CAAC;SACvG;aAAM;YACL,kBAAkB,IAAI,wBAAwB,CAAC;YAE/C,MAAM,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YAClH,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;YAE/F,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;SACpE;QAED,MAAM,CAAC,qBAAqB,CAC1B,IAAI,CAAC,iCAAiC,CAAC,IAAI,CACzC,IAAI,EACJ,MAAM,EACN,UAAU,EACV,MAAM,EACN,gBAAgB,EAChB,cAAc,EACd,kBAAkB,EAClB,WAAW,CACZ,CACF,CAAC;KACH;IAEO,wBAAwB,CAAC,kBAA0B,EAAE,gBAAwB,EAAE,cAAsB;QAC3G,MAAM,oBAAoB,GAAG,gBAAgB,GAAG,kBAAkB,GAAG,gBAAgB,GAAG,cAAc,CAAC;QAEvG,OAAO,oBAAoB;cACvB,gBAAgB,GAAG,cAAc,GAAG,qBAAqB;cACzD,gBAAgB,GAAG,kBAAkB,CAAC;KAC3C;IAEO,aAAa,CAAC,UAAyC,EAAE,UAAkB,EAAE,MAAc;QACjG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,yBAAyB,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;SAChE;aAAM;YACL,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;YAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;YAE3E,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAC5B,IAAI,CAAC,iCAAiC,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,gBAAgB,EAAE,cAAc,CAAC,CACzG,CAAC;SACH;KACF;IAEO,wBAAwB,CAAC,KAAa;QAC5C,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5E;KACF;IAEO,cAAc,CAAC,MAA2B;QAChD,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,KAAU;;YAC1C,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,KAAK,CAAC,KAAK,CAAC;YACvC,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;gBACpB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;gBAEhE,UAAU,GAAG,CAAC,GAAG,UAAU,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;aACpE;YAED,OAAO,UAAU,CAAC;SACnB,EAAE,EAAE,CAAC,CAAC;KACR;;;YAzLF,SAAS;;;YApBR,MAAM;YAJN,iBAAiB;;;4BA0BhB,KAAK,SAAC,kBAAkB;4BAExB,MAAM,SAAC,kBAAkB;4BAEzB,MAAM,SAAC,kBAAkB;uBAEzB,YAAY,SAAC,UAAU;wBAEvB,YAAY,SAAC,WAAW;sBAexB,KAAK,SAAC,WAAW;qBAWjB,KAAK,SAAC,UAAU;;;MCrDN,mBAAoB,SAAQ,wBAAwB;;IAE/D,YAAY,MAAc,EAAE,cAAiC;QAC3D,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;KAC/B;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SAC5D;KACF;IAES,oBAAoB,CAAC,MAAc,EAAE,gBAAwB,EAAE,cAAsB;QAC7F,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEzC,MAAM,MAAM,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAC1C,MAAM,MAAM,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAE1C,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QACvC,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QAEvC,MAAM,QAAQ,GAAG,cAAc,GAAG,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC;QAE7D,OAAO;YACL,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;YACH,MAAM;YACN,MAAM;YACN,CAAC;YACD,QAAQ,GAAG,KAAK,GAAG,KAAK;YACxB,IAAI;YACJ,IAAI;YACJ,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;SACJ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;IAES,eAAe,CAAC,IAAY,EAAE,KAAc,EAAE,YAAqB;QAC3E,MAAM,SAAS,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAElC,OAAO,YAAY,IAAI,GAAG,SAAS,GAAG,SAAS,EAAE,CAAC;KACnD;;;YAxDF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,4uBAAiD;aAClD;;;YAPsC,MAAM;YAApC,iBAAiB;;;MCYb,qBAAsB,SAAQ,wBAAwB;;IAKjE,YAAY,MAAc,EAAE,cAAiC;QAC3D,KAAK,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;QALf,sBAAiB,GAAG,SAAS,CAAC;QAC9B,sBAAiB,GAAG,SAAS,CAAC;KAK9C;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,OAAO,EAAE;YAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC3D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;SACvE;KACF;IAES,oBAAoB,CAAC,MAAc,EAAE,gBAAwB,EAAE,cAAsB;QAC7F,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;QAE1B,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEzC,MAAM,MAAM,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAC1C,MAAM,MAAM,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAE1C,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QACvC,MAAM,IAAI,GAAG,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;QAEvC,MAAM,WAAW,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,CAAC;QACpD,MAAM,WAAW,GAAG,MAAM,GAAG,QAAQ,GAAG,WAAW,CAAC;QAEpD,MAAM,SAAS,GAAG,MAAM,GAAG,OAAO,GAAG,WAAW,CAAC;QACjD,MAAM,SAAS,GAAG,MAAM,GAAG,OAAO,GAAG,WAAW,CAAC;QAEjD,MAAM,QAAQ,GAAG,cAAc,GAAG,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC;QAE7D,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAE9C,OAAO;YACL,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;YACH,MAAM;YACN,MAAM;YACN,CAAC;YACD,QAAQ,GAAG,KAAK,GAAG,KAAK;YACxB,IAAI;YACJ,IAAI;YACJ,GAAG;YACH,SAAS;YACT,SAAS;YACT,GAAG;YACH,WAAW;YACX,WAAW;YACX,CAAC;YACD,QAAQ,GAAG,KAAK,GAAG,KAAK;YACxB,WAAW;YACX,WAAW;YACX,GAAG;SACJ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;IAES,eAAe,CAAC,IAAY,EAAE,KAAc,EAAE,YAAqB;QAC3E,MAAM,SAAS,GAAG,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;QAEpE,OAAO,YAAY,IAAI,GAAG,SAAS,GAAG,SAAS,EAAE,CAAC;KACnD;IAEO,iBAAiB,CAAC,UAAsB,EAAE,MAAc;QAC9D,IAAI,gBAAgB,GAAG,iBAAiB,CAAC;QACzC,IAAI,cAAc,GAAG,iBAAiB,CAAC;QAEvC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK;YACtC,gBAAgB,GAAG,cAAc,CAAC;YAClC,cAAc,GAAG,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAErF,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;YACvE,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC7C,MAAM,WAAW,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YAE7F,uCAAY,WAAW,KAAE,KAAK,EAAE,KAAK,IAAG;SACzC,CAAC,CAAC;KACJ;IAEO,yBAAyB,CAAC,MAAc,EAAE,gBAAwB,EAAE,cAAsB;QAChG,MAAM,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAEhD,MAAM,gBAAgB,GAAG,CAAC,gBAAgB,GAAG,cAAc,IAAI,CAAC,CAAC;QACjE,MAAM,WAAW,GAAG,WAAW,GAAG,CAAC,MAAM,GAAG,WAAW,IAAI,CAAC,CAAC;QAE7D,MAAM,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC;QACtE,MAAM,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC;QAEtE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;KACrC;IAEO,cAAc,CAAC,MAAc;QACnC,MAAM,kBAAkB,GAAG,MAAM,GAAG,4BAA4B,CAAC;QAEjE,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,GAAG,IAAI,MAAM,GAAG,kBAAkB,CAAC;KACvF;IAEO,eAAe,CAAC,KAAa,EAAE,UAAkB;QACvD,MAAM,YAAY,GAAG,CAAC,KAAK,GAAG,UAAU,IAAI,GAAG,CAAC;QAChD,MAAM,iBAAiB,GAAG,sBAAsB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAElE,OAAO,MAAM,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACpD;IAEO,YAAY,CAAC,KAAa;QAChC,IAAI,wBAAwB,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC5C,OAAO,IAAI,CAAC,iBAAiB,CAAC;SAC/B;QAED,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAEO,mBAAmB,CAAC,MAAc,EAAE,WAAmB;QAC7D,IAAI,CAAC,gBAAgB,GAAG,MAAM,GAAG,WAAW,IAAI,MAAM,IAAI,MAAM,GAAG,4BAA4B,CAAC,CAAC;KAClG;;;YAnIF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,4uBAAiD;aAClD;;;YAXsC,MAAM;YAApC,iBAAiB;;;MCQb,6BAA6B;IAOxC,YAAoB,eAAkC,EAAU,QAAmB;QAA/D,oBAAe,GAAf,eAAe,CAAmB;QAAU,aAAQ,GAAR,QAAQ,CAAW;KAAI;IAEvF,gBAAgB,CAAC,WAAoC;QACnD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;KACtC;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,+RAAsD;aACvD;;;YAPQ,iBAAiB;YAAgC,SAAS;;;oBAShE,KAAK,SAAC,SAAS;wBAEf,KAAK,SAAC,cAAc;uBAEpB,SAAS,SAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;MCLhC,4BAA4B;IASvC,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QANjB,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;QAElC,YAAO,GAAG,IAAI,YAAY,EAAO,CAAC;KAIb;IAE3C,gBAAgB,CAAC,WAAmB;QAClC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;KAC1E;IAED,YAAY;QACV,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;KACpC;IAED,YAAY;QACV,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;KACpC;;;YA7BF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,iTAAqD;aACtD;;;YAP4D,SAAS;;;oBASnE,KAAK,SAAC,SAAS;sBAEf,MAAM,SAAC,YAAY;sBAEnB,MAAM,SAAC,YAAY;sBAEnB,SAAS,SAAC,SAAS,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;MCV/B,uBAAuB;IAQlC,YAAoB,UAAsB,EAAU,QAAmB;QAAnD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;KAAI;IAEnC,YAAY,CAAC,KAAiB;QACpE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAChE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;KACrC;IAE2B,YAAY;QACtC,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEsC,WAAW,CAAC,KAAiB;QAClE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;KAC7B;IAEO,wBAAwB,CAAC,KAAiB;QAChD,MAAM,YAAY,GAAW,EAAE,CAAC;QAEhC,OAAO;YACL,IAAI,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,CAAC;YACzD,GAAG,EAAE,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,YAAY;SACrE,CAAC;KACH;IAEO,aAAa;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAEhF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAChE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAE1D,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;QAEpD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,oBAAoB,CAAC,CAAC;QAE/D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAC9D;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;KAC7D;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAC/D,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACjC;IAEO,eAAe,CAAC,KAAiB;QACvC,MAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAE9D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,GAAG,gBAAgB,CAAC,IAAI,IAAI,CAAC,CAAC;QAClF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,GAAG,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC;KACjF;IAEO,wBAAwB;QAC9B,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,OAAO,EAAE;YACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACrE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACtE;KACF;;;YAjFF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;aAC9B;;;YAJmB,UAAU;YAAuB,SAAS;;;sBAM3D,KAAK,SAAC,iBAAiB;2BASvB,YAAY,SAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;2BAMrC,YAAY,SAAC,YAAY;0BAIzB,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;;ACzBvC;MASa,yBAAyB;IAOpC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QANb,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAEjD,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,sBAAiB,GAAG,IAAI,OAAO,EAAE,CAAC;KAEI;IAE9C,WAAW;QACT,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YACvD,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,MAAM,CAAC,cAAc,CAAC;gBACxC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAErD,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;aACpB,CAAC,CACH,CAAC;SACH;KACF;IAED,IAAY,yBAAyB;QACnC,OAAO,OAAO,MAAM,CAAC,cAAc,KAAK,UAAU,CAAC;KACpD;;;YArCF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;aAChC;;;YANmB,UAAU;;;qBAQ3B,MAAM,SAAC,mBAAmB;;;ACiB7B;;;;;MAgCa,aAAa;;;YA3BzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;gBACxC,YAAY,EAAE;oBACZ,oBAAoB;oBACpB,oBAAoB;oBACpB,wBAAwB;oBACxB,yBAAyB;oBACzB,gBAAgB;oBAChB,yBAAyB;oBACzB,qBAAqB;oBACrB,gCAAgC;oBAChC,sBAAsB;oBACtB,oBAAoB;oBACpB,oBAAoB;oBACpB,mBAAmB;oBACnB,qBAAqB;oBACrB,2BAA2B;oBAC3B,mBAAmB;oBACnB,sBAAsB;oBACtB,uBAAuB;oBACvB,4BAA4B;oBAC5B,6BAA6B;oBAC7B,uBAAuB;oBACvB,yBAAyB;iBAC1B;gBACD,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;ACtDD;;;;;;;;;MAUa,wBAAwB;IADrC;QAGU,cAAS,GAAa,KAAK,CAAC;QAC5B,eAAU,GAAa,KAAK,CAAC;QAC7B,cAAS,GAAa,KAAK,CAAC;KAqErC;;;;;;;;;;IA1DC,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAA0B,QAAQ,CAAC,KAAc;QAC/C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;IAWD,IAA0B,QAAQ,CAAC,KAAc;QAC/C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;YAzEF,SAAS;;;qBAgBP,KAAK,SAAC,UAAU;uBAiBhB,KAAK,SAAC,aAAa;wBAiBnB,KAAK,SAAC,cAAc;uBAiBpB,KAAK,SAAC,aAAa;;;AC5EtB;;;;;;;;;;;;;;;;;;;;;MAyBa,oBAAqB,SAAQ,wBAAwB;;;YAJjE,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,2SAA4C;aAC7C;;;ACvBD;;;;;MAUa,iBAAiB;;;YAL7B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,oBAAoB,CAAC;gBAC/B,YAAY,EAAE,CAAC,oBAAoB,CAAC;aACrC;;;ACVD,MAAM,mBAAmB,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAClD,MAAM,0BAA0B,GAAG,SAAS,CAAC;AAE7C;;;;;;;;;;MAWa,yBAAyB;IADtC;;;;;;;;;QAsB4B,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEnF,mBAAc,GAAG,IAAI,CAAC;QAEd,UAAK,GAAW,SAAS,CAAC;QAC1B,eAAU,GAAa,KAAK,CAAC;KA0CtC;;;;;;;;;IAhCC,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACtE;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;IAUD,IAAqB,IAAI,CAAC,IAAY;QACpC,IAAI,CAAC,KAAK,GAAG,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,0BAA0B,CAAC;KACrF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,KAAK;QACH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC1F;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;KAC7C;;;YApEF,SAAS;;;oBAMP,KAAK,SAAC,SAAS;oBAGf,KAAK,SAAC,SAAS;uBAGf,KAAK,SAAC,YAAY;0BAUlB,MAAM,SAAC,gBAAgB;wBAevB,KAAK,SAAC,cAAc;mBAgBpB,KAAK,SAAC,QAAQ;;;AChEjB;;;;;;;;;;;;MAgBa,qBAAsB,SAAQ,yBAAyB;IAClE,UAAU,CAAC,KAAU;QACnB,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;YACzB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;YATF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,4gBAA6C;aAC9C;;;AChBD;;;;MASa,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,qBAAqB,CAAC;gBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;aACjC;;;ACLM,MAAM,gCAAgC,GAAG;IAC9C,EAAE,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE;IAC/B,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE;IACnC,EAAE,EAAE,EAAE,SAAS,EAAE,eAAe,EAAE;IAClC,EAAE,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE;CACjC,CAAC;AAEF;;;;;;;;;;;;;MAca,8BAA8B;IA8FzC,YAAY,OAAwB,EAAE,eAAkC;;;;;;;;QAnFpD,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAWpD,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;;QAYhD,cAAS,GAAsB,IAAI,YAAY,EAAO,CAAC;QAIvE,iBAAY,GAAwB,EAAE,CAAC;QACvC,mBAAc,GAAY,KAAK,CAAC;QAGhC,wBAAmB,GAAwB,EAAE,CAAC;QAqDpD,MAAM,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAEpD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAE5C,IAAI,CAAC,QAAQ,mCACR,gCAAgC,CAAC,eAAe,CAAC,GACjD,gCAAgC,CAAC,QAAQ,CAAC,CAC9C,CAAC;KACH;;;;;;;;;;;;;;;;;;;;;IAtCD,IAA4B,WAAW,CAAC,KAA0B;QAChE,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;;;IAaD,IACI,aAAa,CAAC,KAAc;QAC9B,IAAI,CAAC,cAAc,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1E;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;IAaD,SAAS;QACP,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,aAAa,CAAC,UAAU;QACtB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAElC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,iBAAiB,oBAAO,UAAU,CAAE;YACpC,kBAAkB,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;SAC1C,CAAC,CAAC;KACJ;IAED,WAAW;QACT,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KACrF;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;YACzB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,cAAc;QACZ,MAAM,WAAW,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU;YACjC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;gBACzB,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9B;SACF,CAAC,CAAC;QAEH,WAAW,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;QAErE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC;KACvC;IAEO,gBAAgB,CAAC,UAAe;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;KACvC;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAEnD,IAAI,OAAO,IAAI,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC3D,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;SACF;KACF;IAEO,gBAAgB,CAAC,WAAgC;QACvD,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAElC,IAAI,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,KAAK,KAAK,EAAE;oBAC5E,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC;iBAC5B;qBAAM;oBACL,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACzB,CAAC,EAAE,CAAC;iBACL;aACF;YAED,OAAO,WAAW,CAAC;SACpB;QAED,OAAO,EAAE,CAAC;KACX;IAEO,qBAAqB,CAAC,WAAgC;QAC5D,MAAM,aAAa,GAAwB,WAAW,CAAC;QAEvD,IAAI,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE;YAC5D,OAAO,IAAI,CAAC;SACb;QAED,OAAO,aAAa,CAAC,IAAI,CACvB,CAAC,UAAU,EAAE,KAAK,KAChB,UAAU,CAAC,KAAK,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,KAAK;YAC1D,UAAU,CAAC,QAAQ,KAAK,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,QAAQ,CACnE,CAAC;KACH;IAEO,qBAAqB;QAC3B,UAAU,CAAC;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;KACnD;;;YAtMF,SAAS;;;YA5B6B,eAAe;YAG7C,iBAAiB;;;oBA4BvB,KAAK,SAAC,SAAS;qBASf,MAAM,SAAC,UAAU;qBAWjB,MAAM,SAAC,UAAU;wBAYjB,MAAM,SAAC,cAAc;0BA+BrB,KAAK,SAAC,eAAe;4BAoBrB,KAAK,SAAC,mBAAmB;;;AC5G5B;;;;;;;;;;;;;;;;;;;;;;MA0Ba,0BAA2B,SAAQ,8BAA8B;IAC5E,YAAY,OAAwB,EAAE,eAAkC;QACtE,KAAK,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;KACjC;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,gzBAAmD;aACpD;;;YA/BmB,eAAe;YAE1B,iBAAiB;;;ACD1B;;;;;;;;MAYa,2BAA2B;IAJxC;;QASiC,oBAAe,GAAG,IAAI,YAAY,EAAE,CAAC;KAMrE;;IAHC,YAAY;QACV,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;KAC7B;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,kNAAoD;aACrD;;;oBAGE,KAAK,SAAC,SAAS;8BAGf,MAAM,SAAC,qBAAqB;;;ACV/B;;;;;MAUa,uBAAuB;;;YALnC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,kBAAkB,CAAC;gBAC3C,YAAY,EAAE,CAAC,0BAA0B,EAAE,2BAA2B,CAAC;gBACvE,OAAO,EAAE,CAAC,0BAA0B,CAAC;aACtC;;;ACfD;;;;;;MAOa,sBAAsB;;;YADlC,SAAS;;;oBAGP,KAAK,SAAC,SAAS;;;ACPlB;;;;;;;;;;;;;;;;;;;;MAyBa,kBAAmB,SAAQ,sBAAsB;;;YAL7D,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,2HAA0C;gBAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;ACvBD;;;;;MAUa,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;ACPD,MAAM,sBAAsB,GAAG,aAAa,CAAC;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;MAyBa,oBAAoB;IADjC;QAEE,mBAAc,GAAW,WAAW,CAAC;QACrC,cAAS,GAAY,KAAK,CAAC;QASnB,eAAU,GAAY,KAAK,CAAC;QAC5B,mBAAc,GAAY,KAAK,CAAC;QAChC,cAAS,GAAY,sBAAsB,CAAC;KAuJrD;;IAnJC,IAAwB,OAAO,CAAC,KAA2B;QACzD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACnD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;IAGD,IAAgC,aAAa,CAAC,KAAc;QAC1D,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC/C;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BD,IAAyB,QAAQ,CAAC,KAAa;QAC7C,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,sBAAsB,CAAC;KACxF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BD,IAAiC,eAAe,CAAC,KAAoB;QACnE,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KAC3D;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCD,IAAuB,MAAM,CAAC,KAAU;QACtC,IAAI,CAAC,OAAO,GAAG,KAAK,YAAY,UAAU,GAAG,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;KAC1E;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;YApKF,SAAS;;;sBAkBP,KAAK,SAAC,WAAW;wBAiBjB,KAAK,SAAC,cAAc;4BASpB,KAAK,SAAC,mBAAmB;uBAoCzB,KAAK,SAAC,YAAY;8BAiClB,KAAK,SAAC,oBAAoB;qBA6C1B,KAAK,SAAC,UAAU;;;ACtLnB;;;;;;;;;;;;;;;;;;;;;;MA2Ba,gBAAiB,SAAQ,oBAAoB;IAGxD,YACE,gBAAkC,EAC1B,QAAmB,EACnB,MAAc,EACd,iBAA2C,EAC5C,cAAiC;QAExC,KAAK,EAAE,CAAC;QALA,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC5C,mBAAc,GAAd,cAAc,CAAmB;QAuGlC,aAAQ,GAAG,CAAC,EAAE,MAAM,EAAE;YAC5B,IAAI,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,KAAK,oBAAoB,EAAE;gBAC/D,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF,CAAC;KAxGD;;;;;;IAOD,KAAK;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAED,aAAa,CAAC,WAA0B;QACtC,MAAM,gBAAgB,GAAG,WAAW,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAE1F,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,gBAAgB,EAAE;YACzD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;SAC/C;QAED,IAAI,WAAW,IAAI,WAAW,CAAC,GAAG,IAAI,gBAAgB,EAAE;YACtD,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SACtC;KACF;;;;;;IAOD,IAAI,CAAC,KAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAED,kBAAkB,CAAC,WAAgB,EAAE,QAAgB;QACnD,OAAO,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,UAAU,CAAC;cAC9C,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC;cAChD,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC3B;;;;;;;;IASD,MAAM,CAAC,KAAM;QACX,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpF;IAEO,sBAAsB,CAAC,KAAK;QAClC,MAAM,oBAAoB,GACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,EAAE,wBAAwB,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC;QAE7E,OAAO,CAAC,oBAAoB,CAAC;KAC9B;IAEO,wBAAwB,CAAC,KAAK;QACpC,MAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QACpH,OAAO,EAAE,mBAAmB,IAAI,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;KAC7E;IAEO,gBAAgB,CAAC,KAAK;QAC5B,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC3D;IAEO,oBAAoB,CAAC,KAAiB;QAC5C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE;YAC9G,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAEO,eAAe,CAAC,OAAoB,EAAE,SAAiB;QAC7D,OAAO,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KACzD;IAEO,gBAAgB;QACtB,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;KACpF;IAEO,mBAAmB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,KAAK,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAClF,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAClC,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAQO,OAAO,CAAC,GAAW;QACzB,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,IAAI,GAAG,EAAE;YACP,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;KACF;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,WAAW;QACjB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAChC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAC3B,CAAC,EACD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,eAAe,EACpB,KAAK,EACL,IAAI,CAAC,aAAa,CACnB,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;KAClE;IAEO,sBAAsB;QAC5B,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;YAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;YApKF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,4hCAAwC;gBACxC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;YAnCwE,gBAAgB;YAAtC,SAAS;YACnD,MAAM;YAGN,wBAAwB;YAJxB,iBAAiB;;;uBAqCvB,SAAS,SAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;AC9B7C;;;;;MAYa,aAAa;;;YAPzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,gBAAgB,CAAC;gBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;gBAC3B,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;ACZD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCa,uBAAuB;IADpC;QAKE,SAAI,GAAW,oBAAoB,CAAC;QACpC,SAAI,GAAY,KAAK,CAAC;QAGd,cAAS,GAAY,KAAK,CAAC;KA2BpC;;IAxBC,IAAwB,OAAO,CAAC,KAA8B;QAC5D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACnD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;YAnCF,SAAS;;;oBAGP,KAAK,SAAC,SAAS;sBASf,KAAK,SAAC,WAAW;uBAiBjB,KAAK,SAAC,YAAY;;;AC7DrB;;;;;;;;;;;;;;;;;;;;;;MA0Ba,mBAAoB,SAAQ,uBAAuB;IAO9D,YAAoB,QAAmB;QACrC,KAAK,EAAE,CAAC;QADU,aAAQ,GAAR,QAAQ,CAAW;QAqC/B,aAAQ,GAAG,CAAC,EAAE,MAAM,EAAE;YAC5B,IAAI,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,SAAS,KAAK,oBAAoB,EAAE;gBAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;SACF,CAAC;KAvCD;IAED,SAAS,CAAC,KAAU;QAClB,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;YACzB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;KAC9F;IAEO,cAAc,CAAC,KAAiB;QACtC,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAClF;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,GAAG,oBAAoB,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAClF,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAClC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAQO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEO,oBAAoB,CAAC,KAAiB;QAC5C,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAErD,IAAI,CAAC,iBAAiB,EAAE;YACtB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;;;YA/EF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,2oBAA2C;aAC5C;;;YA/B+B,SAAS;;;0BAiCtC,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;uBAC3D,SAAS,SAAC,UAAU;;;AC5BvB;;;;MASa,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;gBACtC,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;aAC/B;;;ACZD;;;;;;;;MAaa,+BAA+B;IAL5C;;;;;QAU4B,iBAAY,GAAY,EAAE,CAAC;KACtD;;;YAXA,SAAS,SAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,iRAAyD;gBACzD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;2BAME,KAAK,SAAC,iBAAiB;;;ACpBnB,MAAM,wBAAwB,GAAG;IACtC,EAAE,EAAE;QACF,QAAQ,EAAE,YAAY;KACvB;IACD,EAAE,EAAE;QACF,QAAQ,EAAE,YAAY;KACvB;IACD,EAAE,EAAE;QACF,QAAQ,EAAE,YAAY;KACvB;IACD,EAAE,EAAE;QACF,QAAQ,EAAE,aAAa;KACxB;CACF;;ACPD;;;;;MAUa,yBAAyB;IAoBpC,YAAY,eAAkC;QAXtC,cAAS,GAAY,KAAK,CAAC;QAYjC,MAAM,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAEpD,IAAI,CAAC,QAAQ,qBACR,wBAAwB,CAAC,QAAQ,CAAC,CACtC,CAAC;KACH;;IAdD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;YAvBF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,sYAAkD;gBAClD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAZQ,iBAAiB;;;oBAevB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;uBAOd,KAAK,SAAC,YAAY;;;ACtBrB;;;;;MAUa,sBAAsB;;;YALlC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,+BAA+B,EAAE,yBAAyB,CAAC;gBACrE,YAAY,EAAE,CAAC,+BAA+B,EAAE,yBAAyB,CAAC;aAC3E;;;SCfe,cAAc,CAAC,QAAiB,EAAE,QAAiB,EAAE,KAA6C;IAChH,MAAM,KAAK,GACT,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK;SAClC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC;SACnD,OAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;SACpD,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC;IACxC,OAAO,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,CAAC;AACzC,CAAC;SAEe,cAAc,CAAC,SAAiB,EAAE,KAAsB;IACtE,MAAM,cAAc,GAAG,SAAS,IAAI,SAAS,KAAK,CAAC,CAAC;IACpD,MAAM,UAAU,GAAG,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC9D,OAAO,cAAc,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAC/E,CAAC;SAEe,cAAc,CAAC,SAAiB,EAAE,KAAsB;IACtE,MAAM,cAAc,GAAG,SAAS,IAAI,SAAS,KAAK,CAAC,CAAC;IACpD,MAAM,UAAU,GAAG,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC9D,OAAO,cAAc,IAAI,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAC/E,CAAC;SAEe,aAAa,CAAC,OAAe,EAAE,KAAa;IAC1D,IAAI,GAAG,CAAC;IACR,IAAI;QACF,GAAG,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;KAC3B;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IACD,OAAO,OAAO,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9C,CAAC;SAEe,SAAS,CAAC,GAAW,EAAE,KAAa;IAClD,MAAM,UAAU,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IAClC,OAAO,UAAU,IAAI,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC;AAC/C,CAAC;SAEe,SAAS,CAAC,GAAW,EAAE,KAAa;IAClD,MAAM,UAAU,GAAG,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;IACxC,MAAM,QAAQ,GAAG,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IAClC,OAAO,UAAU,IAAI,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC;AAC/C,CAAC;SAEe,UAAU,CAAC,KAAa;IACtC,OAAO,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C;;ACnCA,MAAM,mCAAmC,GAAW,CAAC,CAAC;AACtD,MAAM,iCAAiC,GAAW,EAAE,CAAC;AAErD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,4BAA4B;IADzC;;;;;;;;;;;;QAayC,cAAS,GAAY,KAAK,CAAC;;;;;;;;;;;;;;;;QAyCzC,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QAShE,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGxE,mBAAc,GAAQ,EAAE,CAAC;QACzB,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,cAAS,GAAW,mCAAmC,CAAC;QAIhD,aAAQ,GAAW,mCAAmC,CAAC;QACvD,cAAS,GAAa,KAAK,CAAC;QAC5B,mBAAc,GAAa,KAAK,CAAC;QAEjC,cAAS,GAAa,KAAK,CAAC;KAqOrC;;;;;;;;;;;;;;;;IApNC,IAAwB,OAAO,CAAC,KAAa;QAC3C,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,mCAAmC,CAAC,CAAC;QAEzE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACxD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;KAC/C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;;;IAeD,IAA8B,aAAa,CAAC,aAAsB;QAChE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;KACvD;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;IASD,IAAwB,OAAO,CAAC,KAAmC;QACjE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QAClD,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAChD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;KAC/C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,WAAW;QACT,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAExC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC;KAC3E;IAED,WAAW,CAAC,KAA4B;QACtC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACtC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,EAAO,KAAU;IAEnC,UAAU,CAAC,YAAiB;QAC1B,IAAI,YAAY,IAAI,IAAI,CAAC,cAAc,KAAK,YAAY,EAAE;YACxD,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC1B;KACF;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,eAAgC;QACvC,IACE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC;YAC3F,IAAI,CAAC,sBAAsB,EAAE,EAC7B;YACA,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAEO,iBAAiB,CAAC,OAAO,EAAE,UAAU;QAC3C,MAAM,UAAU,GAAG,CAAC,CAAC;QAErB,OAAO,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,CAAC;KACvD;IAEO,gBAAgB,CAAC,aAAoC;QAC3D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAErF,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAChF,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;SACzF;aAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACnD;KACF;IAEO,oBAAoB,CAAC,YAAiB;QAC5C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QAEzB,IAAI,YAAY,YAAY,KAAK,EAAE;YACjC,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;YAEvC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAA6B;gBACjD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACzE,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAA6B;gBACjD,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,SAAS,GAAG,KAAK,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC3G,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;aACpC,CAAC,CAAC;SACJ;KACF;IAEO,oBAAoB,CAAC,OAAe,EAAE,UAAkB;QAC9D,MAAM,iBAAiB,GAAG,iCAAiC,GAAG,OAAO,CAAC;QAEtE,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,iBAAiB,GAAG,mCAAmC,CAAC;KAC9G;IAEO,sBAAsB;QAC5B,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,EAAE;YAC9D,OAAa,MAAO,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC;SAClF;QACD,OAAO,KAAK,CAAC;KACd;IAEO,uBAAuB;QAC7B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK;YACjC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,UAAe,KAAK,UAAU,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;YACjH,IAAI,CAAC,eAAe,EAAE;gBACpB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;aACtD;SACF,CAAC,CAAC;KACJ;IAEO,2BAA2B,CAAC,WAAyC;QAC3E,IAAI,CAAC,wBAAwB,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,qCAAU,MAAM,KAAE,EAAE,EAAE,IAAI,EAAE,IAAG,CAAC,CAAC;KACxF;;;YAhTF,SAAS;;;wBAaP,KAAK,SAAC,cAAc;mBAGpB,KAAK,SAAC,MAAM;mBAGZ,KAAK,SAAC,QAAQ;oBAGd,KAAK,SAAC,SAAS;uBAef,KAAK,SAAC,YAAY;4BAiBlB,MAAM,SAAC,eAAe;qBAStB,MAAM,SAAC,UAAU;sBA8BjB,KAAK,SAAC,WAAW;uBAoBjB,KAAK,SAAC,YAAY;4BAuBlB,KAAK,SAAC,iBAAiB;sBAevB,KAAK,SAAC,WAAW;uBAmBjB,KAAK,SAAC,YAAY;;AA7JoB;IAAf,YAAY,EAAE;+DAA4B;;ACvCpE;;;;;;;;;;;;;;;;;;;;MAqCa,wBAAyB,SAAQ,4BAA4B;IAGxE,YAAoB,cAAiC;QACnD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAmB;KAEpD;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACzC,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;YAE5F,IAAI,aAAa,EAAE;gBACjB,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACrC;SACF;KACF;IAED,SAAS,CAAC,KAAoB,EAAE,MAA6B;QAC3D,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,IAAI,KAAK,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,EAAE;YAC1D,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAEzB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;IAED,SAAS,CAAC,KAAK;QACb,OAAO,KAAK,CAAC;KACd;;;YAzEF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,uiDAAiD;gBACjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,wBAAwB,CAAC;wBACvD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,wBAAwB,CAAC;wBACvD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YAhDC,iBAAiB;;;6BAkDhB,YAAY,SAAC,eAAe;;;AC9C/B;;;;;MAUa,qBAAqB;;;YALjC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,sBAAsB,CAAC;gBAC5D,OAAO,EAAE,CAAC,wBAAwB,CAAC;gBACnC,YAAY,EAAE,CAAC,wBAAwB,CAAC;aACzC;;;ACfD;;;;;;;;MASsB,oBAAoB;IAD1C;;QAM4B,iBAAY,GAAY,EAAE,CAAC;;;;;;;;;;;QAY3B,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;KAcpF;IAZC,KAAK;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC1C;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,aAAa,EAAE,CAAC;KACnD;;;YA3BF,SAAS;;;uBAGP,KAAK,SAAC,eAAe;2BAGrB,KAAK,SAAC,iBAAiB;0BAYvB,MAAM,SAAC,gBAAgB;;;ACxB1B;;;;;;;;;;;;MAgBa,gBAAiB,SAAQ,oBAAoB;IACxD,aAAa,CAAC,KAAc;QAC1B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YAChD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;SAC3C;KACF;IAED,aAAa;QACX,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YAChD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;SAC1C;KACF;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,qHAAwC;aACzC;;;ACdD;;;;;MAUa,aAAa;;;YALzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,gBAAgB,CAAC;gBAC3B,YAAY,EAAE,CAAC,gBAAgB,CAAC;aACjC;;;ACdD;;;;;MAKa,MAAM;IA8BjB,YAAY,IAAY,EAAE,WAAoB;QA7B9C,SAAI,GAAW,EAAE,CAAC;QAClB,gBAAW,GAAY,KAAK,CAAC;;QAE7B,oBAAe,GAAW,CAAC,CAAC;QAC5B,kBAAa,GAAW,CAAC,CAAC;QAE1B,YAAO,GAAW,EAAE,CAAC;QAwBnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;KAC5C;IA1BD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAGD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,eAAe,CAAC,KAAa;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAGD,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IACD,IAAI,eAAe,CAAC,KAAa;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAUD,KAAK,CAAC,MAAW;QACf,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;;YAElC,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,EAAE;gBAClD,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aAC7B;YAED,MAAM,CAAC,cAAc,EAAE,CAAC;YAExB,QAAQ,MAAM,CAAC,OAAO;gBACpB,KAAK,EAAE;oBACL,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE;wBAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBACD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;oBACpC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBAC/B,MAAM;gBAER,KAAK,EAAE;oBACL,IAAI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE;wBAClD,IAAI,CAAC,eAAe,EAAE,CAAC;qBACxB;oBACD,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;oBACpC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;oBAC/B,MAAM;gBAER,KAAK,EAAE;oBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;oBAC7C,IAAI,MAAM,CAAC,QAAQ,EAAE;wBACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBAC3B;yBAAM;wBACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC;wBAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBAC3B;oBACD,MAAM;gBAER,KAAK,EAAE;oBACL,IAAI,MAAM,CAAC,QAAQ,EAAE;wBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;wBAC1C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;wBACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBAC3B;yBAAM;wBACL,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;wBACzB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;wBACvB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;qBAC3B;oBACD,MAAM;aACT;SACF;KACF;IAED,sBAAsB,CAAC,MAAW;QAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;SAC3C;KACF;IAED,iBAAiB,CAAC,MAAW;QAC3B,IAAI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,EAAE;YAC7C,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3E;aAAM;YACL,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3E;KACF;IAED,OAAO,CAAC,MAAW;QACjB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,KAAK,GAAW,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YACxC,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,EAAE;gBACxB,OAAO;aACR;YAED,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;gBACtC,MAAM,CAAC,cAAc,EAAE,CAAC;aACzB;;;YAID,IACE,MAAM,CAAC,OAAO;iBACb,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,KAAK,EAAE,CAAC;iBACxC,MAAM,CAAC,OAAO,IAAI,EAAE,IAAI,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;gBAC9C,MAAM,CAAC,OAAO,KAAK,EAAE;gBACrB,MAAM,CAAC,OAAO,KAAK,CAAC,EACpB;gBACA,OAAO;aACR;;YAGD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;gBACnC,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;oBAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;iBAC3C;gBACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;gBAE/D,QAAQ,MAAM,CAAC,OAAO;oBACpB,KAAK,CAAC;wBACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBACzB,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE;4BAC5B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;4BACzB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;yBAC3B;wBACD,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,aAAa,EAAE;4BAC/C,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;4BACjC,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;gCAC9B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gCACnF,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gCACtC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;gCAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;gCAChC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;gCACjC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gCAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;6BAC7B;yBACF;6BAAM;4BACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;yBAC/C;wBACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM;oBAER,KAAK,EAAE;wBACL,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBACzB,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,aAAa,EAAE;4BAC/C,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;4BAC/B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;4BACnF,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;4BACtC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;4BAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;4BAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;yBAC7B;6BAAM;4BACL,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;yBAChD;wBACD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBAC1B,MAAM;oBAER;;wBAEE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBACzB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBAC5F,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;wBACtC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;wBAC5B,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAC/B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;wBAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;wBAC5B,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACF;SACF;KACF;IAED,mBAAmB,CAAC,KAAa,EAAE,MAAW,EAAE,WAAoB;QAClE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/E,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAE5B,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;KAC7B;;IAGD,KAAK,CAAC,MAAW;QACf,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;KACjD;IAED,IAAI,CAAC,MAAW;;QAEd,IAAI,IAAI,CAAC,IAAI,EAAE;;YAEb,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;YAChC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;SAC7B;KACF;IAED,eAAe,CAAC,eAAuB,EAAE,aAAqB;QAC5D,IAAI,eAAe,GAAG,aAAa,EAAE;;YAEnC,MAAM,YAAY,GAAG,eAAe,CAAC;YACrC,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;SACnC;KACF;;IAGD,cAAc,CAAC,MAAW;QACxB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC;KAC3C;;IAGD,YAAY,CAAC,MAAW;QACtB,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3E;;IAGD,cAAc,CAAC,MAAW,EAAE,KAAa;QACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC3B;IAED,WAAW,CAAC,MAAW;QACrB,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC;QACpD,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;QAChD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC3B;;;IAID,iBAAiB,CAAC,KAAa;;QAE7B,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,OAAO,EAAE,CAAC;SACX;QACD,IAAI,cAAc,CAAC;QACnB,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;;;QAIxB,MAAM,QAAQ,GAAe,EAAE,CAAC;QAChC,IAAI,SAAS,GAAG,CAAC,CAAC;;QAGlB,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE;YACtC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvB,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;SAC/C;QACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;QAGvB,QAAQ,CAAC,OAAO,EAAE,CAAC;;QAGnB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,OAAO,CAAC,IAAI,CAAC,cAAc,EAAE;;;YAG3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;;YAG3B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACxB,MAAM;aACP;;YAGD,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9D,SAAS,EAAE,CAAC;SACb;QAED,OAAO,cAAc,CAAC;KACvB;;IAGD,WAAW,CAAC,KAAa,EAAE,IAAY;;QAErC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;;QAG/B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,GAAG,CAAC,CAAC;;QAGtD,IAAI,SAAS,GAAW,CAAC,CAAC;;QAG1B,IAAI,cAAc,GAAW,EAAE,CAAC;;QAGhC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;;QAG1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;;YAI3B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,MAAM;aACP;;YAGD,OAAO,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;gBACvE,cAAc,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;gBACnC,SAAS,EAAE,CAAC;aACb;;YAGD,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE;gBACnD,cAAc,IAAI,SAAS,CAAC;gBAC5B,SAAS,EAAE,CAAC;aACb;iBAAM;;gBAEL,MAAM;aACP;SACF;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;YACnC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;SAChE;QACD,OAAO,cAAc,CAAC;KACvB;;IAED,eAAe,CAAC,MAAW,EAAE,QAAgB;QAC3C,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,EAAE;YAC/F,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACxC;KACF;;IAGD,cAAc,CAAC,MAAW,EAAE,QAAgB;QAC1C,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE;YAC3F,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;SACvC;KACF;;IAGD,qBAAqB,CAAC,IAAY;QAChC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,IAAI,CAAC,EAAE;YACb,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aAClC;YACD,CAAC,EAAE,CAAC;SACL;QACD,OAAO,IAAI,CAAC;KACb;;IAGD,qBAAqB,CAAC,GAAQ;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;KAC3D;;IAGD,sBAAsB;QACpB,OAAO,iBAAiB,CAAC;KAC1B;;IAGD,aAAa;QACX,OAAO,cAAc,CAAC;KACvB;;IAGD,UAAU,CAAC,OAAY;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KACrC;;;IAID,cAAc,CAAC,OAAe;QAC5B,QACE,CAAC,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,EAAE;aAC9B,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,EAAE,CAAC;aAC/B,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,GAAG,CAAC;YACjC,OAAO,KAAK,CAAC;YACb,OAAO,KAAK,CAAC;YACb,OAAO,KAAK,EAAE,EACd;KACH;;IAGD,cAAc,CAAC,GAAQ,EAAE,OAAY;QACnC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;KACvD;;IAGD,SAAS,CAAC,GAAQ,EAAE,KAAU;QAC5B,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxB;;;IAID,qBAAqB,CAAC,KAAa;QACjC,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,EAAE,CAAC,CAAC;KACzD;;IAGD,iBAAiB,CAAC,IAAY;QAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC5B;;IAGD,WAAW,CAAC,IAAY;QACtB,IAAI,KAAK,GAAG,GAAG,CAAC;QAChB,QAAQ,IAAI;YACV,KAAK,GAAG;gBACN,KAAK,GAAG,KAAK,CAAC;gBACd,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,OAAO,CAAC;gBAChB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,IAAI,CAAC;gBACb,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,UAAU,CAAC;gBACnB,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,GAAG,aAAa,CAAC;gBACtB,MAAM;SACT;QACD,OAAO,KAAK,CAAC;KACd;IAED,gBAAgB,CAAC,IAAY;QAC3B,IAAI,IAAI,EAAE;YACR,IAAI,OAAO,CAAC;YACZ,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBACtC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBACvC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;gBAC9C,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACzC;iBAAM;gBACL,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAClC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACpC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACrC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBACpC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;gBACxC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aACzC;YACD,OAAO,OAAO,CAAC;SAChB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;;;ACrgBH;;;;;;;;;IASY;AAAZ,WAAY,qBAAqB;;IAE/B,wCAAe,CAAA;;IAGf,8CAAqB,CAAA;AACvB,CAAC,EANW,qBAAqB,KAArB,qBAAqB;;ACajC,MAAM,yBAAyB,GAAW,YAAY,CAAC;AAEvD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2CsB,yBAAyB;IAyQ7C,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;;;;;;;;;;;;QA7Pf,cAAS,GAAY,KAAK,CAAC;;;;;;QAyBxC,iBAAY,GAAY,EAAE,CAAC;;;;;;;;QASnC,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QASlD,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEhE,eAAU,GAAG,IAAI,CAAC;QAClB,SAAI,GAAW,iBAAiB,CAAC;QACjC,kBAAa,GAAY,KAAK,CAAC;QAE/B,kBAAa,GAAQ,IAAI,CAAC;QAE1B,mBAAc,GAAQ,IAAI,CAAC;QAE7B,YAAO,GAAY,yBAAyB,CAAC;QAI7C,oBAAe,GAAa,KAAK,CAAC;QAClC,iBAAY,GAAY,EAAE,CAAC;;;QAuCnC,aAAQ,GAAa,KAAK,CAAC;;;QAS3B,aAAQ,GAAa,KAAK,CAAC;;;QAO3B,aAAQ,GAAa,KAAK,CAAC;;;QAS3B,UAAK,GAAa,KAAK,CAAC;QAoItB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;KAC9D;;;;;;;;;;IAvLD,IAAgC,cAAc,CAAC,KAAc;QAC3D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;IASD,IAA4B,WAAW,CAAC,WAAmB;QACzD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,WAAW,GAAG,EAAE,CAAC;KACxE;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAKD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpE;IAKD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KACrE;IAKD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpE;IAKD,IAAsB,QAAQ,CAAC,KAAa;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5D;;;;;;;;IASD,IAAyB,OAAO,CAAC,KAAoB;QACnD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpE;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASD,IAAyB,OAAO,CAAC,KAAoB;QACnD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3E,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACpE;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;IAgBD,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,KAAK,EAAE;YACT,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAC5B,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;gBACjE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC7B,OAAO;aACR;SACF;QACD,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;KACjC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAA2B,SAAS,CAAC,KAA4B;QAC/D,IAAI,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,qBAAqB,CAAC,QAAQ,CAAC;SAC/D;KACF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAaD,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,IAAI,CAAC,GAAG,KAAK,GAAG,eAAe,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;SACnC;KACF;IACD,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC;KAC3C;IAMD,IAAI,IAAI,CAAC,KAAU;QACjB,IAAI,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;KACxF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,QAAQ;;QAEN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;KACjC;;IAGD,iBAAiB,CAAC,UAAkB;QAClC,MAAM,GAAG,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACvG,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC7G,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAExG,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QAExC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAE9B,OAAO,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;KACzG;;IAGD,YAAY,CAAC,KAAW;QACtB,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QAEhC,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAE/E,OAAO,aAAa,CAAC;KACtB;;IAGD,YAAY,CAAC,IAAU;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;YAC9B,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACnE;aAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACpD;aAAM;YACL,IAAI,KAAK,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;SACjF;KACF;;IAGD,YAAY,CAAC,KAAU,EAAE,QAAiB,IAAI;QAC5C,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,KAAK,IAAI,CAAC,aAAa,EAAE;YACtD,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aAAM,IAAI,KAAK,EAAE;YAChB,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;SACnD;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;;IAID,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;;;IAID,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,CAAkB;;QAEzB,IAAI,CAAC,YAAY;YACf,IAAI,CAAC,YAAY,KAAK,eAAe,IAAI,IAAI,CAAC,YAAY,KAAK,sBAAsB,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEjH,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,eAAe,CAAC;YAEzD,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;YACzD,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,sBAAsB,CAAC;YAEhE,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;;IAGS,SAAS;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAErC,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC/B;;;YAlZF,SAAS;;;YA/CD,iBAAiB;;;wBA4DvB,KAAK,SAAC,cAAc;mBAGpB,KAAK,SAAC,MAAM;uBAeZ,KAAK,SAAC,YAAY;2BAOlB,KAAK,SAAC,iBAAiB;qBASvB,MAAM,SAAC,QAAQ;uBASf,MAAM,SAAC,UAAU;6BA6BjB,KAAK,SAAC,mBAAmB;0BAezB,KAAK,SAAC,eAAe;0BAWrB,KAAK,SAAC,YAAY;0BASlB,KAAK,SAAC,YAAY;0BAOlB,KAAK,SAAC,YAAY;uBASlB,KAAK,SAAC,SAAS;sBAWf,KAAK,SAAC,YAAY;sBA0BlB,KAAK,SAAC,YAAY;qBAiClB,KAAK,SAAC,UAAU;wBA2BhB,KAAK,SAAC,cAAc;qBAsBpB,KAAK,SAAC,UAAU;;AAlPsB;IAAf,YAAY,EAAE;4DAA4B;;AC1DpE,MAAMC,yBAAuB,GAAG,CAAC,CAAC;AAClC,MAAMC,2BAAyB,GAAG,aAAa,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;;;MA6Ca,qBAAsB,SAAQ,yBAAyB;IAsClE,YACU,eAAyC,EACjD,eAAkC,EAC1B,QAAmB,EAC3B,EAAc;QAEd,KAAK,CAAC,eAAe,CAAC,CAAC;QALf,oBAAe,GAAf,eAAe,CAA0B;QAEzC,aAAQ,GAAR,QAAQ,CAAW;QA3B7B,YAAO,GAAY,KAAK,CAAC;QAMR,cAAS,GAAG,IAAI,MAAM,CACrC,kCAAkC,GAAG,oBAAoB,GAAG,2BAA2B,CACxF,CAAC;QACe,aAAQ,GAAG,IAAI,MAAM,CACpC,kCAAkC;YAChC,oBAAoB;YACpB,0BAA0B;YAC1B,kEAAkE;YAClE,gDAAgD;YAChD,kBAAkB,CACrB,CAAC;QAySM,aAAQ,GAAG;YACjB,IAAI,CAAC,eAAe,CAAC,cAAc,CAACA,2BAAyB,CAAC,CAAC;SAChE,CAAC;QA5RA,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;IAZD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC;KAC3C;IAaD,OAAO,CAAC,MAAW;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;QAE3B,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,EAAE,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC5E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aACtE;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9B;SACF;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;SACvB;KACF;IAGD,SAAS,CAAC,MAAY;QACpB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAC9B;IAED,eAAe;QACb,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,YAAY;QACV,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC5C,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;QAED,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;IAGD,kBAAkB,CAAC,KAAU;QAC3B,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC9C,OAAO;SACR;QAED,IACE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9F,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACzD,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,EACnC;YACA,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,eAAe;QACb,QACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YACtD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE,EACvC;KACH;IAED,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACpF;IAED,KAAK;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,WAAW,CAAC,MAAW;;QACrB,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;QACxB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;QAC9C,MAAM,OAAO,GAAG,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;QAChE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;YAC7B,IAAI,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,IAAI,EAAE,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;aACrB;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC9B;SACF;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;YACvB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;YAGrB,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;SAC1C;aAAM;;YAEL,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC5B;KACF;IAED,YAAY,CAAC,KAAW;QACtB,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QAEhC,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtF,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAE/E,OAAO,aAAa,CAAC;KACtB;IAED,YAAY,CAAC,KAAW;QACtB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC7D;KACF;;IAGD,UAAU,CAAC,KAAU;QACnB,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACzB,IAAI,KAAK,YAAY,IAAI,EAAE;gBACzB,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACpC,IAAI,CAAC,IAAI;oBACP,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBACzG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC7D;iBAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE;gBACvE,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE;oBAClC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;iBACrC;gBAED,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;oBAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;iBACrD;gBAED,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;gBACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;gBACtD,MAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBAEjD,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;gBAE5C,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;gBAElC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;aAChE;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;gBACtC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;aACvB;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvD;IAED,cAAc,CAAC,KAAa;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;IAED,kBAAkB,CAAC,KAAK;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;IAED,eAAe,CAAC,OAAY;QAC1B,OAAO,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;KACrE;;IAGD,YAAY;QACV,OAAO,QAAQ,EAAE,CAAC;KACnB;IAEO,aAAa;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;KAC1C;IAEO,oBAAoB;QAC1B,MAAM,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAExD,IAAI,kBAAkB,KAAK,IAAI,CAAC,iBAAiB,EAAE;YACjD,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC;YAE5C,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACxC,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAEO,eAAe,CAAC,OAAY;QAClC,MAAM,YAAY,GAAG,eAAe,CAAC;QAErC,QACE,CAAC,OAAO,IAAI,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC;aAC7C,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAC3E;KACH;IAEO,mBAAmB;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAC/E,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAClE,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAMO,eAAe;QACrB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,2BAA2B,CAAC,KAAK;QACvC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;KACvD;IAEO,mBAAmB;QACzB,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,YAAY,CAAC,aAAa,EAC/BD,yBAAuB,EACvB,IAAI,CAAC,OAAO,EACZ,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,CAAC,EACxD,KAAK,EACL,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAACC,2BAAyB,CAAC,CAAC;KAChE;;;YA1XF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,+vDAA6C;gBAC7C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;wBACpD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;wBACpD,KAAK,EAAE,IAAI;qBACZ;oBACD,wBAAwB;iBACzB;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YArDQ,wBAAwB;YAIxB,iBAAiB;YAVxB,SAAS;YALT,UAAU;;;uBAkET,SAAS,SAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;2BACtC,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;6BAC5D,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;sBAC9D,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;oBAGnD,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;sBAsCd,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;wBAqBhC,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;;AChIrC;;;;;MAUa,kBAAkB;;;YAL9B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,sBAAsB,EAAE,aAAa,EAAE,gBAAgB,CAAC;gBAC7F,OAAO,EAAE,CAAC,qBAAqB,CAAC;gBAChC,YAAY,EAAE,CAAC,qBAAqB,CAAC;aACtC;;;ACnBM,MAAM,eAAe,GAAG;IAC7B,EAAE,EAAE;QACF,KAAK,EAAE,OAAO;KACf;IACD,EAAE,EAAE;QACF,KAAK,EAAE,QAAQ;KAChB;IACD,EAAE,EAAE;QACF,KAAK,EAAE,QAAQ;KAChB;IACD,EAAE,EAAE;QACF,KAAK,EAAE,QAAQ;KAChB;CACF;;ACLD;;;;;;;;;;;;;;;;MAiBa,oBAAoB;IA+E/B,YAAY,iBAAoC;;QA7DhD,aAAQ,GAAG,IAAI,CAAC;;QAGT,cAAS,GAAG,IAAI,YAAY,EAAW,CAAC;QAEvC,eAAU,GAAa,KAAK,CAAC;QAC7B,UAAK,GAAY,IAAI,CAAC;;;;;;QA+B9B,aAAQ,GAAa,KAAK,CAAC;QAyBzB,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;QAErD,IAAI,CAAC,QAAQ,qBACR,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAClC,CAAC;KACH;;;;;;;;;;;;;;;;IA5CD,IAAqB,IAAI,CAAC,KAAa;QACrC,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KACvD;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAQD,IAA0B,WAAW,CAAC,KAAuB;QAC3D,IAAI,CAAC,QAAQ,GAAG,KAAK,KAAK,EAAE,GAAG,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChE;;;;;;;;;;;;IAaD,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;IAWD,KAAK,CAAC,OAAO,GAAG,KAAK;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9B;KACF;;IAGD,IAAI;QACF,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvB;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG;gBACnB,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;gBAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;aAC3B,CAAC;SACH;QAED,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE;YACjC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;SACnD;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;SACnD;KACF;;;YArHF,SAAS;;;YAnBD,iBAAiB;;;oBAsBvB,KAAK,SAAC,SAAS;4BAOf,KAAK,SAAC,kBAAkB;8BAGxB,KAAK,SAAC,oBAAoB;mBA6B1B,KAAK,SAAC,QAAQ;0BAed,KAAK,SAAC,aAAa;wBAenB,KAAK,SAAC,cAAc;;;AC9FvB;;;;;;;;;;;;;;;;MAoBa,sBAAsB;IAJnC;;;;;;;;;;;;QAgB6B,kBAAa,GAAa,KAAK,CAAC;KAC5D;;;YAjBA,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,+IAA+C;aAChD;;;4BAaE,KAAK,SAAC,kBAAkB;;;MC7Bd,sBAAsB;IAHnC;QAIE,kBAAa,GAAkB,EAAE,CAAC;KACnC;;;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;ACKD;;;;;;;;;;;;;;;;;;;;MAyBa,gBAAiB,SAAQ,oBAAoB;IAUxD,YAAoB,sBAA8C,EAAE,iBAAoC;QACtG,KAAK,CAAC,iBAAiB,CAAC,CAAC;QADP,2BAAsB,GAAtB,sBAAsB,CAAwB;QAJ1D,sBAAiB,GAAG,oDAAoD,CAAC;QACzE,OAAE,GAAW,IAAI,EAAE,CAAC;KAK3B;IAED,KAAK,CAAC,OAAO,GAAG,KAAK;QACnB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QAEhD,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAErB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5B;KACF;IAED,qBAAqB,CAAC,KAAK;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,0BAA0B;QACxB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC;KACzD;IAED,4BAA4B;QAC1B,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC;KACjH;IAED,UAAU,CAAC,KAAK;QACd,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAC5E,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,IAAI;QACF,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC5C,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEO,WAAW;QACjB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAExD,UAAU,CAAC;YACT,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aAC9D;SACF,CAAC,CAAC;KACJ;IAEO,SAAS;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,KAAU;YAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YAErD,IACE,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;gBACpC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,EAC3G;gBACA,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC3B;SACF,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;aAAM;YACL,MAAM,iBAAiB,GACrB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;YACjH,iBAAiB,CAAC,KAAK,EAAE,CAAC;SAC3B;KACF;IAEO,oBAAoB;QAC1B,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KACjE;IAEO,eAAe;QACrB,IAAI,CAAC,YAAY;YACf,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC;KAC5G;;;YApGF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,4lEAAwC;aACzC;;;YA3BQ,sBAAsB;YACtB,iBAAiB;;;2BA4BvB,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;0BAC9C,YAAY,SAAC,sBAAsB;;;AC7BtC;;;;MASa,aAAa;;;YALzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;gBACvC,YAAY,EAAE,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;gBACxD,OAAO,EAAE,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;aACpD;;;MCRY,sBAAsB;IAKjC,IAAI,UAAU;QACZ,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,EAAE,CAAC;KAC9B;;;YAZF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,kSAA+C;gBAC/C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;4BAEE,KAAK,SAAC,iBAAiB;oBAEvB,KAAK,SAAC,SAAS;;;ACVlB;;;;;;;IAOY;AAAZ,WAAY,gBAAgB;;IAE1B,uCAAmB,CAAA;;IAGnB,mCAAe,CAAA;;IAGf,uCAAmB,CAAA;AACrB,CAAC,EATW,gBAAgB,KAAhB,gBAAgB;;ACD5B,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAE7B;;;;;;;MAQa,uBAAuB;IADpC;;;;;;;;;;;QAgCqB,WAAM,GAAqB,gBAAgB,CAAC,OAAO,CAAC;;;;;;;;;;;;;QAuBnD,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAYhD,UAAK,GAAsB,IAAI,YAAY,EAAE,CAAC;QAGzD,WAAM,GAAY,CAAC,CAAC;KAgD7B;;;;;;;;;;;;;;IAjCC,IAA8B,aAAa,CAAC,aAAsB;QAChE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;KACvD;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;;;IAaD,IAAsB,KAAK,CAAC,KAAa;QACvC,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK,EAAE,kBAAkB,CAAC,CAAC;QAC7D,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;QAErE,IAAI,CAAC,MAAM,GAAG,oBAAoB,GAAG,YAAY,GAAG,kBAAkB,CAAC;KACxE;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAEO,oBAAoB,CAAC,KAAa;QACxC,OAAO,KAAK,IAAI,kBAAkB,IAAI,KAAK,IAAI,kBAAkB,CAAC;KACnE;;;YArHF,SAAS;;;mBASP,KAAK,SAAC,QAAQ;uBAWd,KAAK,SAAC,aAAa;qBAYnB,KAAK,SAAC,UAAU;mBAShB,KAAK,SAAC,QAAQ;qBAcd,MAAM,SAAC,UAAU;oBAYjB,MAAM,SAAC,SAAS;4BAkBhB,KAAK,SAAC,iBAAiB;oBAmBvB,KAAK,SAAC,SAAS;;;ACnHlB;;;;;;;;;;;;;;;;;;;MAwBa,mBAAoB,SAAQ,uBAAuB;IAC9D,IAAI,aAAa;QACf,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,gBAAgB,CAAC,OAAO,CAAC;KACnF;IAED,IAAI,mBAAmB;QACrB,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;KAClF;IAED,IAAI,YAAY;QACd,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,gBAAgB,CAAC,KAAK,CAAC;KAChF;IAED,IAAI,WAAW;QACb,IAAI,IAAI,CAAC,MAAM,KAAK,gBAAgB,CAAC,OAAO,EAAE;YAC5C,OAAO,qBAAqB,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,MAAM,KAAK,gBAAgB,CAAC,KAAK,EAAE;YAC1C,OAAO,mBAAmB,CAAC;SAC5B;QAED,OAAO,qBAAqB,CAAC;KAC9B;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/B;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,onCAA2C;gBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;ACtBD;;;;;MAUa,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,YAAY,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;aAC5D;;;ACXD;;;;;MASa,qBAAqB;;;YAJjC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,SAAS,EAAE,EAAE;aACd;;;MCPY,qBAAqB;IAChC,QAAQ,CAAC,KAAwC;QAC/C,OAAa,MAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;cACjE,KAAK,CAAC,KAAK;cACX,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;KACtD;IAEO,gBAAgB,CAAC,IAAY;QACnC,QAAQ,IAAI;YACV,KAAK,QAAQ;gBACX,OAAO,kBAAkB,CAAC,OAAO,CAAC;YACpC,KAAK,SAAS;gBACZ,OAAO,kBAAkB,CAAC,OAAO,CAAC;YACpC,KAAK,SAAS;gBACZ,OAAO,kBAAkB,CAAC,OAAO,CAAC;YACpC;gBACE,OAAO,kBAAkB,CAAC,OAAO,CAAC;SACrC;KACF;;;YAnBF,UAAU;;;ACAX;;;;;MASa,oBAAoB;;;YAJhC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,SAAS,EAAE,EAAE;aACd;;;MCPY,0BAA0B;IACrC,YACU,iBAA2C,EAC3C,cAA8B,EAC9B,QAAkB;QAFlB,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC3C,mBAAc,GAAd,cAAc,CAAgB;QAC9B,aAAQ,GAAR,QAAQ,CAAU;KACxB;;IAGJ,4BAA4B,CAAC,SAAc;QACzC,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACtD,MAAM,OAAO,GAAS,YAAY,CAAC,QAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC1D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACnC,OAAO,YAAY,CAAC;KACrB;;IAGD,6BAA6B,CAAC,YAAiB;QAC7C,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACtD,YAAY,CAAC,OAAO,EAAE,CAAC;KACxB;;;;YAvBF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAJkC,wBAAwB;YAAE,cAAc;YAAE,QAAQ;;;MCWxE,yBAAyB;;;YAPrC,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,CAAC,0BAA0B,CAAC;gBACvC,SAAS,EAAE,EAAE;aACd;;;ACND;;;;;MAQa,uBAAuB;;;YAHnC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;ACXD;;;;;;;;IAQY;AAAZ,WAAY,YAAY;;IAEtB,iDAAK,CAAA;;IAEL,qDAAO,CAAA;AACT,CAAC,EALW,YAAY,KAAZ,YAAY;;MCOX,4BAA4B,GAAG;IAC1C,EAAE,EAAyB,EAAE,EAAE,EAAE,IAAI,EAAE;IACvC,EAAE,EAAyB,EAAE,EAAE,EAAE,IAAI,EAAE;IACvC,EAAE,EAAyB,EAAE,EAAE,EAAE,IAAI,EAAE;IACvC,EAAE,EAAyB,EAAE,EAAE,EAAE,IAAI,EAAE;EACvC;MAEW,8BAA8B,GAAG;IAC5C,EAAE,EAA2B,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE;IACrE,EAAE,EAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE;IACzE,EAAE,EAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE;IACzE,EAAE,EAA2B,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE;EAC3E;AAEF;;;;;;;MAWa,iBAAiB;IA8B5B,YAAY,eAAkC;;QAnB9C,kBAAa,GAAkB,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,SAAQ,EAAE,CAAC;QAoB/D,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;IAED,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;KACtC;IAED,QAAQ;QACN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;KACtF;;IAGD,KAAK,CAAC,OAAO,GAAG,KAAK;QACnB,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;YAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QAED,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,OAAO;QACL,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC7B;KACF;;IAGD,YAAY,CAAC,YAAa,EAAE,aAAc,EAAE,cAAe,EAAE,eAAgB,EAAE,WAAY;QACzF,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,YAAY;YACnB,MAAM,EAAE;gBACN,IAAI,aAAa,EAAE;oBACjB,aAAa,EAAE,CAAC;iBACjB;gBACD,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;SACF,CAAC;QAEF,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG;gBACrB,KAAK,EAAE,cAAc;gBACrB,MAAM,EAAE;oBACN,IAAI,eAAe,EAAE;wBACnB,eAAe,EAAE,CAAC;qBACnB;oBACD,IAAI,CAAC,KAAK,EAAE,CAAC;iBACd;aACF,CAAC;SACH;QAED,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;IAGD,IAAI,CACF,aAA4D,EAC5D,UAAwB,EACxB,YAA8C;QAE9C,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;QAErC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAEjC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QAElD,QAAQ,UAAU;YAChB,KAAK,YAAY,CAAC,OAAO,EAAE;gBACzB,IAAI,CAAC,YAAY,CACf,IAAI,CAAC,eAAe,CAAC,OAAO,EACH,aAAc,CAAC,OAAO,EAC/C,IAAI,CAAC,eAAe,CAAC,MAAM,EACF,aAAc,CAAC,MAAM,EACrB,aAAc,CAAC,KAAK,CAC9C,CAAC;gBACF,MAAM;aACP;YACD,KAAK,YAAY,CAAC,KAAK,EAAE;gBACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAyB,aAAc,CAAC,EAAE,CAAC,CAAC;gBACnF,MAAM;aACP;SACF;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;IAEO,iBAAiB,CAAC,aAA4D,EAAE,UAAwB;QAC9G,MAAM,aAAa,GAAG,4BAA4B,CAAC;QACnD,MAAM,eAAe,GAAG,8BAA8B,CAAC;QACvD,MAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC;QAExC,IAAI,UAAU,KAAK,YAAY,CAAC,KAAK,EAAE;YACrC,IAAI,CAAC,aAAa,iDAAQ,aAAa,CAAC,eAAe,CAAC,GAAK,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAK,QAAQ,CAAE,CAAC;SAC1G;aAAM;YACL,IAAI,CAAC,eAAe,iDACf,eAAe,CAAC,eAAe,CAAC,GAChC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC9B,QAAQ,CACZ,CAAC;SACH;KACF;;;YAvIF,SAAS,SAAC;gBACT,oLAAyC;aAC1C;;;YAjCQ,iBAAiB;;;sBAoCvB,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACvC/C;;;;;;MAOsB,mBAAmB;;IAEvC,OAAO,CAAC,cAAsC;QAC5C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;KACvD;;IAGD,KAAK,CAAC,YAAkC;QACtC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;KACnD;;;ACXH;;;;;;;;;;;;;;;;;;;;MAqBa,eAAgB,SAAQ,mBAAmB;IACtD,YAAoB,mBAA+C;QACjE,KAAK,EAAE,CAAC;QADU,wBAAmB,GAAnB,mBAAmB,CAA4B;KAElE;IAED,UAAU,CAAC,UAAwB,EAAE,aAA4D;QAC/F,MAAM,YAAY,GAAsB,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,iBAAiB,CAAC,CAAC;QACjH,YAAY,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAC/C,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;KACrE;;;YAVF,UAAU;;;YA1BF,0BAA0B;;;MCUtB,cAAc;;;YAN1B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,aAAa,CAAC;gBACxB,OAAO,EAAE,CAAC,iBAAiB,CAAC;gBAC5B,SAAS,EAAE,CAAC,eAAe,CAAC;aAC7B;;;ACTD;;;;;;;;;;;;;;;;;;;;;;;;;MAyBa,cAAc;IACzB,SAAS,CAAC,KAAa,EAAE,IAAS;QAChC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,CAAC;SACX;QAED,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC,EAAE;YAC5B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;SACf;QAED,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;SAC1C;QAED,OAAO,KAAK,CAAC;KACd;;;ACtCH;;;;;;;;;;;MAca,UAAW,SAAQ,cAAc;;;YAH7C,IAAI,SAAC;gBACJ,IAAI,EAAE,QAAQ;aACf;;;ACjBD;;;;;IAKY;AAAZ,WAAY,oBAAoB;;IAE9B,mEAAM,CAAA;;IAEN,6DAAG,CAAA;AACL,CAAC,EALW,oBAAoB,KAApB,oBAAoB;;ACDhC;;;;;;;MAOsB,sBAAsB;IAA5C;;QAWE,gBAAW,GAAyB,oBAAoB,CAAC,MAAM,CAAC;KA4BjE;;;AClDD;;;;;IAKY;AAAZ,WAAY,aAAa;;IAEvB,mDAAK,CAAA;;IAEL,+DAAW,CAAA;;IAEX,uDAAO,CAAA;;IAEP,uDAAO,CAAA;AACT,CAAC,EATW,aAAa,KAAb,aAAa;;ACgBzB;;;;;MASa,kBAAmB,SAAQ,sBAAsB;IAe5D,YACE,eAAkC,EAC3B,cAAiC,EAChC,WAAwB,EACxB,QAAoB;QAE5B,KAAK,EAAE,CAAC;QAJD,mBAAc,GAAd,cAAc,CAAmB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAY;QAhB9B,UAAK,GAAY,IAAI,CAAC;;QAId,WAAM,GAAW,EAAE,CAAC;;QAEpB,sBAAiB,GAAG,IAAI,OAAO,EAAO,CAAC;;QAEvC,oBAAe,GAAW,mBAAmB,CAAC;KAWrD;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAED,eAAe;QACb,UAAU,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC,CAAC;KAC5F;;IAGD,cAAc,CAAC,QAAgB;QAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvD,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,WAAW,KAAK,oBAAoB,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SAC3D;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SAC9D;KACF;;IAGD,KAAK;QACH,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QAC5E,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;KAC5E;;IAGD,aAAa,CAAC,SAAoB;QAChC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;;QAG3C,IAAI,IAAI,CAAC,WAAW,KAAK,oBAAoB,CAAC,GAAG,EAAE;YACjD,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC;SACzC;;QAGD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAGnC,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,aAAa,CAAC,KAAK,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;gBACtC,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBAC9B,MAAM;aACP;YACD,KAAK,aAAa,CAAC,WAAW,EAAE;gBAC9B,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;gBACrC,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;gBAC3B,MAAM;aACP;YACD,KAAK,aAAa,CAAC,OAAO,EAAE;gBAC1B,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;gBACxC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;gBACzB,MAAM;aACP;YACD,KAAK,aAAa,CAAC,OAAO,EAAE;gBAC1B,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;gBACxC,IAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBAC9B,MAAM;aACP;SACF;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,aAAa,CAAC,KAAK;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACpC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;IAGD,eAAe,CAAC,KAAK;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnB;;;YArIF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,8lBAA0C;aAC3C;;;YAfQ,iBAAiB;YAZxB,iBAAiB;YAEjB,UAAU;YAEV,SAAS;;;sBA0BR,SAAS,SAAC,SAAS;;;MCpBT,oBAAoB;;;YAPhC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;MC0BY,gBAAgB;;;YAzB5B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,UAAU,CAAC;gBAC1B,OAAO,EAAE;oBACP,qBAAqB;oBACrB,oBAAoB;oBACpB,yBAAyB;oBACzB,uBAAuB;oBACvB,gBAAgB;oBAChB,cAAc;oBACd,gBAAgB;oBAChB,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,qBAAqB;oBACrB,oBAAoB;oBACpB,yBAAyB;oBACzB,uBAAuB;oBACvB,gBAAgB;oBAChB,cAAc;oBACd,UAAU;oBACV,oBAAoB;iBACrB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;AC/BD,MAAM,2BAA2B,GAAG,OAAO,CAAC;AAC5C,MAAM,0BAA0B,GAAG,OAAO,CAAC;AAC3C,MAAM,mBAAmB,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAE/C;;;;;;;;;;;;;;;;;;;MAoBa,sBAAsB;IADnC;;QAmDqB,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;;QAG1D,aAAQ,GAAY,IAAI,CAAC;QAOjB,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,2BAA2B,CAAC;QACjD,aAAQ,GAAY,0BAA0B,CAAC;KAwExD;;;;;;;;;;IA7DC,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BD,IAAyB,QAAQ,CAAC,KAAa;QAC7C,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,2BAA2B,CAAC;KAC7F;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;;IAcD,IAAwB,OAAO,CAAC,KAAa;QAC3C,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,0BAA0B,CAAC;KAC1F;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;YAtIF,SAAS;;;qBA6CP,KAAK,SAAC,UAAU;oBAGhB,KAAK,SAAC,SAAS;2BAGf,MAAM,SAAC,SAAS;wBAuBhB,KAAK,SAAC,cAAc;uBAkCpB,KAAK,SAAC,YAAY;sBAoBlB,KAAK,SAAC,WAAW;;;AC9IpB;;;;;;;;;;;;;;;;;;;;;MA0Ba,kBAAmB,SAAQ,sBAAsB;IAQ5D,YAAoB,QAAmB,EAAU,iBAA2C;QAC1F,KAAK,EAAE,CAAC;QADU,aAAQ,GAAR,QAAQ,CAAW;QAAU,sBAAiB,GAAjB,iBAAiB,CAA0B;QAL5F,mBAAc,GAAG,MAAM,CAAC;KAOvB;IAED,eAAe;QACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,YAAY,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC;QACjG,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,KAAK;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,cAAc;QACZ,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B,EAAE,GAAG,CAAC,CAAC;KACT;IAED,IAAI;QACF,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAE9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAEnB,UAAU,CAAC;YACT,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SACpB,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;KACzD;IAED,kBAAkB;QAChB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;KAClE;IAED,qBAAqB;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAY;YAC1E,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC5B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,CAAC,KAAiB;gBACjG,IAAI,CAAC,IAAI,EAAE,CAAC;aACb,CAAC,CAAC;YAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,CAAC,KAAiB;gBACjG,IAAI,CAAC,KAAK,EAAE,CAAC;aACd,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;gBAClF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB,CAAC,CAAC;SACJ;KACF;IAED,WAAW,CAAC,KAAK;QACf,IACE,CAAC,IAAI,CAAC,QAAQ;YACd,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACzD,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAC1C;YACA,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YACpD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SACvE;KACF;IAEO,sBAAsB;QAC5B,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;KACrE;IAEO,yBAAyB;QAC/B,IAAI,CAAC,qBAAqB,GAAG;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B,CAAC;KACH;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;KACxE;IAEO,0BAA0B;QAChC,MAAM,aAAa,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACnG;;;YA/HF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,6VAA0C;gBAC1C,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;YAhCC,SAAS;YAIF,wBAAwB;;;6BA8B9B,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACpCjE;;;;MASa,eAAe;;;YAL3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;ACTD;;;;;;;MAUa,UAAU;IACrB,SAAS,CAAC,IAAY,EAAE,MAAe;QACrC,MAAM,SAAS,GAAG,oEAAoE,CAAC;QAEvF,IAAI,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACpD,MAAM,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjF,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;YACxF,MAAM,iBAAiB,GAAW,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YAEvE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;SACvE;QACD,OAAO,IAAI,CAAC;KACb;IAEO,iBAAiB,CAAC,WAAmB,EAAE,SAAiB;QAC9D,IAAI,WAAW,IAAI,SAAS,EAAE;YAC5B,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC;SACjC;QACD,OAAO,WAAW,CAAC;KACpB;IAEO,WAAW,CAAC,IAAY,EAAE,MAAc,EAAE,iBAAyB,EAAE,WAAmB;QAC9F,IAAI,IAAI,IAAI,MAAM,EAAE;YAClB,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACrC,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAErC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACpC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACvC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACvC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,iBAAiB,EAAE,EAAE,WAAW,CAAC,CAAC;YAE9D,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAEO,oBAAoB,CAAC,SAAiB;QAC5C,IAAI,iBAAiB,GAAW,EAAE,CAAC;QAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,iBAAiB,IAAI,GAAG,CAAC;SAC1B;QAED,OAAO,iBAAiB,CAAC;KAC1B;;;YAlDF,IAAI,SAAC;gBACJ,IAAI,EAAE,SAAS;aAChB;;;ACTD;;;;;MAYa,YAAY;;;YAPxB,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,UAAU,CAAC;gBAC1B,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,CAAC,UAAU,CAAC;gBACrB,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;ACVD;;;;;;;MAYa,0BAA0B;IALvC;QAYU,WAAM,GAA6B,EAAE,CAAC;KA2D/C;;IAxDC,IAAsB,KAAK,CAAC,KAAwD;QAClF,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;KAC/C;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,KAAK,CAAC,UAA6B,EAAE,KAAK;QACxC,MAAM,YAAY,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAElD,IAAI,YAAY,EAAE;YAChB,IAAI,UAAU,CAAC,MAAM,EAAE;gBACrB,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;aACzC;iBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;aAC1C;YACD,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAED,QAAQ,CAAC,MAAyB;QAChC,MAAM,KAAK,GAAG,OAAO,MAAM,CAAC,KAAK,KAAK,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;QAEjG,IAAI,KAAK,EAAE;YACT,OAAO,WAAW,KAAK,EAAE,CAAC;SAC3B;KACF;IAED,OAAO,CAAC,MAAyB;QAC/B,OAAO,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC;KACpC;IAED,WAAW,CAAC,UAA6B;QACvC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KACtF;IAED,UAAU,CAAC,MAAyB;QAClC,OAAO,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KAC5D;IAED,eAAe,CAAC,KAAK;QACnB,OAAO,KAAK,CAAC;KACd;IAEO,mBAAmB,CAAC,QAA2D;QACrF,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3B,OAAa,QAAS,CAAC,GAAG,CAAC,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC;SACrG;QAED,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAChC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;SAC9B;QAED,OAAO,EAAE,CAAC;KACX;;;YAtEF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,iWAAoD;gBACpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;qBAGE,KAAK,SAAC,UAAU;kBAGhB,KAAK,SAAC,OAAO;oBAKb,KAAK,SAAC,SAAS;;;ACtBlB;;;;;;;MAaa,2BAA2B;IAetC,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;KAAI;;IAXpE,IAAsB,KAAK,CAAC,KAAyB;QACnD,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,gHAAqD;gBACrD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAfQ,qBAAqB;;;oBAoB3B,KAAK,SAAC,SAAS;;;AClBlB;;;;;;;MAYa,0BAA0B;IAWrC,IAAI,IAAI;QACN,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,UAAU,CAAC;SACnB;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,QAAQ,CAAC;SACjB;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,cAAc,CAAC;SACvB;QAED,OAAO,cAAc,CAAC;KACvB;;;YA9BF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,+dAAoD;gBACpD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;qBAEE,KAAK,SAAC,UAAU;uBAEhB,KAAK,SAAC,YAAY;mBAElB,KAAK,SAAC,QAAQ;kBAEd,KAAK,SAAC,OAAO;oBAEb,KAAK,SAAC,SAAS;;;ACJlB,MAAM,qCAAqC,GAAG,KAAK,CAAC;AAE7C,MAAM,mCAAmC,GAAG;IACjD,EAAE,EAAE;QACF,cAAc,EAAE,iBAAiB;QACjC,cAAc,EAAE,iBAAiB;KAClC;IACD,EAAE,EAAE;QACF,cAAc,EAAE,oBAAoB;QACpC,cAAc,EAAE,uBAAuB;KACxC;IACD,EAAE,EAAE;QACF,cAAc,EAAE,wBAAwB;QACxC,cAAc,EAAE,kBAAkB;KACnC;IACD,EAAE,EAAE;QACF,cAAc,EAAE,kBAAkB;QAClC,cAAc,EAAE,gBAAgB;KACjC;CACF,CAAC;MAMW,6BAA6B;IAiCxC,YAAoB,QAAmB,EAAE,eAAkC;QAAvD,aAAQ,GAAR,QAAQ,CAAW;QA9BnB,YAAO,GAAyB,EAAE,CAAC;QAIb,+BAA0B,GAAyB,EAAE,CAAC;QAE5D,yBAAoB,GAAG,IAAI,YAAY,EAAwB,CAAC;;;QAIhE,yBAAoB,GAAG,IAAI,YAAY,EAAiB,CAAC;QAG7F,mBAAc,GAAiC,EAAE,CAAC;QAClD,mBAAc,GAAkB,EAAE,CAAC;QAE3B,gBAAW,GAAW,qCAAqC,CAAC;QAC5D,mBAAc,GAAyB,EAAE,CAAC;QAchD,MAAM,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;QAEpD,IAAI,CAAC,QAAQ,mCACR,mCAAmC,CAAC,eAAe,CAAC,GACpD,mCAAmC,CAAC,QAAQ,CAAC,CACjD,CAAC;KACH;IAfD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;KAC/E;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAWD,WAAW,CAAC,OAAsB;QAChC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,OAAO,CAAC;QAEhD,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,EAAE;YAChC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAC/B;QAED,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;KACF;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;IAGD,YAAY,CAAC,QAAuB,EAAE,EAAE,OAAgB,KAAK;QAC3D,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,IAAI,EAAE;;YAER,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACnC;KACF;IAED,OAAO;QACL,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAEnE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC;KAC7D;IAEO,kBAAkB,CAAC,KAAoB;QAC7C,MAAM,UAAU,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;YACrC,IAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,CAAC;SAC/C;KACF;IAEO,4BAA4B,CAAC,UAAyB;QAC5D,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;QACtC,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;QAG7E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACrD;IAEO,0BAA0B;QAChC,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE7E,OAAO,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7E;IAEO,0BAA0B;QAChC,IAAI,IAAI,CAAC,mBAAmB,EAAE;;YAE5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;;YAEL,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAEO,mBAAmB;QACzB,MAAM,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAChD,MAAM,qBAAqB,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QAErE,IAAI,IAAI,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,EAAE;YAC3D,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KAClC;IAEO,mBAAmB,CAAC,qBAAoC;QAC9D,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,qBAAqB,CAAC,CAAC;QACjD,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE7E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;KACrD;IAEO,2BAA2B,CAAC,qBAAoC;QACtE,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE5D,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAC;KACnE;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;YACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAEO,kBAAkB;QACxB,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QACjD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACrD;IAEO,cAAc;QACpB,MAAM,qBAAqB,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;QAClF,MAAM,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;QACjF,MAAM,0BAA0B,GAAG,IAAI,CAAC,0BAA0B,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,EAAE,CAAC;QAC/G,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,CAAC;QAE9E,QACE,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,gBAAgB,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,EAC3D;KACH;IAEO,WAAW,CAAC,qBAAoC,EAAE,kBAAiC;QACzF,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;KACjG;IAEO,QAAQ,CAAC,qBAAoC,EAAE,gBAA+B;QACpF,OAAO,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,CAAC;KAC9F;IAEO,aAAa,CAAC,KAAoB,EAAE,MAAqB;QAC/D,MAAM,GAAG,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACpC,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;QACtC,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;QACrC,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;QACtC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC9C,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAEhD,OAAO,WAAW,KAAK,YAAY,CAAC;KACrC;;IAGO,qBAAqB,CAAC,UAAwC,EAAE;QACtE,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,qCACpB,MAAM,KACT,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,IAC5C,CAAC,CAAC;KACL;IAEO,mBAAmB,CAAC,MAAqB;QAC/C,OAAO,MAAM,CAAC,KAAK,IAAI,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC/D;;IAGO,iBAAiB,CAAC,OAA6B;QACrD,IAAI,cAAc,GAAG,EAAE,CAAC;QAExB,OAAO,CAAC,OAAO,CAAC,MAAM;YACpB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,cAAc,CAAC,EAAE;gBAChD,cAAc,GAAG,CAAC,GAAG,cAAc,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;aACvD;SACF,CAAC,CAAC;QAEH,OAAO,cAAc,CAAC;KACvB;IAEO,eAAe,CAAC,MAAqB,EAAE,cAA6B;QAC1E,OAAO,MAAM,CAAC,OAAO,KAAK,KAAK,IAAI,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC;KACxG;;IAGO,sBAAsB,CAAC,cAA6B;QAC1D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAEtD,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,qCACpB,MAAM,KACT,OAAO,EAAE,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAC7E,CAAC,CAAC;KACL;IAEO,mBAAmB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACtB;SACF,CAAC,CAAC;KACJ;IAEO,eAAe,CAAC,QAAgB;QACtC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;KACxG;IAEO,gCAAgC,CAAC,UAAgC,EAAE;QACzE,MAAM,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;QAClC,MAAM,cAAc,GAAG,EAAE,CAAC;QAE1B,YAAY,CAAC,OAAO,CAAC,MAAM;YACzB,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;gBAC5B,cAAc,CAAC,IAAI,CAAC;oBAClB,KAAK,EAAE,MAAM,CAAC,QAAQ;oBACtB,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;oBACvC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC;iBAChD,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;QAEH,OAAO,cAAc,CAAC;KACvB;IAEO,eAAe,CAAC,OAAqB;QAC3C,MAAM,EAAE,YAAY,GAAG,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC;;QAG1D,IAAI,CAAC,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC5G,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC;SACzC;;QAGD,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAClE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACjC;KACF;IAEO,YAAY,CAAC,YAAkC;QACrD,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,cAAc,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC;QAE1C,MAAM,cAAc,GAAG,IAAI,CAAC,gCAAgC,CAAC,YAAY,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;QAEjE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;KAC1C;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAEO,SAAS,CAAC,OAA6B;;QAE7C,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,KAAK;YACxC,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,eAAe,EAAE;gBAC7C,OAAO,KAAK,CAAC;aACd;SACF,CAAC,CAAC;KACJ;;;YA9RF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,gqCAAuD;aACxD;;;YAnCC,SAAS;YAOF,iBAAiB;;;sBA8BvB,SAAS,SAAC,kBAAkB;sBAE5B,KAAK,SAAC,WAAW;qBAEjB,KAAK,SAAC,UAAU;yCAEhB,KAAK,SAAC,iCAAiC;mCAEvC,MAAM,SAAC,0BAA0B;mCAIjC,MAAM,SAAC,0BAA0B;yBAYjC,KAAK,SAAC,eAAe;;;ACvExB;;;;;;IAMY;AAAZ,WAAY,qBAAqB;;IAE/B,gDAAuB,CAAA;;IAGvB,kDAAyB,CAAA;AAC3B,CAAC,EANW,qBAAqB,KAArB,qBAAqB;;MCKpB,cAAc;IAOzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN3B,YAAO,GAAgB,IAAI,WAAW,CAAC;YAC9C,iBAAiB,EAAE,MAAM;SAC1B,CAAC,CAAC;KAIqC;IAExC,gBAAgB,CAAC,cAA2C;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAEnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KACnE;IAED,MAAM,CAAC,GAAW;QAChB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;KAChB;IAED,cAAc,CAAC,gBAA6B;QAC1C,OAAO,SAAS,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;KACtE;IAEO,cAAc,CAAC,MAAW;QAChC,OAAO,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC;KAClF;;;;YA5BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YATQ,UAAU;;;AC6BZ,MAAM,gBAAgB,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC9C,MAAM,uBAAuB,GAAG,QAAQ,CAAC;AAEzC,MAAM,sBAAsB,GAAG;IACpC,EAAE,EAAmB;QACnB,SAAS,EAAE,yBAAyB;QACpC,MAAM,EAAE,eAAe;QACvB,eAAe,EAAE,mBAAmB;QACpC,WAAW,EAAE,SAAS;QACtB,YAAY,EAAE,gBAAgB;QAC9B,mBAAmB,EAAE,uBAAuB;QAC5C,gBAAgB,EAAE,mBAAmB;QACrC,cAAc,EAAE,iBAAiB;KAClC;IACD,EAAE,EAAmB;QACnB,SAAS,EAAE,uBAAuB;QAClC,MAAM,EAAE,sBAAsB;QAC9B,eAAe,EAAE,uBAAuB;QACxC,WAAW,EAAE,gBAAgB;QAC7B,YAAY,EAAE,uBAAuB;QACrC,mBAAmB,EAAE,wBAAwB;QAC7C,gBAAgB,EAAE,oBAAoB;QACtC,cAAc,EAAE,oBAAoB;KACrC;IACD,EAAE,EAAmB;QACnB,SAAS,EAAE,8BAA8B;QACzC,MAAM,EAAE,wBAAwB;QAChC,eAAe,EAAE,wBAAwB;QACzC,WAAW,EAAE,YAAY;QACzB,YAAY,EAAE,0BAA0B;QACxC,mBAAmB,EAAE,sBAAsB;QAC3C,gBAAgB,EAAE,kBAAkB;QACpC,cAAc,EAAE,wBAAwB;KACzC;IACD,EAAE,EAAmB;QACnB,SAAS,EAAE,yBAAyB;QACpC,MAAM,EAAE,mBAAmB;QAC3B,eAAe,EAAE,sBAAsB;QACvC,WAAW,EAAE,UAAU;QACvB,YAAY,EAAE,UAAU;QACxB,mBAAmB,EAAE,2BAA2B;QAChD,gBAAgB,EAAE,kBAAkB;QACpC,cAAc,EAAE,kBAAkB;KACnC;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;MAqBsB,oBAAoB;IAujBxC,YACU,MAAqB,EAC7B,eAAkC,EAC1B,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAe;QAErB,mBAAc,GAAd,cAAc,CAAgB;;;;;;;;;;QAhjBO,qBAAgB,GAAY,KAAK,CAAC;;;;;;;;;;QAWhC,uBAAkB,GAAa,KAAK,CAAC;;;;;;;;;;QAW5C,iBAAY,GAAa,KAAK,CAAC;;;;;;;;;;QAW3B,oBAAe,GAAa,KAAK,CAAC;;;;;;;;;;;QAY/C,SAAI,GAAY,KAAK,CAAC;;;;;;;;QASR,qBAAgB,GAAa,KAAK,CAAC;;;;;;;;;QAU9C,YAAO,GAAa,KAAK,CAAC;;;;;;;;;;QAWlB,kBAAa,GAAY,KAAK,CAAC;;;;;;;;QASjC,iBAAY,GAAa,KAAK,CAAC;;;;;;;QAqB/C,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;QAQvD,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAWhE,cAAS,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAWxD,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QAStD,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;;;;;QAerD,aAAQ,GAAoC,IAAI,YAAY,EAAqB,CAAC;;;;;;;;;;;;;QAcpF,WAAM,GAAoC,IAAI,YAAY,EAAqB,CAAC;;;;;;;QAQ7E,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAW5C,yBAAoB,GAAG,IAAI,YAAY,EAAiB,CAAC;QAI7F,mBAAc,GAAY,KAAK,CAAC;QAChC,gBAAW,GAAyB,EAAE,CAAC;QACvC,cAAS,GAAG,KAAK,CAAC;QAClB,iBAAY,GAAG,EAAE,QAAQ,EAAiB,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;QAClE,oBAAe,GAAyB,EAAE,CAAC;QAC3C,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAa,KAAK,CAAC;QAErB,aAAQ,GAA0B,EAAE,CAAC;QACrC,aAAQ,GAAyB,EAAE,CAAC;QAGpC,gBAAW,GAAa,KAAK,CAAC;QAG9B,aAAQ,GAAa,KAAK,CAAC;QAE3B,aAAQ,GAAW,eAAe,CAAC;QAInC,4BAAuB,GAAY,GAAG,CAAC;QACvC,oBAAe,GAAa,KAAK,CAAC;QAuVxC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;IAhVD,IAAsB,KAAK,CAAC,KAAiB;QAC3C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;;QAGhD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD;;QAGD,UAAU,CAAC,MAAM,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;KAC9C;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;IAYD,IAAwB,OAAO,CAAC,OAA6B;QAC3D,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,EAAE,CAAC;QAE9B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;IAaD,IAA0B,SAAS,CAAC,KAAa;QAC/C,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,uBAAuB,CAAC;KACtF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASD,IAAuB,MAAM,CAAC,MAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAA4B,UAAU,CAAC,UAAmB;QACxD,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAC5G,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyCD,IAAyB,QAAQ,CAAC,KAAsB;QACtD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,sBAAsB,CAAC,eAAe,CAAC,GACvC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACrC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxD;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChE;;;;;;;;;;IAWD,IAAwB,OAAO,CAAC,OAAgB;QAC9C,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;IAgBD,IAAwB,OAAO,CAAC,OAA6B;QAC3D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;IAiBD,IAA2B,UAAU,CAAC,KAAc;QAClD,IAAI,CAAC,WAAW,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;;IAeD,IAAgC,cAAc,CAAC,KAAc;QAC3D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACnE;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;;;IAYD,IAAyC,sBAAsB,CAAC,KAAa;QAC3E,IAAI,CAAC,uBAAuB,GAAG,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;KACvE;IAED,IAAI,sBAAsB;QACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;KACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BD,IAA4B,UAAU,CAAC,OAAe;QACpD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KAChD;IAED,IAAI,QAAQ;QACV,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC5C;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC;KAC1E;IAED,IAAI,YAAY;QACd,MAAM,UAAU,GAAG;YACjB,QAAQ;YACR,QAAQ;YACR,SAAS;YACT,MAAM;YACN,MAAM;YACN,UAAU;YACV,UAAU;YACV,UAAU;YACV,MAAM;YACN,OAAO;YACP,MAAM;YACN,cAAc;YACd,gBAAgB;SACjB,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KAC/E;IAED,IAAY,QAAQ;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,qBAAqB,CAAC,SAAS,GAAG,qBAAqB,CAAC,UAAU,CAAC;KACzG;IAUD,WAAW;;QACT,MAAA,IAAI,CAAC,0BAA0B,0CAAE,WAAW,EAAE,CAAC;KAChD;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QAED,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjD;KACF;IAED,aAAa;QACX,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YAEjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aACjC,CAAC,CAAC;YAEH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;SAC3D;KACF;IAED,SAAS,CAAC,GAAQ;QAChB,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;QAE/B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAE3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAC5C;IAED,eAAe,CAAC,GAAQ;QACtB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,aAAa,CAAC,GAAG,EAAE,MAAM;QACvB,OAAO,MAAM,CAAC,KAAK,GAAG,WAAW,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC;KAC1E;IAED,YAAY,CAAC,GAAQ;QACnB,MAAM,aAAa,GAAG,GAAG,CAAC,WAAW,CAAC;QACtC,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC;QACxC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,eAAe,CAAC,GAAQ;QACtB,MAAM,gBAAgB,GAAG,GAAG,CAAC,WAAW,CAAC;QAEzC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;YACrB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,GAAG,CAAC,WAAW,GAAG,CAAC,gBAAgB,CAAC;KACrC;IAED,UAAU,CAAC,MAAqB;QAC9B,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,QAAQ,KAAK,KAAK,EAAE;YACvE,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,KAAK,MAAM,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAE1G,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SAClD;QAED,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;KACrC;IAED,UAAU;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC;QAElH,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAE5B,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,IAAI;gBACtE,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5C,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAC9B,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,gBAAgB,CAAC,WAAgD;QAC/D,MAAM,cAAc,GAA+B,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAEvF,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;KAC7D;IAED,0BAA0B,CAAC,IAAwB;QACjD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IAED,cAAc,CAAC,MAA2C;QACxD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI;gBAC1C,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;aACvC,CAAC,CAAC;SACJ;KACF;IAES,iBAAiB,CAAC,IAAS;QACnC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/B,OAAO,IAAI;aACR,MAAM,CAAC,GAAG,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC;aAC5C,GAAG,CAAC,GAAG,KAAK,EAAE,KAAK,EAAE,qBAAqB,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;KACvE;IAES,aAAa,CAAC,aAA2B,EAAE,YAAqB;QACxE,MAAM,UAAU,GAAG,OAAO,aAAa,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAElF,MAAM,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,aAAa,CAAC;QAEnE,GAAG,CAAC,WAAW,GAAG,YAAY,CAAC;KAChC;IAEO,gBAAgB,CAAC,KAAoC;QAC3D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gBAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC7B;SACF;KACF;IAEO,oBAAoB,CAAC,IAAgB,EAAE,GAAG;QAChD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACnC;aAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC7C;KACF;IAEO,gBAAgB,CAAC,GAAQ;QAC/B,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACtE;IAEO,mBAAmB,CAAC,SAAkB,EAAE,IAAS;QACvD,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACzE;IAEO,gBAAgB,CAAC,GAAQ;QAC/B,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrE;IAEO,cAAc,CAAC,GAAG,EAAE,MAAM;QAChC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;QAEjC,OAAO,QAAQ,CAAC,WAAW,EAAE,UAAU,CAAC,GAAG,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;KAC5F;;IAGO,qBAAqB;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;KACxD;;IAGO,cAAc;QACpB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;KAC/D;;IAGO,kBAAkB;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;KAC5D;IAEO,eAAe,CAAC,KAAiB;QACvC,MAAM,0BAA0B,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;QACrF,MAAM,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAE5C,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;IAEO,eAAe;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAEO,aAAa;QACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;YACzB,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;gBAChD,MAAM,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;aACzB;SACF,CAAC,CAAC;KACJ;IAEO,qBAAqB;QAC3B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;KACxD;IAEO,cAAc;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QAEhD,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;KAC9D;IAEO,kBAAkB;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAClD;IAEO,SAAS,CAAC,MAAqB,EAAE,SAAkB;QACzD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,SAAS,KAClC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAC7E,CAAC;KACH;IAEO,iBAAiB,CAAC,IAAgB,EAAE,GAAG;QAC7C,IAAI,CAAC,OAAO,CAAC,IAAI;YACf,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACxB;SACF,CAAC,CAAC;KACJ;IAEO,wBAAwB;QAC9B,OAAO,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;KACpH;IAEO,UAAU,CAAC,OAAe;QAChC,IAAI,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC1C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACrC;KACF;IAEO,iBAAiB,CAAC,WAAgD;QACxE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAE3C,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,MAAM,mBAAK,IAAI,EAAE,QAAQ,EAAE,KAAK,IAAK,WAAW,CAAE,CAAC;QAEzD,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;YACxB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBAC3D,cAAc,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aACnC;SACF;QACD,OAAO,cAAc,CAAC;KACvB;IAEO,aAAa,CAAC,OAA0B,EAAE,IAAI,EAAE,SAAS,EAAE;QACjE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QAED,IAAI,IAAI,KAAK,qBAAqB,CAAC,UAAU,EAAE;YAC7C,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC9B;QAED,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;KAC7B;;;YA11BF,SAAS;;;YAlFD,aAAa;YACb,iBAAiB;YASjB,cAAc;;;+BAmFpB,KAAK,SAAC,sBAAsB;iCAW5B,KAAK,SAAC,wBAAwB;2BAW9B,KAAK,SAAC,iBAAiB;8BAWvB,KAAK,SAAC,qBAAqB;mBAY3B,KAAK,SAAC,QAAQ;+BASd,KAAK,SAAC,sBAAsB;sBAU5B,KAAK,SAAC,WAAW;4BAWjB,KAAK,SAAC,mBAAmB;2BASzB,KAAK,SAAC,iBAAiB;yBAavB,KAAK,SAAC,eAAe;0BAQrB,MAAM,SAAC,gBAAgB;4BAQvB,MAAM,SAAC,kBAAkB;wBAWzB,MAAM,SAAC,aAAa;uBAWpB,MAAM,SAAC,YAAY;uBASnB,MAAM,SAAC,YAAY;uBAenB,MAAM,SAAC,aAAa;qBAcpB,MAAM,SAAC,WAAW;yBAQlB,MAAM,SAAC,cAAc;mCAWrB,MAAM,SAAC,0BAA0B;oBAmCjC,KAAK,SAAC,SAAS;sBA4Bf,KAAK,SAAC,WAAW;wBA4BjB,KAAK,SAAC,aAAa;qBAenB,KAAK,SAAC,UAAU;yBAkBhB,KAAK,SAAC,eAAe;uBAgDrB,KAAK,SAAC,YAAY;sBAwBlB,KAAK,SAAC,WAAW;sBAuBjB,KAAK,SAAC,WAAW;yBAwBjB,KAAK,SAAC,cAAc;6BAsBpB,KAAK,SAAC,mBAAmB;qCAkBzB,KAAK,SAAC,4BAA4B;yBAkClC,KAAK,SAAC,eAAe;;AA7fyB;IAAf,YAAY,EAAE;8DAAmC;AAWhC;IAAf,YAAY,EAAE;gEAAsC;AAW5C;IAAf,YAAY,EAAE;0DAAgC;AAW3B;IAAf,YAAY,EAAE;6DAAmC;AAY/C;IAAf,YAAY,EAAE;kDAAuB;AASR;IAAf,YAAY,EAAE;8DAAoC;AAU9C;IAAf,YAAY,EAAE;qDAA2B;AAWlB;IAAf,YAAY,EAAE;2DAAgC;AASjC;IAAf,YAAY,EAAE;0DAAgC;;AC/L3E;;;;;;IAMY;AAAZ,WAAY,gCAAgC;;IAE1C,iDAAa,CAAA;;IAGb,mDAAe,CAAA;AACjB,CAAC,EANW,gCAAgC,KAAhC,gCAAgC;;ACH5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2Fa,2BAA2B;;IAyCtC,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;QAzBxC,oCAA+B,GAAqC,gCAAgC,CAAC,IAAI,CAAC;KAyB9D;;;;;;;;;;IAdpD,IAAmD,8BAA8B,CAC/E,KAAuC;QAEvC,KAAK,GAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAsC,CAAC;QACjE,IAAI,CAAC,+BAA+B,GAAS,MAAO,CAAC,MAAM,CAAC,gCAAgC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;cACzG,KAAK;cACL,gCAAgC,CAAC,IAAI,CAAC;KAC3C;IAED,IAAI,8BAA8B;QAChC,OAAO,IAAI,CAAC,+BAA+B,CAAC;KAC7C;;;YAzCF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;aACnC;;;YA7F0B,WAAW;;;qCA4GnC,KAAK,SAAC,2BAA2B;6CAajC,KAAK,SAAC,sCAAsC;;;ACxH/C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqEa,4BAA4B;;IAEvC,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YALrD,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;aACpC;;;YArEmB,WAAW;;;ACE/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2Ea,8BAA8B;;IAazC,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YAhBrD,SAAS,SAAC;gBACT,QAAQ,EAAE,2BAA2B;aACtC;;;YA5E0B,WAAW;;;6BAuFnC,KAAK,SAAC,YAAY;;;AClDrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiDa,gBAAiB,SAAQ,oBAAoB;IA4CxD,YACE,MAAqB,EACrB,OAAwB,EACxB,QAAmB,EACnB,iBAAoC,EAC5B,cAAiC,EACjC,WAAwB,EACxB,MAAc,EACd,cAA8B;QAEtC,KAAK,CAAC,MAAM,EAAE,iBAAiB,EAAE,cAAc,CAAC,CAAC;QALzC,mBAAc,GAAd,cAAc,CAAmB;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAlCxC,iBAAY,GAAW,CAAC,CAAC;QAOjB,gBAAW,GAAG,KAAK,CAAC;QAEpB,mBAAc,GAAG,KAAK,CAAC;QA6B7B,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;;QAI5C,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,SAAQ,CAAC,CAAC;QAEpE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAU;YACnE,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACJ;IA/BD,IAAsC,mBAAmB,CAAC,KAAiB;QACzE,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAElC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;IAyBD,IAAI,qCAAqC;;QACvC,OAAO,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,8BAA8B,MAAK,gCAAgC,CAAC,KAAK,CAAC;KACzG;IAED,IAAI,WAAW;QACb,MAAM,WAAW,GACf,IAAI,CAAC,WAAW,CAAC,MAAM;aACtB,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAChC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;aACxB,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,kBAAkB,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEtE,OAAO,WAAW,IAAI,CAAC,CAAC;KACzB;IAED,IAAI,0BAA0B;;QAE5B,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QAElD,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC;KACpH;IAED,IAAI,gBAAgB;QAClB,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAC7C,OAAO,YAAY,IAAI,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC;KACrF;IAED,IAAI,iBAAiB;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;KACrC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;KACtD;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,yBAAyB,CAAC;KACxD;IAED,IAAI,qBAAqB;QACvB,QACE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,cAAc,CAAC,EAC9G;KACH;IAED,IAAI,cAAc;QAChB,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAChC;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC;KAChE;IAED,IAAI,eAAe;QACjB,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;KACnC;IAED,IAAI,yBAAyB;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;KACtE;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,CAAC;KACzC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;KAC1F;IAED,eAAe;QACb,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAED,sBAAsB,CAAC,EAAE,MAAM,EAAE;QAC/B,MAAM,cAAc,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC;QAC9D,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAI,cAAc,IAAI,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC,EAAE;YACzG,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,SAAS;;QACP,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,mCAAmC,EAAE,CAAC;;;QAG3C,IAAI,CAAA,MAAA,IAAI,CAAC,mBAAmB,0CAAE,aAAa,CAAC,WAAW,KAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,EAAE;YACnG,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;KACF;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;;;;;;;;;;;;;;IAmBD,YAAY,CAAC,WAAgD;QAC3D,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;KAClC;;;;;;;IAQD,QAAQ,CAAC,QAAgB;QACvB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;KACrC;;;;;;;IAQD,MAAM,CAAC,QAAgB;QACrB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACpC;;;;IAKD,eAAe;QACb,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;KAClD;;;;IAKD,iBAAiB;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACnD;;;;IAKD,YAAY;QACV,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE3C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;YACrB,MAAM,WAAW,GAAG,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;YAE7D,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,WAAW,CAAC,OAAO,CAAC,UAAU;oBAC5B,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC9B,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;IAED,aAAa,CAAC,GAAG,EAAE,MAAqB;QACtC,OAAO,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACvD;IAED,oBAAoB,CAAC,GAAG;QACtB,OAAO,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC;KACxE;IAED,kBAAkB,CAAC,GAAQ,EAAE,WAAgB;QAC3C,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE;YAChE,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SAC3B;KACF;;;;IAKD,eAAe,CAAC,MAAoD;QAClE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAEjC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC7C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;KACF;;;;IAKD,aAAa,CAAC,MAAoD;QAChE,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEhC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;KACF;IAED,YAAY,CAAC,KAAU,EAAE,MAAc;QACrC,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAClD;IAED,eAAe,CAAC,QAAa,EAAE,aAA4B;QACzD,IAAI,QAAQ,IAAI,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,CAAC,EAAE;YACpD,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAEtC,IAAI,aAAa,CAAC,OAAO,EAAE;gBACzB,OAAO,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC,SAAS,IAAI,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,UAAU,IAAI,KAAK,CAAC;aACxG;iBAAM;gBACL,OAAO,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;aACjC;SACF;QAED,OAAO,QAAQ,CAAC;KACjB;IAED,cAAc,CAAC,GAAQ,EAAE,MAAqB;QAC5C,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAEtC,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;aACtD;iBAAM;gBACL,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aAC9C;SACF;QAED,OAAO,QAAQ,CAAC;KACjB;IAED,cAAc,CAAC,GAAQ,EAAE,WAA0B;QACjD,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,KAAK,CAAC,CAAC;KAC5F;IAED,iBAAiB,CAAC,GAAQ,EAAE,cAA6B;QACvD,OAAO,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC;KAC3G;IAED,kBAAkB,CAAC,GAAG;QACpB,QACE,CAAC,IAAI,CAAC,UAAU;YAChB,IAAI,CAAC,gBAAgB;YACrB,GAAG,CAAC,WAAW;YACf,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC;YAC9B,CAAC,IAAI,CAAC,cAAc,EACpB;KACH;IAED,iBAAiB,CAAC,GAAG,EAAE,KAAa;QAClC,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAE;YACzE,OAAO,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACjE;QAED,OAAO,IAAI,CAAC;KACb;IAED,WAAW,CAAC,KAAK,EAAE,GAAG,EAAE,MAAqB;QAC3C,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;YACpC,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAED,sBAAsB,CAAC,OAAsB;QAC3C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzC;IAED,sBAAsB,CAAC,OAA6B;QAClD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,iBAAiB,CAAC,KAAU,EAAE,MAAsB,EAAE,GAAS;QAC7D,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAE7B,IAAI,IAAI,CAAC,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE;YACjH,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE;SACpD;QAED,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;SAC9C;KACF;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;KAC9B;IAED,WAAW,CAAC,GAAG,EAAE,SAAS;QACxB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACnC;IAED,OAAO,CAAC,KAAa;QACnB,OAAO,KAAK,CAAC;KACd;IAED,mBAAmB,CAAC,GAAQ,EAAE,WAAgB;QAC5C,IAAI,OAAO,WAAW,CAAC,QAAQ,KAAK,UAAU,EAAE;YAC9C,OAAO,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAClC;aAAM;YACL,OAAO,WAAW,CAAC,QAAQ,CAAC;SAC7B;KACF;IAED,mBAAmB;QACjB,IAAI,CAAC,0BAA0B,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;KACrD;;;;;;;IAQD,UAAU,CAAC,IAAqC;QAC9C,IAAI,IAAI,YAAY,MAAM,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,KAAK,IAAI,CAAC,CAAC;SACnE;aAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACnC,MAAM,KAAK,GAAW,IAAI,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC7B;KACF;;;;;;;;IASD,UAAU,CAAC,IAAqC,EAAE,WAAmC;QACnF,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;SACzC;aAAM;YACL,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,CAAC;YACpE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;SAC1C;KACF;IAEM,WAAW,CAAC,MAAqB;QACtC,MAAM,QAAQ,GAAmC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAC7E,mBAAmB,IAAI,mBAAmB,CAAC,cAAc,KAAK,MAAM,CAAC,QAAQ,CAC9E,CAAC;QACF,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,CAAC,IAAI,CACV,wDAAwD,MAAM,CAAC,QAAQ,oDAAoD,CAC5H,CAAC;YACF,OAAO,IAAI,CAAC;SACb;QACD,OAAO,QAAQ,CAAC,WAAW,CAAC;KAC7B;IAES,6BAA6B,CAAC,MAAM;QAC5C,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,oBAAoB,EAAE,GAAG,SAAS,CAAC;QACpF,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAES,qBAAqB;QAC7B,UAAU,CAAC;YACT,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM;oBAC9B,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;oBACrF,IAAI,SAAS,EAAE;wBACb,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC;qBACjE;iBACF,CAAC,CAAC;aACJ;SACF,CAAC,CAAC;KACJ;IAES,mBAAmB;QAC3B,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;YAC5B,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,EAAE;gBAC9D,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;SACF;QACD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAEO,iBAAiB;QACvB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,EAAE;YACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACtD;KACF;IAEO,0BAA0B,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE;YAChF,QAAQ,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE;SAC5C;QAED,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;YAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YACrD,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,EAAE;SAClD;KACF;IAEO,cAAc;QACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;;YAG7B,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;SACzB,CAAC,CAAC;KACJ;IAEO,cAAc,CAAC,QAAQ,EAAE,MAAqB;QACpD,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC;QACtE,OAAO,UAAU,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;KAC9C;IAEO,oBAAoB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;KACzF;IAEO,iBAAiB;QACvB,QACE,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,QAAQ;YACb,CAAC,IAAI,CAAC,uBAAuB;YAC7B,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,EAC5C;KACH;IAEO,qBAAqB;QAC3B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACxF,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,CAAC;KACzG;IAEO,gBAAgB,CAAC,QAAuB,EAAE,WAAuB;QACvE,MAAM,WAAW,GAAG,EAAE,CAAC;QAEvB,QAAQ,CAAC,OAAO,CAAC,WAAW;YAC1B,MAAM,eAAe,GAAG,WAAW,CAAC,IAAI,CACtC,UAAU,IAAI,WAAW,KAAK,UAAU,CAAC,IAAI,IAAI,WAAW,KAAK,UAAU,CAAC,KAAK,CAClF,CAAC;YACF,eAAe,GAAG,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrF,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;KACpB;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;SAC5C;KACF;IAEO,eAAe,CAAC,KAAa;QACnC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAEO,0BAA0B;QAChC,OAAO,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC1D;IAEO,mCAAmC;QACzC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,0BAA0B,EAAE,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAChD,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjD;KACF;IAEO,YAAY,CAAC,OAAO,EAAE,WAAoB;QAChD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;YACjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;gBACrB,IAAI,IAAI,KAAK,OAAO,EAAE;oBACpB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;gBACrB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;oBACjB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;iBAC9B;aACF,CAAC,CAAC;SACJ;KACF;;;YA9kBF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,wshBAAwC;gBACxC,SAAS,EAAE,CAAC,aAAa,CAAC;aAC3B;;;YA/DQ,aAAa;YAdpB,eAAe;YAGf,SAAS;YAYF,iBAAiB;YApBxB,iBAAiB;YAeV,WAAW;YACX,MAAM;YAgBN,cAAc;;;+BAoDpB,YAAY,SAAC,2BAA2B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gCAC1D,YAAY,SAAC,4BAA4B;mCAEzC,eAAe,SAAC,8BAA8B;8BAE9C,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;+BACjD,SAAS,SAAC,OAAO;iCACjB,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;kCAC5D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;2BAC7D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;iCAE7D,YAAY,SAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;6BACvD,YAAY,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;2BACnD,YAAY,SAAC,cAAc;kCAoB3B,SAAS,SAAC,qBAAqB;;;AChHlC;;;;;;;MAWa,sBAAsB;IAiCjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;;;;QAxBrB,iBAAY,GAAa,KAAK,CAAC;;;;;;;;QAS9B,cAAS,GAAsB,IAAI,YAAY,EAAO,CAAC;KAe/B;;;;IARhD,IAAuB,MAAM,CAAC,KAAoB;QAChD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACtD;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAID,IAAI,aAAa;;QACf,OAAO,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,KAAI,EAAE,CAAC;KACnC;IAED,IAAI,gBAAgB;QAClB,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,QAAQ,CAAC;KAC9F;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,KAAK,CAAC;KAC3D;IAED,kBAAkB,CAAC,KAAU,EAAE,MAAc;QAC3C,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAClD;IAED,mBAAmB,CAAC,MAA2B;QAC7C,OAAO,MAAM,CAAC,KAAK,IAAI,qBAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;KAC/D;IAED,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;IAEO,yBAAyB,CAAC,KAAU;QAC1C,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;YACtC,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACvF;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACxB,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;aAC3B;YAED,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjB,OAAO,KAAK,CAAC;aACd;SACF;KACF;;;YAlFF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,w6EAA+C;aAChD;;;YAjBQ,WAAW;;;oBAsBjB,KAAK,SAAC,SAAS;2BAKf,KAAK,SAAC,cAAc;wBASpB,MAAM,SAAC,cAAc;qBAOrB,KAAK,SAAC,UAAU;;;AC1CnB;;;;;;;MAYa,oBAAoB;IALjC;;QAsBqB,UAAK,GAAsB,IAAI,YAAY,EAAE,CAAC;KAuBlE;IAnBC,IAAY,YAAY;QACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC;KAC3C;IAED,OAAO,CAAC,KAAK;QACX,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IAED,iBAAiB;QACf,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;SACjC;KACF;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;KAC1B;;;YA5CF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,sWAA6C;gBAC7C,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;wBAGE,KAAK,SAAC,aAAa;oBAGnB,KAAK,SAAC,SAAS;uBAGf,KAAK,SAAC,YAAY;mBAGlB,KAAK,SAAC,QAAQ;0BAGd,KAAK,SAAC,gBAAgB;oBAGtB,MAAM,SAAC,SAAS;;;AC3BnB;;;;;;;MAWa,4BAA4B;;;YAJxC,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,moBAAsD;aACvD;;;wBAGE,KAAK,SAAC,aAAa;uBAGnB,KAAK,SAAC,YAAY;;;ACfrB;;;;;;;MAYa,8BAA8B;IAkBzC,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;;QAfhE,cAAS,GAAY,KAAK,CAAC;KAeyC;;IAVpE,IAAyB,QAAQ,CAAC,QAA+B;QAC/D,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC3B;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;YArBF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,uKAAwD;gBACxD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAdQ,qBAAqB;;;wBAiB3B,KAAK,SAAC,cAAc;uBAMpB,KAAK,SAAC,YAAY;;;ACrBrB;;;;;;;MAWa,8BAA8B;IAczC,YAAoB,OAAmB,EAAS,QAAmB;QAA/C,YAAO,GAAP,OAAO,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;KAAI;IAEvE,eAAe;QACb,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,EAAE;YAClD,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;KACF;IAED,WAAW;QACT,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAEO,cAAc;QACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACnC,CAAC,CAAC;KACJ;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,qCAAqC,CAAC,CAAC,WAAW,CAAC;KACpG;IAEO,YAAY;QAClB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,2BAA2B,CAAC,CAAC;QAEvF,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aACrB,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;aAChC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;KAChC;IAEO,wBAAwB;QAC9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAiB;YAC/E,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACJ;IAEO,oBAAoB;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,0BAA0B;QAChC,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtC,IAAI,CAAC,YAAY,GAAG,SAAS,GAAG,aAAa,CAAC;KAC/C;;;YAtEF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,6eAAwD;aACzD;;;YAd2C,UAAU;YAAoB,SAAS;;;uBAiBhF,KAAK,SAAC,YAAY;wBAGlB,KAAK,SAAC,aAAa;;;ACUtB;;;;MA2Ca,aAAa;;;YAvCzB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,YAAY;oBACZ,cAAc;oBACd,qBAAqB;oBACrB,iBAAiB;oBACjB,eAAe;oBACf,aAAa;oBACb,eAAe;oBACf,aAAa;oBACb,YAAY;oBACZ,eAAe;oBACf,YAAY;iBACb;gBACD,YAAY,EAAE;oBACZ,gBAAgB;oBAChB,0BAA0B;oBAC1B,2BAA2B;oBAC3B,0BAA0B;oBAC1B,6BAA6B;oBAC7B,sBAAsB;oBACtB,oBAAoB;oBACpB,2BAA2B;oBAC3B,4BAA4B;oBAC5B,8BAA8B;oBAC9B,8BAA8B;oBAC9B,4BAA4B;oBAC5B,8BAA8B;iBAC/B;gBACD,OAAO,EAAE;oBACP,gBAAgB;oBAChB,2BAA2B;oBAC3B,4BAA4B;oBAC5B,8BAA8B;iBAC/B;gBACD,SAAS,EAAE,CAAC,WAAW,CAAC;aACzB;;;ACxED;;;;;;;AAOA,IAAY,aA8BX;AA9BD,WAAY,aAAa;;IAEvB,4DAAc,CAAA;;IAGd,wDAAY,CAAA;;IAGZ,2DAAa,CAAA;;IAGb,sDAAW,CAAA;;IAGX,oDAAU,CAAA;;IAGV,gDAAQ,CAAA;;IAGR,kDAAS,CAAA;;IAGT,kDAAS,CAAA;;IAGT,oDAAU,CAAA;;IAGV,+CAAO,CAAA;AACT,CAAC,EA9BW,aAAa,KAAb,aAAa;;ACDzB;;;;;;;;;;;MAYsB,uBAAuB;IAD7C;;;;;;;;;;;;QAgByC,cAAS,GAAY,KAAK,CAAC;;;;;;;;QAY9C,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGxE,OAAE,GAAG,IAAI,EAAE,CAAC;QAIJ,cAAS,GAAa,KAAK,CAAC;KAuDrC;;;;;;;;;;IA5CC,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACtC;IAED,WAAW,CAAC,KAAqB;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC;YAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,KAAK,KAAK,IAAI,CAAC,aAAa,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;KACF;;;YAvFF,SAAS;;;mBAGP,KAAK,SAAC,MAAM;wBAaZ,KAAK,SAAC,cAAc;oBAGpB,KAAK,SAAC,SAAS;qBASf,MAAM,SAAC,UAAU;uBAkBjB,KAAK,SAAC,YAAY;;AA9BoB;IAAf,YAAY,EAAE;0DAA4B;;AClBpE;;;;;;;;;;;;;;;;;;;;MAgCa,mBAAoB,SAAQ,uBAAuB;IAG9D,YAAoB,cAAiC;QACnD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAmB;KAEpD;;;;;;;;;;;;;;;;;;;;IAqBD,KAAK;QACH,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC1C;KACF;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;KACpB;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,SAAS,CAAC,KAAoB,EAAE,KAAc;QAC5C,IAAI,KAAK,CAAC,KAAK,KAAK,aAAa,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,KAAK,EAAE;YAChF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAExB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;IAES,gBAAgB,CAAC,KAAqB;QAC9C,IAAI,CAAC,aAAa,GAAG,OAAO,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,CAAC;QAClF,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;;;YAjEF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,+tBAA2C;gBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;wBAClD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YA5CC,iBAAiB;;;4BA8ChB,SAAS,SAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;AChD9C;;;;;;;IAOY;AAAZ,WAAY,iBAAiB;;IAE3B,qEAAU,CAAA;;IAEV,iEAAQ,CAAA;;IAER,iEAAQ,CAAA;AACV,CAAC,EAPW,iBAAiB,KAAjB,iBAAiB;;ACU7B,MAAM,8BAA8B,GAAG,GAAG,CAAC;AAC3C,MAAM,4BAA4B,GAAG,OAAO,CAAC;AAC7C,MAAM,4BAA4B,GAAG,OAAO,CAAC;AAEtC,MAAM,sBAAsB,GAAG;IACpC,EAAE,EAAmB;QACnB,MAAM,EAAE,eAAe;KACxB;IACD,EAAE,EAAmB;QACnB,MAAM,EAAE,sBAAsB;KAC/B;IACD,EAAE,EAAmB;QACnB,MAAM,EAAE,wBAAwB;KACjC;IACD,EAAE,EAAmB;QACnB,MAAM,EAAE,mBAAmB;KAC5B;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;MAkBsB,oBAAoB;IAmdxC,YAAY,eAAkC;;;;;;;;;;;;QAvcP,cAAS,GAAY,KAAK,CAAC;;;;;;;;;;QA0FpB,oBAAe,GAAa,KAAK,CAAC;;;;;;;;;;QAWhC,sBAAiB,GAAa,KAAK,CAAC;;;;;;;;;;QAWhE,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;;;;;;;QAiB/C,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEpF,iBAAY,GAAwC,EAAE,CAAC;QAEvD,sBAAiB,GAAY,IAAI,CAAC;QAClC,kBAAa,GAAY,IAAI,CAAC;QAC9B,gBAAW,GAAY,KAAK,CAAC;QAG7B,wBAAmB,GAAW,EAAE,CAAC;QAKjC,mBAAc,GAAwC,EAAE,CAAC;QAE/C,uBAAkB,GAAwC,EAAE,CAAC;QAC7D,qBAAgB,GAAwC,EAAE,CAAC;QAC3D,mBAAc,GAAQ,IAAI,CAAC;QAE7B,mBAAc,GAAa,KAAK,CAAC;QACjC,kBAAa,GAAY,GAAG,CAAC;QAC7B,cAAS,GAAa,KAAK,CAAC;QAC5B,wBAAmB,GAAa,KAAK,CAAC;QACtC,gBAAW,GAAY,OAAO,CAAC;QAC/B,gBAAW,GAAY,OAAO,CAAC;QAC/B,qBAAgB,GAAY,CAAC,CAAC;QAC9B,gBAAW,GAAuB,iBAAiB,CAAC,UAAU,CAAC;QAG/D,aAAQ,GAA8C,EAAE,CAAC;QACzD,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAa,KAAK,CAAC;QAC5B,UAAK,GAAa,KAAK,CAAC;;;QAKxB,mBAAc,GAAY,KAAK,CAAC;QAiStC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;IA7RD,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;KACjC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;IAWD,IAA8B,YAAY,CAAC,KAAa;QACtD,MAAM,WAAW,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,WAAW,GAAG,CAAC,GAAG,WAAW,GAAG,8BAA8B,CAAC;KAC5G;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;;IAWD,IAAqC,kBAAkB,CAAC,KAAc;QACpE,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACpD;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;;;;;;;;;;;IAcD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,4BAA4B,CAAC;QAEzD,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;IAcD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,4BAA4B,CAAC;QAEzD,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;IAUD,IAAiC,eAAe,CAAC,KAAa;QAC5D,MAAM,UAAU,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;QAE3E,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;KACvE;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;;;IAUD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACxC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUD,IAAgC,aAAa,CAAC,aAAsB;QAClE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;KACvD;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;IAUD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACxC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;IAGD,IAAqB,IAAI,CAAC,IAAa;QACrC,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;;;IAcD,IAAwB,OAAO,CAAC,OAAkD;QAChF,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QAEtD,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;IAaD,IAA4B,UAAU,CAAC,UAA6B;QAClE,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI,iBAAiB,GAAG,UAAU,GAAG,iBAAiB,CAAC,UAAU,CAAC;QAC/F,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACjC,KAAK,YAAY;gBACf,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,UAAU,CAAC;gBAChD,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,QAAQ,CAAC;gBAC9C,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC,QAAQ,CAAC;gBAC9C,MAAM;SACT;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;IAWD,IAA8B,YAAY,CAAC,YAAiB;QAC1D,IAAI,CAAC,aAAa,GAAG,YAAY,IAAI,YAAY,KAAK,CAAC,IAAI,YAAY,KAAK,KAAK,GAAG,YAAY,GAAG,SAAS,CAAC;KAC9G;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BD,IAAyB,QAAQ,CAAC,KAAsB;QACtD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,sBAAsB,CAAC,eAAe,CAAC,GACvC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACrC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxD;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAChE;IAMD,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;KAC3E;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,aAAa;QACX,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;IAED,UAAU,CAAC,OAA+B;QACxC,IAAI,OAAO,EAAE;YACX,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;gBAC/B,IAAI,CAAC,OAAO,GAAyB,OAAO,CAAC;aAC9C;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;gBACnC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAS,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAClF;SACF;KACF;IAED,aAAa,CAAC,MAAc,EAAE,MAAoC,EAAE,UAA6B;QAC/F,QAAQ,UAAU;YAChB,KAAK,iBAAiB,CAAC,UAAU;gBAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACzC,KAAK,iBAAiB,CAAC,QAAQ;gBAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,KAAK,iBAAiB,CAAC,QAAQ;gBAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACxC;KACF;IAED,UAAU,CAAC,MAAc,EAAE,MAAoC;QAC7D,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;KACpE;IAED,QAAQ,CAAC,MAAc,EAAE,MAAoC;QAC3D,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACtE;IAED,QAAQ,CAAC,MAAc,EAAE,MAAoC;QAC3D,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;KAClE;IAED,kBAAkB,CAAC,KAAU,EAAE,OAAY;QACzC,OAAO,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,MAAW,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;KAC1F;IAED,kBAAkB,CAAC,KAAU,EAAE,OAAY;QACzC,IAAI,OAAO,EAAE;YACX,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,MAAW,KAAK,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;SAChH;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAED,mBAAmB,CAAC,MAAoC,EAAE,gBAAyB,IAAI;QACrF,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC;QAEnD,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;;QAGrC,IAAI,IAAI,CAAC,aAAa,IAAI,aAAa,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SACjC;aAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;SACjC;QAED,IAAI,aAAa,EAAE;YACjB,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC;YAE1D,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAC/B;KACF;IAED,eAAe,CAAC,KAAU;;QAExB,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxF;IAED,OAAO,CAAC,KAAU,EAAE,UAAe;QACjC,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,UAAU,EAAE;YACxC,OAAO,KAAK,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,QAAQ,EAAE,CAAC;SACnD;QAED,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,MAAM,KAAK,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS,CAAC,EAAE;YAChG,KAAK,GAAG,GAAG,KAAK,EAAE,CAAC;SACpB;QAED,OAAO,KAAK,KAAK,UAAU,CAAC;KAC7B;IAED,cAAc,CAAC,MAAc,EAAE,OAA4C,EAAE,UAA6B;QACxG,IAAI,MAAM,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YACvC,MAAM,UAAU,GAAwC,EAAE,CAAC;YAC3D,IAAI,sBAAsB,GAAY,KAAK,CAAC;YAC5C,IAAI,iBAA+B,CAAC;YAEpC,OAAO,CAAC,OAAO,CAAC,MAAM;gBACpB,IAAI,SAAS,IAAI,MAAM,EAAE;oBACvB,sBAAsB,GAAG,KAAK,CAAC;oBAC/B,QAAQ,iBAAiB,GAAG,MAAM,EAAE;iBACrC;gBAED,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;oBACpF,IAAI,IAAI,CAAC,iBAAiB,IAAI,CAAC,sBAAsB,EAAE;wBACrD,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBACnC,sBAAsB,GAAG,IAAI,CAAC;qBAC/B;oBAED,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAED,eAAe,CAAC,OAA6C;QAC3D,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE1D,MAAM,UAAU,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,GAAG,mBAAM,IAAI,CAAC,cAAc,EAAG,GAAG,WAAW,CAAC;QAE/F,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;SAC5E;KACF;IAED,aAAa,CAAC,KAAU,EAAE,OAA4C,EAAE,UAAmB,KAAK;QAC9F,MAAM,WAAW,GAAG,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,KAAK,GAAG,KAAK,CAAC;QAElB,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE;YAChC,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC,WAAW,EAAE;gBAChC,WAAW,GAAG,MAAM,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,KAAK,IAAI,KAAK,EAAE;gBACzB,OAAO,MAAM,CAAC;aACf;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE;gBACrC,KAAK,GAAG,IAAI,CAAC;aACd;SACF;QAED,OAAO,WAAW,CAAC;KACpB;IAED,oBAAoB;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACnD,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE;gBAClE,OAAO,CAAC,CAAC;aACV;SACF;QACD,OAAO,IAAI,CAAC;KACb;IAED,cAAc,CAAC,IAAS,EAAE,IAAS;QACjC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACtD;IAED,iBAAiB;QACf,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAExC,MAAM,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE/E,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACpD;QAED,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,EAAE;YAC3D,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;YAEtC,IAAI,CAAC,mBAAmB,GAAG,WAAW,CAAC,KAAK,CAAC;SAC9C;aAAM,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,UAAU,EAAE;YAChG,IAAI,CAAC,gCAAgC,EAAE,CAAC;YAExC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YACrD,OAAO;SACR;aAAM,IAAI,UAAU,IAAI,CAAC,WAAW,EAAE;YACrC,MAAM,6BAA6B,GAAG,CAAC,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC;YAE1G,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,6BAA6B,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;YAEpF,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,OAAO;SACR;KACF;;IAGD,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC/F,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,OAAO;SACR;;QAGD,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;YACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAES,2BAA2B,CAAC,OAA+B;QACnE,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC;SACjD;QAED,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IAES,0BAA0B;QAClC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;SACnC;KACF;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAEO,oBAAoB;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACxG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEhD,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAEO,cAAc,CAAC,OAAY,EAAE,OAAY;QAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACtD,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QAEtD,OAAO,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;KACvD;IAEO,mBAAmB,CACzB,OAA4C,EAC5C,aAAqB,EACrB,uBAA6C;QAE7C,QACE,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,aAAa,CAAC;aACrD,uBAAuB,IAAI,uBAAuB,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,aAAa,CAAC,CAAC,EACnG;KACH;IAEO,mBAAmB,CAAC,YAAuD;QACjF,MAAM,gBAAgB,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC;QAC/C,MAAM,wBAAwB,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;QAE3E,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;QAE3C,IAAI,IAAI,CAAC,iBAAiB,IAAI,wBAAwB,CAAC,MAAM,GAAG,CAAC,EAAE;YACjE,OAAO,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAC;SAC/D;QAED,OAAO,wBAAwB,CAAC;KACjC;IAEO,WAAW,CAAC,gBAAqC;QACvD,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YAC5C,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACnD;KACF;IAEO,aAAa,CAAC,aAA2B,EAAE,wBAAiC,KAAK;QACvF,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;QAEhD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,QACE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,MAAM,qBAAqB,KAAK,IAAI,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,EAC7G;SACH;QAED,OAAO,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;KACtC;IAEO,kBAAkB,CACxB,YAAuD,EACvD,wBAAiC,KAAK,EACtC,uBAA6C;QAE7C,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,aAAa;YAC3D,IACE,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;gBACrC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,aAAa,CAAC,KAAK,EAAE,uBAAuB,CAAC;gBAC1F,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,qBAAqB,CAAC,EACzD;gBACA,OAAO,kBAAkB,CAAC;aAC3B;YAED,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvC,OAAO,kBAAkB,CAAC;SAC3B,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,uBAAuB,CAAC,gBAA2C;QACzE,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC,uBAAuB,EAAE,aAAa;YACpE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;YACzC,MAAM,6BAA6B,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,EAAE,uBAAuB,CAAC,CAAC;YAEtG,IAAI,6BAA6B,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5C,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC;gBAEhD,uBAAuB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,GAAG,6BAA6B,CAAC,CAAC;aACjG;YAED,OAAO,uBAAuB,CAAC;SAChC,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,gBAAgB,CAAC,gBAA8B,EAAE;QACvD,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;QAEhD,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,OAAO,IAAI,CAAC,KAAK,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,IAAI,OAAO,CAAC,EAAE;YAC/G,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;YACxB,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACrD,OAAO,IAAI,CAAC;SACb;QAED,OAAO,IAAI,CAAC;KACb;IAEO,uBAAuB,CAAC,MAAoC;QAClE,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;SACjC;KACF;IAEO,WAAW,CAAC,KAAU;QAC5B,IAAI,KAAK,KAAK,IAAI,CAAC,aAAa,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC;SACtE;QAED,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;KAC7B;IAEO,gCAAgC;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAErF,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;YAChC,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;SAC5C;KACF;;;YAr3BF,SAAS;;;YAjDD,iBAAiB;;;wBA8DvB,KAAK,SAAC,cAAc;oBAGpB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;mBAGd,KAAK,SAAC,MAAM;4BAyBZ,KAAK,SAAC,kBAAkB;mBA2BxB,KAAK,SAAC,QAAQ;uBAed,KAAK,SAAC,YAAY;oBAGlB,KAAK,SAAC,SAAS;8BAWf,KAAK,SAAC,qBAAqB;gCAW3B,KAAK,SAAC,uBAAuB;qBAW7B,MAAM,SAAC,UAAU;4BAiBjB,MAAM,SAAC,eAAe;0BA2CtB,KAAK,SAAC,eAAe;2BAiBrB,KAAK,SAAC,iBAAiB;iCAmBvB,KAAK,SAAC,wBAAwB;yBAoB9B,KAAK,SAAC,eAAe;yBAwBrB,KAAK,SAAC,eAAe;8BAoBrB,KAAK,SAAC,oBAAoB;uBAkB1B,KAAK,SAAC,YAAY;4BAkBlB,KAAK,SAAC,mBAAmB;uBAgBzB,KAAK,SAAC,YAAY;mBAWlB,KAAK,SAAC,QAAQ;sBAqBd,KAAK,SAAC,WAAW;yBAqBjB,KAAK,SAAC,eAAe;2BA4BrB,KAAK,SAAC,iBAAiB;uBAkCvB,KAAK,SAAC,YAAY;;AAvboB;IAAf,YAAY,EAAE;uDAA4B;AA+EhC;IAAf,YAAY,EAAE;mDAAiB;AAWJ;IAAf,YAAY,EAAE;6DAAmC;AAWhC;IAAf,YAAY,EAAE;+DAAqC;;AC5JtF;;;;;;;MAQa,oBAAoB;IAe/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAdpC,eAAU,GAAW,OAAO,CAAC;QAC7B,eAAU,GAAW,OAAO,CAAC;QAEpB,YAAO,GAAgB,IAAI,WAAW,CAAC;YAC9C,iBAAiB,EAAE,MAAM;SAC1B,CAAC,CAAC;QAGK,aAAQ,GAAG,EAAE,CAAC;KAMkB;IAJxC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAID,eAAe,CAAC,KAAU,EAAE,YAAkB;QAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;QAE/D,MAAM,MAAM,mCAAQ,qBAAqB,KAAE,MAAM,EAAE,KAAK,GAAE,CAAC;QAE3D,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aAC3E,IAAI,CAAC,GAAG,CAAC,CAAC,QAAoB,KAAK,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACtF;IAED,gBAAgB,CAAC,KAAsB,EAAE,YAAkB;QACzD,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,YAAY,CAAC,CAAC;QAE/D,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,qBAAqB,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;aACrF,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACrD;IAED,gBAAgB,CAAC,GAAW,EAAE,UAAkB,EAAE,UAAkB;QAClE,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEO,uBAAuB,CAAC,KAAiB;QAC/C,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;YAEvE,IAAI,CAAC,eAAe,EAAE,CAAC;YAEvB,OAAO,aAAa,CAAC;SACtB;QAED,OAAO,EAAE,CAAC;KACX;IAEO,kBAAkB,CAAC,IAAS;QAClC,IAAI,EAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,IAAI,CAAC,UAAU,CAAC,CAAA,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAEvC,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;SACtB;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;KACzB;IAEO,UAAU,CAAC,IAAI,EAAE,QAAgB;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,QAAQ,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;8EACN,CAAC,CAAC;KAC7E;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAEzD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;KACF;;;YA/EF,UAAU;;;YAlBF,UAAU;;;ACEnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoEa,8BAA8B;;IAEzC,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YALrD,SAAS,SAAC;gBACT,QAAQ,EAAE,2BAA2B;aACtC;;;YArEmB,WAAW;;;AC+B/B,MAAM,sBAAsB,GAAG,CAAC,CAAC;AACjC,MAAM,+BAA+B,GAAG,QAAQ,CAAC;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgEa,gBAAiB,SAAQ,oBAAoB;IAwBxD,YACS,OAAmB,EACnB,OAAwB,EACxB,cAAoC,EACpC,QAAmB,EAClB,cAAiC,EACjC,eAAyC,EACzC,SAAuB,EAC/B,eAAkC;QAElC,KAAK,CAAC,eAAe,CAAC,CAAC;QAThB,YAAO,GAAP,OAAO,CAAY;QACnB,YAAO,GAAP,OAAO,CAAiB;QACxB,mBAAc,GAAd,cAAc,CAAsB;QACpC,aAAQ,GAAR,QAAQ,CAAW;QAClB,mBAAc,GAAd,cAAc,CAAmB;QACjC,oBAAe,GAAf,eAAe,CAA0B;QACzC,cAAS,GAAT,SAAS,CAAc;QAvBjC,cAAS,GAAW,oBAAoB,CAAC;QACzC,cAAS,GAAY,KAAK,CAAC;QAE3B,2BAAsB,GAAY,KAAK,CAAC;QACxC,cAAS,GAAG,CAAC,CAAC;QAEd,sBAAiB,GAAY,IAAI,CAAC;QAE1B,uBAAkB,GAAY,KAAK,CAAC;QA+fpC,aAAQ,GAAG;YACjB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC,CAAC;QA7eA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,IAAI,iBAAiB,CAAC,KAAc;QAClC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAEhC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAEpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;SACjC;KACF;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAClC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,IAAI,OAAO,CAAC,aAAa,EAAE;YACzB,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACtD;KACF;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;KACzB;IAED,SAAS,CAAC,KAAW;QACnB,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC;QAC1B,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;QAGtC,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG,KAAK,aAAa,CAAC,GAAG,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACtF,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SAC1C;;QAGD,IAAI,GAAG,KAAK,aAAa,CAAC,OAAO,IAAI,GAAG,KAAK,aAAa,CAAC,SAAS,EAAE;YACpE,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,GAAG,KAAK,aAAa,CAAC,OAAO,EAAE;oBACjC,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,gBAAgB,EAAE,CAAC;iBACzB;aACF;YAED,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACjE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC7E,OAAO;SACR;;QAGD,IAAI,GAAG,KAAK,aAAa,CAAC,GAAG,IAAI,GAAG,KAAK,aAAa,CAAC,GAAG,EAAE;YAC1D,IAAI,GAAG,KAAK,aAAa,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;gBAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;aACzB;YAED,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACnC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;;gBAEjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;aAC/F;YACD,OAAO;SACR;;QAGD,IAAI,GAAG,KAAK,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;YACtE,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,IAAI,UAAU,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAE/G,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAEnC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;YAC3D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAEzB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBACjB,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACpD;YACD,OAAO;SACR;QAED,IAAI,GAAG,KAAK,aAAa,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;SACnC;KACF;IAED,OAAO,CAAC,KAAW;QACjB,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC;QACzC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAEtC,MAAM,UAAU,GAAG,GAAG,KAAK,aAAa,CAAC,OAAO,IAAI,GAAG,KAAK,aAAa,CAAC,SAAS,IAAI,GAAG,KAAK,aAAa,CAAC,KAAK,CAAC;QAEnH,IAAI,UAAU,EAAE;YACd,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;oBAC5D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACzE;aACF;iBAAM;;;gBAGL,MAAM,wBAAwB,GAC5B,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,KAAK,IAAI,CAAC,mBAAmB,CAAC;gBAE/F,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBAE/B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oBACjB,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;qBAAM,IAAI,wBAAwB,EAAE;oBACnC,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;iBAC9C;gBAED,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;;YAGD,IAAI,IAAI,CAAC,mBAAmB,KAAK,UAAU,EAAE;gBAC3C,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;gBAEpC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;aACnC;SACF;QAED,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;KACvC;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CACzE,MAAM,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAC5D,GAAG,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EACtC,oBAAoB,EAAE,EACtB,GAAG,CAAC;gBACF,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;aAChC,CAAC,EACF,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAChC,CAAC;YAEF,IAAI,CAAC,cAAc,GAAG,eAAe,CAAC,SAAS,CAAC,KAAK;gBACnD,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC,KAAK,EAAE;oBAClD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;iBAChC;aACF,CAAC,CAAC;SACJ;KACF;IAED,kBAAkB,CAAC,KAAK;QACtB,IAAI,CAAC,IAAI,CAAC,sBAAsB,KAAK,CAAC,IAAI,CAAC,cAAc,IAAI,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACjG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACzB;QACD,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;KACrC;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,MAAM,KAAK,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;QAEnD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACxF,KAAK,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,KAAK,CAAC,EACnD,KAAK,IAAI,IAAI,CAAC,mBAAmB,EAAE,CACpC,CAAC;KACH;IAED,uBAAuB,CAAC,KAAK,EAAE,KAAK;QAClC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEnD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YAEzC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;SAC3C;KACF;IAED,gBAAgB,CAAC,KAAK;;QACpB,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,IAAI,CAAA,MAAA,IAAI,CAAC,cAAc,0CAAE,KAAK,MAAK,KAAK,EAAE;YACxE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YAEnC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACtF,IAAI,IAAI,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,EAC9C,KAAK,IAAI,IAAI,CAAC,uBAAuB,EAAE,CACxC,CAAC;SACH;KACF;IAED,2BAA2B,CAAC,IAAI;QAC9B,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAChC;QAED,UAAU,CAAC;YACT,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;SACrC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KACvB;IAED,oBAAoB;QAClB,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAEtE,IAAI,gBAAgB,EAAE;YACpB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAEnF,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,IAAI,UAAU,CAAC,KAAK,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAClH;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACrC,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAE1E,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,KAAK,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1G;KACF;IAED,gBAAgB;QACd,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAEtE,IAAI,gBAAgB,EAAE;YACpB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YAE7E,IAAI,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,IAAI,UAAU,CAAC,KAAK,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAClH;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YACrC,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;YAEzC,MAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAEjD,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,KAAK,KAAK,gBAAgB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1G;KACF;IAED,qBAAqB;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5C,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;QAED,IAAI,CAAC,sBAAsB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC9C;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtB;KACF;IAED,sBAAsB,CAAC,MAAe;QACpC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;KACrC;IAED,aAAa,CAAC,MAAoC,EAAE,KAAW;QAC7D,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,aAAa,GACjB,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE,IAAI,CAAC,YAAY,IAAI,UAAU,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzG,IAAI,KAAK,EAAE;YACT,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAChD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,eAAe,CAAC,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACpD;QAED,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;KACpD;IAED,QAAQ,CAAC,KAAK;QACZ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,CAAC;QAC5F,MAAM,SAAS,GAAG,CAAC,YAAY,CAAC,MAAM,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,CAAC;QAE1F,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC9B;IAED,aAAa;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;KACzC;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;KAC1C;IAED,kBAAkB,CAAC,KAAiB;QAClC,IACE,IAAI,CAAC,SAAS;YACd,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YAClD,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;aACrD,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EACnF;;YAEA,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAEnC,IAAI,CAAC,iBAAiB,EAAE,CAAC;;YAGzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/F;aAAM;YACL,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;gBAChE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;aACtB;SACF;KACF;IAED,iBAAiB,CAAC,KAAa;QAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,MAAM,GAAW,cAAc,CAAC;QAEpC,IACE,IAAI,CAAC,WAAW;aACf,IAAI,CAAC,OAAO;gBACX,IAAI,CAAC,aAAa,EAAE;gBACpB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC;gBAC5D,IAAI,CAAC,iBAAiB,CAAC,EACzB;YACA,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;YACvF,MAAM,cAAc,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC;YAEpD,MAAM,WAAW,GAAG,wCAAwC,CAAC;YAC7D,MAAM,YAAY,GAAG,SAAS,CAAC;YAE/B,IAAI,WAAW,CAAC;YAChB,IAAI,YAAY,CAAC;YACjB,IAAI,SAAS,CAAC;YAEd,QAAQ,IAAI,CAAC,UAAU;gBACrB,KAAK,iBAAiB,CAAC,UAAU,CAAC;gBAClC,KAAK,iBAAiB,CAAC,QAAQ;oBAC7B,MAAM,iBAAiB,GAAG,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;oBAE7D,IAAI,iBAAiB,GAAG,CAAC,CAAC,EAAE;wBAC1B,WAAW,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC;wBAE7D,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;wBAClG,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;wBAE5E,MAAM,GAAG,WAAW,GAAG,WAAW,GAAG,YAAY,GAAG,YAAY,GAAG,SAAS,CAAC;qBAC9E;oBAED,MAAM;gBACR,KAAK,iBAAiB,CAAC,QAAQ;oBAC7B,MAAM,qBAAqB,GAAG,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBAErE,IAAI,qBAAqB,GAAG,CAAC,CAAC,EAAE;wBAC9B,WAAW,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,qBAAqB,CAAC,CAAC;wBACjE,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;wBAE/D,MAAM,GAAG,WAAW,GAAG,WAAW,GAAG,YAAY,GAAG,YAAY,CAAC;qBAClE;oBACD,MAAM;aACT;SACF;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC9B;IAED,QAAQ,CAAC,KAAK;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;KACtD;IAED,wBAAwB,CAAC,OAAO;QAC9B,QACE,OAAO,KAAK,CAAC;YACb,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE;YACd,OAAO,KAAK,EAAE,EACd;KACH;IAED,aAAa,CAAC,KAAa;QACzB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE;YAC9E,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC;KACF;IAEO,uBAAuB;QAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,+BAA+B,CAAC,CAAC;KACtE;IAEO,KAAK;QACX,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC;QAEtC,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC1B;IAEO,mBAAmB;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAClF,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;;YAElE,UAAU,CAAC,MAAM,IAAI,CAAC,uBAAuB,EAAE,EAAE,GAAG,CAAC,CAAC;SACvD,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAEO,uBAAuB;QAC7B,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;KACxC;IAEO,mBAAmB;QACzB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QAEzB,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;KACnC;IAMO,IAAI;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAEpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAE3C,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,eAAe,CAAC,QAAgB,EAAE;QACxC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;KAC7D;IAEO,oBAAoB;QAC1B,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,gBAAgB,CAAC,aAAa,EACnC,sBAAsB,EACtB,IAAI,CAAC,OAAO,EACZ,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAChC;IAEO,YAAY,CAAC,SAAiB;QACpC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACzD;KACF;;;YAplBF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,iiIAAwC;gBACxC,SAAS,EAAE;oBACT,oBAAoB;oBACpB,wBAAwB;oBACxB;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;wBAC/C,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;wBAC/C,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YA5FC,UAAU;YAEV,eAAe;YAmBR,oBAAoB;YAhB3B,SAAS;YART,iBAAiB;YAkBV,wBAAwB;YANxB,YAAY;YAQZ,iBAAiB;;;kCA6EvB,YAAY,SAAC,8BAA8B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;+BAE7D,SAAS,SAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;6BAClD,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;0BAChD,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;sBACzD,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACtG/C,MAAM,gCAAgC,GAAG;IAC9C,EAAE,EAA6B;QAC7B,aAAa,EAAE,wBAAwB;QACvC,2BAA2B,EAAE,kCAAkC;QAC/D,WAAW,EAAE,cAAc;QAC3B,eAAe,EAAE,oBAAoB;KACtC;IACD,EAAE,EAA6B;QAC7B,aAAa,EAAE,4BAA4B;QAC3C,2BAA2B,EAAE,uCAAuC;QACpE,WAAW,EAAE,gBAAgB;QAC7B,eAAe,EAAE,wBAAwB;KAC1C;IACD,EAAE,EAA6B;QAC7B,aAAa,EAAE,0BAA0B;QACzC,2BAA2B,EAAE,mCAAmC;QAChE,WAAW,EAAE,eAAe;QAC5B,eAAe,EAAE,sBAAsB;KACxC;IACD,EAAE,EAA6B;QAC7B,aAAa,EAAE,yBAAyB;QACxC,2BAA2B,EAAE,mCAAmC;QAChE,WAAW,EAAE,uBAAuB;QACpC,eAAe,EAAE,kBAAkB;KACpC;CACF;;ACfD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0CsB,8BAA8B;IAuTlD,YAAsB,aAA4B,EAAE,eAAkC;QAAhE,kBAAa,GAAb,aAAa,CAAe;;;;;;;;;;;;QA3SX,cAAS,GAAY,KAAK,CAAC;;;;;;;;QA0C9C,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;QAE1E,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAsB,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAE5C,WAAM,GAAQ,YAAY,CAAC;QAC3B,gCAA2B,GAAY,IAAI,CAAC;QAC5C,+BAA0B,GAAY,IAAI,CAAC;QAG7C,WAAM,GAAa,KAAK,CAAC;QAMzB,oBAAe,GAAa,KAAK,CAAC;QAClC,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAa,KAAK,CAAC;QAgPlC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;IA1OD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,0BAA0B,CAAC;KAC5E;;;;;;;;;;IAWD,IAAsB,KAAK,CAAC,KAAc;QACxC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;IASD,IAAyB,OAAO,CAAC,IAAmB;QAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;QAElC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAClC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqCD,IAAyB,QAAQ,CAAC,KAAgC;QAChE,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,gCAAgC,CAAC,eAAe,CAAC,GACjD,gCAAgC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC/C,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,gCAAgC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAClE;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,gCAAgC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1E;;;;;;;;IASD,IAAyB,OAAO,CAAC,KAAoB;QACnD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACxE,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;SACtD;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASD,IAAyB,OAAO,CAAC,KAAoB;QACnD,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC3E,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAE9B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SACtD;KACF;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAgC,cAAc,CAAC,KAAc;QAC3D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACpC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;IASD,IAA2B,SAAS,CAAC,IAAmB;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAEtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAClC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;IAQD,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;;IAID,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;;;IAID,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAED,yBAAyB,CAAE,EAAc;QACvC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,OAAwB;QAC/B,MAAM,KAAK,GAAsB,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;QACrD,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAChF,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAE1E,IAAI,IAAI,CAAC,uBAAuB,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YACpD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YAC9C,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YAC/F,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;YAEhD,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE;YAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,2BAA2B,CAAC;YAE9D,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,EAAE;YAC1G,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;YAElD,OAAO;gBACL,IAAI,EAAE;oBACJ,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAED,mBAAmB,CAAC,SAAc;QAChC,OAAO,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnG;IAED,UAAU,CAAC,SAA4B;QACrC,IAAI,CAAC,6BAA6B,EAAE,CAAC;QAErC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE;YACvD,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;SACzC;QAED,IAAI,CAAC,SAAS,EAAE;YACd,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE;YACzC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SAC7B;QAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE;YACrC,IAAI,CAAC,SAAS,GAAG;gBACf,KAAK,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,KAAK,CAAC;gBACrD,GAAG,EAAE,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,GAAG,CAAC;aAClD,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAClC;QAED,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1C;IAES,gBAAgB,CAAC,KAAa;QACtC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACvD;;IAGS,WAAW,CAAC,KAAU;QAC9B,MAAM,KAAK,GAAG,OAAO,KAAK,KAAK,QAAQ,qBAAQ,KAAK,IAAK,KAAK,CAAC;;QAE/D,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;IAES,aAAa,CAAC,KAAU;QAChC,MAAM,KAAK,qBAAQ,KAAK,CAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAES,eAAe,CAAC,SAAiB,EAAE,OAAe;QAC1D,IAAI,SAAS,KAAK,EAAE,IAAI,OAAO,KAAK,EAAE,EAAE;YACtC,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACjE;aAAM,IAAI,SAAS,KAAK,EAAE,EAAE;YAC3B,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;SACpC;aAAM;YACL,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAClC;KACF;IAEO,wBAAwB,CAAC,KAAU;QACzC,IAAI,KAAK,YAAY,IAAI,EAAE;YACzB,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACnD;QAED,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,CAAC,SAAiB,EAAE,OAAe;QACxD,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC;KACrG;IAEO,qBAAqB,CAAC,SAAiB,EAAE,OAAe;QAC9D,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC;KAChH;IAEO,qBAAqB,CAAC,KAAK;QACjC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;KAChD;IAEO,iBAAiB,CAAC,KAAK;QAC7B,OAAO,KAAK,IAAI,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC9E;IAEO,uBAAuB,CAAC,SAAiB,EAAE,OAAe;QAChE,QACE,IAAI,CAAC,qBAAqB;YAC1B,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;YACvD,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,EACrD;KACH;IAEO,WAAW,CAAC,IAAY;QAC9B,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;;QAG3B,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,EAAE;YAC3G,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;SAC3C;aAAM,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,EAAE,EAAE;;YAEpE,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;SAC3C;aAAM;;YAEL,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE;gBAC5D,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;aAC3C;iBAAM;gBACL,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;aAC3C;SACF;KACF;;;YA5fF,SAAS;;;YA/CD,aAAa;YAFb,iBAAiB;;;wBA8DvB,KAAK,SAAC,cAAc;mBASpB,KAAK,SAAC,QAAQ;oBASd,KAAK,SAAC,SAAS;uBAef,KAAK,SAAC,YAAY;uBASlB,MAAM,SAAC,UAAU;oBAsCjB,KAAK,SAAC,SAAS;uBAiBf,KAAK,SAAC,YAAY;sBAiBlB,KAAK,SAAC,YAAY;uBA+ClB,KAAK,SAAC,YAAY;sBAuBlB,KAAK,SAAC,YAAY;sBAwBlB,KAAK,SAAC,YAAY;6BA0BlB,KAAK,SAAC,mBAAmB;uBAiBzB,KAAK,SAAC,YAAY;uBAmBlB,KAAK,SAAC,YAAY;wBAiBlB,KAAK,SAAC,cAAc;;AA/RkB;IAAf,YAAY,EAAE;iEAA4B;;AC1CpE,MAAM,YAAY,GAAG,EAAE,CAAC;AACxB,MAAM,aAAa,GAAG,EAAE,CAAC;AACzB,MAAM,YAAY,GAAG,CAAC,CAAC;AACvB,MAAM,kCAAkC,GAAG,EAAE,CAAC;AAE9C,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAClC,MAAM,yBAAyB,GAAG,aAAa,CAAC;AAEhD;AACA,MAAMF,WAAS,GAAG;IAChB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,0BAA0B,CAAC;QACzD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,0BAA0B,CAAC;QACzD,KAAK,EAAE,IAAI;KACZ;IACD,wBAAwB;CACzB,CAAC;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCa,0BACX,SAAQ,8BAA8B;IAsDtC,YACU,cAAiC,EACjC,eAAyC,EACzC,QAAmB,EACnB,EAAqB,EAC7B,aAA4B,EAC5B,wBAAoC,EACpC,iBAAoC;QAEpC,KAAK,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;QARhC,mBAAc,GAAd,cAAc,CAAmB;QACjC,oBAAe,GAAf,eAAe,CAA0B;QACzC,aAAQ,GAAR,QAAQ,CAAW;QACnB,OAAE,GAAF,EAAE,CAAmB;QAlD/B,sBAAiB,GAAG,KAAK,CAAC;QAiUlB,aAAQ,GAAG;YACjB,IAAI,IAAI,CAAC,iBAAiB,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC;aAChE;SACF,CAAC;QA7QA,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;KAC1D;IAlDD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC;KAC3C;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;KAC/G;IAED,IAAI,gBAAgB;QAClB,OAAO,UAAU,CAAC;KACnB;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;KAC9C;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACpF;IAED,IAAI,2BAA2B;QAC7B,QACE,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,kCAAkC;YAClE,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,kCAAkC,EACpE;KACH;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC;KACjF;IAED,IAAI,kBAAkB;QACpB,OAAO,YAAY,CAAC;KACrB;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC;KAChD;IAeD,OAAO,UAAU,CAAC,KAAoB;QACpC,OAAO,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC;KACrC;IAED,OAAO,gBAAgB,CAAC,KAAU;QAChC,OAAO,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;KACzC;IAED,OAAO,UAAU,CAAC,OAAe;QAC/B,MAAM,YAAY,GAAG,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,EAAE,CAAC;QACpD,MAAM,kBAAkB,GAAG,OAAO,IAAI,EAAE,IAAI,OAAO,IAAI,GAAG,CAAC;QAE3D,OAAO,YAAY,IAAI,kBAAkB,CAAC;KAC3C;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,QAAQ;;QAEN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;KACtC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACpC;KACF;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,KAAK;QACH,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAExC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAClC;IAED,YAAY,CAAC,MAAW;QACtB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KACjC;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC3C;KACF;IAED,MAAM,CAAC,KAAU;;QACf,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;QACxB,MAAM,sBAAsB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC;QAE7E,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,CAAC;QAEjD,IAAI,CAAC,mCAAmC,EAAE,CAAC;KAC5C;IAED,gBAAgB,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE;QAC7B,MAAM,sBAAsB,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC;QAE7C,IAAI,CAAC,mBAAmB,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC;QAEzE,IAAI,KAAK,IAAI,GAAG,EAAE;YAChB,UAAU,CAAC;gBACT,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;aACxB,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,OAAO,CAAC,KAAU;QAChB,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KACzC;IAED,SAAS,CAAC,KAAW;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE;YACrC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAClC;KACF;IAED,OAAO,CAAC,KAAU;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,MAAM,sBAAsB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC;QAE7E,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KACxG;IAED,6BAA6B;QAC3B,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC;KACzC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClC,OAAO;SACR;QAED,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAED,mBAAmB,CAAC,KAAwB;QAC1C,MAAM,SAAS,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAe,EAAE,GAAG,EAAE,KAAK,CAAC,GAAa,EAAE,CAAC;QAC7E,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7F,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,gBAAgB,CAAC;QAE7E,MAAM,eAAe,GAAG,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAClG,MAAM,iBAAiB,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QAExG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,eAAe,CAAC;QACxD,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,GAAG,iBAAiB,CAAC;QAC5D,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAEO,gCAAgC;QACtC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;KACtF;;IAGO,SAAS;QACf,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAErC,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC/B;IAEO,UAAU,CAAC,MAAc,EAAE,MAAc,EAAE,EAAE,QAAgB,EAAE,EAAE,OAAe,EAAE;QACxF,IAAI,aAAa,GAAG,MAAM,CAAC;QAE3B,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;QAEvD,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrE,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAE5D,OAAO,aAAa,CAAC;KACtB;IAEO,mBAAmB,CAAC,QAAgB,EAAE;QAC5C,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE5C,OAAO,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;KACrE;IAEO,mBAAmB,CAAC,QAAgB,EAAE;QAC5C,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE5C,OAAO,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;KACpE;IAEO,4BAA4B,CAClC,SAAiB,EACjB,OAAe,EACf,sBAA+B;QAE/B,IAAI,CAAC,2BAA2B,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACrD,OAAO;YACL,OAAO,EACL,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC;YACjH,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,EAAE,sBAAsB,CAAC;SACnF,CAAC;KACH;IAEO,iBAAiB,CAAC,SAAiB,EAAE,OAAe,EAAE,sBAA+B;QAC3F,MAAM,cAAc,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAE9C,cAAc,CAAC,GAAG;YAChB,CAAC,sBAAsB,IAAI,IAAI,CAAC,0BAA0B,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QAEhH,cAAc,CAAC,KAAK;YAClB,CAAC,CAAC,sBAAsB,IAAI,IAAI,CAAC,0BAA0B,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;kBAC7F,SAAS;kBACT,EAAE,CAAC;QAET,OAAO,cAAc,CAAC;KACvB;IAEO,eAAe,CAAC,OAAO;;QAC7B,MAAM,YAAY,GAAG,eAAe,CAAC;QAErC,OAAO,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CAAC,YAAY,CAAC,MAAI,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,0CAAE,YAAY,CAAC,YAAY,CAAC,CAAA,CAAC;KAClG;IAEO,eAAe;QACrB,QACE,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YAC5E,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAC1E;KACH;IAEO,mBAAmB;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAC/E,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAClE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAEO,kBAAkB,CAAC,SAAiB,EAAE,OAAe;QAC3D,OAAO,IAAI,CAAC,2BAA2B,IAAI,OAAO,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;KACjH;IAEO,qBAAqB,CAAC,KAAU;QACtC,QACE,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB;YAC3C,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,KAAK,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,KAAK,CAAC;YAClD,KAAK,CAAC,OAAO,KAAK,YAAY,EAC9B;KACH;IAQO,mCAAmC;QACzC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;KACzF;IAEO,2BAA2B,CAAC,SAAiB,EAAE,OAAe;QACpE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAE1F,IAAI,CAAC,2BAA2B,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KACzG;IAEO,QAAQ,CAAC,KAAU;QACzB,MAAM,YAAY,GAAG,0BAA0B,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACxE,MAAM,OAAO,GAAG,0BAA0B,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;QAC5D,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KACvD;IAEO,mBAAmB,CAAC,QAAgB,EAAE,YAAwB,EAAE,cAAsB;QAC5F,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAElC,UAAU,CAAC;YACT,YAAY,CAAC,aAAa,CAAC,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;YAC7E,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,QAAQ,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,aAAa,GAAG,QAAQ,CAAC;SAC5C,CAAC,CAAC;KACJ;IAEO,cAAc,CAAC,YAAwB;QAC7C,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACpC;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,mBAAmB;QACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,cAAc,CAAC,aAAa,EACjC,uBAAuB,EACvB,IAAI,CAAC,cAAc,EACnB,CAAC,aAAa,EAAE,cAAc,EAAE,UAAU,EAAE,WAAW,CAAC,EACxD,KAAK,EACL,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,yBAAyB,CAAC,CAAC;KAChE;IAEO,mBAAmB,CAAC,OAAe,EAAE,SAAiB;QAC5D,MAAM,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,cAAc,KAAK,CAAC,CAAC;QAEpF,IAAI,SAAS,KAAK,IAAI,CAAC,gBAAgB,IAAI,sBAAsB,IAAI,OAAO,KAAK,YAAY,EAAE;YAC7F,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC;YACnE,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;SACzE;KACF;IAEO,oBAAoB,CAAC,OAAe,EAAE,SAAiB,EAAE,YAAiB;QAChF,MAAM,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,KAAK,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;QAE5G,IAAI,SAAS,KAAK,IAAI,CAAC,kBAAkB,IAAI,oBAAoB,IAAI,OAAO,KAAK,aAAa,EAAE;YAC9F,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;SACnD;KACF;IAEO,mBAAmB;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC;QAEnE,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;KACzE;IAEO,4BAA4B,CAAC,OAAe,EAAE,SAAiB;QACrE,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,cAAc,KAAK,kCAAkC,CAAC;QACjH,MAAM,kBAAkB,GACtB,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,kCAAkC,IAAI,gBAAgB,CAAC;QAC7F,MAAM,UAAU,GAAG,0BAA0B,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAElE,IAAI,SAAS,KAAK,IAAI,CAAC,kBAAkB,IAAI,kBAAkB,IAAI,UAAU,EAAE;YAC7E,IAAI,CAAC,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;SACnD;KACF;IAEO,uBAAuB,CAAC,sBAA+B,EAAE,SAAS,EAAE,OAAO;QACjF,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAC3D,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC/D,MAAM,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAC5D,kBAAkB,EAClB,gBAAgB,EAChB,sBAAsB,CACvB,CAAC;QAEF,IAAI,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,EAAE;YACjE,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,OAAO;SACR;QAED,IAAI,oBAAoB,CAAC,OAAO,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC;YACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,mBAAM,IAAI,CAAC,SAAS,EAAG,CAAC;SAC3C;KACF;IAEO,mBAAmB,CAAC,sBAA+B,EAAE,SAAU,EAAE,OAAQ;QAC/E,MAAM,gBAAgB,GAAG,OAAO,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACrF,MAAM,kBAAkB,GAAG,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC3F,IAAI,IAAI,CAAC,2BAA2B,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAClE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO;SACR;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,EAAE;YACjE,IAAI,CAAC,6BAA6B,EAAE,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnC,OAAO;SACR;QAED,MAAM,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAC5D,kBAAkB,EAClB,gBAAgB,EAChB,sBAAsB,CACvB,CAAC;QAEF,IAAI,oBAAoB,CAAC,OAAO,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,kBAAkB,EAAE,GAAG,EAAE,gBAAgB,EAAE,CAAC;YACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,mBAAM,IAAI,CAAC,SAAS,EAAG,CAAC;SAC3C;QAED,IAAI,CAAC,oBAAoB,CAAC,OAAO,IAAI,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,EAAE;YACpG,IAAI,CAAC,SAAS,qBAAQ,oBAAoB,CAAC,cAAc,CAAE,CAAC;YAC5D,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;SACvD;KACF;IAEO,oBAAoB,CAAC,KAAa,EAAE,GAAW;QACrD,OAAO,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC;KACzB;IAEO,kBAAkB,CAAC,KAAK;QAC9B,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO;SACR;QAED,IACE,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACzD,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACvD,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,EACnC;YACA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAChC;QACD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;;;YA3fF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,86EAAmD;2BACnDA,WAAS;gBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YA/EC,iBAAiB;YAeV,wBAAwB;YAR/B,SAAS;YAPT,iBAAiB;YAmBV,aAAa;YAjBpB,UAAU;YAmBH,iBAAiB;;;6BA8DvB,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;2BAC9D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;6BAC5D,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;2BAC9D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;6BAC5D,SAAS,SAAC,gBAAgB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;AChFnD;;;;;;;;;;;;;;;;MAiBsB,oBAAoB;IAgTxC,YAAoB,EAAsB;QAAtB,OAAE,GAAF,EAAE,CAAoB;;;;;;;;;;;;QApSH,cAAS,GAAY,KAAK,CAAC;;;;;;;;QA6CxC,iBAAY,GAAY,EAAE,CAAC;;;;;;;;QAwBnC,SAAI,GAAsB,IAAI,YAAY,EAAE,CAAC;;;;;;;;QAS5C,UAAK,GAAsB,IAAI,YAAY,EAAE,CAAC;;;;;;;;QAS7C,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;;;;;;;;QASzC,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAI9E,sBAAiB,GAAQ,IAAI,CAAC;QAGpB,cAAS,GAAQ,IAAI,CAAC;QAEtB,qBAAgB,GAAY,KAAK,CAAC;QAKpC,oBAAe,GAAa,KAAK,CAAC;QAClC,iBAAY,GAAY,EAAE,CAAC;;;;;;;;;QA6CnC,aAAQ,GAAa,KAAK,CAAC;;;QAS3B,aAAQ,GAAa,KAAK,CAAC;;;;;;;;;;;QAe3B,aAAQ,GAAa,KAAK,CAAC;;;QAS3B,UAAK,GAAa,KAAK,CAAC;;;;;;;;;;;QA4ExB,SAAI,GAAY,EAAE,CAAC;;;;;;;;;QAgBnB,oBAAe,GAAa,KAAK,CAAC;KAWY;;;;;;;;;;;;IAxK9C,IAAgC,cAAc,CAAC,KAAc;QAC3D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;IAWD,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;KACjC;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAWD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAKD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KACrE;IAaD,IAAyB,WAAW,CAAC,QAAgB;QACnD,IAAI,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEpE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAKD,IAAsB,QAAQ,CAAC,KAAa;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5D;IAWD,IAAwB,UAAU,CAAC,OAAe;QAChD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;;;;;;;IASD,IAA0B,SAAS,CAAC,KAAa;QAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;YAE3C,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAE5B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASD,IAA0B,SAAS,CAAC,KAAa;QAC/C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;YAE3C,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAE5B,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAaD,IAAqB,OAAO,CAAC,IAAY;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;QAGjB,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KAC5D;IAWD,IAAkC,kBAAkB,CAAC,eAAuB;QAC1E,IAAI,CAAC,eAAe,GAAG,eAAe,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,eAAe,CAAC,CAAC;QAEzF,IAAI,IAAI,CAAC,OAAO,YAAY,MAAM,EAAE;YAClC,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;YAEhD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAID,YAAY,CAAC,KAAU;QACrB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,0BAA0B,CAAC,KAAK;QAC9B,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;KAC3C;IAED,yBAAyB,CAAC,KAAU;QAClC,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;KACF;;;IAID,gBAAgB,CAAC,UAAmB;;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,MAAA,IAAI,CAAC,EAAE,0CAAE,YAAY,EAAE,CAAC;KACzB;;;IAID,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;;;IAID,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,WAAW,CAAC,KAAU;;QAEpB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;IAED,QAAQ,CAAC,CAAkB;QACzB,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE;YACzD,OAAO;gBACL,SAAS,EAAE;oBACT,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE;YACzD,OAAO;gBACL,SAAS,EAAE;oBACT,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;YACxC,IAAI,CAAC,2BAA2B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC1C,OAAO;gBACL,OAAO,EAAE;oBACP,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;KAChC;;IAGD,UAAU,CAAC,KAAU;;QACnB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,MAAA,IAAI,CAAC,EAAE,0CAAE,YAAY,EAAE,CAAC;KACzB;IAES,aAAa;QACrB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;IAGO,2BAA2B,CAAC,KAAa;QAC/C,IAAI,KAAK,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAClC,UAAU,CAAC;gBACT,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB,CAAC,CAAC;YAEH,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;SAC/B;KACF;;;YA5ZF,SAAS;;;YAxBoD,iBAAiB;;;wBAqC5E,KAAK,SAAC,cAAc;mBA2BpB,KAAK,SAAC,QAAQ;oBAGd,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;mBAGd,KAAK,SAAC,MAAM;2BASZ,KAAK,SAAC,iBAAiB;uBAevB,KAAK,SAAC,YAAY;mBASlB,MAAM,SAAC,QAAQ;oBASf,MAAM,SAAC,SAAS;qBAShB,MAAM,SAAC,UAAU;0BASjB,MAAM,SAAC,gBAAgB;6BA4BvB,KAAK,SAAC,mBAAmB;0BAiBzB,KAAK,SAAC,eAAe;0BAgBrB,KAAK,SAAC,YAAY;0BASlB,KAAK,SAAC,YAAY;0BAelB,KAAK,SAAC,YAAY;uBASlB,KAAK,SAAC,SAAS;yBAaf,KAAK,SAAC,WAAW;wBAajB,KAAK,SAAC,aAAa;wBAuBnB,KAAK,SAAC,aAAa;sBA2BnB,KAAK,SAAC,QAAQ;iCAgBd,KAAK,SAAC,qBAAqB;;AA1RW;IAAf,YAAY,EAAE;uDAA4B;;AClBpE,MAAM,8BAA8B,GAAG,CAAC,CAAC;AACzC,MAAM,iCAAiC,GAAG,EAAE,CAAC;AAC7C,MAAM,0BAA0B,GAAG,EAAE,CAAC;AACtC,MAAM,yBAAyB,GAAG,EAAE,CAAC;AAErC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyDa,kBAAmB,SAAQ,oBAAoB;IA6J1D,YAAoB,EAAc,EAAU,iBAAoC,EAAE,EAAqB;QACrG,KAAK,CAAC,EAAE,CAAC,CAAC;QADQ,OAAE,GAAF,EAAE,CAAY;QAAU,sBAAiB,GAAjB,iBAAiB,CAAmB;QA1JxE,oBAAe,GAAY,8BAA8B,CAAC;QAC1D,uBAAkB,GAAY,iCAAiC,CAAC;QAMhE,eAAU,GAAY,KAAK,CAAC;QAC5B,sBAAiB,GAAY,KAAK,CAAC;QACnC,cAAS,GAAW,GAAG,CAAC;QACxB,kBAAa,GAAG,IAAI,CAAC;QAIrB,UAAK,GAAG;YACd,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC;YACrC,OAAO,EAAE,IAAI,MAAM,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC;SACrC,CAAC;QA2IA,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KAClE;IA1ID,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC;KAC3C;;;;;;;;;;;;;;;;IAiBD,IAAgC,cAAc,CAAC,KAAa;QAC1D,IAAI,cAAc,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,0BAA0B,CAAC;cACnF,cAAc;cACd,8BAA8B,CAAC;QAEnC,IAAI,IAAI,CAAC,6BAA6B,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,EAAE;YAC9E,IAAI,CAAC,iBAAiB,GAAG,yBAAyB,GAAG,cAAc,CAAC;SACrE;QAED,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;KACvC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;;;;;;IAgBD,IAAmC,iBAAiB,CAAC,KAAa;QAChE,IAAI,iBAAiB,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,IAAI,CAAC,cAAc,GAAG,8BAA8B,IAAI,CAAC,iBAAiB,EAAE;YAC9E,iBAAiB,GAAG,yBAAyB,GAAG,IAAI,CAAC,cAAc,CAAC;SACrE;QAED,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,EAAE,iCAAiC,CAAC;cAChG,iBAAiB;cACjB,iCAAiC,CAAC;QAEtC,IAAI,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,cAAc,EAAE,iBAAiB,CAAC,EAAE;YAC9E,IAAI,CAAC,cAAc,GAAG,yBAAyB,GAAG,iBAAiB,CAAC;SACrE;QAED,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;KAC7C;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;;;;;;;;;;;;IAaD,IAAuB,MAAM,CAAC,MAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;;;;;;;;IASD,IAAoB,GAAG,CAAC,KAAa;QACnC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAElB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YAEtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;;IASD,IAAoB,GAAG,CAAC,KAAa;QACnC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAElB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,CAAC,KAAK,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YAEtB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAOD,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,oBAAoB;QAClB,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzG,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,KAAK,GAAG;YACX,QAAQ,EAAE,IAAI,MAAM,CAAC,IAAI,GAAG,iBAAiB,EAAE,GAAG,CAAC;YACnD,OAAO,EAAE,IAAI,MAAM,CAAC,IAAI,GAAG,gBAAgB,EAAE,GAAG,CAAC;SAClD,CAAC;KACH;IAED,eAAe;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,eAAe,CAAC,eAAgC;;QAE9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEpF,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO;gBACL,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO;gBACL,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KAC7D;IAED,eAAe;QACb,QACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YACtD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,EAC5B;KACH;IAED,UAAU,CAAC,QAAgB,EAAE;QAC3B,OAAO,KAAK,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;KACrE;IAED,aAAa,CAAC,KAAU;;QAEtB,MAAM,QAAQ,GAAQ,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvD,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;QAExD,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC;KAC/C;;IAGD,MAAM,CAAC,KAAU;;QACf,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;QACnB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAEjC,IAAI,KAAK,EAAE;YACT,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC,EAAE;gBAC7E,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBAC7B,OAAO;aACR;YAED,MAAM,6BAA6B,GAAG,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,CAAC,CAAC;SAC1E;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,OAAO,CAAC,KAAiB;;QAEvB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;;;QAI/C,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAED,OAAO,CAAC,KAAU;QAChB,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QACnD,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC;QAE/C,IAAI,UAAU,CAAC;;QAGf,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;SACpC;QAED,UAAU,GAAG,IAAI,CAAC,mCAAmC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1E,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;QAG9C,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC;KACxD;IAED,sBAAsB,CAAC,KAAU;QAC/B,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACtC,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QACnD,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE/C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAEzD,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC;SAC/B;aAAM;YACL,MAAM,QAAQ,GAAG,cAAc,GAAG,CAAC,CAAC;YACpC,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAExC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAE7B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;aAC/B;SACF;KACF;IAED,UAAU,CAAC,KAAoB;QAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KACxB;IAED,eAAe;QACb,UAAU,CAAC;YACT,MAAM,aAAa,GAAG,wEAAwE,CAAC;YAC/F,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;YACzE,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,KAAK,EAAE,CAAC;aACT;YACD,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,KAAK,GAAG,EAAE,IAAI,CAAC;aACnE;SACF,CAAC,CAAC;KACJ;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE;gBACxB,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACxD,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;aACvB;SACF;QAED,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;KACF;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACpF;;IAGO,aAAa,CAAC,KAAK;QACzB,MAAM,kBAAkB,GAAG,KAAK,KAAK,IAAI,CAAC,gBAAgB,CAAC;QAE3D,OAAO,kBAAkB,GAAG,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC;KACjD;IAEO,aAAa,CAAC,KAAK;QACzB,OAAO,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC9C;IAEO,mCAAmC,CAAC,QAAgB,EAAE;QAC5D,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEnD,OAAO,CAAC,EAAE,UAAU,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAChD;IAEO,oBAAoB;QAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;;;;QAK3C,IAAI,YAAY,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,UAAU,CAAC;gBACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAChC,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAEO,UAAU,CAAC,KAAa;;;;QAK9B,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YACnC,MAAM,KAAK,GAAG,IAAI,MAAM,CAAC,2BAA2B,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,CAAC,CAAC;YACnF,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SACvE;QAED,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;KAC3F;IAEO,kBAAkB,CAAC,KAAa;QACtC,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACrD,MAAM,WAAW,GAAG,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,SAAS,CAAC;QAEjH,OAAO,WAAW,KAAK,CAAC,IAAI,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;KACnE;IAEO,iBAAiB,CAAC,KAAa;;QAErC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAEtC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAE/D,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QACtE,MAAM,aAAa,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAEpE,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,EAAE;YAC7B,OAAO,cAAc,CAAC;SACvB;aAAM;YACL,OAAO,GAAG,cAAc,GAAG,IAAI,CAAC,gBAAgB,GAAG,aAAa,EAAE,CAAC;SACpE;KACF;IAEO,mCAAmC,CAAC,QAAgB,EAAE;QAC5D,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;KAC1D;IAEO,sBAAsB,CAAC,KAAK,GAAG,EAAE,EAAE,SAAS;QAClD,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KACxC;IAEO,uBAAuB,CAAC,KAAK,GAAG,EAAE,EAAE,SAAS;QACnD,OAAO,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;KACxC;IAEO,UAAU,CAAC,KAAK;QACtB,IAAI,KAAK,EAAE;YACT,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;YAEvC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;gBACnC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QAED,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,KAAK,CAAC;KACd;IAEO,UAAU,CAAC,KAAK;QACtB,IAAI,KAAK,EAAE;YACT,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC;YAEvC,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE;gBACnC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAChC,OAAO,IAAI,CAAC;aACb;SACF;QAED,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;QAED,OAAO,KAAK,CAAC;KACd;IAEO,2BAA2B,CAAC,KAAU;QAC5C,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC;QACpD,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QAEnD,OAAO,cAAc,IAAI,cAAc,KAAK,CAAC,CAAC;KAC/C;IAEO,YAAY,CAAC,KAAU,EAAE,QAAa;QAC5C,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEnD,QACE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAChC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;YACvC,eAAe;YACf,IAAI,CAAC,qCAAqC,CAAC,KAAK,CAAC;YACjD,IAAI,CAAC,6CAA6C,CAAC,QAAQ,CAAC,EAC5D;KACH;IAEO,6BAA6B,CAAC,iBAAyB,EAAE,iBAAyB;QACxF,OAAO,iBAAiB,GAAG,iBAAiB,GAAG,yBAAyB,CAAC;KAC1E;IAEO,qBAAqB,CAAC,KAAK;QACjC,OAAO,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,gBAAgB,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,gBAAgB,CAAC;KACpF;IAEO,+BAA+B,CAAC,cAAc,EAAE,KAAK;QAC3D,MAAM,UAAU,GAAG,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEjE,IAAI,UAAU,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YACzC,OAAO,cAAc,GAAG,UAAU,CAAC;SACpC;KACF;IAEO,qCAAqC,CAAC,MAAW;QACvD,OAAO,MAAM,CAAC,cAAc,KAAK,MAAM,CAAC,YAAY,CAAC;KACtD;IAEO,UAAU,CAAC,KAAU,EAAE,GAAY;QACzC,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QAC9C,MAAM,QAAQ,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;QAExD,IAAI,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACvC,OAAO;SACR;QAED,IAAI,GAAG,EAAE;YACP,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;SACjB;QAED,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;YACtC,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IAEO,qBAAqB,CAAC,KAAa,EAAE,UAAkB;QAC7D,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,UAAU,CAAC;KAC1C;;IAGO,6CAA6C,CAAC,QAAgB;QACpE,OAAO,QAAQ,KAAK,EAAE,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,CAAC;KACrD;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAEO,wBAAwB,CAAC,MAAW,EAAE,cAAc,EAAE,YAAY;QACxE,IAAI,cAAc,KAAK,CAAC,IAAI,YAAY,KAAK,CAAC,EAAE;YAC9C,OAAO,MAAM,CAAC,iBAAiB,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;SACvE;QACD,OAAO,MAAM,CAAC,iBAAiB,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;KACvE;IAEO,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO;QACrC,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;KACzE;IAEO,iBAAiB,CAAC,QAAgB,EAAE;QAC1C,IAAI,IAAI,CAAC,gBAAgB,KAAK,GAAG,EAAE;YACjC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAC3D;QAED,OAAO,KAAK,CAAC;KACd;IAEO,cAAc,CAAC,KAAK,EAAE,cAAc,EAAE,YAAY;QACxD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;;QAG/B,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,SAAS,KAAK,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAAE;YAC3E,OAAO,MAAM,CAAC,iBAAiB,CAAC,cAAc,GAAG,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,CAAC;SACvE;;QAGD,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YAC9B,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;SACrE;QACD,OAAO,MAAM,CAAC,iBAAiB,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;KAC/D;IAEO,gBAAgB,CAAC,KAAU;QACjC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,GAAG,CAAC,CAAC;QAEjD,IAAI,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,EAAE;YAChD,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;SAChF;KACF;IAEO,YAAY,CAAC,KAAa;QAChC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;KAC1C;IAEO,qCAAqC,CAAC,KAAU;QACtD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,mCAAmC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7E,MAAM,oBAAoB,GAAG,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC/F,MAAM,4BAA4B,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAExG,IAAI,IAAI,CAAC,qCAAqC,CAAC,MAAM,CAAC,EAAE;YACtD,OAAO,KAAK,CAAC;SACd;QACD,QACE,MAAM,CAAC,cAAc,IAAI,oBAAoB,CAAC,MAAM;YACpD,4BAA4B,CAAC,MAAM,KAAK,IAAI,CAAC,iBAAiB;YAC9D,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAClC;KACH;IAEO,oBAAoB,CAAC,KAAU;QACrC,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,MAAM,aAAa,GAAG,IAAI,CAAC,mCAAmC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7E,MAAM,4BAA4B,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAExG,IAAI,IAAI,CAAC,qCAAqC,CAAC,MAAM,CAAC,EAAE;YACtD,OAAO,KAAK,CAAC;SACd;QACD,QACE,4BAA4B,CAAC,MAAM,IAAI,IAAI,CAAC,iBAAiB;YAC7D,CAAC,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,KAAK,CAAC,EAC/F;KACH;IAEO,iBAAiB,CAAC,CAAM;QAC9B,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEpD,OAAO,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,gBAAgB,CAAC;KACpD;IAEO,qBAAqB,CAAC,KAAU;QACtC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,cAAc,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QAChE,MAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,mBAAmB,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,iBAAiB,IAAI,cAAc,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9E,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,iBAAiB,EAAE,EAAE,CAAC,CAAC;SACnE;QACD,OAAO,cAAc,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,SAAS,CAAC;KACvD;IAEO,qBAAqB,CAAC,KAAU;QACtC,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC;QACnD,MAAM,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAEtF,QACE,IAAI,CAAC,+BAA+B,CAAC,cAAc,EAAE,KAAK,CAAC,IAAI,mBAAmB,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,EAChH;KACH;;;YAxpBF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,60CAA0C;gBAC1C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,kBAAkB,CAAC;wBACjD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,kBAAkB,CAAC;wBACjD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YA3EC,UAAU;YAOH,iBAAiB;YATxB,iBAAiB;;;sBA+EhB,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;6BAwCnD,KAAK,SAAC,mBAAmB;gCAgCzB,KAAK,SAAC,sBAAsB;qBAiC5B,KAAK,SAAC,UAAU;kBAYhB,KAAK,SAAC,OAAO;kBAuBb,KAAK,SAAC,OAAO;;;ACzNhB;MAEsB,cAAe,SAAQ,oBAAoB;IAa/D,YAAY,EAAc,EAAE,EAAsB;QAChD,KAAK,CAAC,EAAE,CAAC,CAAC;QAXZ,SAAI,GAAG,MAAM,CAAC;QAaZ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;KACd;IARD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC;KAC3C;IAQoC,SAAS,CAAC,CAAM;QACnD,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,EAAE;YAC3D,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzB;KACF;IAEkC,OAAO,CAAC,CAAM;QAC/C,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC/B,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAC9C;KACF;IAED,eAAe;QACb,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,aAAa;QACX,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,eAAe;QACb,UAAU,CAAC;YACT,MAAM,aAAa,GAAG,wEAAwE,CAAC;YAC/F,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;YACzE,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,KAAK,EAAE,CAAC;aACT;YACD,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,KAAK,GAAG,EAAE,IAAI,CAAC;aACnE;SACF,CAAC,CAAC;KACJ;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,YAAY,CAAC,CAAM;QACjB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;YAC7D,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;SACnC;QACD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC1B;IAED,cAAc,CAAC,SAAiB,EAAE,KAAa;QAC7C,OAAO,CAAC,SAAS,IAAI,SAAS,KAAK,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,SAAS;cAC7D,KAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC;cACxC,KAAK,CAAC;KACX;IAED,YAAY,CAAC,CAAM;;QAEjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;;;QAI1D,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAED,WAAW,CAAC,CAAM;;QAChB,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;QACnB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,CAAC,IAAI,KAAK,MAAM,EAAE;YACrB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAED,oBAAoB;QAClB,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;;;;QAKtD,IAAI,YAAY,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC3C,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAChC,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,YAAY,CAAC,CAAM;;QAEjB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACvB;KACF;IAED,eAAe;QACb,QACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YACtD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE,EACvC;KACH;IAED,eAAe;QACb,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACpF;IAED,yBAAyB;QACvB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACpC,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QAEtC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YACrD,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACpC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SACnC;aAAM;YACL,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SACxC;KACF;IAED,aAAa,CAAC,OAAe,EAAE,KAAU;QACvC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,KAAK,EAAE;gBACT,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;oBAGjF,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;wBAC5B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;qBAC5D;iBACF;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC1C;aACF;iBAAM;;gBAEL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;aACvC;SACF;;QAGD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;KACF;IAED,cAAc;QACZ,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,KAAK,SAAS,CAAC;QAEpF,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC1B,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;YAC5C,OAAO,WAAW,IAAI,WAAW,KAAK,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC;SAC9D;aAAM;YACL,OAAO,WAAW,CAAC;SACpB;KACF;;;YA1MF,SAAS;;;YANc,UAAU;YAAsC,iBAAiB;;;sBAQtF,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;wBAkBnD,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;sBAOlC,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;ACpBnC;AACA,MAAMA,WAAS,GAAG;IAChB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;QAC/C,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;QAC/C,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;MAgCa,gBAAiB,SAAQ,cAAc;;IAgClD,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAhChB,SAAI,GAAG,cAAc,CAAC;QAEtB,SAAI,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;QAsBf,YAAO,GAAG,mGAAmG,CAAC;QAE9G,SAAI,GAAG,EAAE,CAAC;QAEF,aAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAK3D,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACtB;IAED,eAAe;QACb,UAAU,CAAC;;YAET,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrE;SACF,CAAC,CAAC;QACH,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxE;KACF;IAED,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;;;YA7DF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,+vCAAkD;gBAClD,eAAe,EAAE,uBAAuB,CAAC,MAAM;2BAC/CA,WAAS;aACV;;;YAvDC,UAAU;YAFV,iBAAiB;;;ACEnB;AACA,MAAMA,WAAS,GAAG;IAChB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;QAC/C,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;QAC/C,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,gBAAiB,SAAQ,cAAc;;IAIlD,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAJhB,SAAI,GAAG,MAAM,CAAC;KAKb;IAED,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,mtCAAwC;gBACxC,eAAe,EAAE,uBAAuB,CAAC,MAAM;2BAC/CA,WAAS;aACV;;;YAlD+D,UAAU;YAAxC,iBAAiB;;;ACWnD;;;;;;;MAQa,qBAAqB;IAShC,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QARjC,YAAO,GAAgB,IAAI,WAAW,CAAC;YAC9C,iBAAiB,EAAE,MAAM;SAC1B,CAAC,CAAC;QAIK,aAAQ,GAAG,KAAK,CAAC;KAEqB;IAE9C,gBAAgB,CAAC,mBAAgD;QAC/D,MAAM,EAAE,YAAY,EAAE,eAAe,KAAiC,mBAAmB,EAA/C,uBAAuB,UAAK,mBAAmB,EAAnF,mCAA6D,CAAsB,CAAC;QAE1F,MAAM,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAChE,MAAM,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAEtE,MAAM,MAAM,iDAAQ,uBAAuB,GAAK,qBAAqB,GAAK,wBAAwB,CAAE,CAAC;QAErG,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;KACzE;IAED,gBAAgB,CAAC,KAAU,EAAE,YAAkB;QAC7C,MAAM,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEhE,IAAI,MAAM,CAAC;QACX,IAAI,YAAY,CAAC;QAEjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAClF,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,UAAU,IAAI,YAAY,EAAE,CAAC;SAC3D;aAAM;YACL,YAAY,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;YACzC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;SACxC;QAED,OAAO,IAAI,CAAC,UAAU;aACnB,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,qBAAqB,EAAE,CAAC;aACrE,IAAI,CAAC,GAAG,CAAC,CAAC,QAAa,MAAM,OAAO,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;KACpF;IAED,SAAS,CAAC,GAAW,EAAE,UAAkB,EAAE,QAAiB;QAC1D,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAEO,cAAc,CAAC,MAAW;QAChC,OAAO,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC;KAClF;;;YAlDF,UAAU;;;YAlBF,UAAU;;;AC2BnB;;;;;;;;;;;;;;;;MAiBsB,qBAAqB;IA6YzC,YAAoB,cAAqC,EAA4B,QAAkB;QAAnF,mBAAc,GAAd,cAAc,CAAuB;QAA4B,aAAQ,GAAR,QAAQ,CAAU;;;;;;;;;;;;QAhYhE,cAAS,GAAY,KAAK,CAAC;;;;;;;;;;QA0LtB,mBAAc,GAAY,KAAK,CAAC;;QAG1C,UAAK,GAAY,KAAK,CAAC;;;;;;;;;;;;QAapB,aAAQ,GAAY,KAAK,CAAC;;;;;;;;;;;QAYvB,eAAU,GAAY,KAAK,CAAC;;;;;QAMjD,YAAO,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;QAUlD,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;QAUxD,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;QAI9D,oBAAe,GAAG,EAAE,CAAC;QAGrB,aAAQ,GAAW,EAAE,CAAC;QAEtB,oBAAe,GAAG,IAAI,CAAC;;QAEvB,cAAS,GAAQ,IAAI,CAAC;QAGxB,cAAS,GAAa,KAAK,CAAC;QAI5B,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAa,KAAK,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAG7B,sBAAiB,GAAQ,IAAI,CAAC;KAyHqE;;IApU3G,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;KACjC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;IAeD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1C;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4OD,IAA+B,aAAa,CAAC,aAAsC;QACjF,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACrC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;IAWD,IAAgC,cAAc,CAAC,KAAc;QAC3D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;IAUD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;IAUD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAQ,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAC3E;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAID,WAAW;QACT,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;KACF;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAED,UAAU;QACR,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;KAC9B;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE;YAC9D,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5E;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;;;IAID,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;;;IAID,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;IAGD,WAAW,CAAC,aAAkB;QAC5B,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACnC;IAED,YAAY,CAAC,KAAU;;QAErB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,YAAY,EAAE;YAC9C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;;QAGD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;KAC1C;IAED,UAAU,CAAC,KAAK;QACd,IAAI,YAAY,GAAG,KAAK,CAAC;QAEzB,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YACpC,YAAY,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC;SACpC;QAED,IAAI,YAAY,KAAK,EAAE,EAAE;YACvB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,IAAI,CAAC,OAAO,EAAE;;;;gBAIhB,UAAU,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO;iBAChC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC;iBAC1C,IAAI,CACH,QAAQ,CAAC;gBACP,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;gBAE3B,IAAI,IAAI,CAAC,OAAO,EAAE;oBAChB,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;iBACvC;aACF,CAAC,CACH;iBACA,SAAS,CACR,OAAO;gBACL,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,MAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,EAAE;oBAC3D,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAChD,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;wBAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;oBAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;iBACvD;qBAAM;oBACL,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;aACF,EACD,KAAK;gBACH,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B,CACF,CAAC;SACL;aAAM;YACL,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,MAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;;YAErD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;aAAM;YACL,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAES,cAAc;QACtB,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;;IAGS,iBAAiB,CAAC,KAAU;QACpC,OAAO,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KACnF;;IAGS,WAAW,CAAC,OAAmB;QACvC,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;YAEpC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9G,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAE3B,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aACnE;SACF;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAEO,UAAU,CAAC,OAAgC;QACjD,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,GAA0B,OAAO,CAAC;SAC/C;QAED,IAAI,OAAO,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjE;KACF;IAEO,UAAU;QAChB,MAAM,SAAS,GAAc,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;QAElF,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,OAAsB,CAAC;SACjD;KACF;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAE1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC5G;KACF;;;YA1lBF,SAAS;;;YAlBD,qBAAqB;YAnB5B,QAAQ,uBAmboD,MAAM,SAAC,QAAQ;;;wBAhY1E,KAAK,SAAC,cAAc;oBAQpB,KAAK,SAAC,SAAS;uBA8Cf,KAAK,SAAC,YAAY;mBAGlB,KAAK,SAAC,QAAQ;0BAGd,KAAK,SAAC,eAAe;mBASrB,KAAK,SAAC,MAAM;yBASZ,KAAK,SAAC,eAAe;yBAGrB,KAAK,SAAC,eAAe;2BAUrB,KAAK,SAAC,iBAAiB;0BAqCvB,KAAK,SAAC,gBAAgB;sBAMtB,KAAK,SAAC,WAAW;uBAejB,KAAK,SAAC,YAAY;8BA0BlB,KAAK,SAAC,oBAAoB;6BAW1B,KAAK,SAAC,mBAAmB;oBAGzB,KAAK,SAAC,SAAS;uBAaf,KAAK,SAAC,YAAY;yBAYlB,KAAK,SAAC,eAAe;sBAMrB,MAAM,SAAC,SAAS;uBAUhB,MAAM,SAAC,YAAY;qBAUnB,MAAM,SAAC,UAAU;4BAoFjB,KAAK,SAAC,kBAAkB;6BAkBxB,KAAK,SAAC,mBAAmB;uBAgBzB,KAAK,SAAC,YAAY;uBAkBlB,KAAK,SAAC,YAAY;;AAxXoB;IAAf,YAAY,EAAE;wDAA4B;AA0LtB;IAAf,YAAY,EAAE;6DAAiC;AAG1C;IAAf,YAAY,EAAE;oDAAwB;AAapB;IAAf,YAAY,EAAE;uDAA2B;AAYvB;IAAf,YAAY,EAAE;yDAA6B;;ACrP/D,MAAM,uBAAuB,GAAG;IACrC,EAAE,EAAoB;QACpB,uBAAuB,EAAE,QAAQ;QACjC,yBAAyB,EAAE,QAAQ;QACnC,gBAAgB,EAAE,QAAQ;QAC1B,UAAU,EAAE,iBAAiB;QAC7B,mBAAmB,EAAE,sBAAsB,CAAC,EAAE,CAAC,SAAS;QACxD,gBAAgB,EAAE,sBAAsB,CAAC,EAAE,CAAC,MAAM;QAClD,qBAAqB,EAAE,sBAAsB,CAAC,EAAE,CAAC,WAAW;QAC5D,sBAAsB,EAAE,sBAAsB,CAAC,EAAE,CAAC,YAAY;QAC9D,mBAAmB,EAAE,iBAAiB;QACtC,wBAAwB,EAAE,iBAAiB;QAC3C,qCAAqC,EAAE,QAAQ;QAC/C,uCAAuC,EAAE,QAAQ;QACjD,yBAAyB,EAAE,iCAAiC;KAC7D;IACD,EAAE,EAAoB;QACpB,uBAAuB,EAAE,aAAa;QACtC,yBAAyB,EAAE,UAAU;QACrC,gBAAgB,EAAE,QAAQ;QAC1B,UAAU,EAAE,wBAAwB;QACpC,mBAAmB,EAAE,sBAAsB,CAAC,EAAE,CAAC,SAAS;QACxD,gBAAgB,EAAE,sBAAsB,CAAC,EAAE,CAAC,MAAM;QAClD,qBAAqB,EAAE,sBAAsB,CAAC,EAAE,CAAC,WAAW;QAC5D,sBAAsB,EAAE,sBAAsB,CAAC,EAAE,CAAC,YAAY;QAC9D,mBAAmB,EAAE,mBAAmB;QACxC,wBAAwB,EAAE,mBAAmB;QAC7C,qCAAqC,EAAE,SAAS;QAChD,uCAAuC,EAAE,QAAQ;QACjD,yBAAyB,EAAE,qCAAqC;KACjE;IACD,EAAE,EAAoB;QACpB,uBAAuB,EAAE,YAAY;QACrC,yBAAyB,EAAE,UAAU;QACrC,gBAAgB,EAAE,WAAW;QAC7B,UAAU,EAAE,uBAAuB;QACnC,mBAAmB,EAAE,sBAAsB,CAAC,EAAE,CAAC,SAAS;QACxD,gBAAgB,EAAE,sBAAsB,CAAC,EAAE,CAAC,MAAM;QAClD,qBAAqB,EAAE,sBAAsB,CAAC,EAAE,CAAC,WAAW;QAC5D,sBAAsB,EAAE,sBAAsB,CAAC,EAAE,CAAC,YAAY;QAC9D,mBAAmB,EAAE,gBAAgB;QACrC,wBAAwB,EAAE,gBAAgB;QAC1C,qCAAqC,EAAE,SAAS;QAChD,uCAAuC,EAAE,QAAQ;QACjD,yBAAyB,EAAE,wCAAwC;KACpE;IACD,EAAE,EAAoB;QACpB,uBAAuB,EAAE,UAAU;QACnC,yBAAyB,EAAE,UAAU;QACrC,gBAAgB,EAAE,OAAO;QACzB,UAAU,EAAE,iBAAiB;QAC7B,mBAAmB,EAAE,sBAAsB,CAAC,EAAE,CAAC,SAAS;QACxD,gBAAgB,EAAE,sBAAsB,CAAC,EAAE,CAAC,MAAM;QAClD,qBAAqB,EAAE,sBAAsB,CAAC,EAAE,CAAC,WAAW;QAC5D,sBAAsB,EAAE,sBAAsB,CAAC,EAAE,CAAC,YAAY;QAC9D,mBAAmB,EAAE,mBAAmB;QACxC,wBAAwB,EAAE,mBAAmB;QAC7C,qCAAqC,EAAE,QAAQ;QAC/C,uCAAuC,EAAE,SAAS;QAClD,yBAAyB,EAAE,6CAA6C;KACzE;CACF,CAAC;AAEF;;;;;MAMsB,0BAA0B;IA+I9C,YAAY,eAAkC,EAAU,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;;QA9G7C,mBAAc,GAAY,KAAK,CAAC;;QAGvC,aAAQ,GAAY,KAAK,CAAC;;QAGrC,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;QAiB7E,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAG,KAAK,CAAC;QAClB,SAAI,GAAG,CAAC,CAAC;QACT,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAW,EAAE,CAAC;;QAIzB,6BAAwB,GAAG,EAAE,CAAC;QAC9B,qBAAgB,GAAG,EAAE,CAAC;QAGtB,qBAAgB,GAAG,KAAK,CAAC;QAGzB,cAAS,GAAe,EAAE,CAAC;QAUnB,aAAQ,GAAW,eAAe,CAAC;;QAG3C,kBAAa,GAAkB;YAC7B,MAAM,EAAE;gBACN,IAAI,cAAc,GAAe,EAAE,CAAC;gBACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;wBACxB,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;4BACxB,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC9B;qBACF,CAAC,CAAC;iBACJ;qBAAM;oBACL,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;iBACjC;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACtB;YACD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,uBAAuB;SAC7C,CAAC;;QAGF,oBAAe,GAAkB;YAC/B,MAAM,EAAE;gBACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;aACtB;YACD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,yBAAyB;SAC/C,CAAC;QAmCA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;IAjCD,IAAyB,QAAQ,CAAC,KAAuB;QACvD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,uBAAuB,CAAC,eAAe,CAAC,GACxC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACtC,KAAK,CACT,CAAC;YACF,IAAI,KAAK,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;aACvC;SACF;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC;QACjE,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,yBAAyB,CAAC;QACrE,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjE;;IAGD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;KAC5E;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAMD,WAAW;QACT,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;KACF;IAED,QAAQ;QACN,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,gBAAgB;QACd,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;YAChE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,WAAW,CAAC,EAAE;YAC3F,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,aAAa,CAAC,KAAU,EAAE,QAAgB;QACxC,IAAI,CAAC,UAAU,GAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;QAE9B,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3F;IAED,uBAAuB;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEd,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,eAAe,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,mBAAmB;QACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC;aAC9D,IAAI,CACH,UAAU,CAAC,KAAK;YACd,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACnC,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B,CAAC,CACH;aACA,SAAS,CACR,CAAC,IAAyB,KAAK,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,EACrE,SAAQ,CACT,CAAC;KACL;IAED,aAAa;QACX,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC;aAChE,IAAI,CACH,UAAU,CAAC,KAAK;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B,CAAC,CACH;aACA,SAAS,CACR,CAAC,IAAyB;YACxB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB,EACD,SAAQ,CACT,CAAC;KACL;;IAGD,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,IACjC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,YAAY,CAAC,KAAK,CAAC,CACjF,CAAC;KACH;;IAGD,mBAAmB;QACjB,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC5D,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;YACjD,OAAO;SACR;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;YACnD,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1C;KACF;IAEO,gCAAgC;QACtC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC;QAEvE,IAAI,CAAC,eAAe,GAAG;YACrB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,yBAAyB;YAC9C,WAAW,EAAE,EAAE;SAChB,CAAC;QAEF,IAAI,CAAC,2BAA2B,GAAG;YACjC,MAAM,EAAE;gBACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;gBAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;YACD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,qCAAqC;SAC3D,CAAC;QAEF,IAAI,CAAC,6BAA6B,GAAG;YACnC,MAAM,EAAE;gBACN,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aAC/B;YACD,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,uCAAuC;SAC7D,CAAC;KACH;IAEO,kBAAkB,CAAC,cAAmB;QAC5C,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,MAAM,OAAO,GAAW,EAAE,CAAC;YAC3B,IAAI,wBAA6B,CAAC;YAElC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAW;gBACjC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,KAAK,YAAY,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;gBAE9F,wBAAwB,mCAAQ,wBAAwB,GAAK,OAAO,CAAE,CAAC;aACxE,CAAC,CAAC;YAEH,OAAO,wBAAwB,CAAC;SACjC;QAED,OAAO,SAAS,CAAC;KAClB;IAEO,gBAAgB,CAAC,MAAc;QACrC,MAAM,cAAc,GAAgC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAEnF,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;KAC5D;IAEO,iBAAiB,CAAC,MAAc;QACtC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEpD,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QAClF,MAAM,MAAM,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,YAAY,EAAE,eAAe,EAAE,CAAC;QAEhF,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;YACxB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;gBAC3D,cAAc,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aACnC;SACF;QAED,OAAO,cAAc,CAAC;KACvB;IAEO,aAAa,CAAC,OAA0B,EAAE,IAAI,EAAE,SAAS,EAAE;QACjE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE9B,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QAED,IAAI,IAAI,KAAK,qBAAqB,CAAC,UAAU,EAAE;YAC7C,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;SAC9B;QAED,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;KAC7B;IAEO,cAAc;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI;YAChE,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;KACJ;IAEO,2BAA2B,CAAC,IAA0B;;QAC5D,IAAI,CAAC,KAAK,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,KAAK,mCAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,mCAAI,KAAK,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,gBAAgB;QACtB,IAAI,CAAC,aAAa,GAAG;YACnB,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB;YAC9C,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB;YACxC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,qBAAqB;YAClD,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,sBAAsB;SACrD,CAAC;KACH;;;YAnXF,SAAS;;;YAhFD,iBAAiB;YAdqD,iBAAiB;;;sBAgG7F,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;sBAC5C,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;8BAa5C,KAAK,SAAC,oBAAoB;sBAM1B,KAAK,SAAC,WAAW;oBAGjB,KAAK,SAAC,SAAS;4BAGf,KAAK,SAAC,kBAAkB;2BAGxB,KAAK,SAAC,iBAAiB;6BAGvB,KAAK,SAAC,mBAAmB;uBAGzB,KAAK,SAAC,YAAY;oBAGlB,MAAM,SAAC,gBAAgB;4BAGvB,KAAK,SAAC,kBAAkB;yBAGxB,KAAK,SAAC,eAAe;yBASrB,KAAK,SAAC,eAAe;uBA0DrB,KAAK,SAAC,YAAY;oBAuBlB,KAAK,SAAC,SAAS;;AAtG4B;IAAf,YAAY,EAAE;kEAAiC;AAGvC;IAAf,YAAY,EAAE;4DAA2B;;AC5HjE;;;;;;;;MASa,0BAA0B;IADvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyGoB,eAAU,GAAyB,IAAI,YAAY,EAAU,CAAC;QAuFxE,eAAU,GAAa,KAAK,CAAC;KAyBtC;;;;;;;;;;;;;;;;;IAPC,IAA2B,SAAS,CAAC,KAAc;QACjD,IAAI,CAAC,UAAU,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACtE;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;YAxNF,SAAS;;;wBASP,KAAK,SAAC,cAAc;qBAgCpB,KAAK,SAAC,UAAU;oBAUhB,KAAK,SAAC,SAAS;yBAsDf,MAAM,SAAC,QAAQ;mBAkCf,KAAK,SAAC,QAAQ;uBA0Cd,KAAK,SAAC,YAAY;6BASlB,KAAK,SAAC,mBAAmB;wBAoBzB,KAAK,SAAC,cAAc;;;MC1NV,sBAAsB;IACjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAI;IAE9B,OAAO,CAAC,MAAyB,EAAE,KAAU;QACrD,OAAO,OAAO,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAClF;IAES,IAAI,CAAC,GAAW,EAAE,IAAmC;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAClC;IAES,qBAAqB,CAAC,cAAmB;QACjD,QACE,cAAc,IAAI;YAChB,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,SAAS;SACjB,EACD;KACH;;;MCjBU,wBAAyB,SAAQ,sBAAsB;IAClE,YAAY,IAAgB;QAC1B,KAAK,CAAC,IAAI,CAAC,CAAC;KACb;IAED,yBAAyB,CAAC,eAA0C,EAAE,EAAE,SAAoC,EAAE;QAC5G,OAAO,CAAC,GAAG,YAAY,CAAC,CAAC,MAAM,CAC7B,CAAC,aAAa,EAAE,KAAK;YACnB,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,YAAY,IAAI,YAAY,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;YAChG,MAAM,WAAW,GAAG,KAAK,IAAI,CAAC,CAAC;YAE/B,IAAI,WAAW,EAAE;gBACf,aAAa,CAAC,KAAK,CAAC,mCAAQ,MAAM,CAAC,KAAK,CAAC,GAAK,KAAK,CAAE,CAAC;aACvD;iBAAM;gBACL,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC3B;YAED,OAAO,aAAa,CAAC;SACtB,EACD,CAAC,GAAG,MAAM,CAAC,CACZ,CAAC;KACH;IAED,WAAW,CAAC,IAAuB,EAAE,KAAU;QAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,IAAI,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;KAC5G;;;YA1BF,UAAU;;;YARF,UAAU;;;MCYN,8BAA+B,SAAQ,sBAAsB;IACxE,YAAY,IAAgB;QAC1B,KAAK,CAAC,IAAI,CAAC,CAAC;KACb;IAED,eAAe,CAAC,KAAyB,EAAE,KAAU;QACnD,MAAM,YAAY,GAA8B,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC;QAEpF,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,IAAI,CACpD,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC,CACnE,CAAC;KACH;IAED,cAAc,CACZ,QAA2B,EAC3B,KAAyB,EACzB,KAAU;QAEV,MAAM,YAAY,GAA8B,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,CAAC;QAEpF,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,IAAI,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;KACrH;IAED,gBAAgB,CAAC,kBAA6C,EAAE,EAAE,SAAoC,EAAE;QACtG,OAAO,CAAC,GAAG,eAAe,CAAC,CAAC,MAAM,CAChC,CAAC,aAAa,EAAE,cAAc;YAC5B,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC3F,MAAM,WAAW,GAAG,KAAK,IAAI,CAAC,CAAC;YAE/B,IAAI,WAAW,EAAE;gBACf,aAAa,CAAC,KAAK,CAAC,mCAAQ,MAAM,CAAC,KAAK,CAAC,GAAK,cAAc,CAAE,CAAC;aAChE;YAED,OAAO,aAAa,CAAC;SACtB,EACD,CAAC,GAAG,MAAM,CAAC,CACZ,CAAC;KACH;IAEO,sBAAsB,CAAC,cAAmB;QAChD,QACE,cAAc,IAAI;YAChB,KAAK,EAAE,EAAE;SACV,EACD;KACH;;;YA9CF,UAAU;;;YAXF,UAAU;;;ACYnB;;;;;;;;;;;;;;;;MAqBa,sBAAuB,SAAQ,0BAA0B;IAwBpE,YACU,OAA0B,EAC1B,WAAqC,EACrC,iBAAiD;QAEzD,KAAK,EAAE,CAAC;QAJA,YAAO,GAAP,OAAO,CAAmB;QAC1B,gBAAW,GAAX,WAAW,CAA0B;QACrC,sBAAiB,GAAjB,iBAAiB,CAAgC;QAlBnD,uBAAkB,GAAG,IAAI,OAAO,EAAO,CAAC;KAqB/C;IAnBD,IAA8B,IAAI,CAAC,KAAa;;QAE9C,UAAU,CAAC;YACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB,CAAC,CAAC;KACJ;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,IAAS,EAAE,CAAC;KAC9B;IAUD,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BD,KAAK,CAAC,QAAgB;QACpB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;KACtC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAC/C;IAED,eAAe,CAAC,WAAgB;QAC9B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KAC3C;IAED,YAAY,CAAC,KAAyB;QACpC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC;QAEpD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB;aAC/C,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC;aAChD,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,EAAE,iBAAiB,CAAC,CAAC;KACjF;IAEO,sBAAsB,CAAC,oBAA6B;QAC1D,OAAO,eAAe;YACpB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;YACxC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;SAC7E,CAAC;KACH;IAEO,mBAAmB,CAAC,oBAA6B;QACvD,OAAO,eAAe;YACpB,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC;SAC7E,CAAC;KACH;IAEO,WAAW,CAAC,KAAc;QAChC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;KAC9B;IAEO,QAAQ;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE;YACvD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;KACF;IAEO,oBAAoB;QAC1B,MAAM,oBAAoB,GAAG,QAAQ,CAAC,aAAa,CAAC;QAEpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;QAEtD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW;aACvC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC;aAClC,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,EAAE,WAAW,CAAC,CAAC;KAC9E;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;SACvC;QAED,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;SACzC;KACF;IAEO,yBAAyB,CAAC,QAAgB,EAAE,oBAA6B;QAC/E,IAAI,QAAQ,EAAE;;;YAGZ,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;SACxC;aAAM;YACL,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC;SACjC;KACF;IAEO,iBAAiB,CAAC,cAAiC;QACzD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC9F;IAEO,yBAAyB,CAAC,QAAiC;QACjE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACrF;;;YApKF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,61BAA+C;aAChD;;;YAhCmB,iBAAiB;YAQ5B,wBAAwB;YAExB,8BAA8B;;;8BAwBpC,SAAS,SAAC,iBAAiB;mBAU3B,SAAS,SAAC,aAAa;;;ACxB1B;;;;;MASa,sBAAuB,SAAQ,0BAA0B;IAapE,YACU,gBAA0C,EAClD,UAA6B,EAC7B,cAAiC;QAEjC,KAAK,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAJ1B,qBAAgB,GAAhB,gBAAgB,CAA0B;QATpD,oBAAe,GAAoB,IAAI,CAAC;QAExC,oBAAe,GAAW,GAAG,CAAC;KAY7B;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,eAAe;QACb,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;;IAGD,QAAQ,CAAC,IAAI;QACX,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,kBAAI,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAK,IAAI,EAAG,CAAC;SAC/G;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,iBAAG,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAK,IAAI,EAAG,CAAC;SAC5F;KACF;;IAGD,UAAU,CAAC,cAAc;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KAChH;IAED,wBAAwB,CAAC,iBAAiB;QACxC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC;KACzF;;IAGD,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,qBAAO,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAK,IAAI,EAAG,CAAC,CAAC;KAC/G;;IAGD,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,oBAAoB;QAClB,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CAC9E,MAAM,CAAC,CAAC,CAAM,KAAK,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,EAChD,YAAY,CAAC,GAAG,CAAC,CAClB,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;SACf,CAAC,CAAC;KACJ;IAED,SAAS;QACP,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;IAED,MAAM,CAAC,IAAuB;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC7B;KACF;IAED,gBAAgB;QACd,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;IAEO,cAAc;;QACpB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAA,MAAA,IAAI,CAAC,SAAS,0CAAE,MAAM,MAAK,CAAC,EAAE;gBAChC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;aACxB;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;aAC5B;SACF;;;QAID,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,GAAG,GAAG,GAAG,GAAG,CAAC;QACnD,IAAI,MAAM,CAAC,WAAW,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC;SAC5B;KACF;IAEO,oBAAoB,CAAC,CAAM;QACjC,OAAO,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;KACzB;IAEO,wBAAwB;QAC9B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;IAEO,iBAAiB;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QAExF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAyB,SAAS,CAAC,CAAC;QACtF,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEzD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU;aAClC,IAAI,CACH,GAAG,CAAC,IAAI;YACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,2BAA2B,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;SACtE,CAAC,EACF,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CACrC;aACA,SAAS,CAAC;YACT,IAAI,CAAC,2BAA2B,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;SACtE,CAAC,CAAC;KACN;;;YA3IF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,qmGAA+C;aAChD;;;YAxBC,wBAAwB;YAYjB,iBAAiB;YAdxB,iBAAiB;;;sBA4BhB,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BAC5C,SAAS,SAAC,WAAW;wBACrB,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;;;ACvBpD;;;;;MAMa,oBAAoB;IAK/B,YAAoB,mBAA+C;QAA/C,wBAAmB,GAAnB,mBAAmB,CAA4B;QAJnE,qBAAgB,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEtD,iBAAY,GAAsB,IAAI,CAAC;KAEwB;;;;;;;;;;;;;;IAevE,SAAS,CAAC,MAYT;QACC,MAAM,EACJ,eAAe,EACf,OAAO,EACP,OAAO,EACP,YAAY,EACZ,KAAK,EACL,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,aAAa,EACb,UAAU,EACV,UAAU,EACX,GAAG,MAAM,CAAC;QAEX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,sBAAsB,CAAC,CAAC;QAClG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,GAAG,eAAe,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,GAAG,OAAO,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,YAAY,GAAG,YAAY,CAAC;QACvD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM;YAC/C,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,GAAG,cAAc,CAAC;QAC3D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,GAAG,aAAa,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;QACnD,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;KACxC;;IAGD,WAAW,CAAC,KAAK;QACf,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;KAC7B;;;YAzEF,UAAU;;;YAXF,0BAA0B;;;ACgBnC;AACA,MAAMA,WAAS,GAAG;IAChB,qBAAqB;IACrB,oBAAoB;IACpB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;QAChD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;QAChD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,SAAS;QAClB,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;QAChD,KAAK,EAAE,KAAK;KACb;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Da,iBAAkB,SAAQ,qBAAqB;IAiB1D,YACU,QAAmB,EAC3B,qBAA4C,EACpC,oBAA0C,EAClD,QAAkB;QAElB,KAAK,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QAL/B,aAAQ,GAAR,QAAQ,CAAW;QAEnB,yBAAoB,GAApB,oBAAoB,CAAsB;QAjBpD,gBAAW,GAAG,KAAK,CAAC;QAEpB,mBAAc,GAAG,KAAK,CAAC;QAEvB,gBAAW,GAAG,EAAE,CAAC;QACjB,uBAAkB,GAAG,EAAE,CAAC;QAGhB,4BAAuB,GAAY,IAAI,CAAC;KAa/C;IAXD,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG,IAAI,CAAC;KAC3C;IAWD,eAAe;QACb,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAED,SAAS;;QACP,MAAM,UAAU,GAAG,MAAA,IAAI,CAAC,OAAO,0CAAE,aAAa,CAAC,WAAW,CAAC;;;QAG3D,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,MAAM,UAAU,IAAI,IAAI,CAAC,uBAAuB,CAAC,EAAE;YAC5G,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;KACF;IAED,WAAW;QACT,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;SACtC;KACF;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,UAAU;QACR,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC7B,MAAM,EACJ,eAAe,EACf,OAAO,EACP,OAAO,EACP,YAAY,EACZ,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,UAAU,EACV,UAAU,EACX,GAAG,IAAI,CAAC;YAET,MAAM,aAAa,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEhD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC;gBAClC,eAAe;gBACf,OAAO;gBACP,OAAO;gBACP,YAAY;gBACZ,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ;gBACR,cAAc;gBACd,QAAQ;gBACR,aAAa;gBACb,UAAU;gBACV,UAAU;aACX,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe;oBAC3F,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;wBACzD,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;wBACrC,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC3B;oBAED,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;iBACnC,CAAC,CAAC;aACJ;SACF;KACF;IAED,kBAAkB;;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,KAAI,MAAA,IAAI,CAAC,YAAY,0CAAE,MAAM,CAAA,EAAE;gBACzD,OAAO,iBAAG,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAG,CAAC;aAC5F;YAED,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,CAAC,YAAY,CAAC;SAC1B;KACF;IAED,cAAc,CAAC,eAA2B;QACxC,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,cAAc,qBACnD,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,EACtC,KAAK,EAAE,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IACnC,cAAc,EACjB,CAAC,CAAC;QAEJ,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACjD;IAED,YAAY,CAAC,KAAU,EAAE,MAAW;QAClC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE;YACpC,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;SAC9F;KACF;IAED,YAAY;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;KACzC;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAElC,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,QAAQ,EAAE,MAAK,KAAK,EAAE;YACvC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,IAAI,UAAU,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC;QAEvE,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,CAAC;KAC7E;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACvD;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,EAAE;YAC3C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;SACrC;KACF;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,aAAa;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,GAAG,EAAE,CAAC;KACpD;IAED,mBAAmB;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QACjF,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;KAC7E;IAED,qBAAqB;QACnB,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAE/C,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QAErC,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,GAAG,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAC3B,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpC,IAAI,GAAG,GAAG,UAAU,EAAE;oBACpB,GAAG,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACrC,MAAM;iBACP;aACF;YAED,IAAI,kBAAkB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;gBAC7C,IAAI,CAAC,KAAK,WAAW,CAAC,MAAM,EAAE;oBAC5B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACrC,OAAO;iBACR;gBAED,IAAI,GAAG,GAAG,mBAAmB,GAAG,UAAU,EAAE;oBAC1C,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;oBAC5D,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;iBAClD;qBAAM;oBACL,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC7B,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;oBACxD,cAAc,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;iBAClD;aACF;SACF;QAED,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,cAAc,CAAC,CAAC;KAC/C;IAEO,kBAAkB;QACxB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACrC;QAED,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC3C;IAEO,YAAY,CAAC,cAAc,EAAE,UAAU;QAC7C,IAAI,aAAa,CAAC;QAClB,IAAI,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;YAC7B,KAAK,MAAM,QAAQ,IAAI,UAAU,EAAE;gBACjC,IAAI,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,EAAE;oBAC9C,IAAI,CAAC,aAAa,EAAE;wBAClB,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;qBAC1C;yBAAM;wBACL,aAAa,GAAG,aAAa,GAAG,KAAK,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;qBAClE;iBACF;aACF;SACF;QAED,IAAI,CAAC,aAAa,EAAE;YAClB,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACjD;QACD,OAAO,aAAa,CAAC;KACtB;IAEO,2BAA2B,CAAC,cAAmB;QACrD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;QACzD,IAAI,aAAa,CAAC;QAElB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACnC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACrE;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SAClD;QAED,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,EAAE,GAAG,aAAa,CAAC;QAC7C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE,GAAG,aAAa,CAAC;KACjE;IAEO,mBAAmB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B,CAAC,CAAC;KACJ;;;YA3SF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,olFAAyC;2BACzCA,WAAS;aACV;;;YA9FC,SAAS;YAOF,qBAAqB;YACrB,oBAAoB;YAX3B,QAAQ;;;sBAmGP,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE;;;ACnGvD;;;;;;;MAWa,8BAA8B;IAJ3C;;QAMwB,sBAAiB,GAAa,KAAK,CAAC;;QAGlC,eAAU,GAAa,KAAK,CAAC;;QASxB,oBAAe,GAAe,EAAE,CAAC;;QAG1C,YAAO,GAA+B,EAAE,CAAC;;QAGjC,mBAAc,GAA+B,EAAE,CAAC;;QAGhD,kBAAa,GAAa,KAAK,CAAC;;QAGjC,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;;QAGzC,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;QAOpB,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAM/D,cAAS,GAAG,CAAC,CAAC;QACd,SAAI,GAAY,KAAK,CAAC;KAiGvB;IA/FC,IAAI,UAAU;;QACZ,OAAO,CAAC,EAAC,MAAA,IAAI,CAAC,OAAO,0CAAE,MAAM,CAAA,CAAC;KAC/B;IAGD,SAAS,CAAC,KAAU;QAClB,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;KACF;IAED,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;KACnD;IAED,cAAc,CAAC,MAA2B;QACxC,OAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC;KACvF;IAED,SAAS,CAAC,KAAK,EAAE,MAAM;QACrB,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAEzC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;SAC/B;KACF;IAED,gBAAgB;QACd,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE;YACpD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACxC;IAED,oBAAoB,CAAC,OAAO,EAAE,MAAM;QAClC,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,cAAc,IAAI,cAAc,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC;SAC7G;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACxC;IAED,2BAA2B,CAAC,cAAc;QACxC,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,IAAI,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;KACjG;IAED,0BAA0B,CAAC,cAAc;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,IAAI,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;KAChG;IAED,iBAAiB;QACf,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC;SACb;aAAM,IAAI,IAAI,CAAC,0BAA0B,CAAC,cAAc,CAAC,EAAE;YAC1D,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IAED,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,iBAAiB,CAAC,MAAM;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QAEnB,UAAU,CAAC;YACT,IAAI,MAAM,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAC9B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAC5B;SACF,CAAC,CAAC;KACJ;IAEO,qBAAqB,CAAC,cAAc;QAC1C,MAAM,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QAErD,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,cAAc,EAAE;YAC/C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;gBACjD,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACxC;SACF;QAED,OAAO,kBAAkB,CAAC;KAC3B;;;YA/IF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,k5CAAuD;aACxD;;;gCAGE,KAAK,SAAC,aAAa;yBAGnB,KAAK,SAAC,eAAe;uBAGrB,KAAK,SAAC,YAAY;gCAGlB,KAAK,SAAC,sBAAsB;8BAG5B,KAAK,SAAC,oBAAoB;sBAG1B,KAAK,SAAC,WAAW;6BAGjB,KAAK,SAAC,mBAAmB;4BAGzB,KAAK,SAAC,mBAAmB;2BAGzB,MAAM,SAAC,iBAAiB;qBAGxB,MAAM,SAAC,UAAU;4BAOjB,MAAM,SAAC,kBAAkB;wBAEzB,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;wBACzD,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;4BACzD,SAAS,SAAC,eAAe;wBASzB,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;;AClErC;;;;;;;IAOY;AAAZ,WAAY,uBAAuB;;IAEjC,iFAAU,CAAA;;IAEV,6EAAQ,CAAA;;IAER,6EAAQ,CAAA;AACV,CAAC,EAPW,uBAAuB,KAAvB,uBAAuB;;ACiBnC,MAAM,oCAAoC,GAAG,GAAG,CAAC;AACjD,MAAM,kCAAkC,GAAG,OAAO,CAAC;AACnD,MAAM,kCAAkC,GAAG,OAAO,CAAC;AAE5C,MAAM,4BAA4B,GAAG;IAC1C,EAAE,EAAyB;QACzB,MAAM,EAAE,eAAe;QACvB,iBAAiB,EAAE,QAAQ;QAC3B,SAAS,EAAE,YAAY;KACxB;IACD,EAAE,EAAyB;QACzB,MAAM,EAAE,sBAAsB;QAC9B,iBAAiB,EAAE,OAAO;QAC1B,SAAS,EAAE,kBAAkB;KAC9B;IACD,EAAE,EAAyB;QACzB,MAAM,EAAE,wBAAwB;QAChC,iBAAiB,EAAE,QAAQ;QAC3B,SAAS,EAAE,kBAAkB;KAC9B;IACD,EAAE,EAAyB;QACzB,MAAM,EAAE,mBAAmB;QAC3B,iBAAiB,EAAE,QAAQ;QAC3B,SAAS,EAAE,aAAa;KACzB;CACF,CAAC;AAEF;;;;;;;;;;;;;;MAesB,0BAA0B;IAga9C,YAAY,eAAkC;;;;;;;;;;;;QApZP,cAAS,GAAY,KAAK,CAAC;;QAwB1C,gBAAW,GAAY,EAAE,CAAC;;;;;;;;;;QAWnB,sBAAiB,GAAY,EAAE,CAAC;;;;;;;;QAuB3C,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;QAExE,oBAAe,GAA+B,EAAE,CAAC;QACjD,2BAAsB,GAA+B,EAAE,CAAC;QACxD,uBAAkB,GAAG,EAAE,CAAC;QACxB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,kBAAa,GAAY,IAAI,CAAC;QAC9B,kBAAa,GAAG,IAAI,OAAO,EAAE,CAAC;;QAKpB,mBAAc,GAAQ,IAAI,CAAC;QAO7B,kBAAa,GAAY,GAAG,CAAC;QAC7B,cAAS,GAAa,KAAK,CAAC;QAC5B,gBAAW,GAA6B,uBAAuB,CAAC,UAAU,CAAC;QAC3E,gBAAW,GAAa,KAAK,CAAC;QAG9B,cAAS,GAAa,KAAK,CAAC;QAC5B,UAAK,GAAa,KAAK,CAAC;QACxB,gBAAW,GAAY,KAAK,CAAC;QAC7B,gBAAW,GAAY,kCAAkC,CAAC;QAC1D,gBAAW,GAAY,kCAAkC,CAAC;QA8ThE,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA5RD,IAA+B,aAAa,CAAC,KAAmC;QAC9E,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,sBAAsB,KAAK,SAAS,GAAG,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;YACjG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;KACF;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;;;;;;;;IAcuC,IAAI,UAAU,CAAC,KAAc;QACnE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;KACrC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;IAYD,IAA8B,YAAY,CAAC,KAAa;QACtD,MAAM,WAAW,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,WAAW,GAAG,CAAC,GAAG,WAAW,GAAG,oCAAoC,CAAC;KAClH;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAqCD,IAAyB,QAAQ,CAAC,KAA4B;QAC5D,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,4BAA4B,CAAC,eAAe,CAAC,GAC7C,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC3C,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9D;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtE;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAQ,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAQ,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAA4B,UAAU,CAAC,UAAmB;QACxD,IAAI,CAAC,WAAW,GAAQ,UAAU,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;KACjF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;;;;;;IAmBD,IAAwB,OAAO,CAAC,OAAmC;QACjE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;IAYD,IAAqB,IAAI,CAAC,IAAa;QACrC,IAAI,CAAC,KAAK,GAAQ,IAAI,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAE9D,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;IAYD,IAA4B,UAAU,CAAC,UAAmC;QACxE,IAAI,CAAC,WAAW,GAAG,UAAU,IAAI,uBAAuB,GAAG,UAAU,GAAG,uBAAuB,CAAC,UAAU,CAAC;QAC3G,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACjC,KAAK,YAAY;gBACf,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,UAAU,CAAC;gBACtD,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,QAAQ,CAAC;gBACpD,MAAM;YACR,KAAK,UAAU;gBACb,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,QAAQ,CAAC;gBACpD,MAAM;SACT;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;IAcD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,kCAAkC,CAAC;QAE/D,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;;;;IAcD,IAA4B,UAAU,CAAC,KAAa;QAClD,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,kCAAkC,CAAC;QAE/D,IAAI,QAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YAC1D,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAC5C;KACF;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAMD,QAAQ;QACN,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,aAAa;aACf,IAAI,CACH,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,EAC/B,oBAAoB,EAAE,EACtB,GAAG,CAAC,OAAO,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,EAC1C,SAAS,CAAC,CAAC,MAAc,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EACvD,GAAG,CAAC,OAAO,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,CAAC,CAC5C;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC/B;IAED,UAAU,CAAC,OAAqC;QAC9C,IAAI,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;YAC/B,IAAI,CAAC,OAAO,GAA+B,OAAO,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAS,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAClF;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACvC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5C,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEtC,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;aAC9C;SACF;KACF;IAED,kBAAkB,CAAC,OAAO;QACxB,OAAO,CAAC,OAAO,CAAC,MAAM;YACpB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;gBACpB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;aAC7B;SACF,CAAC,CAAC;KACJ;IAED,UAAU,CAAC,OAAmC;QAC5C,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;SACvC;KACF;IAED,YAAY,CAAC,eAA2C;QACtD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;SACnC;KACF;IAED,WAAW,CAAC,eAAe;QACzB,IAAI,eAAe,IAAI,IAAI,CAAC,eAAe,KAAK,eAAe,CAAC,MAAM,EAAE;YACtE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,eAAe,GAAG,eAAe,GAAG,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC;KACxE;IAED,oBAAoB,CAAC,eAA2C;QAC9D,OAAO,eAAe,IAAI,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KACrG;IAED,eAAe,CAAC,KAAK;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QACvE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;KAClC;IAED,aAAa,CAAC,MAAc,EAAE,OAAmC,EAAE,UAAmC;QACpG,IAAI,MAAM,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YACvC,MAAM,UAAU,GAA+B,EAAE,CAAC;YAClD,OAAO,CAAC,OAAO,CAAC,MAAM;gBACpB,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,EAAE;oBAClE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB;aACF,CAAC,CAAC;YACH,IAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC;SAC5C;KACF;IAED,aAAa,CAAC,MAAc,EAAE,MAA2B,EAAE,UAAmC;QAC5F,QAAQ,UAAU;YAChB,KAAK,uBAAuB,CAAC,UAAU;gBACrC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACzC,KAAK,uBAAuB,CAAC,QAAQ;gBACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACvC,KAAK,uBAAuB,CAAC,QAAQ;gBACnC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACxC;KACF;IAED,UAAU,CAAC,MAAc,EAAE,MAA2B;QACpD,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;KACpE;IAED,QAAQ,CAAC,MAAc,EAAE,MAA2B;QAClD,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACtE;IAED,QAAQ,CAAC,MAAc,EAAE,MAA2B;QAClD,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;KAClE;IAED,QAAQ,CAAC,CAAkB;QACzB,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;YACzD,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAED,qBAAqB,CAAC,UAAsB,EAAE,OAAO,GAAG,IAAI,CAAC,OAAO;QAClE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;SACnC;aAAM;YACL,UAAU,CAAC,OAAO,CAAC,SAAS;gBAC1B,OAAO,CAAC,OAAO,CAAC,MAAM;oBACpB,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,EAAE;wBACpC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACnC;iBACF,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,UAAU,CAAC,MAAW;QACpB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE;YACjC,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO;gBAC7F,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;gBACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACzC,CAAC,CAAC;SACJ;aAAM;;YAEL,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YAE7D,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE;gBACvE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;aACzC;SACF;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;;YAlmBF,SAAS;;;YAnDD,iBAAiB;;;wBAgEvB,KAAK,SAAC,cAAc;oBAGpB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;uBAed,KAAK,SAAC,YAAY;0BAGlB,KAAK,SAAC,eAAe;gCAWrB,KAAK,SAAC,sBAAsB;mBAG5B,KAAK,SAAC,MAAM;4BAWZ,KAAK,SAAC,mBAAmB;qBASzB,MAAM,SAAC,UAAU;4BAgEjB,KAAK,SAAC,kBAAkB;yBAwBxB,KAAK,SAAC,eAAe;2BAmBrB,KAAK,SAAC,iBAAiB;uBA6CvB,KAAK,SAAC,YAAY;uBAwBlB,KAAK,SAAC,YAAY;uBAkBlB,KAAK,SAAC,YAAY;yBAoBlB,KAAK,SAAC,eAAe;sBAyBrB,KAAK,SAAC,WAAW;mBAoBjB,KAAK,SAAC,QAAQ;yBAoBd,KAAK,SAAC,eAAe;yBA+BrB,KAAK,SAAC,eAAe;yBAwBrB,KAAK,SAAC,eAAe;;AAxYiB;IAAf,YAAY,EAAE;6DAA4B;AAiDtB;IAAf,YAAY,EAAE;iEAAwB;AAiG3B;IAAf,YAAY,EAAE;4DAGtC;;MC1NU,0BAA0B;IAWrC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAVpC,eAAU,GAAW,OAAO,CAAC;QAC7B,eAAU,GAAW,OAAO,CAAC;QAGrB,aAAQ,GAAG,EAAE,CAAC;KAMkB;IAJxC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAID,eAAe,CAAC,EAAE,KAAK,EAAO;QAC5B,MAAM,MAAM,GAAG,KAAK,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,MAAM;SACP,CAAC;aACD,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAClF;IAED,kBAAkB,CAAC,KAA6B;QAC9C,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,CAAC;aACzD,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;KAClF;IAED,gBAAgB,CAAC,GAAW,EAAE,UAAkB,EAAE,UAAkB;QAClE,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAEO,8BAA8B,CAAC,KAAiB;QACtD,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7B,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;SAC/D;QAED,OAAO,EAAE,CAAC;KACX;IAEO,wBAAwB,CAAC,IAAS;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEpC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;KACzB;;;YAhDF,UAAU;;;YARF,UAAU;;;AC2BnB,MAAM,4BAA4B,GAAG,CAAC,CAAC;AACvC,MAAM,qCAAqC,GAAG,QAAQ,CAAC;AAEvD;AACA,MAAMA,WAAS,GAAG;IAChB,0BAA0B;IAC1B,wBAAwB;IACxB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,sBAAsB,CAAC;QACrD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,sBAAsB,CAAC;QACrD,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoCa,sBACX,SAAQ,0BAA0B;IAkBlC,YACU,QAAmB,EACnB,cAAiC,EACjC,EAAc,EACd,eAAyC,EAC1C,cAA0C,EACjD,eAAkC;QAElC,KAAK,CAAC,eAAe,CAAC,CAAC;QAPf,aAAQ,GAAR,QAAQ,CAAW;QACnB,mBAAc,GAAd,cAAc,CAAmB;QACjC,OAAE,GAAF,EAAE,CAAY;QACd,oBAAe,GAAf,eAAe,CAA0B;QAC1C,mBAAc,GAAd,cAAc,CAA4B;QAhBnD,qBAAgB,GAAG,CAAC,CAAC;QACrB,iBAAY,GAAW,oBAAoB,CAAC;QAC5C,iBAAY,GAAY,KAAK,CAAC;QAC9B,gBAAW,GAAG,KAAK,CAAC;QAGpB,mBAAc,GAAG,KAAK,CAAC;QAEf,4BAAuB,GAAY,IAAI,CAAC;QAuSxC,aAAQ,GAAG;YACjB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC,CAAC;KA7RD;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,EAAE;YACrE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACrC;KACF;IAED,SAAS;QACP,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC;;;QAG/D,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,MAAM,UAAU,IAAI,IAAI,CAAC,uBAAuB,CAAC,EAAE;YAC5G,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;KACF;IAED,WAAW;;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,MAAA,IAAI,CAAC,8BAA8B,0CAAE,WAAW,EAAE,CAAC;QACnD,MAAA,IAAI,CAAC,aAAa,0CAAE,WAAW,EAAE,CAAC;KACnC;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACzC;KACF;IAED,aAAa;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,WAAW,GAAG,EAAE,CAAC;KAC1E;IAED,mBAAmB;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QAC5E,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,UAAU,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;KAC7E;IAED,qBAAqB;QACnB,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QACpD,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAE7B,IAAI,UAAU,GAAG,CAAC,EAAE;YAClB,IAAI,GAAG,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChD,GAAG,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEtD,IAAI,GAAG,GAAG,UAAU,EAAE;oBACpB,GAAG,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC;oBAC3B,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACrC,MAAM;iBACP;aACF;YAED,IAAI,kBAAkB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;gBACtD,IAAI,CAAC,KAAK,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;oBACrC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;oBACrC,OAAO;iBACR;gBAED,IAAI,GAAG,GAAG,mBAAmB,GAAG,UAAU,EAAE;oBAC1C,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtC,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;oBACrE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;iBAC3D;qBAAM;oBACL,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtC,MAAM,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;oBACjE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;iBAC3D;aACF;SACF;KACF;IAED,WAAW,CAAC,YAAY;QACtB,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAExC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE;YACxC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;KACF;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;;QAGtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,EAAE;YAChD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;SACrC;KACF;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;aAC9B,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;KACzB;IAED,SAAS,CAAC,KAAW;QACnB,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,SAAS,EAAE;YACxF,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;YACrC,OAAO;SACR;QAED,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,GAAG,EAAE;YACvC,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAED,wBAAwB;QACtB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;QAED,IAAI,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACpD;IAED,YAAY,CAAC,MAAM;QACjB,IAAI,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SACtC;KACF;IAED,yBAAyB,CAAC,MAAe;QACvC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;KACrC;IAED,uBAAuB;QACrB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YACvD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YAC/F,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;IAED,yBAAyB,CAAC,OAAO;QAC/B,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC;KACvC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;YACtC,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACtC;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAChE;SACF;aAAM;YACL,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9C;;QAGD,UAAU,CAAC,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;KAClD;IAED,eAAe,CAAC,KAAK;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAC/E,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACzC;IAED,kBAAkB,CAAC,KAAiB;QAClC,IACE,IAAI,CAAC,YAAY;YACjB,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACvD,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YACtD,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAC1D;YACA,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;SACvC;KACF;IAED,WAAW,CAAC,QAAgB,EAAE;QAC5B,MAAM,KAAK,GAAG,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;QAClD,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,IAAI,CAC7C,UAAU,CAAC,GAAG;YACZ,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,EACF,GAAG,CAAC,CAAC,OAAmC;YACtC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;SACvC,CAAC,CACH,CAAC;KACH;IAEO,uBAAuB;QAC7B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;;;YAK9B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;SACvC;KACF;IAEO,uBAAuB,CAAC,KAAiC;QAC/D,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QAED,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC9C;IAEO,uBAAuB;QAC7B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,qCAAqC,CAAC,CAAC;KAC5E;IAEO,KAAK;QACX,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE7C,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAClF,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,QAAQ,EAAE,GAAG,IAAI,CAAC,uBAAuB,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;SAC5D,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAMO,IAAI;QACV,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,mBAAmB;QACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,EACrC,4BAA4B,EAC5B,IAAI,CAAC,YAAY,EACjB,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAChC;;;YAnWF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,o2EAA8C;2BAC9CA,WAAS;aACV;;;YA1EC,SAAS;YAPT,iBAAiB;YAGjB,UAAU;YAcH,wBAAwB;YAMxB,0BAA0B;YAJ1B,iBAAiB;;;8BAkEvB,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;uBAC/D,SAAS,SAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BAC7C,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;2BAC3D,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACxF/D;;;;;;;MAYa,0BAA0B;IALvC;;QAUuB,aAAQ,GAAa,KAAK,CAAC;;QAG5B,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;KAMjD;IAJC,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjC;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,kiBAAmD;gBACnD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;oBAGE,KAAK,SAAC,SAAS;uBAGf,KAAK,SAAC,YAAY;qBAGlB,MAAM,SAAC,UAAU;;;AChBpB;;;;;;;MAWa,4BAA4B;IAJzC;;QAWsB,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;KAsCjD;;;;;;;;;;;;IAvBC,IAA4B,WAAW,CAAC,WAAmB;QACzD,IAAI,CAAC,YAAY,GAAG,WAAW,IAAI,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;KACpH;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;KAC7D;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;KAC9C;IAED,QAAQ,CAAC,KAAK;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;KAClF;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,KAAK;QACH,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KAC5C;;;YAhDF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,0bAAqD;aACtD;;;2BAEE,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;uBAG5D,KAAK,SAAC,YAAY;qBAGlB,MAAM,SAAC,UAAU;0BAejB,KAAK,SAAC,eAAe;;;MClCX,iBAAiB;IAD9B;QAEU,UAAK,GAAG,IAAI,OAAO,EAAU,CAAC;KASvC;IAPC,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAClC;;;YAVF,UAAU;;;ACIX,MAAM,sBAAsB,GAAG;IAC7B,MAAM;IACN,QAAQ;IACR,WAAW;IACX,aAAa;IACb,eAAe;IACf,cAAc;IACd,aAAa;IACb,qBAAqB;IACrB,YAAY;CACb,CAAC;MAMW,uBAAuB;IA6BlC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAlBlC,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QAE/B,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QAE9B,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QAEpC,oBAAe,GAAG,IAAI,YAAY,EAAO,CAAC;QAErD,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAEjC,SAAI,GAAG,IAAI,YAAY,EAAO,CAAC;QA6NzC,kBAAa,GAAG,KAAK;YAC3B,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;YAC3C,IAAI,GAAG,CAAC;YACR,IAAI,WAAW,CAAC;YAEhB,IAAI,OAAO,IAAI,OAAO,EAAE;gBACtB,IAAI,KAAK,CAAC,IAAI,EAAE;oBACd,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;wBACxB,IAAI,OAAO,CAAC,QAAQ,KAAK,GAAG,EAAE;4BAC5B,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC;4BACnB,WAAW,GAAG,OAAO,CAAC;yBACvB;qBACF,CAAC,CAAC;iBACJ;qBAAM;oBACL,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;oBACnC,WAAW,GAAG,MAAM,CAAC;iBACtB;gBACD,gBAAgB,CAAC,GAAG,CAAC,CAAC;gBACtB,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;aAC9C;SACF,CAAC;KAzOwD;IAE1D,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC;QAEjD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,UAAU;YAC3E,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;YAC9C,IAAI,CAAC,yBAAyB,EAAE,CAAC;YACjC,IAAI,CAAC,gCAAgC,EAAE,CAAC;SACzC,CAAC,CAAC;KACJ;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAC;KACvC;IAED,cAAc,CAAC,OAAuD;QACpE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEvC,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,IAAI,OAAO,CAAC,OAAO,KAAK,YAAY,EAAE;gBACpC,MAAM,EACJ,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,EAAE,OAAO,EAAE,EAClB,KAAK,EAAE,EAAE,WAAW,EAAE,EACvB,GAAG,OAAO,CAAC;gBAEZ,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;aAC3D;iBAAM;gBACL,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;aAC7D;SACF;aAAM;YACL,QAAQ,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAClC;IAED,WAAW,CAAC,KAAK;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC;KAC9B;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC9C,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACxC;IAED,OAAO;QACL,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,OAAO;QACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC;KAC1C;IAED,SAAS,CAAC,KAAK;QACb,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,IAAI,CAAC;QAClD,MAAM,cAAc,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,MAAM,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;QAE1E,IAAI,cAAc,EAAE;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;SAC7B;QAED,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;KACvC;IAED,OAAO,CAAC,KAAU;QAChB,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEzC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,OAAO;QACL,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,UAAU,CAAC,MAAM,IAAI,CAAC,gCAAgC,EAAE,CAAC,CAAC;KAC3D;IAED,MAAM;QACJ,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAErC,UAAU,CAAC;YACT,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B,CAAC,CAAC;KACJ;IAEO,gCAAgC;QACtC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO;YAClE,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SACvD,CAAC,CAAC;KACJ;IAEO,qBAAqB;QAC3B,MAAM,QAAQ,GAAG,sBAAsB,CAAC,MAAM,CAAC,OAAO,IAAI,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/F,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;QAEzD,IAAI,QAAQ,CAAC;QACb,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,yBAAyB,EAAE,EAAE;YACpC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;KAC5C;IAEO,gBAAgB;QACtB,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC9C,IAAI,CAAC,aAAa,EAAE;YAClB,OAAO;SACR;QACD,MAAM,SAAS,GAAG,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC;QAC9F,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,UAAU,GAAG,SAAS,CAAC;QAC9F,MAAM,IAAI,GAAG,SAAS,IAAI,UAAU,CAAC;QACrC,IAAI,OAAO,CAAC;QAEZ,IAAI,IAAI,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9C,OAAO;gBACL,IAAI;gBACJ,OAAO;aACR,CAAC;SACH;KACF;IAEO,iBAAiB,CAAC,WAAmB,EAAE,OAAe,EAAE,WAAmB;QACjF,IAAI,IAAI,EAAE,EAAE;YACV,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SAClD;aAAM;;YAEL,MAAM,SAAS,GACb,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;kBAC9B,SAAS,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,QAAQ;kBACvD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAE7C,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SACrD;QAED,IAAI,CAAC,gCAAgC,EAAE,CAAC;KACzC;;IAGO,qBAAqB,CAAC,OAAe,EAAE,WAAmB;QAChE,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1C,MAAM,cAAc,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAChD,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QAE7D,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;QACzC,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC;QAC3B,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC7C,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAE/C,cAAc,CAAC,cAAc,EAAE,CAAC;QAChC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KACxC;IAEO,yBAAyB;QAC/B,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAE7B,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,IAAI,aAAa,IAAI,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,OAAO,KAAK,GAAG,EAAE;YACxE,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,IAAI,CAAC;YACtC,MAAM,GAAG,IAAI,CAAC;SACf;aAAM,IAAI,CAAC,SAAS,EAAE,IAAI,UAAU,EAAE,KAAK,IAAI,CAAC,mCAAmC,EAAE,EAAE;YACtF,MAAM,GAAG,IAAI,CAAC;SACf;aAAM;YACL,MAAM,GAAG,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;SACzE;QACD,OAAO,MAAM,CAAC;KACf;IAEO,kBAAkB,CAAC,aAAa;QACtC,IAAI,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC;QACjC,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,OAAO,OAAO,KAAK,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,CAAC,EAAE;YACzE,IAAI,OAAO,CAAC,OAAO,KAAK,GAAG,IAAI,OAAO,CAAC,QAAQ,KAAK,GAAG,EAAE;gBACvD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;gBAC3B,MAAM,GAAG,IAAI,CAAC;gBACd,OAAO,MAAM,CAAC;aACf;YACD,OAAO,GAAG,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,UAAU,CAAC;SACvD;QAED,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,OAAO,MAAM,CAAC;KACf;IAEO,WAAW,CAAC,OAAe,EAAE,WAAmB;QACtD,OAAO,sCAAsC,OAAO,qBAAqB,WAAW,IAAI,OAAO,MAAM,CAAC;KACvG;;IAyBO,eAAe;QACrB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAEnD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;YAC3G,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;SAC1C;KACF;IAEO,QAAQ,CAAC,GAAG;;QAElB,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;QAC9C,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE7C,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAE/B,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;QACD,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;QACD,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;YAClB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;SACb;QAED,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACxB;IAEO,kBAAkB,CAAC,KAAU,EAAE,MAAwB;QAC7D,MAAM,SAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC1C,MAAM,OAAO,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC;QACjF,MAAM,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC;QACvC,MAAM,SAAS,GAAG,KAAK,CAAC,GAAG,KAAK,MAAM,CAAC;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,yBAAyB,EAAE,KAAK,MAAM,IAAI,SAAS,CAAC,CAAC;QAE/E,IAAI,OAAO,EAAE;YACX,IAAI,YAAY,EAAE;gBAChB,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,CAAC;aAC9C;iBAAM;gBACL,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;gBAE1F,IAAI,WAAW,EAAE;oBACf,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;iBAC7C;aACF;YACD,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAEO,WAAW;QACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,CAAC;QAE3D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAClC;IAEO,yBAAyB;QAC/B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAClF;KACF;IAEO,mCAAmC;QACzC,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC9C,MAAM,QAAQ,GAAG,aAAa,CAAC,SAAS,CAAC;QACzC,IAAI,MAAM,GAAG,KAAK,CAAC;QAEnB,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,KAAK,GAAG,EAAE;YACzC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,MAAM,GAAG,IAAI,CAAC;SACf;aAAM;YACL,MAAM,KAAK,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,gBAAgB,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC;YAC/C,MAAM,OAAO,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,iBAAiB,CAAC;YAErF,IAAI,CAAC,WAAW,GAAG,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,GAAG,GAAG,OAAO,GAAG,SAAS,CAAC;YAC7E,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;SAC7B;QAED,OAAO,MAAM,CAAC;KACf;;;YA9VF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,uaAAiD;aAClD;;;YAjBQ,iBAAiB;;;0BAmBvB,SAAS,SAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;qBAEzC,KAAK,SAAC,UAAU;yBAEhB,KAAK,SAAC,eAAe;0BAErB,KAAK,SAAC,eAAe;uBAErB,KAAK,SAAC,YAAY;qBAElB,MAAM,SAAC,UAAU;uBAEjB,MAAM,SAAC,YAAY;2BAEnB,MAAM,SAAC,iBAAiB;8BAExB,MAAM,SAAC,oBAAoB;oBAE3B,MAAM,SAAC,SAAS;mBAEhB,MAAM,SAAC,QAAQ;;;ACrClB;;;;;;;;;MAUsB,uBAAuB;IA8J3C,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;;;;;;;;;;;;QAlJf,cAAS,GAAY,KAAK,CAAC;;;;;;QAOxC,iBAAY,GAAY,EAAE,CAAC;;;;;;;;QA6CjC,WAAM,GAAsB,IAAI,YAAY,EAAE,CAAC;;;;;;;;QASzC,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAE9E,YAAO,GAAY,KAAK,CAAC;QACzB,kBAAa,GAAQ,IAAI,CAAC;;QAUhB,cAAS,GAAQ,IAAI,CAAC;KAwE0B;;;;;;;;;;IA7D1D,IAAuB,MAAM,CAAC,MAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACvB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;KACjC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;IAMD,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;;;IAID,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YAC/D,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAED,UAAU,CAAC,KAAa;QACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;KACvC;;IAGS,WAAW,CAAC,KAAU;;QAE9B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;KACF;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;;;YA7MF,SAAS;;;YAXD,iBAAiB;;;wBAwBvB,KAAK,SAAC,cAAc;2BAOpB,KAAK,SAAC,iBAAiB;mBASvB,KAAK,SAAC,QAAQ;oBASd,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,MAAM;uBAeZ,KAAK,SAAC,YAAY;qBASlB,MAAM,SAAC,UAAU;0BASjB,MAAM,SAAC,gBAAgB;qBAwBvB,KAAK,SAAC,UAAU;0BAiBhB,KAAK,SAAC,eAAe;uBAiBrB,KAAK,SAAC,YAAY;uBAiBlB,KAAK,SAAC,YAAY;;AAxIoB;IAAf,YAAY,EAAE;0DAA4B;;ACtBpE;AACA,MAAM,SAAS,GAAG;IAChB;QACE,OAAO,EAAE,iBAAiB;;QAE1B,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;QAClD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,aAAa;;QAEtB,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;QAClD,KAAK,EAAE,IAAI;KACZ;IACD;QACE,OAAO,EAAE,iBAAiB;KAC3B;CACF,CAAC;AAEF;;;;;;;;;;;;;;;;;;;;;MA0Ba,mBAAoB,SAAQ,uBAAuB;IAU9D,YAAoB,OAAmB,EAAE,eAAkC;QACzE,KAAK,CAAC,eAAe,CAAC,CAAC;QADL,YAAO,GAAP,OAAO,CAAY;QAP/B,aAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAS7D;IAND,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KAC1G;IAMD,eAAe;;QAEb,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACvE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACrE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxE;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;KAC1B;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;KACpB;IAED,aAAa,CAAC,KAAU;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,WAAW,CAAC,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC;QACtB,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAEO,eAAe;QACrB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACrE;KACF;IAEO,yBAAyB,CAAC,KAAU;QAC1C,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;KACF;IAEO,eAAe;QACrB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAEO,0BAA0B;QAChC,UAAU,CAAC;YACT,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAE3C,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAC3B,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBACpC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;aACnC;iBAAM;gBACL,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;aACxC;SACF,CAAC,CAAC;KACJ;;;YAxGF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,+kCAA4C;gBAC5C,SAAS;aACV;;;YApDkC,UAAU;YAMpC,iBAAiB;;;0BAgDvB,SAAS,SAAC,uBAAuB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACtD/C,MAAM,yBAAyB,GAAG;IACvC,EAAE,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,WAAW;QACtB,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,SAAS;QAClB,SAAS,EAAE,YAAY;QACvB,aAAa,EAAE,eAAe;QAC9B,UAAU,EAAE,aAAa;QACzB,aAAa,EAAE,gBAAgB;QAC/B,iBAAiB,EAAE,qDAAqD;QACxE,sBAAsB,EAAE,2DAA2D;QACnF,MAAM,EAAE,QAAQ;QAChB,QAAQ,EAAE,WAAW;QACrB,MAAM,EAAE,QAAQ;QAChB,WAAW,EAAE,cAAc;QAC3B,QAAQ,EAAE,WAAW;KACtB;IACD,EAAE,EAAE;QACF,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,SAAS,EAAE,WAAW;QACtB,IAAI,EAAE,WAAW;QACjB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE,aAAa;QACtB,SAAS,EAAE,iBAAiB;QAC5B,aAAa,EAAE,mBAAmB;QAClC,UAAU,EAAE,kBAAkB;QAC9B,aAAa,EAAE,kBAAkB;QACjC,iBAAiB,EAAE,qEAAqE;QACxF,sBAAsB,EAAE,4DAA4D;QACpF,MAAM,EAAE,UAAU;QAClB,QAAQ,EAAE,eAAe;QACzB,MAAM,EAAE,UAAU;QAClB,WAAW,EAAE,iBAAiB;QAC9B,QAAQ,EAAE,YAAY;KACvB;IACD,EAAE,EAAE;QACF,IAAI,EAAE,SAAS;QACf,MAAM,EAAE,SAAS;QACjB,SAAS,EAAE,YAAY;QACvB,IAAI,EAAE,UAAU;QAChB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,SAAS;QAChB,OAAO,EAAE,aAAa;QACtB,SAAS,EAAE,cAAc;QACzB,aAAa,EAAE,sBAAsB;QACrC,UAAU,EAAE,cAAc;QAC1B,aAAa,EAAE,gBAAgB;QAC/B,iBAAiB,EAAE,2DAA2D;QAC9E,sBAAsB,EAAE,qDAAqD;QAC7E,MAAM,EAAE,UAAU;QAClB,QAAQ,EAAE,aAAa;QACvB,MAAM,EAAE,SAAS;QACjB,WAAW,EAAE,gBAAgB;QAC7B,QAAQ,EAAE,eAAe;KAC1B;IACD,EAAE,EAAE;QACF,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,QAAQ;QAChB,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,OAAO;QACb,MAAM,EAAE,OAAO;QACf,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE,WAAW;QACpB,SAAS,EAAE,aAAa;QACxB,aAAa,EAAE,QAAQ;QACvB,UAAU,EAAE,iBAAiB;QAC7B,aAAa,EAAE,kBAAkB;QACjC,iBAAiB,EAAE,qDAAqD;QACxE,sBAAsB,EAAE,uCAAuC;QAC/D,MAAM,EAAE,QAAQ;QAChB,QAAQ,EAAE,sBAAsB;QAChC,MAAM,EAAE,UAAU;QAClB,WAAW,EAAE,sBAAsB;QACnC,QAAQ,EAAE,uBAAuB;KAClC;CACF;;ACtED,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;MAMjF,6BAA6B;IA6CxC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAtCjC,YAAO,GAAG,IAAI,YAAY,EAAqD,CAAC;QAGrG,cAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAEpC,uBAAkB,GAA6B;YAC7C,iBAAiB,EAAE,kBAAkB;SACtC,CAAC;QAGO,aAAQ,qBACZ,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,EACrE;QAEF,sBAAiB,GAAkB;YACjC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;YAC3B,MAAM,EAAE;gBACN,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF,CAAC;QAEF,uBAAkB,GAAkB;YAClC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;YAC3B,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,MAAM,IAAI,CAAC,gBAAgB,EAAE;SACtC,CAAC;KAUwD;IAR1D,IAAI,aAAa;QACf,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KACxD;IAED,IAAI,UAAU;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;KAC5E;IAID,SAAS;QACP,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAEO,aAAa;QACnB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;KAC9B;IAEa,eAAe;;YAC3B,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAChD,OAAO,MAAM,oBAAoB,CAAC,WAAW,CAAC,CAAC;aAChD;SACF;KAAA;IAEO,WAAW,CAAC,KAAK;QACvB,IAAI,OAAe,CAAC;QACpB,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,aAAa,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;SACvC;KACF;IAEa,gBAAgB;;YAC5B,IAAI,WAAmB,CAAC;YAExB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,WAAW,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;aAC5C;YAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;YAEnB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE;gBACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,IAAI,WAAW,CAAC,CAAC;aAChD;YACD,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KAAA;IAEO,sBAAsB;QAC5B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;KACnF;IAEO,kBAAkB;QACxB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;KACnF;;;YAlGF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,smCAAwD;aACzD;;;YAZQ,iBAAiB;;;oBAcvB,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;6BAEnC,SAAS,SAAC,gBAAgB;qBAE1B,SAAS,SAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;sBAEpC,MAAM,SAAC,WAAW;;;MCXR,4BAA4B;IAuCvC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAlCjC,YAAO,GAAG,IAAI,YAAY,EAAqD,CAAC;QAE3E,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QAGhE,cAAS,GAAG,QAAQ,CAAC,YAAY,EAAE,CAAC;QAI3B,aAAQ,qBACZ,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,EACrE;QAEF,sBAAiB,GAAkB;YACjC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;YAC3B,MAAM,EAAE;gBACN,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;gBACpB,IAAI,CAAC,sBAAsB,EAAE,CAAC;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF,CAAC;QAEF,uBAAkB,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,iBAAiB,EAAE;YAC/B,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3G,CAAC;KAOwD;IAE1D,iBAAiB;QACf,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;KAC/E;IAED,iBAAiB;;QACf,QAAQ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,MAAA,IAAI,CAAC,aAAa,0CAAE,OAAO,EAAE;KACzE;IAED,SAAS,CAAC,mBAA+B;QACvC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;QAE9C,IAAI,CAAC,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAEO,YAAY,CAAC,WAAuB;QAC1C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;IAEO,cAAc,CAAC,OAAe,EAAE,WAAmB;QACzD,OAAO,WAAW,KAAK,SAAS,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,OAAO,GAAG,WAAW,CAAC;KACvF;IAEO,aAAa;QACnB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;KAC9B;IAEO,SAAS,CAAC,OAAwB;QACxC,OAAO,CAAC,cAAc,EAAE,CAAC;QACzB,OAAO,CAAC,eAAe,EAAE,CAAC;QAC1B,OAAO,CAAC,sBAAsB,EAAE,CAAC;KAClC;IAEO,mBAAmB,CAAC,mBAA+B;QACzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC5C;QAED,UAAU,CAAC;YACT,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;QAEvC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC3C;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC9C;YACD,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;IAEO,sBAAsB;QAC5B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;KACnF;IAEO,kBAAkB;QACxB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;KACnF;IAEO,iBAAiB;QACvB,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC9C;aAAM;YACL,OAAO,IAAI,CAAC;SACb;KACF;IAEO,uBAAuB;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KACtD;IAEO,UAAU;QAChB,IAAI,IAAI,EAAE,EAAE;YACV,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3D;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACnD;IAEO,YAAY,CAAC,OAAO,EAAE,WAAW;QACvC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACnE,MAAM,iBAAiB,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,UAAU,OAAO,EAAE,CAAC;QAElF,MAAM,OAAO,GAAW,YAAY,CAAC;QAErC,MAAM,KAAK,GAAG,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC;QAE5E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAEtC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;;YAlKF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,o7BAAuD;aACxD;;;YARQ,iBAAiB;;;oBAUvB,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BAEnC,SAAS,SAAC,eAAe;sBAEzB,MAAM,SAAC,WAAW;0BAElB,MAAM,SAAC,gBAAgB;;;ACT1B,MAAM,sBAAsB,GAAG,SAAS,CAAC;MAM5B,0BAA0B;IA8GrC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QArGjC,YAAO,GAAG,IAAI,YAAY,EAA+C,CAAC;QAE5E,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAEzB,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QAEvD,aAAQ,qBACZ,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,EACrE;QAEF,iBAAY,GAA4C;YACtD;gBACE,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE,oBAAoB;gBAC1B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC3B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC;gBACvD,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE,sBAAsB;gBAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAC7B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC;aAC1D;YACD;gBACE,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE,qBAAqB;gBAC3B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;gBAC5B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;aACzD;YACD;gBACE,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE,uBAAuB;gBAC7B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;gBAC9B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC;aACxD;SACF,CAAC;QAEF,kBAAa,GAA4C;YACvD;gBACE,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE,mBAAmB;gBACzB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBAC3B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;aAC5C;YACD;gBACE,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE,qBAAqB;gBAC3B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;gBAC7B,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;aAC9C;YACD;gBACE,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE,wBAAwB;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS;gBAChC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC;aACjD;SACF,CAAC;QAEF,gBAAW,GAA4C;YACrD;gBACE,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa;gBACpC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,qBAAqB,CAAC;aAC3D;SACF,CAAC;QAEF,gBAAW,GAA4C;YACrD;gBACE,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,aAAa;gBACjD,MAAM,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC;aACzE;SACF,CAAC;QAEF,iBAAY,GAA6B;YACvC;gBACE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;gBAClC,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,MAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE;aAClD;SACF,CAAC;KAkBwD;IAb1D,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC3C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,EAAE,CAAC;KACf;IAID,eAAe;QACb,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;KACpD;IAED,eAAe,CAAC,KAAK;QACnB,MAAM,OAAO,GAAG,WAAW,CAAC;QAE5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;KACvC;IAED,eAAe,CAAC,UAAmB;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC;IAED,YAAY,CAAC,mBAAmB;QAC9B,IAAI,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;KAChD;IAED,gBAAgB,CAAC,GAAkD;QACjE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAClF,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SAC1C;KACF;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;KAC5D;IAED,WAAW,CAAC,OAAe;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;IAEO,gBAAgB,CAAC,OAAe;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC;QAE1E,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;YACrC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;SAC3C;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;IAEO,iBAAiB;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE7E,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;KAClE;IAEO,qBAAqB,CAAC,KAAa;QACzC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;KACnD;IAEO,oBAAoB,CAAC,KAAc;QACzC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;KACvC;;;YAnLF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,gxDAAoD;aACrD;;;YAbQ,iBAAiB;;;+BAevB,SAAS,SAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;6BAElD,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;iCAE5C,SAAS,SAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;gCAEzD,SAAS,SAAC,4BAA4B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;sBAExD,MAAM,SAAC,WAAW;oBAElB,MAAM,SAAC,SAAS;0BAEhB,MAAM,SAAC,gBAAgB;uBAoFvB,KAAK,SAAC,YAAY;;;AC7GrB;;;;;;;;;;;;;;;;;;;;MAqCa,gBAAiB,SAAQ,cAAc;;IAElD,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;KACf;IAED,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;;;YAzBF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,+vCAAwC;gBACxC,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;wBAC/C,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,gBAAgB,CAAC;wBAC/C,KAAK,EAAE,IAAI;qBACZ;iBACF;gBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAzC+D,UAAU;YAAxC,iBAAiB;;;MCK7B,qBAAsB,SAAQ,cAAc;;IAMhE,YAAY,UAAsB,EAAE,EAAqB;QACvD,KAAK,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QANxB,SAAI,GAAG,QAAQ,CAAC;QAEN,4BAAuB,GAAG,KAAK,CAAC;KAKzC;IAED,YAAY,CAAC,CAAM;QACjB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YAC3B,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;YAErC,IAAI,KAAK,KAAK,cAAc,EAAE;gBAC5B,KAAK,GAAG,cAAc,CAAC;gBAEvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;aAC1C;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;SAC7C;KACF;IAED,MAAM,CAAC,KAAU;QACf,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC5B,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;QAE7E,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;SACrC;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YAC7B,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;IAED,cAAc,CAAC,SAAiB,EAAE,KAAa;QAC7C,IAAI,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,EAAE;YACzC,MAAM,cAAc,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YAEhE,IAAI,cAAc,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;gBACvD,OAAO,cAAc,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;aAC9D;YAED,OAAO,cAAc,CAAC;SACvB;QAED,OAAO,KAAK,CAAC;KACd;IAED,eAAe,CAAC,KAAK;QACnB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE;gBACxB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;;oBAGjF,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;wBAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;qBACnD;iBACF;qBAAM;oBACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC1C;aACF;iBAAM;;gBAEL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;aACvC;SACF;;QAID,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAEO,YAAY,CAAC,KAAa;QAChC,OAAO,KAAK,IAAI,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7D;IAEO,YAAY,CAAC,KAAK;QACxB,OAAO,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;KACrC;IAEO,YAAY,CAAC,KAAK;QACxB,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC7F;IAEO,YAAY,CAAC,GAAG;QACtB,MAAM,YAAY,GAAG,IAAI,MAAM,CAAC,8CAA8C,CAAC,CAAC;QAChF,OAAO,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/B;IAEO,UAAU,CAAC,KAAK;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC;QAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC;QAC5C,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;QACxB,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;QAExB,OAAO,CAAC,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC;KAC7E;IAEO,aAAa,CAAC,KAAK;QACzB,MAAM,WAAW,GAAG;YAClB,WAAW;YACX,WAAW;YACX,YAAY;YACZ,SAAS;YACT,WAAW;YACX,MAAM;YACN,OAAO;YACP,IAAI;YACJ,MAAM;YACN,KAAK;YACL,QAAQ;SACT,CAAC;QAEF,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9C;;;YA/HF,SAAS;;;YAJkB,UAAU;YAA7B,iBAAiB;;;ACO1B;;;;;;;;;;;;;;;;;;;;;;;;;;MA2Ca,iBAAkB,SAAQ,qBAAqB;;IAiC1D,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;;;;;;;;;QAxBC,SAAI,GAAY,GAAG,CAAC;KAyBpC;IAlBD,IAAoB,MAAM,CAAC,GAAW;QACpC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAOD,IAAoB,MAAM,CAAC,GAAW;QACpC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC;QACzC,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAOD,eAAe,CAAC,eAAgC;;QAE9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEpF,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO;gBACL,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YAC9C,OAAO;gBACL,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,gBAAgB,CAAC;YAE1D,OAAO;gBACL,MAAM,EAAE;oBACN,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC;KACb;IAED,sBAAsB;QACpB,OAAO,IAAI,CAAC,YAAY,KAAK,EAAE,IAAI,IAAI,CAAC,oBAAoB,EAAE,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACzF;IAEO,oBAAoB;QAC1B,QACE,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;YACrD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE;YACzC,IAAI,CAAC,uBAAuB,EAC5B;KACH;;;YAlGF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,68CAAyC;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YAhD+D,UAAU;YAAjE,iBAAiB;;;mBA2DvB,KAAK,SAAC,QAAQ;qBAOd,KAAK,SAAC,OAAO;qBAUb,KAAK,SAAC,OAAO;;;ACvEhB;;;;;;;;;;;;;;;;;;;;;;;MAwCa,mBAAoB,SAAQ,cAAc;;IAgCrD,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAhChB,SAAI,GAAG,UAAU,CAAC;QAClB,oBAAe,GAAG,KAAK,CAAC;QAEhB,sBAAiB,GAAa,KAAK,CAAC;KA8B3C;;;;;;;;;;IAnBD,IAAmC,gBAAgB,CAAC,KAAc;QAChE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SACxB;KACF;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,cAAc,GAAG,cAAc,GAAG,IAAI,CAAC;KACpD;IAOD,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;IAED,YAAY;QACV,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,UAAU,GAAG,MAAM,GAAG,UAAU,CAAC;KAC5D;;;YA5DF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,inDAA2C;gBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;wBAClD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;wBAClD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YA5C+D,UAAU;YAAxC,iBAAiB;;;+BA4DhD,KAAK,SAAC,sBAAsB;;;ACpD/B,MAAM,gCAAgC,GAAW,CAAC,CAAC;AACnD,MAAM,8BAA8B,GAAW,EAAE,CAAC;AAElD;;;;;;;;;;;;MAasB,yBAAyB;IAD/C;;;;;;;;;;;;QAayC,cAAS,GAAY,KAAK,CAAC;;;;;;;;QA2B9C,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;QAExE,cAAS,GAAW,gCAAgC,CAAC;QAG7C,aAAQ,GAAW,gCAAgC,CAAC;QACpD,cAAS,GAAa,KAAK,CAAC;QAE5B,cAAS,GAAa,KAAK,CAAC;QAE5B,sBAAiB,GAAQ,IAAI,CAAC;KAqJvC;;;;;;;;;;;;;;;;IAnIC,IAAwB,OAAO,CAAC,KAAa;QAC3C,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,gCAAgC,CAAC,CAAC;QAEtE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;KACxD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;IAMD,IAAwB,OAAO,CAAC,KAAgC;QAC9D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACvC;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;IAGD,WAAW,CAAC,YAAiB;QAC3B,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;SACtC;QAED,IAAI,IAAI,CAAC,KAAK,KAAK,YAAY,EAAE;YAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;KAC3B;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;IAED,iBAAiB,CAAC,EAAO,KAAI;IAE7B,yBAAyB,CAAC,EAAO;QAC/B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAED,UAAU,CAAC,UAAe;QACxB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;;QAGxB,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACvB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpC;KACF;IAEO,iBAAiB,CAAC,OAAO,EAAE,UAAU;QAC3C,MAAM,UAAU,GAAG,CAAC,CAAC;QAErB,OAAO,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,CAAC;KACvD;IAEO,oBAAoB,CAAC,OAAe,EAAE,UAAkB;QAC9D,MAAM,iBAAiB,GAAG,8BAA8B,GAAG,OAAO,CAAC;QAEnE,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,iBAAiB,GAAG,gCAAgC,CAAC;KAC3G;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;;YAnMF,SAAS;;;wBAaP,KAAK,SAAC,cAAc;mBAGpB,KAAK,SAAC,MAAM;uBAeZ,KAAK,SAAC,YAAY;qBASlB,MAAM,SAAC,UAAU;sBA4BjB,KAAK,SAAC,WAAW;uBAoBjB,KAAK,SAAC,YAAY;uBAmBlB,KAAK,SAAC,YAAY;sBAclB,KAAK,SAAC,WAAW;;AA5GqB;IAAf,YAAY,EAAE;4DAA4B;;ACnBpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA4Ca,qBAAsB,SAAQ,yBAAyB;IAYlE,YAAY,OAAwB;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,SAAS;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,MAAM,EAAE;YACV,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvC;KACF;IAED,UAAU,CAAC,KAAU,EAAE,QAAa;QAClC,IAAI,CAAC,QAAQ,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACzB;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;YAEtF,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAClC;SACF;KACF;IAED,iBAAiB,CAAC,KAAK;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,KAAK,IAAI,CAAC,CAAC;KAC5E;IAED,OAAO,CAAC,KAAoB,EAAE,KAAK;QACjC,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC;QAEzC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACzB;KACF;IAEO,UAAU,CAAC,GAAW;QAC5B,OAAO,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,CAAC;KAC/B;;;YA7FF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,mnCAA8C;gBAC9C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;wBACpD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,qBAAqB,CAAC;wBACpD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YAtDC,eAAe;;;oBAyDd,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;sBAEd,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;0BACnD,YAAY,SAAC,YAAY;;;ACpE5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ca,+BAA+B;;IAE1C,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YALrD,SAAS,SAAC;gBACT,QAAQ,EAAE,4BAA4B;aACvC;;;YA/CmB,WAAW;;;MCMT,YAAY;IAiDhC;;;;;;;;;;;;QA5BuC,cAAS,GAAY,KAAK,CAAC;;;;;;;;;;QAW7B,aAAQ,GAAY,KAAK,CAAC;;;;;;;;QAS3C,WAAM,GAAoB,IAAI,YAAY,EAAK,CAAC;KAQpD;;;IAIhB,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;IAED,UAAU,CAAC,KAAQ;QACjB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;KAC1B;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAES,WAAW,CAAC,KAAQ;QAC5B,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;;;YA9EF,SAAS;;;;oBAGP,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,MAAM;mBAGZ,KAAK,SAAC,QAAQ;wBAad,KAAK,SAAC,cAAc;uBAWpB,KAAK,SAAC,YAAY;qBASlB,MAAM,SAAC,UAAU;;AApBqB;IAAf,YAAY,EAAE;+CAA4B;AAW7B;IAAf,YAAY,EAAE;8CAA2B;;AC/BjE;;;MAIsB,oBAAwB,SAAQ,YAAe;IADrE;;;;;;;;;;;;;;;QAeuC,aAAQ,GAAY,KAAK,CAAC;;;;;;;;;;QAW1B,aAAQ,GAAY,KAAK,CAAC;KA2BhE;IAvBC,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;KAC9C;IAED,yBAAyB,CAAC,EAAO;QAC/B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC7B;IAED,aAAa;QACX,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;;;YAlDF,SAAS;;;uBAeP,KAAK,SAAC,YAAY;uBAWlB,KAAK,SAAC,YAAY;;AAXkB;IAAf,YAAY,EAAE;sDAA2B;AAW1B;IAAf,YAAY,EAAE;sDAA2B;;ACRjE,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAChC,MAAM,8BAA8B,GAAG,QAAQ,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqDa,iBAAkB,SAAQ,oBAAyB;;IAmF9D,YACU,OAAmB,EACnB,cAAiC,EACzC,OAAwB,EACjB,QAAmB,EAClB,eAAyC;QAEjD,KAAK,EAAE,CAAC;QANA,YAAO,GAAP,OAAO,CAAY;QACnB,mBAAc,GAAd,cAAc,CAAmB;QAElC,aAAQ,GAAR,QAAQ,CAAW;QAClB,oBAAe,GAAf,eAAe,CAA0B;;;;;;;;;;;;;;;QAjE1B,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAW/C,aAAQ,GAAY,KAAK,CAAC;QAM/D,aAAQ,GAAQ,QAAQ,EAAE,CAAC;QAG3B,SAAI,GAAY,KAAK,CAAC;QAEtB,eAAU,GAAW,oBAAoB,CAAC;QAsQlC,aAAQ,GAAG;YACjB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;SACrE,CAAC;QA1NA,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7C;;;;;;;;;;;;;;;;;IApBD,IAAwB,OAAO,CAAC,OAA8B;QAC5D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,6BAA6B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAaD,IAAI,uBAAuB;QACzB,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;KACvC;IAEoC,SAAS,CAAC,MAAY;QACzD,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC;;QAGhD,IAAI,IAAI,CAAC,QAAQ,EAAE;;YAEjB,IAAI,QAAQ,KAAK,aAAa,CAAC,GAAG,EAAE;gBAClC,IAAI,CAAC,kCAAkC,EAAE,CAAC;gBAC1C,MAAM,CAAC,cAAc,EAAE,CAAC;aACzB;YACD,OAAO;SACR;;QAGD,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,MAAM,QAAQ,KAAK,aAAa,CAAC,SAAS,IAAI,QAAQ,KAAK,aAAa,CAAC,OAAO,CAAC,EAAE;YACjH,IAAI,CAAC,kCAAkC,EAAE,CAAC;SAC3C;;QAGD,IAAI,QAAQ,KAAK,aAAa,CAAC,KAAK,IAAI,QAAQ,KAAK,aAAa,CAAC,KAAK,EAAE;YACxE,IAAI,CAAC,kCAAkC,EAAE,CAAC;SAC3C;;QAGD,IAAI,IAAI,CAAC,IAAI,IAAI,QAAQ,KAAK,aAAa,CAAC,GAAG,EAAE;YAC/C,MAAM,CAAC,cAAc,EAAE,CAAC;YACxB,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,SAAS;QACP,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,MAAM,EAAE;YACV,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7C;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC1C;KACF;IAED,YAAY;QACV,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAElB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAEzC,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;KACzB;IAED,aAAa,CAAC,MAAsB;QAClC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;;IAGD,cAAc,CAAC,KAAU;QACvB,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YAChD,MAAM,WAAW,GAAmB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAEhE,IAAI,WAAW,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC/B,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAC3C;SACF;KACF;IAED,eAAe;QACb,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACtC;KACF;IAED,WAAW,CAAC,KAAK,EAAE,YAAY;QAC7B,MAAM,iBAAiB,GAAW,KAAK,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAErE,QAAQ,IAAI,CAAC,cAAc,GAAG,iBAAiB,GAAG,YAAY,GAAG,iBAAiB,GAAG,CAAC,EAAE;KACzF;IAED,QAAQ,CAAC,KAAa;QACpB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KACxD;IAED,YAAY;QACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;KACvD;;IAGD,YAAY,CAAC,MAAsB;QACjC,IAAI,IAAI,CAAC,aAAa,KAAK,MAAM,CAAC,KAAK,EAAE;YACvC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YACtD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;;IAGD,kBAAkB,CAAC,KAAiB;QAClC,IACE,CAAC,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;YAC9D,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EACtD;YACA,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;;IAGD,YAAY,CAAC,KAAU;QACrB,MAAM,WAAW,GAAmB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAEhE,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC3C;aAAM,IAAI,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;YACnD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;IAEO,OAAO,CAAC,KAAU,EAAE,UAAe;QACzC,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,UAAU,EAAE;YACxC,OAAO,KAAK,CAAC,QAAQ,EAAE,KAAK,UAAU,CAAC,QAAQ,EAAE,CAAC;SACnD;QAED,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,UAAU,KAAK,IAAI,MAAM,KAAK,KAAK,SAAS,IAAI,UAAU,KAAK,SAAS,CAAC,EAAE;YAChG,KAAK,GAAG,GAAG,KAAK,EAAE,CAAC;SACpB;QAED,OAAO,KAAK,KAAK,UAAU,CAAC;KAC7B;;;IAIO,kCAAkC;QACxC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAExD,UAAU,CAAC;YACT,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YACzD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB,CAAC,CAAC;KACJ;IAEO,eAAe,CAAC,KAAU;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;KACvE;IAEO,mBAAmB;QACzB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;QAEvD,OAAO,UAAU,IAAI,UAAU,CAAC,YAAY,CAAC;KAC9C;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,KAAiB;YAClF,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAClE,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB,CAAC,CAAC;QAEH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACxD;IAMO,eAAe;QACrB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,mBAAmB;QACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAC9B,IAAI,CAAC,WAAW,CAAC,aAAa,EAC9B,qBAAqB,EACrB,IAAI,CAAC,mBAAmB,EACxB,CAAC,KAAK,EAAE,QAAQ,CAAC,EACjB,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,8BAA8B,CAAC,CAAC;KACrE;IAEO,iBAAiB,CAAC,KAAU;QAClC,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAEpF,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YAChD,MAAM,WAAW,GAAmB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAEhE,IAAI,WAAW,EAAE;gBACf,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBAChD,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC;aACzE;SACF;KACF;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACtE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;YACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAE3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACvC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC5C;SACF;KACF;;;YAzXF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,4yEAAyC;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;oBACD,wBAAwB;iBACzB;aACF;;;YA5EC,UAAU;YAJV,iBAAiB;YAOjB,eAAe;YACf,SAAS;YASF,wBAAwB;;;mCAiE9B,YAAY,SAAC,+BAA+B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BAG9D,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;0BAC3D,SAAS,SAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;4BACpD,SAAS,SAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;kCACtD,SAAS,SAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;4BAgB5D,MAAM,SAAC,eAAe;uBAWtB,KAAK,SAAC,YAAY;0BAGlB,KAAK,SAAC,eAAe;sBAmCrB,KAAK,SAAC,WAAW;wBA0BjB,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;AAhEE;IAAf,YAAY,EAAE;mDAA2B;;ACtHjE;;;;;;;IAOY;AAAZ,WAAY,qBAAqB;;IAE/B,mEAAK,CAAA;;IAEL,iEAAI,CAAA;AACN,CAAC,EALW,qBAAqB,KAArB,qBAAqB;;ACUjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmDa,iBAAkB,SAAQ,YAAqB;IAoD1D,YAAoB,cAAiC;QACnD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAmB;QAjDrD,UAAK,GAAG,KAAK,CAAC;QAEN,cAAS,GAAW,OAAO,CAAC;QAC5B,aAAQ,GAAW,MAAM,CAAC;QAC1B,mBAAc,GAA0B,qBAAqB,CAAC,KAAK,CAAC;KA+C3E;;;;;;;;;;IApCD,IAA+B,aAAa,CAAC,QAA+B;QAC1E,IAAI,CAAC,cAAc,GAAG,QAAQ,IAAI,qBAAqB,GAAG,QAAQ,CAAM,QAAQ,EAAE,EAAE,CAAC,GAAG,qBAAqB,CAAC,KAAK,CAAC;KACrH;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;;;;;IAOD,IAA0B,QAAQ,CAAC,KAAa;QAC9C,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,OAAO,CAAC;KACnC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;IAOD,IAAyB,OAAO,CAAC,KAAa;QAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,MAAM,CAAC;KACjC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAMD,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5C;KACF;IAED,MAAM;;QACJ,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;KACpB;IAED,gBAAgB;QACd,QAAQ,IAAI,CAAC,aAAa;YACxB,KAAK,qBAAqB,CAAC,IAAI;gBAC7B,OAAO,MAAM,CAAC;YAChB,KAAK,qBAAqB,CAAC,KAAK;gBAC9B,OAAO,OAAO,CAAC;YACjB;gBACE,OAAO,OAAO,CAAC;SAClB;KACF;IAED,iBAAiB;QACf,QAAQ,IAAI,CAAC,aAAa;YACxB,KAAK,qBAAqB,CAAC,IAAI;gBAC7B,OAAO,OAAO,CAAC;YACjB,KAAK,qBAAqB,CAAC,KAAK;gBAC9B,OAAO,MAAM,CAAC;YAChB;gBACE,OAAO,MAAM,CAAC;SACjB;KACF;IAED,SAAS,CAAC,KAAK;QACb,IAAI,KAAK,CAAC,KAAK,KAAK,aAAa,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,aAAa,CAAC,KAAK,EAAE;YAChF,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,WAAW,CAAC,KAAU;QACpB,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;IAED,UAAU;QACR,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;KACF;IAED,YAAY,CAAC,KAAU;QACrB,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;YAErB,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACpC;KACF;;;YAtJF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,2zCAAyC;gBACzC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YAhEC,iBAAiB;;;8BAkEhB,SAAS,SAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BAiB7C,KAAK,SAAC,kBAAkB;uBAaxB,KAAK,SAAC,aAAa;sBAanB,KAAK,SAAC,YAAY;;;ACzGrB;;;;;;;;;;;;;;;;;;MAmBsB,uBAAuB;IAwM3C,YAAmB,EAAqB;QAArB,OAAE,GAAF,EAAE,CAAmB;;;;;;;;;;;;QA5LD,cAAS,GAAY,KAAK,CAAC;;;;;;;;QAiChD,SAAI,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QASjD,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QASlD,WAAM,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QAS9C,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAE3E,cAAS,GAAY,KAAK,CAAC;QAG3B,iBAAY,GAAW,EAAE,CAAC;QAC1B,cAAS,GAAY,KAAK,CAAC;QAC3B,cAAS,GAAY,KAAK,CAAC;QAC3B,UAAK,GAAW,CAAC,CAAC;QAGlB,sBAAiB,GAAQ,IAAI,CAAC;;QAG5B,cAAS,GAAQ,IAAI,CAAC;KAkHY;;IA/G5C,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,IAAI,EAAE,CAAC;KACjC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAC7C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAC7C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;IAaD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;IASD,IAA0B,SAAS,CAAC,SAAiB;QACnD,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASD,IAA0B,SAAS,CAAC,SAAiB;QACnD,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;IAWD,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;KAC1F;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAID,YAAY,CAAC,KAAU;;QAErB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,yBAAyB,CAAC,KAAU;QAClC,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;KACF;;;IAID,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC3B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;;;IAID,gBAAgB,CAAC,IAAS;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;IAED,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,yBAAyB,CAAC,IAAS;QACjC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC7B;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACzD,OAAO;gBACL,SAAS,EAAE;oBACT,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;QAED,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACzD,OAAO;gBACL,SAAS,EAAE;oBACT,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;;IAGD,UAAU,CAAC,KAAU;QACnB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;IAES,aAAa;QACrB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;;;YApRF,SAAS;;;YAxBuC,iBAAiB;;;wBAqC/D,KAAK,SAAC,cAAc;oBAGpB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;mBAGd,KAAK,SAAC,MAAM;uBAeZ,KAAK,SAAC,YAAY;mBASlB,MAAM,SAAC,QAAQ;oBASf,MAAM,SAAC,SAAS;qBAShB,MAAM,SAAC,UAAU;0BASjB,MAAM,SAAC,gBAAgB;0BAiBvB,KAAK,SAAC,eAAe;uBAiBrB,KAAK,SAAC,YAAY;uBAiBlB,KAAK,SAAC,YAAY;uBAmBlB,KAAK,SAAC,YAAY;wBAiBlB,KAAK,SAAC,aAAa;wBAgBnB,KAAK,SAAC,aAAa;mBAkBnB,KAAK,SAAC,QAAQ;;AArLwB;IAAf,YAAY,EAAE;0DAA4B;;ACzBpE;;;;;;;;;;;;;;;;;;;;;;;;;;MA2Ca,mBAAoB,SAAQ,uBAAuB;IAM9D,YAAY,EAAqB;QAC/B,KAAK,CAAC,EAAE,CAAC,CAAC;QAHZ,eAAU,GAAY,KAAK,CAAC;KAI3B;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACpC;KACF;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,KAAK,EAAE;;gBAEV,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;aAC1C;SACF;;QAGD,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;KACF;IAED,cAAc,CAAC,SAAiB,EAAE,KAAa;QAC7C,OAAO,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC;KACjG;IAED,YAAY,CAAC,KAAU;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,CAAC;KAC1C;IAED,YAAY;;QAEV,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;;;QAI1D,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,SAAS,+CAAd,IAAI,CAAc,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;IAED,oBAAoB;QAClB,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;QAEtD,IAAI,YAAY,KAAK,IAAI,CAAC,iBAAiB,EAAE;YAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAChC;KACF;;;YAvGF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,kpBAA2C;gBAC3C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;wBAClD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,mBAAmB,CAAC;wBAClD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YApDC,iBAAiB;;;sBAsDhB,SAAS,SAAC,KAAK,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;;AClDtD;;;;;;;;;;;;;;;;;;;MAmBsB,yBAAyB;IAA/C;;QAEE,aAAQ,GAA6B,EAAE,CAAC;;QAGxC,gBAAW,GAA6B,EAAE,CAAC;;QAGnC,oBAAe,GAAG,KAAK,CAAC;KA8GjC;;;;;;IAvGQ,OAAO,CAAC,YAAqC;QAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;KAC5E;;;;;;IAOM,OAAO,CAAC,YAAqC;QAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;KAC5E;;;;;;IAOM,KAAK,CAAC,YAAqC;QAChD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;KAC1E;;;;;;IAOM,WAAW,CAAC,YAAqC;QACtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;KAChF;;;;;;;;IASM,kBAAkB,CAAC,eAAuB;QAC/C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;KACxC;;;;;;;;IASO,YAAY,CAAC,YAAqC,EAAE,IAAmB;QAC7E,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,WAAW,CAAC;QAEhB,IACmB,YAAa,CAAC,WAAW,KAAK,SAAS;YACvC,YAAa,CAAC,WAAW,KAAK,oBAAoB,CAAC,MAAM,EAC1E;YACA,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAChC,WAAW,GAAG,oBAAoB,CAAC,MAAM,CAAC;SAC3C;aAAM;YACL,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,WAAW,GAAG,oBAAoB,CAAC,GAAG,CAAC;SACxC;QAED,MAAM,OAAO,GAAc;YACzB,YAAY,EAAE,SAAS;YACvB,OAAO,EAAmB,YAAa,CAAC,OAAO,IAAY,YAAY;YACvE,IAAI,EAAE,IAAI;YACV,WAAW,EAAE,WAAW;YACxB,MAAM,EAAmB,YAAa,CAAC,MAAM;YAC7C,WAAW,EAAmB,YAAa,CAAC,WAAW;YACvD,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAmB,YAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe;SAC1E,CAAC;QAEF,IAAqB,YAAa,CAAC,MAAM,EAAE;YACzC,OAAO,CAAC,MAAM,GAAG,CAAC,KAAU;gBACT,YAAa,CAAC,MAAM,EAAE,CAAC;gBACxC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aACzC,CAAC;SACH;QAED,OAAO,OAAO,CAAC;KAChB;;;AClHH,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAClC,MAAM,sBAAsB,GAAG,GAAG,CAAC;AAEnC;;;;;;;;;;;;;;;;;;;;MAwBa,qBAAsB,SAAQ,yBAAyB;IAClE,YAAoB,mBAA+C;QACjE,KAAK,EAAE,CAAC;QADU,wBAAmB,GAAnB,mBAAmB,CAA4B;KAElE;IAED,aAAa,CAAC,OAAkB;QAC9B,MAAM,YAAY,GAAsB,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,CAAC;QAClH,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;QAEpC,YAAY,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAC/C,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAE7C,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,KAAK,oBAAoB,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAClG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEzB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAE/B,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QAErC,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,WAAW,CAAC,EAAE;YAC5C,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;iBACpB,IAAI,CAAC,SAAS,CAAC,MAAM,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;iBAClD,SAAS,CAAC;gBACT,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;aACnC,CAAC,CAAC;SACN;KACF;IAED,cAAc,CAAC,OAAY;QACzB,IAAI,KAAK,CAAC;QACV,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,KAAK,oBAAoB,CAAC,GAAG,EAAE;YAC7D,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;SACvB;aAAM;YACL,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;SAC1B;QAED,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACrC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEvB,UAAU,CAAC;YACT,IAAI,CAAC,mBAAmB,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;YAChE,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBACjD,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;aAC7C;SACF,EAAE,sBAAsB,CAAC,CAAC;KAC5B;IAEO,iBAAiB,CAAC,YAAiB;QACzC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC;YAChD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;SACnC,CAAC,CAAC;KACJ;IAEO,kBAAkB,CAAC,KAAiB;QAC1C,IAAI,KAAK,CAAC,MAAM,GAAG,uBAAuB,EAAE;YAC1C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;KACF;;;;YA7DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAlCQ,0BAA0B;;;ACFnC;AACA,IAAY,cASX;AATD,WAAY,cAAc;;IAExB,2DAAQ,CAAA;;IAER,6DAAS,CAAA;;IAET,qDAAK,CAAA;;IAEL,mDAAI,CAAA;AACN,CAAC,EATW,cAAc,KAAd,cAAc;;ACC1B;MACa,YAAY;IAoBvB,YAAY,IAAS;QACnB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,GAAG,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC;SACnC;KACF;IAEO,YAAY,CAAC,KAAa;QAChC,IAAI,KAAK,EAAE;YACT,MAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YACvD,OAAO,SAAS,CAAC,WAAW,EAAE,CAAC;SAChC;QAED,OAAO,EAAE,CAAC;KACX;IAEO,YAAY;QAClB,SAAS,EAAE;YACT,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC;iBAC7C,QAAQ,CAAC,EAAE,CAAC;iBACZ,SAAS,CAAC,CAAC,CAAC,CAAC;SACjB;QAED,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;KACtF;;IAGO,WAAW,CAAC,IAAY;QAC9B,IAAI,MAAM,GAAG,CAAC,CAAC;QAEf,IAAI,IAAI,EAAE;YACR,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SACjC;QAED,OAAO,GAAG,MAAM,KAAK,CAAC;KACvB;;;MChDU,mBAAmB;IAI9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,cAAS,GAAW,OAAO,CAAC;QAC5B,aAAQ,GAAe,EAAE,CAAC;KAEc;;;;;;;;;;;IAYjC,MAAM,CACX,GAAW,EACX,KAA0B,EAC1B,OAAmD,EACnD,SAA4B,EAC5B,cAA6D,EAC7D,eAAyD,EACzD,aAAuD;QAEvD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QACjC,MAAM,WAAW,GAAQ;YACvB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,IAAI;SACX,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,MAAM,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;YAC1C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YAEnC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;YAGxD,IAAI,SAAS,EAAE;gBACb,WAAW,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBAC3B,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE5B,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D;YAED,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;SAC7F;KACF;IAEM,QAAQ,CACb,GAAW,EACX,IAAkB,EAClB,OAAmD,EACnD,QAAkB,EAClB,cAA6D,EAC7D,eAAyD,EACzD,aAAuD;QAEvD,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,SAAS,CAC/D,KAAK;YACH,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC,cAAc,EAAE;gBAC/C,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBAE/B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnE,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;aACnC;iBAAM,IAAI,KAAK,YAAY,YAAY,EAAE;;gBAExC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aAC9B;SACF,EACD,CAAC,GAAsB;YACrB,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC1B,CACF,CAAC;KACH;IAEM,UAAU,CACf,GAAW,EACX,OAAmD,EACnD,QAAkB;QAElB,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;QAE7C,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE;YACjD,cAAc,EAAE,IAAI;YACpB,OAAO,EAAE,WAAW;SACrB,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;KAC/B;IAEM,iBAAiB,CAAC,IAAS,EAAE,QAAoB;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC;QAExE,IAAI,UAAU,EAAE;YACd,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;YACnC,OAAO,CAAC,WAAW,EAAE,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC/B,QAAQ,EAAE,CAAC;SACZ;KACF;IAEM,aAAa,CAAC,UAAe;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAChC;IAEM,UAAU,CAAC,IAAkB,EAAE,OAAqB;QACzD,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC;QAExE,IAAI,CAAC,UAAU,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;SACvC;KACF;;;YAlHF,UAAU;;;YAZT,UAAU;;;MCGC,eAAgB,SAAQ,mBAAmB;;;YADvD,UAAU;;;ACWJ,MAAM,uBAAuB,GAAG;IACrC,EAAE,EAAoB;QACpB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,SAAS;QAClB,UAAU,EAAE,aAAa;QACzB,WAAW,EAAE,cAAc;QAC3B,YAAY,EAAE,eAAe;QAC7B,YAAY,EAAE,eAAe;QAC7B,aAAa,EAAE,iBAAiB;QAChC,eAAe,EAAE,mBAAmB;QACpC,qBAAqB,EAAE,kCAAkC;QACzD,sBAAsB,EAAE,mCAAmC;QAC3D,aAAa,EAAE,iBAAiB;QAChC,eAAe,EAAE,mBAAmB;QACpC,eAAe,EAAE,0CAA0C;QAC3D,eAAe,EAAE,gEAAgE;QACjF,aAAa,EAAE,sEAAsE;QACrF,aAAa,EAAE,sEAAsE;QACrF,WAAW,EAAE,8EAA8E;QAC3F,oBAAoB,EAAE,qBAAqB;QAC3C,cAAc,EAAE,6BAA6B;QAC7C,oBAAoB,EAAE,sCAAsC;QAC5D,kBAAkB,EAAE,kCAAkC;QACtD,kBAAkB,EAAE,kCAAkC;QACtD,aAAa,EAAE,uBAAuB;QACtC,eAAe,EAAE,mBAAmB;KACrC;IACD,EAAE,EAAoB;QACpB,KAAK,EAAE,UAAU;QACjB,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,qBAAqB;QACjC,WAAW,EAAE,sBAAsB;QACnC,YAAY,EAAE,qBAAqB;QACnC,YAAY,EAAE,eAAe;QAC7B,aAAa,EAAE,4BAA4B;QAC3C,eAAe,EAAE,4BAA4B;QAC7C,qBAAqB,EAAE,6CAA6C;QACpE,sBAAsB,EAAE,2CAA2C;QACnE,aAAa,EAAE,wBAAwB;QACvC,eAAe,EAAE,wBAAwB;QACzC,eAAe,EAAE,mDAAmD;QACpE,eAAe,EAAE,2EAA2E;QAC5F,aAAa,EAAE,+EAA+E;QAC9F,aAAa,EAAE,6EAA6E;QAC5F,WAAW,EAAE,gGAAgG;QAC7G,oBAAoB,EAAE,6BAA6B;QACnD,cAAc,EAAE,0BAA0B;QAC1C,oBAAoB,EAAE,kDAAkD;QACxE,kBAAkB,EAAE,wCAAwC;QAC5D,kBAAkB,EAAE,yCAAyC;QAC7D,aAAa,EAAE,kBAAkB;QACjC,eAAe,EAAE,mBAAmB;KACrC;IACD,EAAE,EAAoB;QACpB,KAAK,EAAE,UAAU;QACjB,OAAO,EAAE,YAAY;QACrB,UAAU,EAAE,oBAAoB;QAChC,WAAW,EAAE,qBAAqB;QAClC,YAAY,EAAE,kBAAkB;QAChC,YAAY,EAAE,eAAe;QAC7B,aAAa,EAAE,0BAA0B;QACzC,eAAe,EAAE,wBAAwB;QACzC,qBAAqB,EAAE,wCAAwC;QAC/D,sBAAsB,EAAE,oCAAoC;QAC5D,aAAa,EAAE,wBAAwB;QACvC,eAAe,EAAE,sBAAsB;QACvC,eAAe,EAAE,6CAA6C;QAC9D,eAAe,EAAE,2EAA2E;QAC5F,aAAa,EAAE,mFAAmF;QAClG,aAAa,EAAE,kFAAkF;QACjG,WAAW,EAAE,sFAAsF;QACnG,oBAAoB,EAAE,mCAAmC;QACzD,cAAc,EAAE,yBAAyB;QACzC,oBAAoB,EAAE,+CAA+C;QACrE,kBAAkB,EAAE,wCAAwC;QAC5D,kBAAkB,EAAE,8CAA8C;QAClE,aAAa,EAAE,iBAAiB;QAChC,eAAe,EAAE,qBAAqB;KACvC;IACD,EAAE,EAAoB;QACpB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,iBAAiB;QAC1B,UAAU,EAAE,eAAe;QAC3B,WAAW,EAAE,gBAAgB;QAC7B,YAAY,EAAE,0BAA0B;QACxC,YAAY,EAAE,iBAAiB;QAC/B,aAAa,EAAE,uBAAuB;QACtC,eAAe,EAAE,uBAAuB;QACxC,qBAAqB,EAAE,kCAAkC;QACzD,sBAAsB,EAAE,wCAAwC;QAChE,aAAa,EAAE,sBAAsB;QACrC,eAAe,EAAE,uBAAuB;QACxC,eAAe,EAAE,2CAA2C;QAC5D,eAAe,EAAE,gEAAgE;QACjF,aAAa,EAAE,uFAAuF;QACtG,aAAa,EAAE,iFAAiF;QAChG,WAAW,EAAE,qGAAqG;QAClH,oBAAoB,EAAE,qCAAqC;QAC3D,cAAc,EAAE,uBAAuB;QACvC,oBAAoB,EAAE,0CAA0C;QAChE,kBAAkB,EAAE,mCAAmC;QACvD,kBAAkB,EAAE,yCAAyC;QAC7D,aAAa,EAAE,mBAAmB;QAClC,eAAe,EAAE,oBAAoB;KACtC;CACF,CAAC;AAEF,MAAM,wBAAwB,GAAG,OAAO,CAAC;AAEzC,MAAM,mBAAmB,GAAG,QAAQ,CAAC;AACrC,MAAM,mBAAmB,GAAG,CAAC,CAAC;AAE9B;;;;;;;;;;;;;;MAesB,qBAAqB;IA2XzC,YAAsB,aAA8B,EAAE,eAAkC;QAAlE,kBAAa,GAAb,aAAa,CAAiB;;;;;;;;;;;;QA/Wb,cAAS,GAAY,KAAK,CAAC;;QAyBnD,SAAI,GAAW,MAAM,CAAC;;;;;;;;;;QAWb,eAAU,GAAa,KAAK,CAAC;;;;;;;;;;;;;;;QAkCjC,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;QAUvD,YAAO,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;QAUnD,cAAS,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;;;;;;;QAiBnD,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;QAQ1E,wBAAmB,GAAG,CAAC,CAAC;QACxB,uBAAkB,GAAG,CAAC,CAAC;QACvB,mBAAc,GAAG,CAAC,CAAC;QACnB,mBAAc,GAAQ,IAAI,CAAC;QAI7B,cAAS,GAAa,KAAK,CAAC;QAsPlC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;;;;;;;IA9ND,IAA0B,SAAS,CAAC,KAAc;QAChD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACrD;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;;;;IAcD,IAA0B,QAAQ,CAAC,KAAc;QAC/C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC1C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAuC,oBAAoB,CAAC,KAAc;QACxE,IAAI,CAAC,qBAAqB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACtD;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,qBAAqB,CAAC;KACnC;;;;;;;;;;;;;IAcD,IAAmC,gBAAgB,CAAC,KAAc;QAChE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClD;IACD,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;;;;;;;;IAcD,IAAiC,cAAc,CAAC,KAAc;QAC5D,IAAI,CAAC,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAChD;IACD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+BD,IAAyB,QAAQ,CAAC,KAAuB;QACvD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,uBAAuB,CAAC,eAAe,CAAC,GACxC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACtC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzD;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjE;;;;;;;;;IAUD,IAA6B,gBAAgB,CAAC,YAAsC;QAClF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAE7D,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;KACzC;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;;;;;;;;;;IAWD,IAA2B,SAAS,CAAC,KAAa;QAChD,IAAI,CAAC,UAAU,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,wBAAwB,CAAC;QAExF,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;KACpD;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;IASD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAyB,UAAU,CAAC,KAAc;QAChD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5C;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;KAC1D;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAE5C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;IAQD,gBAAgB,CAAC,UAAmB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;IAED,gBAAgB,CAAC,EAAO;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;IAED,iBAAiB,CAAC,EAAO;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;KAC1B;IAED,yBAAyB,CAAC,EAAc;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAED,QAAQ,CAAC,eAAgC;QACvC,IAAI,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,EAAE;YACvE,OAAO;gBACL,QAAQ,EAAE;oBACR,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;SACH;KACF;IAED,UAAU,CAAC,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;gBACvC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aAC5C;SACF;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;KACF;IAES,mBAAmB,CAAC,kBAA0B;QACtD,QACE,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,GAAG,CAAC;YAClC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAI,kBAAkB,EACpD;KACH;;IAGS,UAAU,CAAC,KAAkB;QACrC,IAAI,aAAa,GAAwB,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QACjE,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QAEjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBAClD,IAAI,CAAC,kBAAkB,GAAG,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;gBACvE,MAAM;aACP;YACD,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAExC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;gBAChC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;aAC7D;SACF;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,OAAO,aAAa,CAAC;KACtB;IAES,aAAa,CAAC,KAAU;QAChC,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;;IAGO,iBAAiB,CAAC,IAAkB;QAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAE3C,IAAI,YAAY,EAAE;YAChB,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC;YACzD,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;YAC7C,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;YAE7C,MAAM,QAAQ,GAAG,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,GAAG,IAAI,CAAC;YACvG,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC;YAE1E,IAAI,CAAC,YAAY,EAAE;gBACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;aAC/C;YAED,OAAO,QAAQ,IAAI,YAAY,CAAC;SACjC;QAED,OAAO,IAAI,CAAC;KACb;IAEO,kBAAkB,CAAC,IAAkB,EAAE,KAA0B;QACvE,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,CAAC;KAClE;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAEO,iBAAiB,CAAC,OAAqB,EAAE,KAA0B;QACzE,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;YAC3C,OAAO,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SACrD;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB;aAAM;YACL,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SACxC;QAED,OAAO,KAAK,CAAC;KACd;IAEO,kBAAkB,CAAC,SAAiB,EAAE,oBAAmC,EAAE;QACjF,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC,CAAC;QACjF,IAAI,CAAC,SAAS,EAAE;YACd,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SACzD;QACD,OAAO,SAAS,CAAC;KAClB;IAEO,oBAAoB,CAAC,eAAyC,EAAE;QACtE,MAAM,kBAAkB,GAAG,YAAY,CAAC,iBAAiB,IAAI,EAAE,CAAC;QAEhE,IAAI,CAAC,iBAAiB,GAAG,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACvD;IAEO,gBAAgB,CAAC,YAAsC;QAC7D,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QAED,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,IAAI,mBAAmB,CAAC;QACpE,MAAM,WAAW,GAAG,YAAY,CAAC,WAAW,IAAI,mBAAmB,CAAC;QAEpE,uCACK,YAAY,KACf,WAAW,EAAE,WAAW,EACxB,WAAW,EAAE,WAAW,IACxB;KACH;IAEO,uBAAuB,CAAC,OAAqB,EAAE,KAA0B;QAC/E,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAC/B,WAAW,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,MAAM,KAAK,cAAc,CAAC,QAAQ,CACnG,CAAC;QAEF,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;YACpB,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SACrC;QAED,OAAO,KAAK,CAAC;KACd;;;YA5hBF,SAAS;;;YApID,eAAe;YAGf,iBAAiB;;;wBA8IvB,KAAK,SAAC,cAAc;6BAapB,KAAK,SAAC,oBAAoB;oBAG1B,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;kBAGd,KAAK,SAAC,OAAO;mBAGb,KAAK,SAAC,MAAM;yBAWZ,KAAK,SAAC,eAAe;uBAerB,KAAK,SAAC,YAAY;sBAGlB,KAAK,SAAC,WAAW;uBAgBjB,MAAM,SAAC,UAAU;sBAUjB,MAAM,SAAC,SAAS;wBAUhB,MAAM,SAAC,WAAW;4BAiBlB,MAAM,SAAC,eAAe;wBAwCtB,KAAK,SAAC,aAAa;uBAuBnB,KAAK,SAAC,aAAa;mCAiBnB,KAAK,SAAC,0BAA0B;+BAoBhC,KAAK,SAAC,sBAAsB;6BAmB5B,KAAK,SAAC,oBAAoB;uBAoC1B,KAAK,SAAC,YAAY;+BAuBlB,KAAK,SAAC,gBAAgB;wBAmBtB,KAAK,SAAC,cAAc;uBAiBpB,KAAK,SAAC,YAAY;yBAmBlB,KAAK,SAAC,YAAY;uBAiBlB,KAAK,SAAC,YAAY;;AArWoB;IAAf,YAAY,EAAE;wDAA4B;;MCjJvD,6BAA6B;IAexC,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJf,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;KAItC;IAE7C,KAAK;QACH,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACnD;;;YAxBF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,iyCAAwD;gBACxD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAR4C,UAAU;;;kCAUpD,KAAK,SAAC,wBAAwB;uBAE9B,KAAK,SAAC,YAAY;qBAElB,KAAK,SAAC,UAAU;uBAEhB,KAAK,SAAC,YAAY;sBAElB,KAAK,SAAC,WAAW;0BAEjB,MAAM,SAAC,gBAAgB;qCAEvB,SAAS,SAAC,iBAAiB;;;ACN9B,MAAM,6BAA6B,GAAG,GAAG,CAAC;AAC1C,MAAM,yBAAyB,GAAG,GAAG,CAAC;MAOzB,yBAAyB;IA6BpC,YAAoB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAnB5B,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEvD,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGnF,eAAU,GAAY,KAAK,CAAC;QAEpB,oBAAe,GAAY,6BAA6B,CAAC;KAYR;IAVzD,IAAiC,cAAc,CAAC,KAAa;QAC3D,MAAM,cAAc,GAAG,YAAY,CAAC,KAAK,EAAE,6BAA6B,CAAC,CAAC;QAE1E,IAAI,CAAC,eAAe,GAAG,cAAc,GAAG,yBAAyB,GAAG,yBAAyB,GAAG,cAAc,CAAC;KAChH;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAID,KAAK;QACH,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;KACpC;IAED,aAAa,CAAC,OAAoB;QAChC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;;QAG3B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KACzB;IAED,UAAU;QACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KACxB;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;;;YA3DF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,g0BAAmD;gBACnD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YArBC,iBAAiB;;;qCAuBhB,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;oCACjD,SAAS,SAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;kCAEzD,KAAK,SAAC,wBAAwB;uBAE9B,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,YAAY;yBAElB,MAAM,SAAC,eAAe;0BAEtB,MAAM,SAAC,gBAAgB;6BAOvB,KAAK,SAAC,oBAAoB;;;AC3B7B;;;;;;;;;;;;;;;;;;;;;;;;;MA2Ca,iBAAkB,SAAQ,qBAAqB;IAyB1D,YACE,aAA8B,EACvB,QAAmB,EAClB,QAAoB,EACpB,YAAmC,EAC3C,eAAkC;QAElC,KAAK,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAL/B,aAAQ,GAAR,QAAQ,CAAW;QAClB,aAAQ,GAAR,QAAQ,CAAY;QACpB,iBAAY,GAAZ,YAAY,CAAuB;QAxB7C,uBAAkB,GAA6E;YAC7F,CAAC,cAAc,CAAC,QAAQ,GAAG;gBACzB,IAAI,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe;gBACzC,IAAI,EAAE,YAAY;aACnB;YACD,CAAC,cAAc,CAAC,KAAK,GAAG;gBACtB,IAAI,EAAE,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa;aACxC;YACD,CAAC,cAAc,CAAC,SAAS,GAAG;gBAC1B,IAAI,EAAE,OAAO,IAAI,OAAO,GAAG,GAAG;aAC/B;SACF,CAAC;QAEF,+BAA0B,GAAG;YAC3B,CAAC,cAAc,CAAC,QAAQ,GAAG,gBAAgB,CAAC,OAAO;YACnD,CAAC,cAAc,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK;SAC/C,CAAC;QAEM,4BAAuB,GAAY,KAAK,CAAC;KAUhD;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;KACrC;IAED,IAAI,iBAAiB;QACnB,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAC7C,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC;KACvG;IAED,IAAI,qBAAqB;QACvB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;SACnC;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC1B,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;SAClC;aAAM;YACL,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;SACjC;KACF;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KAC1D;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;KAC1D;IAED,IAAI,kBAAkB;QACpB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC;SAChF;QAED,OAAO,KAAK,CAAC;KACd;IAED,IAAI,UAAU;QACZ,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAE7C,OAAO,CAAC,EACN,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACtC,CAAC,IAAI,CAAC,GAAG;YACT,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,CAAC,CAC9C,CAAC;KACH;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;KACnF;IAED,MAAM,CAAC,IAAkB;QACvB,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,SAAS,EAAE;YAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACvB;IAED,eAAe;QACb,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;;IAGD,KAAK;QACH,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;;;;;;;;;;;;;;IAmBD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC1B,OAAO;aACR;YAED,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,CAAC;aACxC;SACF;KACF;;IAGD,mBAAmB,CAAC,KAA0B;QAC5C,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,SAAS,CAAC,CAAC;SACrE;QAED,OAAO,KAAK,CAAC;KACd;;IAGD,kBAAkB,CAAC,MAAsB;QACvC,OAAO,MAAM,KAAK,cAAc,CAAC,QAAQ,CAAC;KAC3C;;IAGD,YAAY,CAAC,KAAK;;QAEhB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;YACrC,OAAO,KAAK,CAAC,cAAc,EAAE,CAAC;SAC/B;QAED,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,oBAAoB,CAAC,KAAK;QACxB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;;IAGD,UAAU,CAAC,IAAI;QACb,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAEnC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KAC1C;;IAGD,WAAW;;QACT,MAAA,IAAI,CAAC,cAAc,+CAAnB,IAAI,CAAmB,CAAC;QACxB,IAAI,CAAC,uBAAuB,GAAG,KAAK,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACtC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,EAAE;YAC3B,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACnE,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YACnE,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,WAAW,IAAI,GAAG,EAAE,WAAW,CAAC,CAAC;YACpE,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE;YAChC,MAAM,0BAA0B,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;YACpG,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,0BAA0B,CAAC,CAAC;YACpE,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,kBAAkB,GAAG,CAAC,EAAE;YAC/B,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACvC,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;SAC7B;KACF;;IAGD,SAAS;QACP,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YACjD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;KACF;IAED,qBAAqB,CAAC,kBAA2B;QAC/C,IAAI,kBAAkB,EAAE;YACtB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,iBAAiB,EAAE,MAAM,CAAC,CAAC;SACrF;aAAM;YACL,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;SAChF;KACF;;IAGD,UAAU,CAAC,IAAkB;QAC3B,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,EAAE;YACzC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACvB;iBAAM;gBACL,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aAC9B;SACF,CAAC,CAAC;KACJ;IAED,SAAS,CAAC,KAAK,EAAE,IAAkB;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC;KACjB;;IAGD,WAAW,CAAC,KAA0B;QACpC,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,aAAa,CAAC,MAAM,CACvB,IAAI,CAAC,GAAG,EACR,aAAa,EACb,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,EACb,CAAC,IAAI,EAAE,OAAO;;YAEZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACtC,EACD,CAAC,IAAI,EAAE,aAAa;;YAElB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACpC,EACD,CAAC,IAAI,EAAE,UAAU;;YAEf,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/B,CACF,CAAC;KACH;IAEO,eAAe;QACrB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KACzC;;IAGO,eAAe,CAAC,IAAkB,EAAE,MAAsB;QAChE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;KACpB;;IAGO,gBAAgB,CAAC,iBAAyB,EAAE,gBAAiB;QACnE,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAClG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KAC9C;;IAGO,iBAAiB,CAAC,IAAkB;QAC1C,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;KAClB;IAEO,WAAW,CAAC,KAAK;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;KACF;;IAGO,WAAW,CAAC,KAA0B;QAC5C,MAAM,UAAU,GAAwB,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACxE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC3F;;IAGO,gBAAgB,CAAC,IAAS,EAAE,OAAe;QACjD,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;IAGO,mBAAmB,CAAC,KAA0B;QACpD,MAAM,iBAAiB,GAAG,YAAY;YACpC,MAAM,EAAE,OAAO,EAAE,WAAW,KAAoB,YAAY,EAA3B,UAAU,UAAK,YAAY,EAAtD,0BAAuC,CAAe,CAAC;YAE7D,OAAO,UAAU,CAAC;SACnB,CAAC;QAEF,OAAO,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KACrC;;;YA7UF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,qhGAAyC;gBACzC,SAAS,EAAE;oBACT,UAAU;oBACV,eAAe;oBACf;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;wBAChD,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YA7CQ,eAAe;YAboB,SAAS;YAK5C,UAAU;YACV,qBAAqB;YAErB,iBAAiB;;;wBAoDvB,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;wCACzD,SAAS,SAAC,yBAAyB;2BACnC,SAAS,SAAC,cAAc;;;MCpDd,yBAAyB;IAoBpC,YAAoB,QAAoB,EAAU,YAAmC;QAAjE,aAAQ,GAAR,QAAQ,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAuB;QAX7D,cAAS,GAAsB,IAAI,YAAY,EAAO,CAAC;QAExD,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEpD,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;KAOQ;IAEzC,WAAW,CAAC,KAAK;QAC/D,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;KAC5D;IAE8C,UAAU,CAAC,KAAK;QAC7D,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB;KACF;IAE0C,MAAM,CAAC,KAAK;QACrD,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,6BAA6B,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACvB;IAEO,6BAA6B,CAAC,KAAgB;QACpD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,IAAI,CAAC,mBAAmB,EAAE;gBAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;oBACrD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBACnC,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBACpD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;aAC9B;SACF;KACF;;IAGa,iBAAiB,CAAC,KAAK;;YACnC,IAAI,KAAK,CAAC,MAAM,EAAE;gBAChB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACxC,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;iBAAM,IAAI,KAAK,CAAC,WAAW,EAAE;gBAC5B,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aACxC;SACF;KAAA;IAEa,kBAAkB,CAAC,iBAAiB;;YAChD,MAAM,OAAO,GAAG,EAAE,CAAC;;YAGnB,KAAK,MAAM,IAAI,IAAI,iBAAiB,EAAE;gBACpC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;aACvC;YAED,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;gBAC3B,IAAI,KAAK,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,eAAe,EAAE,CAAC;iBACxB;qBAAM;oBACL,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACrD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC1C;aACF;SACF;KAAA;;IAGO,YAAY,CAAC,YAA0B;QAC7C,MAAM,QAAQ,GAAgB,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC7D,MAAM,YAAY,GAAe,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAErG,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,IAAI;YACpC,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;YAEvE,IAAI,SAAS,CAAC,MAAM,EAAE;gBACpB,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC9B;iBAAM;gBACL,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;YACD,OAAO,QAAQ,CAAC;SACjB,EAAE,EAAE,CAAC,CAAC;KACR;IAEO,QAAQ,CAAC,KAAK;QACpB,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,KAAK,CAAC,IAAI,CAAC,IAAI;gBACb,OAAO,CAAC,IAAI,CAAC,CAAC;aACf,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAEa,aAAa,CAAC,KAAK;;YAC/B,MAAM,SAAS,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;YACvC,IAAI,KAAK,GAAG,EAAE,CAAC;YAEf,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YAC5D,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,OAAO,KAAK,CAAC;SACd;KAAA;IAEO,oBAAoB,CAAC,SAAS;QACpC,OAAO,IAAI,OAAO,CAAC,OAAO;YACxB,SAAS,CAAC,WAAW,CAAC,CAAM,OAAO;gBACjC,IAAI,KAAK,GAAG,EAAE,CAAC;gBACf,KAAK,MAAM,KAAK,IAAI,OAAO,EAAE;oBAC3B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;oBACtD,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACjC;gBACD,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB,CAAA,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;IAEO,YAAY,CAAC,YAAoB;QACvC,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;SACxD;KACF;IAEO,SAAS,CAAC,KAAK,EAAE,KAAK;QAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAC3C,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACzC;aAAM;YACL,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAClG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,CAAC;SAC9D;KACF;;IAGO,gBAAgB,CAAC,iBAAyB,EAAE,IAAK;QACvD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KAC9C;;;YArKF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,SAAS,EAAE,CAAC,UAAU,CAAC;aACxB;;;YAPQ,UAAU;YACV,qBAAqB;;;0BAQ3B,KAAK,SAAC,gBAAgB;kCAEtB,KAAK,SAAC,wBAAwB;uBAE9B,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,YAAY;wBAElB,MAAM,SAAC,cAAc;uBAErB,MAAM,SAAC,aAAa;yBAEpB,MAAM,SAAC,eAAe;0BAStB,YAAY,SAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC;yBAO7C,YAAY,SAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC;qBAW5C,YAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;;MC/B9B,oCAAoC;IAa/C,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QAFb,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;KAExC;IAE3C,eAAe;QACb,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;KAC7D;IAEO,WAAW,CAAC,aAAyB;QAC3C,MAAM,kBAAkB,GAAG,aAAa,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAC/E,MAAM,cAAc,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;QAE7E,cAAc,CAAC,OAAO,CAAC,aAAa;YAClC,MAAM,eAAe,GAAG,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAE1D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,EAAE,GAAG,eAAe,IAAI,CAAC,CAAC;SACrG,CAAC,CAAC;KACJ;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,kCAAkC;gBAC5C,mWAA8D;gBAC9D,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAVC,SAAS;;;gCAYR,SAAS,SAAC,mBAAmB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;kCAEjE,KAAK,SAAC,wBAAwB;uBAE9B,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,YAAY;qBAElB,KAAK,SAAC,UAAU;0BAEhB,MAAM,SAAC,gBAAgB;;;MCjBb,iCAAiC;IAkC5C,YAAoB,cAAiC,EAAE,eAAkC;QAArE,mBAAc,GAAd,cAAc,CAAmB;QACnD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;IA1BD,IAAmC,iBAAiB,CAAC,KAAK;QACxD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,CAAM,KAAK,CAAC,CAAC;KACpE;IAED,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;IAED,IAA8B,WAAW,CAAC,KAAK;QAC7C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAM,KAAK,CAAC,CAAC;KAC7C;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAED,IAA8B,WAAW,CAAC,KAAK;QAC7C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAM,KAAK,CAAC,CAAC;KAC7C;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAMD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAEO,uBAAuB,CAAC,iBAAgC;QAC9D,MAAM,WAAW,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;QAErE,OAAO,iBAAiB;cACpB,iBAAiB;iBACd,IAAI,CAAC,IAAI,CAAC;iBACV,WAAW,EAAE;iBACb,OAAO,CAAC,aAAa,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;cAC3D,SAAS,CAAC;KACf;IAEO,WAAW;QACjB,IAAI,CAAC,QAAQ,mCACR,uBAAuB,CAAC,eAAe,CAAC,GACxC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC1C,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;;;YAjEF,SAAS,SAAC;gBACT,QAAQ,EAAE,6BAA6B;gBACvC,qzBAA2D;gBAC3D,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;YAZiC,iBAAiB;YAG1C,iBAAiB;;;uBAWvB,KAAK,SAAC,aAAa;gCASnB,KAAK,SAAC,sBAAsB;0BAQ5B,KAAK,SAAC,iBAAiB;0BAQvB,KAAK,SAAC,iBAAiB;;;AC1B1B;;;;;;;;;;;;;;;;;;;;;;;;;MA0Ca,cAAe,SAAQ,cAAc;;IAkBhD,YAAY,EAAc,EAAE,EAAqB;QAC/C,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QAlBhB,SAAI,GAAG,eAAe,CAAC;QAEvB,SAAI,GAAG,KAAK,CAAC;QAEb,YAAO,GACL,yBAAyB;YACzB,kDAAkD;YAClD,6BAA6B;YAC7B,oCAAoC;YACpC,6BAA6B;YAC7B,uBAAuB,CAAC;QAE1B,SAAI,GAAG,EAAE,CAAC;QAEF,aAAQ,GAAG,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAK3D,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;KACtB;IAED,eAAe;;QAEb,UAAU,CAAC;YACT,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aACrE;SACF,CAAC,CAAC;QACH,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACxE;KACF;IAED,eAAe,CAAC,CAAkB;QAChC,OAAO,IAAI,CAAC;KACb;;;YA1DF,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,+vCAAkD;gBAClD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,cAAc,CAAC;wBAC7C,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,aAAa;wBACtB,WAAW,EAAE,UAAU,CAAC,MAAM,cAAc,CAAC;wBAC7C,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;YAjDC,UAAU;YAFV,iBAAiB;;;ACuDnB;;;;;;;;;;MAiGa,aAAa;;;YAvFzB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,gBAAgB;oBAChB,mBAAmB;oBACnB,cAAc;oBACd,aAAa;oBACb,gBAAgB;oBAChB,qBAAqB;oBACrB,iBAAiB;oBACjB,kBAAkB;oBAClB,uBAAuB;oBACvB,kBAAkB;oBAClB,sBAAsB;oBACtB,eAAe;oBACf,aAAa;oBACb,gBAAgB;oBAChB,gBAAgB;oBAChB,aAAa;oBACb,eAAe;oBACf,YAAY;iBACb;gBACD,OAAO,EAAE;oBACP,qBAAqB;oBACrB,aAAa;oBACb,kBAAkB;oBAClB,mBAAmB;oBACnB,gBAAgB;oBAChB,8BAA8B;oBAC9B,kBAAkB;oBAClB,0BAA0B;oBAC1B,gBAAgB;oBAChB,sBAAsB;oBACtB,gBAAgB;oBAChB,gBAAgB;oBAChB,iBAAiB;oBACjB,sBAAsB;oBACtB,sBAAsB;oBACtB,iBAAiB;oBACjB,mBAAmB;oBACnB,qBAAqB;oBACrB,mBAAmB;oBACnB,iBAAiB;oBACjB,+BAA+B;oBAC/B,iBAAiB;oBACjB,mBAAmB;oBACnB,iBAAiB;oBACjB,cAAc;iBACf;gBACD,YAAY,EAAE;oBACZ,mBAAmB;oBACnB,gBAAgB;oBAChB,8BAA8B;oBAC9B,kBAAkB;oBAClB,0BAA0B;oBAC1B,gBAAgB;oBAChB,gBAAgB;oBAChB,gBAAgB;oBAChB,iBAAiB;oBACjB,sBAAsB;oBACtB,sBAAsB;oBACtB,8BAA8B;oBAC9B,0BAA0B;oBAC1B,4BAA4B;oBAC5B,iBAAiB;oBACjB,mBAAmB;oBACnB,qBAAqB;oBACrB,uBAAuB;oBACvB,mBAAmB;oBACnB,6BAA6B;oBAC7B,4BAA4B;oBAC5B,0BAA0B;oBAC1B,iBAAiB;oBACjB,+BAA+B;oBAC/B,iBAAiB;oBACjB,mBAAmB;oBACnB,iBAAiB;oBACjB,yBAAyB;oBACzB,yBAAyB;oBACzB,oCAAoC;oBACpC,6BAA6B;oBAC7B,iCAAiC;oBACjC,cAAc;iBACf;gBACD,SAAS,EAAE,EAAE;aACd;;;AC1JD;;;;;;;IAOY;AAAZ,WAAY,iBAAiB;;IAE3B,8CAAyB,CAAA;;IAGzB,0CAAqB,CAAA;AACvB,CAAC,EANW,iBAAiB,KAAjB,iBAAiB;;ACH7B,MAAM,wBAAwB,GAAG,iBAAiB,CAAC,QAAQ,CAAC;MAG/C,mBAAmB;IADhC;QAiBkB,sBAAiB,GAAG,iBAAiB,CAAC;QAG9C,iBAAY,GAAsB,wBAAwB,CAAC;KA8CpE;;;;;;;;;;;;;;IA/BC,IAA2B,SAAS,CAAC,KAAa;QAChD,IAAI,KAAK,CAAC,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC7B;aAAM;YACL,KAAK,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;YAEjC,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,GAAG,SAAS,GAAG,KAAK,CAAC;SAC/D;KACF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;;;;;;;;IAaD,IAA4B,WAAW,CAAC,KAAwB;QAC9D,IAAI,CAAC,YAAY,GAAS,MAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,wBAAwB,CAAC;KAChH;IACD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;YAjEF,SAAS;;;oBAGP,KAAK,SAAC,SAAS;kBASf,KAAK,SAAC,OAAO;oBAGb,KAAK,SAAC,SAAS;wBAoBf,KAAK,SAAC,cAAc;0BAyBpB,KAAK,SAAC,eAAe;;;AC5DxB;;;;;;;;;;;;;;;;;;;;MAyBa,eAAgB,SAAQ,mBAAmB;IACtD,IAAI,cAAc;QAChB,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACjC;;;YARF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,0hDAAuC;gBACvC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;ACzBD;;;;;MAYa,YAAY;;;YAPxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,eAAe,CAAC;gBAC/B,OAAO,EAAE,CAAC,eAAe,CAAC;gBAC1B,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;AChBD;;;;;;;IAOY;AAAZ,WAAY,gBAAgB;;IAE1B,6CAAyB,CAAA;;IAGzB,yCAAqB,CAAA;AACvB,CAAC,EANW,gBAAgB,KAAhB,gBAAgB;;ACP5B;;;;;;;IAOY;AAAZ,WAAY,SAAS;;IAEnB,8BAAiB,CAAA;;IAGjB,0BAAa,CAAA;;IAGb,gCAAmB,CAAA;;IAGnB,gCAAmB,CAAA;AACrB,CAAC,EAZW,SAAS,KAAT,SAAS;;ACErB,MAAM,WAAW,GAAS,MAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAC7D,MAAM,uBAAuB,GAAG,gBAAgB,CAAC,QAAQ,CAAC;AAE1D;;;;;;;;;;;MAYa,kBAAkB;IAD/B;;;;;;;;QAqBqB,UAAK,GAAsB,IAAI,YAAY,EAAa,CAAC;QAE5D,qBAAgB,GAAG,gBAAgB,CAAC;QAK5C,iBAAY,GAAsB,uBAAuB,CAAC;KA4InE;;;;;;;;;;;;;;;;;;;;;;;;IAlHC,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;KAC/D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCD,IAAqB,IAAI,CAAC,KAA2C;QACnE,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;KACF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;;;IAcD,IAAwB,OAAO,CAAC,KAAc;QAC5C,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACzC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAA4B,WAAW,CAAC,KAAuB;QAC7D,IAAI,CAAC,YAAY,GAAS,MAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,uBAAuB,CAAC;KAC9G;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;;;;;;;;;IAmBD,IAAqB,IAAI,CAAC,KAAgB;QACxC,IAAI,CAAC,KAAK,GAAS,MAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;KAClF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;YAvKF,SAAS;;;oBASP,KAAK,SAAC,SAAS;oBAGf,KAAK,SAAC,SAAS;oBASf,MAAM,SAAC,SAAS;oBAiChB,KAAK,SAAC,SAAS;mBAyCf,KAAK,SAAC,QAAQ;sBAwBd,KAAK,SAAC,WAAW;0BAiBjB,KAAK,SAAC,eAAe;mBAyBrB,KAAK,SAAC,QAAQ;;;ACxLjB;;;;;;;AAOA,IAAY,SAYX;AAZD,WAAY,SAAS;;IAEnB,qCAAwB,CAAA;;IAGxB,kCAAqB,CAAA;;IAGrB,mCAAsB,CAAA;;IAGtB,wCAA2B,CAAA;AAC7B,CAAC,EAZW,SAAS,KAAT,SAAS;;ACArB,MAAM,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;AAEpD;;;;;;;;;;;;;;;;;;;;MAyBa,cAAe,SAAQ,kBAAkB;IAGpD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KACpD;IAED,IAAI,YAAY;QACd,QAAQ,IAAI,CAAC,IAAI;YACf,KAAK,SAAS,CAAC,MAAM;gBACnB,OAAO,SAAS,CAAC,MAAM,CAAC;YAE1B,KAAK,SAAS,CAAC,IAAI;gBACjB,OAAO,SAAS,CAAC,IAAI,CAAC;YAExB,KAAK,SAAS,CAAC,OAAO;gBACpB,OAAO,SAAS,CAAC,OAAO,CAAC;YAE3B,KAAK,SAAS,CAAC,OAAO;gBACpB,OAAO,SAAS,CAAC,OAAO,CAAC;SAC5B;KACF;IAED,IAAI,QAAQ;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,OAAO,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,UAAU,IAAI,CAAC,IAAI,EAAE,CAAC;SAC7E;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,OAAO,GAAG,WAAW,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;SACpE;QAED,OAAO,IAAI,CAAC,OAAO,GAAG,GAAG,gBAAgB,UAAU,GAAG,gBAAgB,CAAC;KACxE;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KAC9D;IAED,OAAO;QACL,MAAM,gBAAgB,GAAc,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QAC3E,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KACnC;IAED,YAAY,CAAC,KAAK;QAChB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;;;YArDF,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,43BAAsC;gBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;AC1BD;;;;;MAYa,WAAW;;;YAPvB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,cAAc,CAAC;gBAC9B,OAAO,EAAE,CAAC,cAAc,CAAC;gBACzB,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;SChBe,qBAAqB,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW;IACxG,MAAM,UAAU,GAAG;QACjB,EAAE,EAAE,SAAS,IAAI,WAAW,IAAI,EAAE;QAClC,EAAE,EAAE,SAAS,IAAI,WAAW,IAAI,CAAC;QACjC,EAAE,EAAE,SAAS,IAAI,WAAW,IAAI,CAAC;QACjC,EAAE,EAAE,SAAS,IAAI,WAAW,IAAI,CAAC;QACjC,MAAM,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,CAAC;QAChC,MAAM,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,CAAC;QAChC,MAAM,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,CAAC;QAChC,MAAM,EAAE,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,MAAM,KAAI,CAAC;KACjC,CAAC;IAEF,OAAO,SAAS,UAAU,CAAC,EAAE,eAAe,UAAU,CAAC,MAAM,UAAU,UAAU,CAAC,EAAE,eAAe,UAAU,CAAC,MAAM,UAAU,UAAU,CAAC,EAAE,eAAe,UAAU,CAAC,MAAM,UAAU,UAAU,CAAC,EAAE,eAAe,UAAU,CAAC,MAAM,EAAE,CAAC;AACvO,CAAC;SAEe,cAAc,CAAC,KAA4B;IACzD,MAAM,eAAe,GAAG,SAAS,IAAI,KAAK,CAAC;IAE3C,OAAO,eAAe,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;AAChD;;ACrBA;;;;;;;IAOY;AAAZ,WAAY,kBAAkB;;IAE5B,yCAAmB,CAAA;;IAGnB,2CAAqB,CAAA;;IAGrB,mCAAa,CAAA;;IAGb,2CAAqB,CAAA;;IAGrB,mCAAa,CAAA;;IAGb,uCAAiB,CAAA;;IAGjB,uCAAiB,CAAA;AACnB,CAAC,EArBW,kBAAkB,KAAlB,kBAAkB;;MCMjB,gCAAgC;IA8C3C,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAvCrB,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;QAExC,iBAAY,GAAG,IAAI,YAAY,EAAO,CAAC;;QAGvC,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QAEhE,kBAAa,GAAsC,EAAE,CAAC;QAI9C,WAAM,GAAS,EAAE,CAAC;KA4B0B;;IAzBpD,IAAuB,MAAM,CAAC,KAAgC;QAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;KACvD;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;IAGD,IAAsB,KAAK,CAAC,KAAU;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KAC/D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAgC,cAAc,CAAC,KAAoB;QACjE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;KAC/D;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC7B;IAID,SAAS,CAAC,KAAK,EAAE,SAAS;QACxB,OAAO,KAAK,KAAK,SAAS,CAAC;KAC5B;;IAGS,gBAAgB;QACxB,MAAM,aAAa,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;YACvB,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE;gBACtD,IAAI,CAAC,UAAU,CACb,+BAA+B,KAAK,CAAC,QAAQ,kDAAkD,CAChG,CAAC;gBACF,OAAO;aACR;YAED,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;gBACtB,IAAI,CAAC,UAAU,CAAC,+DAA+D,CAAC,CAAC;gBACjF,OAAO;aACR;YAED,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;gBACzB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aAC7C;SACF,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC,aAAa,CAAC,CAAC;KAClC;;IAGO,cAAc,CAAC,OAAmB;QACxC,MAAM,iBAAiB,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC;QAE9E,IAAI,iBAAiB,EAAE;YACrB,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;SACxD;QAED,OAAO,OAAO,CAAC;KAChB;;IAGO,WAAW,CAAC,KAAyB;QAC3C,MAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;QACjF,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnC,MAAM,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,QAAQ,CAAC;QAE7E,MAAM,cAAc,GAAG,qBAAqB,CAC1C,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,WAAW,EACjB;YACE,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;SACzB,CACF,CAAC;QAEF,qCACE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,EACnD,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAC3D,KAAK,KACR,cAAc;YACd,OAAO;YACP,KAAK;YACL,OAAO,IACP;KACH;IAEO,cAAc,CAAC,MAAiC,EAAE,QAAgB;QACxE,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;KAC1D;;IAGO,mBAAmB,CAAC,QAAiC,EAAE;QAC7D,MAAM,IAAI,GAAG,KAAK,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,QAAQ,CAAC;QAE7E,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YAClC,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;YAC3C,OAAO,SAAS,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,YAAY,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;YACtC,OAAO,eAAe,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YACpC,OAAO,aAAa,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,OAAO,CAAC,EAAE;YAC3D,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,QAAQ,CAAC,EAAE;YAC7G,OAAO,KAAK,CAAC,KAAK,GAAG,iBAAiB,GAAG,YAAY,CAAC;SACvD;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,IAAI,CAAC,EAAE;YACxD,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,OAAO,CAAC;YAEnC,OAAO,OAAO,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,OAAO,CAAC;SAChB;aAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,QAAQ,CAAC;SACjB;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YACjC,OAAO,UAAU,CAAC;SACnB;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YACjC,OAAO,UAAU,CAAC;SACnB;QAED,OAAO,OAAO,CAAC;KAChB;IAEO,QAAQ,CAAC,KAAyB;QACxC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,QAAQ,CAAC;KAC9D;IAEO,eAAe,CAAC,KAAyB;QAC/C,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAExD,OAAO,CAAC,cAAc,IAAI,YAAY,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;KAC5E;IAEO,OAAO,CAAC,KAAyB;QACvC,MAAM,EAAE,cAAc,EAAE,GAAG,KAAK,CAAC;QAEjC,OAAO,CAAC,CAAC,cAAc,KAAK,QAAQ,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;KACvG;IAEO,cAAc,CAAC,KAAyB,EAAE,IAAY;QAC5D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;KAC/E;IAEO,cAAc,CAAC,MAAW;QAChC,OAAO,MAAM,IAAqB,MAAO,CAAC,gBAAgB,KAAK,SAAS,CAAC;KAC1E;IAEO,aAAa,CAAC,MAAW;QAC/B,OAAO,MAAM,IAAoB,MAAO,CAAC,eAAe,KAAK,SAAS,CAAC;KACxE;IAEO,QAAQ,CAAC,KAAyB;QACxC,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;QAEhC,OAAO,CAAC,CAAC,aAAa,KAAK,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;KACrG;IAEO,aAAa,CAAC,KAAyB;QAC7C,MAAM,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAExD,OAAO,YAAY,KAAK,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;KAChF;IAEO,YAAY,CAAC,KAAyB,EAAE,IAAY;QAC1D,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAEhC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC;KAC7E;IAEO,UAAU,CAAC,KAAyB;QAC1C,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC;QAEzB,OAAO,MAAM,CAAC;KACf;IAEO,YAAY,CAAC,KAAyB;QAC5C,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAExC,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;KAC1D;IAEO,QAAQ,CAAC,KAAyB;QACxC,MAAM,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,KAAK,CAAC;QAExC,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;KACzD;IAEO,UAAU,CAAC,KAAyB;QAC1C,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;QAEvB,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC;KAC1B;IAEO,UAAU,CAAC,KAAa;QAC9B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;;;YA5OF,SAAS;;;YAXD,aAAa;;;wBAanB,KAAK,SAAC,cAAc;2BAEpB,KAAK,SAAC,iBAAiB;uBAEvB,KAAK,SAAC,YAAY;2BAElB,MAAM,SAAC,iBAAiB;2BAExB,MAAM,SAAC,gBAAgB;0BAGvB,MAAM,SAAC,gBAAgB;qBASvB,KAAK,SAAC,UAAU;oBAShB,KAAK,SAAC,SAAS;6BAQf,KAAK,SAAC,mBAAmB;;;AC1C5B;;;;;;;MAaa,4BAA6B,SAAQ,gCAAgC;IAKhF,YACE,aAA4B,EACpB,iBAAiD,EACjD,OAA0B,EAC1B,IAAY;QAEpB,KAAK,CAAC,aAAa,CAAC,CAAC;QAJb,sBAAiB,GAAjB,iBAAiB,CAAgC;QACjD,YAAO,GAAP,OAAO,CAAmB;QAC1B,SAAI,GAAJ,IAAI,CAAQ;QANd,kBAAa,GAAG,EAAE,CAAC;KAS1B;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9C;KACF;IAED,KAAK,CAAC,QAAgB;QACpB,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;QACtF,IAAI,cAAc,EAAE;YAClB,cAAc,CAAC,KAAK,EAAE,CAAC;SACxB;KACF;IAED,UAAU,CAAC,KAAyB;QAClC,OAAO,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC;KAC5C;IAEK,aAAa,CAAC,YAAgC,EAAE,WAAiB;;YACrE,MAAM,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;YAClC,MAAM,aAAa,GAAG,YAAY,CAAC,IAAI,KAAK,SAAS,CAAC;YACtD,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAElF,IAAI,YAAY,CAAC,cAAc,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACpC;;YAGD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,aAAa,KAAK,mBAAmB,EAAE;gBAC/D,MAAM,EAAE,YAAY,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAEpE,IAAI,YAAY,CAAC,QAAQ,EAAE;oBACzB,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,iBAAiB,EAAE,YAAY,CAAC,CAAC;iBACzE;gBAED,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;aACjD;YAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KAAA;IAED,mBAAmB;QACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7D;IAED,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAEO,oBAAoB,CAAC,KAAa,EAAE,cAA4C;QACtF,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEjC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAQ,KAAK,GAAK,cAAc,CAAC,KAAK,CAAE,CAAC;QAC3D,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,KAAK,CAAC;SACnD;QAED,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAE7B,IAAI,cAAc,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAC5B;KACF;IAEO,QAAQ,CAAC,QAAgB;QAC/B,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC;QACtF,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAEpD,OAAO,EAAE,YAAY,EAAE,iBAAiB,EAAE,CAAC;KAC5C;IAEO,uBAAuB,CAAC,iBAAyB;;QACvD,MAAM,kBAAkB,GAAG,CAAA,MAAA,IAAI,CAAC,cAAc,0CAAE,MAAM;cAClD,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC;cACxF,IAAI,CAAC;QACT,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,IAAI,kBAAkB,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;QAEpG,IAAI,iBAAiB,EAAE;YACrB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;YACpD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACtC;KACF;IAEO,YAAY;QAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC9C;IAEO,qBAAqB,CAAC,cAA6B,EAAE,aAA6C;QACxG,OAAO,cAAc,CAAC,IAAI,CAAC,iBAAiB,IAAI,iBAAiB,KAAK,aAAa,CAAC,CAAC;KACtF;IAEa,aAAa,CAAC,KAAyB,EAAE,UAAkB,EAAE,YAAgC;;YACzG,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAEzC,MAAM,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC;YAC/C,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;YAE7B,IAAI;gBACF,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;gBAC9F,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;aACvD;YAAC,WAAM;gBACN,YAAY,CAAC,QAAQ,GAAG,gBAAgB,CAAC;aAC1C;SACF;KAAA;;;YA9HF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,42UAAoD;gBACpD,aAAa,EAAE,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;gBACnE,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;YAnBQ,aAAa;YAKb,8BAA8B;YAPnB,iBAAiB;YACV,MAAM;;;yBAsB9B,YAAY,SAAC,WAAW;;;MCjBd,oBAAoB;IAC/B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAI;IAExC,MAAM,CAAC,GAAW,EAAE,KAAK;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;KAC/C;;;YANF,UAAU;;;YALF,UAAU;;;ACUnB;;;;;;;;;MAUa,0BAA0B;IAyGrC,YACU,YAA0B,EAC1B,QAAkB,EAClB,WAAwB,EACxB,QAAoB,EACpB,aAA4B,EAC1B,kBAAwC;QAL1C,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAY;QACpB,kBAAa,GAAb,aAAa,CAAe;QAC1B,uBAAkB,GAAlB,kBAAkB,CAAsB;QA3EpD,kBAAa,GAAG,EAAE,CAAC;QAEX,YAAO,GAA8B,EAAE,CAAC;QACxC,kBAAa,GAAY,KAAK,CAAC;QAC/B,WAAM,GAAG,EAAE,CAAC;KAwEhB;;;;;;;;;;;;;;;;;;;;;;;IAhDJ,IAAuB,MAAM,CAAC,MAAiC;QAC7D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;KACzD;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAA+B,YAAY,CAAC,KAAc;QACxD,IAAI,CAAC,aAAa,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC9C;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;IAUD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KAC/D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;IAYS,mBAAmB;QAC3B,MAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK;YACvB,IAAI,cAAc,CAAC,KAAK,CAAC,EAAE;gBACzB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aACzC;SACF,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC;KAC9B;;IAGS,eAAe;QACvB,MAAM,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAErD,IAAI,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,UAAU;YACtC,MAAM,UAAU,GAAG,YAAY,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC3F,MAAM,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;YAErC,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;gBACrB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;aACnD;SACF,CAAC,CAAC;QAEH,OAAO,YAAY,CAAC;KACrB;;IAGS,cAAc;QACtB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;KAChF;IAEO,WAAW,CAAC,KAAyB;QAC3C,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QAElF,MAAM,kBAAkB,GAAG,qBAAqB,CAC9C,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,aAAa,EACnB,KAAK,CAAC,WAAW,EACjB;YACE,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;YACxB,MAAM,EAAE,KAAK,CAAC,UAAU;SACzB,CACF,CAAC;QAEF,uBACE,QAAQ;YACR,KAAK,EACL,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,EAC7C,QAAQ,EAAE,kBAAkB,IACzB,KAAK,EACR;KACH;IAEO,cAAc,CAAC,IAAY,EAAE,KAAK,EAAE,MAAM;QAChD,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAE7B,QAAQ,IAAI;YACV,KAAK,UAAU;gBACb,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,IAAI,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAC1F,MAAM;YACR,KAAK,MAAM;gBACT,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,IAAI,YAAY,CAAC,CAAC;gBAC1E,MAAM;YACR,KAAK,UAAU;gBACb,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,IAAI,qBAAqB,CAAC,CAAC;gBACnF,MAAM;YACR,KAAK,QAAQ;gBACX,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;gBAC7D,MAAM;YACR,KAAK,MAAM;gBACT,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,IAAI,iBAAiB,CAAC,CAAC;gBAC/E,MAAM;SACT;QAED,OAAO,gBAAgB,CAAC;KACzB;;;YAtMF,SAAS;;;YAlBD,YAAY;YAAE,QAAQ;YAAE,WAAW;YAGnC,UAAU;YAH2B,aAAa;YAOlD,oBAAoB;;;mBA8C1B,KAAK,SAAC,QAAQ;qBA8Bd,KAAK,SAAC,UAAU;2BAiBhB,KAAK,SAAC,kBAAkB;oBAgBxB,KAAK,SAAC,SAAS;;;AC5GlB;;;;;;;;;;;;;;;;;;;;MAwBa,sBAAuB,SAAQ,0BAA0B;IACpE,YACE,YAA0B,EAC1B,QAAkB,EAClB,WAAwB,EACxB,QAAoB,EACpB,aAA4B,EAC5B,kBAAwC;QAExC,KAAK,CAAC,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,kBAAkB,CAAC,CAAC;KACzF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,YAAY,EAAE;YAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9C;KACF;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpC;KACF;IAEa,0BAA0B;;YACtC,IAAI,sBAAsB,CAAC;YAE3B,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACjC,sBAAsB,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;aACtF;iBAAM,IAAI,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC1C,sBAAsB,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;aACtC;YAED,OAAO,sBAAsB,IAAI,EAAE,CAAC;SACrC;KAAA;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC;SAC/B;QAED,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;KAC9F;IAEO,cAAc,CAAC,WAA+B;QACpD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEtF,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAK,WAAW,CAAE,CAAC;SAChE;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,IAAI,mBAAM,WAAW,EAAG,CAAC;SACtC;KACF;IAEO,eAAe,CAAC,MAAiC;QACvD,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,OAAO,CAAC,WAAW;gBACxB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;aAClC,CAAC,CAAC;SACJ;KACF;IAEO,cAAc,CAAC,QAAa;QAClC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;KACrC;IAEa,2BAA2B;;YACvC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAElE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YAE7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC9C;KAAA;;;YA7EF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,y2BAA+C;aAChD;;;YA/BQ,YAAY;YAAE,QAAQ;YAAE,WAAW;YAEnC,UAAU;YAF2B,aAAa;YAMlD,oBAAoB;;;MC0BhB,eAAe;;;YAf3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,CAAC;gBAC7G,YAAY,EAAE,CAAC,sBAAsB,EAAE,4BAA4B,EAAE,sBAAsB,CAAC;gBAC5F,OAAO,EAAE,CAAC,sBAAsB,EAAE,sBAAsB,CAAC;gBACzD,SAAS,EAAE;oBACT,YAAY;oBACZ,QAAQ;oBACR,WAAW;oBACX,UAAU;oBACV,aAAa;oBACb,wBAAwB;oBACxB,8BAA8B;oBAC9B,oBAAoB;iBACrB;aACF;;;AChCD;AACO,MAAM,cAAc,GAAG,EAAE,CAAC;AAEjC;AACO,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAEpC;AACO,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAEnC;AACO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AAEnC;AACO,MAAM,wBAAwB,GAAG,GAAG;;ACJ3C;;;;;;;;;;;;;MAcsB,oBAAoB;IAwHxC,YAAsB,YAA4B;QAA5B,iBAAY,GAAZ,YAAY,CAAgB;QAtH1C,YAAO,GAAW,gBAAgB,CAAC;QACnC,YAAO,GAAyB,EAAE,CAAC;KAqHW;;;;;;;;;;;;;;;;;IAjGtD,IAA4B,WAAW,CAAC,KAAa;QACnD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;;;IAaD,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;;IAYD,IAAuB,MAAM,CAAC,KAA2B;QACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;QACpE,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;;;;;IAmBD,IAAsB,KAAK,CAAC,UAAkB;QAC5C,IAAI,OAAO,UAAU,KAAK,QAAQ,KAAK,OAAO,UAAU,KAAK,QAAQ,IAAa,UAAW,CAAC,IAAI,EAAE,CAAC,EAAE;YACrG,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC;YAElE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SACzB;KACF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAIO,YAAY,CAAC,MAA4B;QAC/C,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAgB,MAAM,CAAC,CAAC;KAC3D;IAEO,cAAc,CAAC,MAAc;QACnC,MAAM,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;QAEzC,OAAO,WAAW,IAAI,WAAW,GAAG,gBAAgB,GAAG,WAAW,GAAG,gBAAgB,CAAC;KACvF;;;YAnIF,SAAS;;;YAjBD,cAAc;;;0BAyCpB,KAAK,SAAC,eAAe;qBAqBrB,KAAK,SAAC,UAAU;qBAmBhB,KAAK,SAAC,UAAU;oBAgBhB,KAAK,SAAC,SAAS;oBA2Bf,KAAK,SAAC,SAAS;;;ACxHlB;;;;;;;;;;;;;;;;;;MAsBa,gBAAiB,SAAQ,oBAAoB;IAUxD,YAAsB,YAA4B,EAAU,cAAiC;QAC3F,KAAK,CAAC,YAAY,CAAC,CAAC;QADA,iBAAY,GAAZ,YAAY,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QAFrF,aAAQ,GAAY,KAAK,CAAC;KAIjC;IAED,IAAY,aAAa;;QACvB,OAAO,CAAC,EAAC,MAAA,IAAI,CAAC,KAAK,0CAAE,aAAa,CAAC,WAAW,CAAA,CAAC;KAChD;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;KAC/B;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;IAES,gBAAgB;;QACxB,IAAI,MAAA,IAAI,CAAC,KAAK,0CAAE,aAAa,CAAC,WAAW,EAAE;YACzC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAEpC,MAAM,WAAW,GAAG,MAAA,MAAA,IAAI,CAAC,OAAO,CAAC,aAAa,0CAAE,YAAY,mCAAI,CAAC,CAAC;YAClE,MAAM,YAAY,GAAG,MAAA,MAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,0CAAE,YAAY,mCAAI,CAAC,CAAC;YACpE,MAAM,iBAAiB,GAAG,MAAA,MAAA,IAAI,CAAC,aAAa,CAAC,aAAa,0CAAE,YAAY,mCAAI,CAAC,CAAC;YAE9E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,YAAY,GAAG,iBAAiB,GAAG,cAAc,GAAG,CAAC,CAAC;YACjG,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;YAEnD,IAAI,CAAC,YAAY,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SACvC;KACF;;;YA9CF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,ikBAAwC;aACzC;;;YA1BQ,cAAc;YAJd,iBAAiB;;;4BAgCvB,SAAS,SAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;uBAC/C,SAAS,SAAC,UAAU,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;sBAC1C,SAAS,SAAC,SAAS,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;oBACzC,SAAS,SAAC,OAAO,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;MC7B7B,2BAA2B;IAatC,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;KACvC;IAED,mBAAmB;QACjB,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;;QAGxE,UAAU,CAAC;YACT,IAAI,CAAC,OAAO,GAAG,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SACzE,CAAC,CAAC;KACJ;;;YA5BF,SAAS,SAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,ugCAAoD;aACrD;;;0BAEE,KAAK,SAAC,eAAe;wBAErB,KAAK,SAAC,cAAc;+BAEpB,KAAK,SAAC,qBAAqB;oBAE3B,KAAK,SAAC,SAAS;8BAEf,SAAS,SAAC,iBAAiB;;;MCPjB,sBAAsB;IAWjC,iBAAgB;IARhB,IAAuB,MAAM,CAAC,KAA2B;QACvD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KAC5D;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAID,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAEO,WAAW,CAAC,MAA4B;QAC9C,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5C;;;YAvBF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,mqBAA+C;aAChD;;;;qBAIE,KAAK,SAAC,UAAU;;;MCHN,oBAAoB;IAK/B,iBAAgB;IAEhB,QAAQ,MAAW;IAEnB,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,2YAA4C;aAC7C;;;;8BAEE,KAAK,SAAC,oBAAoB;gCAE1B,KAAK,SAAC,sBAAsB;;;ACDxB,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;MAM7B,mBAAmB;IAJhC;QAWE,kBAAa,GAAY,KAAK,CAAC;KAkPhC;IA5OC,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;KAC/B;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,KAAK,MAAM,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;YAC7F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9D;KACF;IAEO,cAAc,CAAC,KAAa,EAAE,MAA4B,EAAE,SAA8B;QAChG,MAAM,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC;;QAG7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAEhC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAC9C,OAAO;SACR;QACD,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;KAClD;IAEO,kBAAkB,CAAC,MAAqC;QAC9D,MAAM,cAAc,GAAG,CAAC,CAAC;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAEzF,IAAI,CAAC,eAAe,GAAG,EAAE,WAAW,EAAE,CAAC;KACxC;IAEO,oBAAoB,CAAC,MAAc,EAAE,QAAgB,CAAC,EAAE,MAA4B;QAC1F,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QAErE,MAAM,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC;QACrD,MAAM,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC;QAErD,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;QAG9D,MAAM,iBAAiB,GAAG,MAAM;aAC7B,GAAG,CAAC,CAAC,KAAoB;;YACxB,MAAM,IAAI,GAAG,MAAA,KAAK,CAAC,IAAI,mCAAI,CAAC,CAAC;YAC7B,MAAM,EAAE,GAAG,MAAA,KAAK,CAAC,EAAE,mCAAI,QAAQ,CAAC;YAChC,MAAM,gBAAgB,GAAG,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACjG,MAAM,cAAc,GAAG,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAE7F,MAAM,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;YAExF,OAAO,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;SAC5C,CAAC;aACD,OAAO,EAAE,CAAC;QAEb,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;KACtC;IAEO,yBAAyB,CAAC,MAAqC,EAAE,KAAa;QACpF,MAAM,aAAa,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;QAEhD,MAAM,cAAc,GAAG,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,wBAAwB,CAAC,CAAC;QAE9G,MAAM,WAAW,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,iBAAiB,EAAE,cAAc,CAAC,GAAG,SAAS,CAAC;QACjH,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;KAC7C;IAEO,qBAAqB,CAAC,MAAc,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB;QAC7F,MAAM,WAAW,GAAG,IAAI,CAAC,kCAAkC,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;QACvF,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEvE,IAAI,CAAC,kBAAkB,mCAAQ,WAAW,KAAE,cAAc,GAAE,CAAC;KAC9D;IAEO,eAAe,CAAC,KAAa,EAAE,QAAgB,EAAE,QAAgB;QACvE,MAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;;QAEzE,MAAM,WAAW,GAAG,CAAC,CAAC;QACtB,MAAM,WAAW,GAAG,GAAG,CAAC;QAExB,OAAO,CAAC,OAAO,IAAI,WAAW,GAAG,WAAW,CAAC,IAAI,GAAG,GAAG,WAAW,CAAC;KACpE;IAEO,kCAAkC,CAAC,MAAc,EAAE,gBAAwB;QACjF,MAAM,MAAM,GAAG,MAAM,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,CAAC,CAAC;;QAGjE,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,MAAM,kBAAkB,GAAG,MAAM,GAAG,KAAK,CAAC;QAC1C,MAAM,yBAAyB,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEvD,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAC3C,MAAM,OAAO,GAAG,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC;QAE3C,MAAM,MAAM,GAAG,MAAM,CAAC;QACtB,MAAM,MAAM,GAAG,MAAM,GAAG,kBAAkB,CAAC;QAE3C,MAAM,IAAI,GAAG,MAAM,CAAC;QACpB,MAAM,IAAI,GAAG,MAAM,GAAG,kBAAkB,CAAC;QAEzC,MAAM,WAAW,GAAG;YAClB,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;YACH,OAAO;YACP,OAAO,GAAG,yBAAyB;YACnC,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,OAAO;YACP,OAAO,GAAG,yBAAyB;YACnC,GAAG;YACH,IAAI;YACJ,IAAI;YACJ,GAAG;SACJ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEZ,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;KAChC;IAEO,oBAAoB,CAC1B,MAAqC,EACrC,gBAAwB,EACxB,cAAsB;;QAGtB,MAAM,MAAM,GAAG,MAAM,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,CAAC,CAAC;QACjE,MAAM,WAAW,GAAG,MAAM,GAAG,gBAAgB,CAAC;QAE9C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAE5C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAEzC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;QAEtD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;QAEnD,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC;QAChE,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC;QAEhE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,WAAW,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,WAAW,CAAC,CAAC;QAE7D,OAAO;YACL,GAAG;YACH,MAAM;YACN,MAAM;YACN,GAAG;YACH,MAAM;YACN,MAAM;YACN,CAAC;YACD,KAAK;YACL,IAAI;YACJ,IAAI;YACJ,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,SAAS;YACT,SAAS;YACT,GAAG;YACH,WAAW;YACX,WAAW;YACX,CAAC;YACD,KAAK;YACL,WAAW;YACX,WAAW;YACX,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,MAAM;YACN,MAAM;YACN,GAAG;SACJ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACb;IAEO,oBAAoB,CAAC,KAAa,EAAE,QAAgB,EAAE,WAAmB,CAAC;QAChF,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,QAAQ,KAAK,QAAQ,GAAG,QAAQ,CAAC,KAAK,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAE3E,OAAO,KAAK,GAAG,CAAC,CAAC;KAClB;IAEO,wBAAwB,CAAC,KAAa,EAAE,QAAgB,EAAE,QAAQ;QACxE,OAAO,CAAC,CAAC,KAAK,GAAG,QAAQ,KAAK,QAAQ,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC;KAC3D;IAEO,UAAU,CAAC,MAAc;QAC/B,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QAE7C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,iBAAiB,IAAI,KAAK,IAAI,MAAM,EAAE,CAAC;KAC7D;IAEO,iBAAiB,CAAC,MAAc;QACtC,MAAM,MAAM,GAAG,MAAM,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,CAAC,CAAC;QAEjE,OAAO,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;KACtC;IAEO,wBAAwB,CAAC,MAA4B;QAC3D,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAE/C,OAAO;YACL,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC;YAC9D,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,GAAG;SACjE,CAAC;KACH;IAEO,sBAAsB,CAAC,MAAc;QAC3C,MAAM,WAAW,GAAG,OAAO,MAAM,KAAK,SAAS,CAAC;QAChD,MAAM,WAAW,GAAG,MAAM,KAAK,QAAQ,CAAC;QAExC,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC;QAC/E,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC;QAE7E,OAAO,CAAC,WAAW,IAAI,SAAS,MAAM,WAAW,IAAI,OAAO,CAAC,CAAC;KAC/D;IAEO,SAAS,CAAC,MAA4B,EAAE,IAAY;QAC1D,MAAM,SAAS,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;QAE7C,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACnE;;;YA5PF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,0fAA4C;aAC7C;;;wBAEE,KAAK,SAAC,aAAa;qBAEnB,KAAK,SAAC,UAAU;oBAEhB,KAAK,SAAC,SAAS;;;MCfL,qBAAqB;;;YAJjC,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,+EAA8C;aAC/C;;;oBAEE,KAAK,SAAC,SAAS;;;MCAL,uBAAuB;IAyBlC,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QAlB/B,kBAAa,GAAG,KAAK,CAAC;KAkBa;IAhB3C,IAA4B,WAAW,CAAC,KAAyB;;QAC/D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,MAAA,IAAI,CAAC,YAAY,0CAAE,MAAM,EAAE;YAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;SACpD;QAED,IAAI,CAAA,MAAA,IAAI,CAAC,YAAY,0CAAE,cAAc,CAAC,gBAAgB,CAAC,KAAI,IAAI,CAAC,aAAa,EAAE;YAC7E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SAC5D;KACF;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAID,eAAe;;QACb,IAAI,MAAA,IAAI,CAAC,YAAY,0CAAE,cAAc,EAAE;YACrC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SAC5D;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;IAEO,oBAAoB,CAAC,MAAM;QACjC,MAAM,KAAK,GAAG,MAAM,GAAG,EAAE,CAAC;QAC1B,MAAM,aAAa,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,aAAa,GAAG,KAAK,GAAG,aAAa,CAAC;KAClE;IAEO,oBAAoB,CAAC,OAAe;QAC1C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CACpB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B,iBAAiB,EACjB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAC5D,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,EAAE,UAAU,OAAO,MAAM,CAAC,CAAC;KAC1F;;;YArDF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,6WAA+C;aAChD;;;YANqD,SAAS;;;sBAQ5D,SAAS,SAAC,SAAS;0BAQnB,KAAK,SAAC,eAAe;;;ACHxB;;;;MAiBa,aAAa;;;YAbzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;gBACxC,YAAY,EAAE;oBACZ,gBAAgB;oBAChB,qBAAqB;oBACrB,sBAAsB;oBACtB,mBAAmB;oBACnB,oBAAoB;oBACpB,2BAA2B;oBAC3B,uBAAuB;iBACxB;gBACD,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;MCvBY,yBAAyB;IAKpC;QAJqB,aAAQ,GAAY,EAAE,CAAC;KAI5B;IAEhB,gBAAgB,CAAC,KAAK;;QAEpB,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;;;YAhBF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,yQAAmD;aACpD;;;;uBAEE,KAAK,SAAC,YAAY;oBAElB,KAAK,SAAC,SAAS;;;MCHL,mBAAmB;IA2C9B,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QA1CtC,UAAK,GAAY,MAAM,CAAC;QAEvB,WAAM,GAAa,KAAK,CAAC;QAEtB,aAAQ,GAAY,CAAC,CAAC,CAAC;QAExB,aAAQ,GAAY,EAAE,CAAC;QAEvB,aAAQ,GAAa,KAAK,CAAC;QAE3B,aAAQ,GAAa,KAAK,CAAC;QAEvB,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;QAK/D,WAAM,GAAQ,EAAE,CAAC;QACjB,SAAI,GAAY,KAAK,CAAC;QACtB,cAAS,GAAW,EAAE,CAAC;KAuBqC;IAnB5D,IAAsB,KAAK,CAAC,KAAsB;QAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;SACnB;KACF;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC;KAClD;IAED,IAAsB,KAAK,CAAC,KAAU;QACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAID,gBAAgB,CAAC,KAAU;;QAEzB,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC,OAAO,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,EAAE;YACnE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO;aACR;YAED,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,OAAO;SACR;;QAGD,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,OAAO;SACR;;QAGD,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,MAAM,KAAK,CAAC,OAAO,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC,EAAE;YAChG,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC5B;KACF;IAED,QAAQ,CAAC,KAAU;QACjB,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7B;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;IAED,cAAc,CAAC,KAAU;;QAEvB,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;YACxB,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC3C;;QAGD,IAAI,KAAK,CAAC,OAAO,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAC1C,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAEO,UAAU,CAAC,KAAU;QAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;;;YAlHF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,giCAA4C;aAC7C;;;YALiD,iBAAiB;;;oBAOhE,KAAK,SAAC,SAAS;qBAEf,KAAK,SAAC,UAAU;uBAEhB,KAAK,SAAC,aAAa;uBAEnB,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,YAAY;0BAElB,MAAM,SAAC,eAAe;2BAEtB,SAAS,SAAC,cAAc;6BACxB,SAAS,SAAC,gBAAgB;oBAQ1B,KAAK,SAAC,SAAS;oBAWf,KAAK,SAAC,SAAS;;;ACrClB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCa,eAAe;IAuD1B,YAAoB,iBAAoC,EAAU,KAAiB,EAAE,QAAmB;QAApF,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAY;;;;;;QA9C3D,eAAU,GAAqB,EAAE,CAAC;;;;QAKzC,SAAI,GAAe,EAAE,CAAC;QAEvC,aAAQ,GAAW,KAAK,CAAC;QACzB,YAAO,GAAW,CAAC,CAAC;QACpB,eAAU,GAAW,CAAC,CAAC;QACvB,iBAAY,GAAW,KAAK,CAAC;QAC7B,gBAAW,GAAW,CAAC,CAAC;QACxB,mBAAc,GAAW,CAAC,CAAC;QAG3B,WAAM,GAAG,KAAK,CAAC;QAEf,UAAK,GAAG,MAAM,CAAC;QACf,eAAU,GAAG,CAAC,CAAC;QACf,iBAAY,GAAG,CAAC,CAAC;QAKT,aAAQ,GAAG,EAAE,CAAC;QAuBpB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAU;YACnE,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACJ;;;;IAvBD,IAAwB,OAAO,CAAC,KAAiB;QAC/C,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;QAE3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM;YAC1B,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,QAAQ,CAAC;YAE/C,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,EAAE;gBAC1B,MAAM,CAAC,QAAQ,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC;aAC9C;iBAAM;gBACL,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,GAAG,GAAG,MAAM,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC;aAC/D;SACF,CAAC,CAAC;KACJ;IACD,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;KACzF;IAUD,WAAW;QACT,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,IAAI,aAAa;QACf,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;QAE7E,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAE5F,OAAO,aAAa,CAAC;KACtB;IAED,IAAI,aAAa;QACf,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;QAE9E,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAEvD,OAAO,cAAc,CAAC;KACvB;IAED,SAAS,CAAC,KAAU,EAAE,GAAQ;QAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;QAEhE,IAAI,CAAC,EAAE,EAAE;YACP,OAAO;SACR;QAED,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;gBAC/B,OAAO;aACR;YAED,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;SACvE;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;YACxD,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;SAC1E;KACF;IAED,SAAS,CAAC,KAAU,EAAE,GAAQ;QAC5B,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE;YACzF,OAAO,KAAK,CAAC;SACd;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAErC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAE3B,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAEvC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACxD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACxD;QAED,OAAO,IAAI,CAAC;KACb;IAED,YAAY,CAAC,KAAU,EAAE,SAAiB;QACxC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5C,GAAG,GAAG,CAAC,GAAG,CAAC;QACX,GAAG,GAAG,CAAC,GAAG,CAAC;QACX,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;QAChB,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;QAEhB,IAAI,SAAS,KAAK,MAAM,EAAE;YACxB,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC3B,IAAI,EAAE,CAAC;aACR;YAED,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC5B,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;oBACtC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;wBACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;4BACrB,OAAO;yBACR;qBACF;yBAAM;wBACL,OAAO;qBACR;iBACF;qBAAM;oBACL,IAAI,EAAE,CAAC;iBACR;aACF;SACF;aAAM,IAAI,SAAS,KAAK,IAAI,IAAI,GAAG,GAAG,CAAC,EAAE;YACxC,IAAI,EAAE,CAAC;SACR;aAAM,IAAI,SAAS,KAAK,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;YAC1C,IAAI,EAAE,CAAC;SACR;aAAM,IAAI,SAAS,KAAK,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAClE,IAAI,EAAE,CAAC;SACR;aAAM,IAAI,SAAS,KAAK,MAAM,EAAE;YAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAI,EAAE,CAAC;gBACP,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;iBAAM,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACjC,IAAI,GAAG,CAAC,CAAC;gBACT,IAAI,EAAE,CAAC;gBACP,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;SACF;aAAM,IAAI,SAAS,KAAK,OAAO,EAAE;YAChC,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,IAAI,EAAE,CAAC;gBACP,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;iBAAM,IAAI,GAAG,GAAG,CAAC,EAAE;gBAClB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;gBAChC,IAAI,EAAE,CAAC;gBACP,KAAK,CAAC,cAAc,EAAE,CAAC;aACxB;SACF;QAED,IAAI,IAAI,CAAC,YAAY,KAAK,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE;YAC3C,OAAO;SACR;QAED,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,EAAE;YACnE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACtB,OAAO;iBACR;aACF;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;oBAC/B,OAAO;iBACR;aACF;SACF;QAED,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAEtB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC7B;IAED,UAAU,CAAC,KAAU;QACnB,MAAM,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;QAEhE,IAAI,CAAC,EAAE,EAAE;YACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACvD,OAAO;SACR;QAED,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,OAAO;SACR;QAED,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC;QAClB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC;QAElB,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE;YAC7B,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBACtC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;wBACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;wBACvD,OAAO;qBACR;iBACF;qBAAM;oBACL,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;wBAC/B,OAAO;qBACR;iBACF;aACF;YAED,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;SAC3D;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;QAClC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC;QAEtC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;IAED,OAAO,CAAC,GAAW;QACjB,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE;YACxE,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE;YACpF,OAAO,KAAK,CAAC;SACd;QAED,MAAM,SAAS,GAAG,EAAE,CAAC;QAErB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM;YACzB,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;gBACrD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACjC;SACF,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC;KAC/B;IAED,SAAS;QACP,MAAM,GAAG,GAAG,EAAE,CAAC;QAEf,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YACtE,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAEvC,OAAO,IAAI,CAAC;KACb;IAED,UAAU,CAAC,GAAW;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,GAAG,EAAE;;YAER,OAAO,KAAK,CAAC;SACd;QAED,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEhE,OAAO,CAAC,MAAM,CAAC;KAChB;IAED,UAAU,CAAC,GAAW,EAAE,GAAW;QACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;QAEhF,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAC1B,QAAQ,CAAC,KAAK,EAAE,CAAC;SAClB;KACF;IAEO,cAAc;QACpB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,MAAM,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC;YACtE,IAAI,CAAC,KAAK,GAAG,GAAG,iBAAiB,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC;SACnF,EAAE,GAAG,CAAC,CAAC;KACT;IAEO,YAAY,CAAC,KAAK;;QAExB,OAAO,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC;KAC3C;;;YAjUF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,y4MAAuC;aACxC;;;YApCQ,iBAAiB;YAAa,UAAU;YAAoB,SAAS;;;2BAsC3E,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;2BACnC,SAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBAOrC,KAAK,SAAC,eAAe;mBAKrB,KAAK,SAAC,QAAQ;sBAwBd,KAAK,SAAC,WAAW;;;MCrEP,mBAAmB;IAJhC;QAKoB,UAAK,GAAY,MAAM,CAAC;QAEvB,YAAO,GAAa,KAAK,CAAC;QAExB,aAAQ,GAAY,EAAE,CAAC;QAEtB,aAAQ,GAAY,CAAC,CAAC,CAAC;KAY9C;IANC,IAAsB,KAAK,CAAC,KAAsB;QAChD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;IACD,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC;KAClD;;;YAtBF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,8MAA4C;aAC7C;;;oBAEE,KAAK,SAAC,SAAS;sBAEf,KAAK,SAAC,UAAU;uBAEhB,KAAK,SAAC,YAAY;uBAElB,KAAK,SAAC,aAAa;oBAEnB,KAAK,SAAC,SAAS;oBAIf,KAAK,SAAC,SAAS;;;ACRlB;;;;;MAUa,YAAY;;;YALxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,aAAa,CAAC;gBACnD,YAAY,EAAE,CAAC,yBAAyB,EAAE,mBAAmB,EAAE,eAAe,EAAE,mBAAmB,CAAC;gBACpG,OAAO,EAAE,CAAC,eAAe,CAAC;aAC3B;;;ACZM,MAAM,yBAAyB,GAAG;IACvC,EAAE,EAAsB;QACtB,WAAW,EAAE,cAAc;QAC3B,YAAY,EAAE,gBAAgB;QAC9B,MAAM,EAAE,eAAe;QACvB,SAAS,EAAE,YAAY;QACvB,WAAW,EAAE,cAAc;KAC5B;IACD,EAAE,EAAsB;QACtB,WAAW,EAAE,kBAAkB;QAC/B,YAAY,EAAE,uBAAuB;QACrC,MAAM,EAAE,sBAAsB;QAC9B,SAAS,EAAE,mBAAmB;QAC9B,WAAW,EAAE,kBAAkB;KAChC;IACD,EAAE,EAAsB;QACtB,WAAW,EAAE,kBAAkB;QAC/B,YAAY,EAAE,0BAA0B;QACxC,MAAM,EAAE,wBAAwB;QAChC,SAAS,EAAE,kBAAkB;QAC7B,WAAW,EAAE,iBAAiB;KAC/B;IACD,EAAE,EAAsB;QACtB,WAAW,EAAE,eAAe;QAC5B,YAAY,EAAE,8BAA8B;QAC5C,MAAM,EAAE,mBAAmB;QAC3B,SAAS,EAAE,aAAa;QACxB,WAAW,EAAE,mBAAmB;KACjC;CACF,CAAC;AAEF;;;;;;;;;;;MAYa,uBAAuB;IAgMlC,YAAY,eAAkC;;;;;;;;;;QAhLvB,aAAQ,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;;;QAWnD,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAGnF,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAY,KAAK,CAAC;QASpB,aAAQ,GAAW,eAAe,CAAC;QAyJzC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;IAjJD,IAAwB,OAAO,CAAC,KAA8B;QAC5D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACnD;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASD,IAAuB,MAAM,CAAC,MAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;KACvB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASD,IAAgC,aAAa,CAAC,aAAsB;QAClE,IAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;QACtD,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,cAAc,CAAC;KAC5B;;IAGD,IAAsB,KAAK,CAAC,KAAiB;QAC3C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACjD;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuCD,IAAyB,QAAQ,CAAC,KAAyB;QACzD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,yBAAyB,CAAC,eAAe,CAAC,GAC1C,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACxC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3D;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnE;;;;;;;;;;;;;;;;;;;IAoBD,IAAuB,MAAM,CAAC,MAAe;QAC3C,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASD,IAAmC,gBAAgB,CAAC,KAAc;QAChE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClD;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAMD,aAAa,CAAC,cAAgC,EAAE,IAAI;QAClD,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,cAAc,CAAC,MAAM,EAAE;YACzB,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAClC;KACF;IAED,UAAU;QACR,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACtB;IAED,cAAc,CAAC,QAAa;QAC1B,MAAM,wBAAwB,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;KACjD;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YAEjC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI;gBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;aACjC,CAAC,CAAC;SACJ;KACF;IAED,cAAc,CAAC,GAAQ;QACrB,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC;QAE/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3D;IAEO,mBAAmB,CAAC,IAAI;QAC9B,MAAM,QAAQ,GAAG,IAAI,qBAAQ,IAAI,IAAK,SAAS,CAAC;QAEhD,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;YAC1B,IAAI,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACvD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;aACtB;SACF;QAED,OAAO,QAAQ,CAAC;KACjB;IAEO,uBAAuB,CAAC,KAAiB;QAC/C,MAAM,0BAA0B,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;QACrF,MAAM,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAE5C,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;IAEO,cAAc;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC7F;;;YAlQF,SAAS;;;YA/CD,iBAAiB;;;2BAkDvB,KAAK,SAAC,iBAAiB;4BAGvB,KAAK,SAAC,kBAAkB;uBAWxB,MAAM,SAAC,aAAa;0BAWpB,MAAM,SAAC,gBAAgB;sBAsBvB,KAAK,SAAC,WAAW;qBAejB,KAAK,SAAC,UAAU;4BAehB,KAAK,SAAC,mBAAmB;oBAUzB,KAAK,SAAC,SAAS;uBA6Cf,KAAK,SAAC,YAAY;qBAkClB,KAAK,SAAC,UAAU;+BAgBhB,KAAK,SAAC,sBAAsB;;;ACzO/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqFa,kCAAkC;;IAa7C,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YAhBrD,SAAS,SAAC;gBACT,QAAQ,EAAE,gCAAgC;aAC3C;;;YAtF0B,WAAW;;;oBAiGnC,KAAK,SAAC,SAAS;;;AC/FlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgDa,iCAAiC;;IAa5C,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YAhBrD,SAAS,SAAC;gBACT,QAAQ,EAAE,+BAA+B;aAC1C;;;YAjDmB,WAAW;;;yBA4D5B,KAAK,SAAC,eAAe;;;ACxCxB;;;;;;;;;;;;;;;;;;;;;MAiCa,mBAAoB,SAAQ,uBAAuB;IAU9D,YAAoB,cAAiC,EAAE,OAAwB,EAAE,eAAkC;QACjH,KAAK,CAAC,eAAe,CAAC,CAAC;QADL,mBAAc,GAAd,cAAc,CAAmB;QAEnD,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC7C;IAED,IAAI,kBAAkB;QACpB,OAAO,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC;KACvC;IAED,IAAI,iBAAiB;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC;KACtC;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAClF;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,CAAC;KACjG;IAED,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9D;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;KAC9C;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;KAChF;IAED,kBAAkB;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,SAAS;QACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,cAAc,CAAC,IAAS;QACtB,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAChD,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,cAAc,GAAG,cAAc,CAAC;SACrF;QAED,OAAO,QAAQ,CAAC;KACjB;IAED,YAAY,CAAC,IAAI;QACf,OAAO,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK;cAChE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,IAAI,CAAC;cACxC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC9B;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;KAC5C;IAED,kBAAkB,CAAC,cAAgC,EAAE,IAAS;QAC5D,OAAO,QAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC;cAC1C,cAAe,CAAC,QAAQ,CAAC,IAAI,CAAC;cACpC,cAAc,CAAC,QAAQ,CAAC;KAC7B;IAED,OAAO,CAAC,KAAK;QACX,OAAO,KAAK,CAAC;KACd;IAED,WAAW,CAAC,IAAI,EAAE,SAAsB;QACtC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACpC;IAEO,gBAAgB;QACtB,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElD,IAAI,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;YAClC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;QAED,IAAI,YAAY,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACzF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;KACF;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE;YAC3G,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/F;KACF;;;YAlHF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,gtKAA4C;gBAC5C,UAAU,EAAE;oBACV,OAAO,CAAC,gBAAgB,EAAE;wBACxB,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,CAAC;wBAC9C,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,CAAC;wBAChD,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBAC7G,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;qBACxF,CAAC;iBACH;aACF;;;YAjDC,iBAAiB;YAIjB,eAAe;YAKR,iBAAiB;;;sCA0CvB,YAAY,SAAC,kCAAkC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;qCAEjE,YAAY,SAAC,iCAAiC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;+BAGhE,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;AChDtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAsCa,gBAAgB;;;YAP5B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,cAAc,EAAE,aAAa,CAAC;gBACpE,YAAY,EAAE,CAAC,mBAAmB,EAAE,kCAAkC,EAAE,iCAAiC,CAAC;gBAC1G,OAAO,EAAE,CAAC,mBAAmB,EAAE,kCAAkC,EAAE,iCAAiC,CAAC;gBACrG,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;AC5CD,MAAM,eAAe,GAAG;IACtB,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;IACV,UAAU;CACX,CAAC;AACF,MAAM,sBAAsB,GAAG,UAAU,CAAC;AAE1C;;;;;;;MAQa,oBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAuC/B,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,sBAAsB,CAAC;KAChF;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;IAOD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAEO,aAAa,CAAC,KAAa;QACjC,MAAM,eAAe,GAAG,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC;QAC5E,IAAI,CAAC,UAAU,GAAG,eAAe,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;KACvF;;;YAjEF,SAAS;;;oBAwCP,KAAK,SAAC,SAAS;oBAaf,KAAK,SAAC,SAAS;;;AC5ElB;;;;;MASa,gBAAiB,SAAQ,oBAAoB;;;YAJzD,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,6HAAwC;aACzC;;;ACPD;;;;;MAUa,aAAa;;;YALzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE,CAAC,gBAAgB,CAAC;gBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;ACLD;;;;;;;;MASa,aAAa;IAOxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;KAAI;IAJxC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IAID,gBAAgB,CAAC,GAAW;QAC1B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;KACjB;IAED,eAAe,CAAC,MAAc,EAAE,MAAY;QAC1C,MAAM,YAAY,mBAChB,MAAM,IACH,MAAM,CACV,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC;aACvC,IAAI,CAAC,GAAG,CAAC,CAAC,QAA8C,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;KAC9F;;;YAvBF,UAAU;;;YAjBF,UAAU;;;MCUN,mBAAmB;IAHhC;QAIU,oBAAe,GAAG,IAAI,OAAO,EAAmB,CAAC;QACjD,UAAK,GAAG,IAAI,OAAO,EAAqB,CAAC;QACzC,2BAAsB,GAAG,IAAI,OAAO,EAAU,CAAC;;QAGvD,4BAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;;QAG9D,kBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;;QAG1C,mCAA8B,GAAG,IAAI,CAAC,sBAAsB,CAAC,YAAY,EAAE,CAAC;KAa7E;IAXC,mBAAmB,CAAC,IAAqB;QACvC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;IAED,SAAS,CAAC,KAAwB;QAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxB;IAED,0BAA0B,CAAC,EAAU;QACnC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtC;;;;YA3BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;ACUM,MAAM,qBAAqB,GAAG;IACnC,EAAE,EAAE,EAAE,YAAY,EAAE,iBAAiB,EAAE,eAAe,EAAE,8CAA8C,EAAE;IACxG,EAAE,EAAE,EAAE,YAAY,EAAE,yBAAyB,EAAE,eAAe,EAAE,kDAAkD,EAAE;IACpH,EAAE,EAAE,EAAE,YAAY,EAAE,sBAAsB,EAAE,eAAe,EAAE,iDAAiD,EAAE;IAChH,EAAE,EAAE,EAAE,YAAY,EAAE,oBAAoB,EAAE,eAAe,EAAE,gDAAgD,EAAE;CAC9G,CAAC;AAEF;;;;;;;;MASsB,mBAAmB;IAsMvC,YACS,iBAAsC,EACtC,WAA0B,EAC1B,eAAkC;QAFlC,sBAAiB,GAAjB,iBAAiB,CAAqB;QACtC,gBAAW,GAAX,WAAW,CAAe;QAC1B,oBAAe,GAAf,eAAe,CAAmB;QAlMlC,aAAQ,mCACZ,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,GAChE,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,EACjE;QAEM,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;QAGhB,cAAS,GAAG,CAAC,CAAC;QACd,WAAM,GAAG,EAAE,CAAC;KAyLhB;;;;;;;;;;;;;;;;;;;IAlKJ,IAA0B,SAAS,CAAC,SAAkB;QACpD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;QAE9C,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;IAGD,IAAsB,KAAK,CAAC,KAAwB;QAClD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QAEhD,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAExC,UAAU,CAAC;YACT,MAAM,SAAS,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;YACzD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;SACtC,CAAC,CAAC;KACJ;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;;;IAeD,IAAuB,MAAM,CAAC,MAAe;QAC3C,IAAI,CAAC,OAAO,GAAQ,MAAM,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACpE,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;KACvC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BD,IAAwB,OAAO,CAAC,KAA4B;QAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,SAAS,CAAC;QAEnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAClC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;;;;;;IAsBD,IAAuB,MAAM,CAAC,KAAU;QACtC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;KACvE;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;;;;IAcD,IAAqB,IAAI,CAAC,KAAU;QAClC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;KAC5E;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;;;;;IAgBD,IAA2B,SAAS,CAAC,KAAU;QAC7C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,SAAS,CAAC;KACjF;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAQS,sBAAsB;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAE7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;YACzB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YACtE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;YAC7G,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAChC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAErC,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACrB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAChC;SACF,CAAC,CAAC;KACJ;IAES,qBAAqB,CAAC,QAAoB;QAClD,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;QAC1C,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC/C;IAES,aAAa,CAAC,KAAK;QAC3B,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;IAES,WAAW,CAAC,QAAoB;QACxC,IAAI,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;YACpF,OAAO,UAAU,CAAC;SACnB;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAClB,OAAO,QAAQ,CAAC;SACjB;QACD,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACjC,OAAO,cAAc,CAAC;SACvB;QACD,OAAO,cAAc,CAAC;KACvB;IAEO,aAAa,CAAC,OAA8B;QAClD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE;;YAEjD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;SACvC;aAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,CAAC,eAAe,EAAE;;YAEjE,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAChC;KACF;IAEO,eAAe,CAAC,IAAI;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS;YAC/C,MAAM,YAAY,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC1C,IAAI,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE;gBACzC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;aACrC;YAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAChC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBAErC,IAAI,QAAQ,CAAC,QAAQ,EAAE;oBACrB,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBAChC;aACF;YAED,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;gBACvB,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAC/C;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAClD;IAEO,gBAAgB,CAAC,QAAoB;QAC3C,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;YAC1B,OAAO,QAAQ,CAAC,YAAY,CAAC,CAAC;SAC/B;QAED,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;SACtE;KACF;IAEO,iBAAiB,CAAC,MAAkB,EAAE,KAAiB;QAC7D,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;QACjE,MAAM,kBAAkB,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAE1E,MAAM,CAAC,YAAY,CAAC,GAAG,kBAAkB,KAAK,aAAa,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAElF,OAAO,MAAM,CAAC;KACf;IAEO,YAAY,CAAC,QAAoB;QACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YACnD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;SAChD;aAAM,IAAI,QAAQ,CAAC,QAAQ,EAAE;YAC5B,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO;gBAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;aAC5B,CAAC,CAAC;SACJ;KACF;;;YAvTF,SAAS;;;YAnBD,mBAAmB;YADnB,aAAa;YAEb,iBAAiB;;;wBA2DvB,KAAK,SAAC,aAAa;oBAWnB,KAAK,SAAC,SAAS;qBAgCf,KAAK,SAAC,UAAU;sBAmChB,KAAK,SAAC,WAAW;qBA8BjB,KAAK,SAAC,UAAU;mBAoBhB,KAAK,SAAC,QAAQ;wBAsBd,KAAK,SAAC,cAAc;;;AC/NvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAsCa,6BAA6B;;IAExC,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YALrD,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;aACrC;;;YAvCmB,WAAW;;;ACI/B;;;;;;;MAQa,kBAAkB;IAD/B;QAEU,kBAAa,GAAG,IAAI,OAAO,EAAO,CAAC;QACnC,iBAAY,GAAG,IAAI,OAAO,EAAO,CAAC;KAqB3C;;IAlBC,uBAAuB,CAAC,IAAY;QAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;IAGD,2BAA2B;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;;IAGD,sBAAsB,CAAC,IAAY;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;;IAGD,4BAA4B;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;;;YAvBF,UAAU;;;ACiBX,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAC/B,MAAM,eAAe,GAAG,CAAC,CAAC;AAC1B,MAAM,eAAe,GAAG,CAAC,CAAC;AAE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAuFa,eAAgB,SAAQ,mBAAmB;IAqBtD,YACS,cAAiC,EAChC,OAAmB,EACnB,QAAmB,EACnB,MAAc,EACd,gBAAoC,EAC5C,iBAAsC,EACtC,WAA0B,EAC1B,eAAkC;QAElC,KAAK,CAAC,iBAAiB,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAThD,mBAAc,GAAd,cAAc,CAAmB;QAChC,YAAO,GAAP,OAAO,CAAY;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAoB;QArB9C,kBAAa,GAAG,KAAK,CAAC;QAEtB,OAAE,GAAG,IAAI,EAAE,CAAC;QAEZ,iBAAY,GAAY,KAAK,CAAC;QAC9B,WAAM,GAAY,KAAK,CAAC;QAGhB,mBAAc,GAAY,KAAK,CAAC;QAChC,oBAAe,GAAY,KAAK,CAAC;QACjC,iBAAY,GAAG,IAAI,CAAC;KAiB3B;IAED,IAAY,uBAAuB;QACjC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;KACrE;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC;KAClD;IAED,IAAI,oBAAoB;QACtB,OAAO,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;KACxE;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,cAAc,CAAC;KACzD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,CAAC;KACjD;IAED,SAAS;QACP,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,EAAE;YACtC,OAAO;SACR;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,YAAY,KAAK,WAAW,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC9D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;KACF;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5D;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;KAClD;IAED,iBAAiB,CAAC,OAAe,EAAE,KAAwB;QACzD,IAAI,KAAK,EAAE;YACT,MAAM,0BAA0B,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/E,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI;gBACpB,MAAM,iBAAiB,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtD,MAAM,YAAY,GAAG,GAAG,0BAA0B,GAAG,iBAAiB,CAAC,MAAM,CAC3E,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CACnC,EAAE,CAAC;gBAEJ,IAAI,YAAY,KAAK,OAAO,IAAI,YAAY,KAAK,iBAAiB,EAAE;oBAClE,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;oBACpC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACvD;aACF,CAAC,CAAC;SACJ;KACF;IAED,oBAAoB,CAAC,OAAe;QAClC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;YACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7C;KACF;;;;;;IAOD,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;KAC/B;IAED,cAAc,CAAC,MAAc;QAC3B,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC5B,EAAE,kBAAkB,CAAC,CAAC;KACxB;;;;;;IAOD,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAChC;IAED,mBAAmB;QACjB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE,CAAC,SAAS,CAAC,CAAC,IAAgB;YACrG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B,CAAC,CAAC;KACJ;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG;YACvD,IAAI,GAAG,YAAY,aAAa,IAAI,GAAG,YAAY,gBAAgB,EAAE;gBACnE,MAAM,SAAS,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;gBACzD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;aACtC;SACF,CAAC,CAAC;KACJ;;;;;;;;IASD,MAAM;QACJ,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1C;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC;QAE3D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEjD,IAAI,QAAQ,EAAE,EAAE;YACd,OAAO;SACR;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;KACF;IAES,+BAA+B;QACvC,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEvF,OAAO,eAAe,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;KAC3F;IAES,qBAAqB,CAAC,kBAA2B,KAAK;QAC9D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe,GAAG,UAAU,GAAG,aAAa,CAAC,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;KAChH;IAEO,2BAA2B;QACjC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,eAAe,IAAI,IAAI,CAAC,uBAAuB,EAAE;YACrG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC1C;KACF;IAEO,gBAAgB,CAAC,IAAgB;QACvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,eAAe,EAAE;YAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;QACD,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC;YAC3C,MAAM,EAAE,IAAI,CAAC,cAAc;YAC3B,OAAO,EAAE,IAAI,CAAC,eAAe;YAC7B,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC;KACJ;IAEO,WAAW,CAAC,KAAwB;QAC1C,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,CAAC;KAC7D;IAEO,0BAA0B,CAAC,cAA0B;QAC3D,IAAI,cAAc,CAAC,OAAO,CAAC,KAAK,eAAe,EAAE;YAC/C,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;SAClC;KACF;IAEO,aAAa,CAAC,IAAgB;QACpC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,cAAc,EAAE;YACnC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,cAAc,EAAE;YAC1C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;YACtC,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;YAED,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE;YAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;KACF;IAEO,yBAAyB,CAAC,WAAgB,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;QACvE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,QAAQ,CAAC;QAEjC,MAAM,gBAAgB,GAAuB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAE7D,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;QAE7C,OAAO,gBAAgB,CAAC;KACzB;IAEO,oBAAoB;QAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACJ;IAEO,iBAAiB,CAAC,IAAgB;QACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACnB;IAEa,WAAW,CAAC,MAAc;;YACtC,MAAM,UAAU,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;YAE3C,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;sBACnC,MAAM,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;sBACtC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;SACF;KAAA;IAEO,gBAAgB,CAAC,MAAc;QACrC,MAAM,aAAa,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAE,EAAE,aAAa,CAAC,CAAC;QAEhE,OAAO,aAAa,CAAC;KACtB;IAEO,aAAa,CAAC,MAAc;QAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;aACrB,IAAI,CAAC;YACJ,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAE3B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SAC9G,CAAC;aACD,KAAK,CAAC,KAAK;YACV,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACvB,CAAC,CAAC;KACN;IAEa,eAAe,CAAC,SAAiB,EAAE;;YAC/C,IAAI,MAAM,CAAC,MAAM,IAAI,eAAe,EAAE;gBACpC,OAAO,MAAM,IAAI,CAAC,aAAa;qBAC5B,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC;qBACpC,IAAI,CAAC,GAAG,CAAC,iBAAiB,IAAI,iBAAiB,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;qBAC3G,SAAS,EAAE,CAAC;aAChB;iBAAM;gBACL,OAAO,IAAI,CAAC,aAAa,CAAC;aAC3B;SACF;KAAA;IAEO,SAAS,CAAC,KAAwB,EAAE,MAAc,EAAE,aAAyB;QACnF,KAAK,CAAC,OAAO,CAAC,IAAI;;YAChB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;YAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAEjE,IAAI,cAAc,IAAI,SAAS,EAAE;gBAC/B,MAAM,OAAO,qBAAQ,IAAI,CAAE,CAAC;gBAE5B,IAAI,MAAA,OAAO,CAAC,QAAQ,0CAAE,MAAM,EAAE;oBAC5B,OAAO,OAAO,CAAC,QAAQ,CAAC;oBACxB,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;iBAC7C;gBAED,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;aACtD;SACF,CAAC,CAAC;KACJ;IAEO,UAAU,CAAC,KAAwB,EAAE,QAAoB;QAC/D,MAAM,SAAS,GAAG,UAAU,SAA4B,EAAE,EAAE;YAC1D,IAAI,SAAS,EAAE;gBACb,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;oBACrD,MAAM,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;oBAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;wBACxE,OAAO,IAAI,CAAC;qBACb;oBACD,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;oBAC3C,IAAI,KAAK,EAAE;wBACT,OAAO,KAAK,CAAC;qBACd;iBACF;aACF;SACF,CAAC;QACF,OAAO,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;KACzC;IAEO,cAAc,CAAC,KAAwB,EAAE,IAAgB;QAC/D,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEnC,MAAM,aAAa,GAAG,UAAU,SAA4B,EAAE,QAAQ;YACpE,IAAI,MAAM,GAAG,UAAU,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAE7C,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,eAAe,EAAE;gBACvC,MAAM,GAAG,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;aAC3C;YACD,OAAO,MAAM,CAAC;SACf,CAAC;QACF,OAAO,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KACnC;IAEO,mBAAmB,CAAC,KAAwB,EAAE,cAA0B,EAAE,eAA2B;QAC3G,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,cAAc,CAAC,CAAC,EAAE;YACvD,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;SACnD;KACF;IAEO,aAAa,CAAC,IAAgB;QACpC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IACE,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,UAAU,CAAC;YAChB,IAAI,CAAC,uBAAuB;YAC5B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,EACtE;YACA,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC5C;QAED,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KAC9G;IAEO,0BAA0B,CAChC,KAAwB,EACxB,cAA0B,EAC1B,eAA2B;QAE3B,MAAM,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QACxE,OAAO,oBAAoB,CAAC,IAAI,CAAC,KAAK,eAAe,CAAC,IAAI,CAAC,CAAC;KAC7D;IAEO,cAAc,CAAC,SAAqB;QAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACtD,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;KAC/B;IAEO,UAAU;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC;KAC/C;IAEO,SAAS,CAAC,KAAwB;;QAExC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,KAAK;YAC3C,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,OAAO,KAAK,CAAC;aACd;SACF,CAAC,CAAC;KACJ;IAEO,qBAAqB;QAC3B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,CAAC;KAC9E;IAEO,kBAAkB,CAAC,YAAqB,KAAK;QACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,cAAc,EAAE;YAC/C,IAAI,CAAC,eAAe;gBAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC;YAC1G,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACnC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC;gBAC3C,MAAM,EAAE,IAAI,CAAC,cAAc;gBAC3B,OAAO,EAAE,IAAI,CAAC,eAAe;gBAC7B,gBAAgB,EAAE,IAAI;aACvB,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD;KACF;IAEO,kBAAkB,CAAC,SAAkB;QAC3C,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;YAC3B,OAAO;SACR;QAED,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;KACpC;IAEO,UAAU;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;YA9dF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,86FAAuC;gBACvC,SAAS,EAAE,CAAC,kBAAkB,EAAE,aAAa,CAAC;aAC/C;;;YApHC,iBAAiB;YAIjB,UAAU;YAGV,SAAS;YAG+B,MAAM;YAWvC,kBAAkB;YAClB,mBAAmB;YACnB,aAAa;YACb,iBAAiB;;;iCA8FvB,YAAY,SAAC,6BAA6B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACpHxD,MAAM,2BAA2B,GAAG;IACzC,EAAE,EAAwB,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9C,EAAE,EAAwB,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC9C,EAAE,EAAwB,EAAE,MAAM,EAAE,WAAW,EAAE;IACjD,EAAE,EAAwB,EAAE,MAAM,EAAE,OAAO,EAAE;CAC9C,CAAC;AAEF;;;;;;;MAWa,qBAAqB;IAahC,YAAmB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAPjC,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAEzC,aAAQ,mCACV,2BAA2B,CAAC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,GACtE,2BAA2B,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,EACvE;KAEuD;IACzD,WAAW,CAAC,MAAc;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;;;YApBF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,2pBAA8C;aAC/C;;;YApBQ,iBAAiB;;;sBAsBvB,KAAK,SAAC,WAAW;iCAGjB,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;qBAE3D,MAAM,SAAC,UAAU;;;ACnBpB;AACA,MAAM,qBAAqB,GAAG,EAAE,CAAC;AAEjC;;;;;;;MAWa,mBAAmB;IA4F9B,YAAoB,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;QApDxD,cAAS,GAAW,CAAC,CAAC;QAId,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;KA+CwB;;IA3C5D,IAA4B,UAAU,CAAC,UAAkB;QACvD,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;KAC7C;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;IAGD,IAA4B,UAAU,CAAC,KAAc;QACnD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC;KAC5D;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;IAGD,IAA4B,SAAS,CAAC,KAAc;QAClD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC3C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;IAGD,IAA0B,QAAQ,CAAC,QAA2B;QAC5D,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,yBAAyB,EAAE,CAAC;SAClC;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,KAAK,UAAU,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,CAAC;KACvG;IAID,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;IAED,QAAQ;;QAEN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,IAAI;YACzF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;KACJ;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;YACrC,KAAK,CAAC,cAAc,EAAE,CAAC;;YAGvB,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC;gBAC5C,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAC;SACJ;KACF;IAEO,kBAAkB,CACxB,UAAsB,EACtB,UAAsB,EACtB,gBAAyB,EACzB,gBAAyB;QAEzB,IAAI,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,qBAAqB,CAAC;SAC/D;QAED,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC;kBACnC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,GAAG,qBAAqB;kBACnE,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,GAAG,qBAAqB,CAAC;YAExE,IAAI,gBAAgB,EAAE;gBACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;aAC7D;SACF;KACF;IAEO,YAAY,CAAC,IAAS;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;KAC/C;IAEO,yBAAyB;QAC/B,UAAU,CAAC;YACT,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC;YAC/F,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAa,MAAM,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;SAChF,CAAC,CAAC;KACJ;IAEO,gBAAgB,CAAC,aAAqB,EAAE,QAAoB,EAAE,UAAsB;QAC1F,aAAa,IAAI,qBAAqB,CAAC;QAEvC,IAAI,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;YAC7E,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;gBAC7D,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;aAC5F;SACF;QAED,OAAO,aAAa,CAAC;KACtB;IAEO,WAAW,CAAC,UAAsB,EAAE,UAAsB,EAAE,mBAA4B,KAAK;QACnG,MAAM,gBAAgB,GACpB,UAAU,IAAI,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;QAExG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,gBAAgB,CAAC,CAAC;QAEhE,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;QAE1G,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACnB,OAAO;SACR;QACD,IAAI,CAAC,kBAAkB,CAAC,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;KACrF;IAEO,UAAU,CAAC,QAA2B,EAAE,EAAU;QACxD,IAAI,QAAQ,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/F;KACF;IAEO,YAAY,CAAC,UAAsB,EAAE,gBAAyB;QACpE,IAAI,UAAU,EAAE;YACd,OAAO,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC;SACjF;QAED,OAAO,KAAK,CAAC;KACd;IAEO,eAAe,CAAC,IAAI;QAC1B,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC/B,OAAO;SACR;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACpE;KACF;;;YApNF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,8lGAA4C;aAC7C;;;YAfQ,kBAAkB;;;qBAkBxB,KAAK,SAAC,UAAU;yBAGhB,KAAK,SAAC,eAAe;yBAGrB,KAAK,SAAC,eAAe;4BAGrB,KAAK,SAAC,kBAAkB;mBAGxB,KAAK,SAAC,QAAQ;iBAGd,KAAK,SAAC,MAAM;uBAGZ,KAAK,SAAC,aAAa;oBAGnB,KAAK,SAAC,SAAS;oBAGf,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;yBAGd,KAAK,SAAC,eAAe;mBAGrB,KAAK,SAAC,QAAQ;2BAEd,SAAS,SAAC,cAAc;yBAYxB,KAAK,SAAC,eAAe;yBASrB,KAAK,SAAC,eAAe;wBAUrB,KAAK,SAAC,eAAe;uBASrB,KAAK,SAAC,aAAa;;;ACtFtB;;;;;MAUa,YAAY;;;YALxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC;gBAClG,YAAY,EAAE,CAAC,eAAe,EAAE,qBAAqB,EAAE,6BAA6B,EAAE,mBAAmB,CAAC;gBAC1G,OAAO,EAAE,CAAC,eAAe,EAAE,6BAA6B,CAAC;aAC1D;;;AChBD,MAAM,aAAa,GAAG,+CAA+C,CAAC;AAEtE;;;;;;;;;MAUa,wBAAwB;IADrC;QAGU,UAAK,GAAW,aAAa,CAAC;KAiEvC;;IA9DC,IAAsB,KAAK,CAAC,KAA6B;QACvD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QAEhD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;IAWD,IAAqB,IAAI,CAAC,GAAW;QACnC,IAAI,CAAC,KAAK,GAAG,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,aAAa,CAAC;KACnC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEO,sBAAsB,CAAC,KAA6B;QAC1D,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,qBAAqB,CAA0B,QAAQ,CAAC,CAAC,CAAC;KAC1F;IAEO,qBAAqB,CAAC,QAAiC;QAC7D,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5C;IAEO,WAAW,CAAC,QAAyB;QAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAClB,OAAO,QAAQ,CAAC;SACjB;QAED,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACjC,OAAO,cAAc,CAAC;SACvB;QAED,OAAO,cAAc,CAAC;KACvB;IAEO,YAAY,CAAC,QAAyB;QAC5C,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACnB,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SACxE;KACF;IAEO,aAAa,CAAC,KAAK;QACzB,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;;;YAnEF,SAAS;;;oBAMP,KAAK,SAAC,SAAS;mBAoBf,KAAK,SAAC,QAAQ;;;ACxCjB;;;;;;;MAQa,uBAAuB;IADpC;QAEU,iBAAY,GAAG,IAAI,OAAO,EAAO,CAAC;QAClC,kBAAa,GAAG,IAAI,OAAO,EAAO,CAAC;KAqB5C;;IAlBC,2BAA2B;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;;IAGD,4BAA4B;QAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;;IAGD,uBAAuB,CAAC,IAAY;QAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9B;;IAGD,sBAAsB,CAAC,IAAY;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;;;YAvBF,UAAU;;;ACEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwEa,oBAAqB,SAAQ,wBAAwB;IAOhE,YACE,OAAyB,EACjB,QAAkB,EAClB,gBAAyC,EACzC,MAAc;QAEtB,KAAK,EAAE,CAAC;QAJA,aAAQ,GAAR,QAAQ,CAAU;QAClB,qBAAgB,GAAhB,gBAAgB,CAAyB;QACzC,WAAM,GAAN,MAAM,CAAQ;KAGvB;IAED,WAAW;QACT,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;QACpC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;KACtC;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,iBAAiB,CAAC,OAAe,EAAE,KAA6B;QACtE,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI;gBACpB,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;oBAC3C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;oBAC5B,OAAO,IAAI,CAAC;iBACb;aACF,CAAC,CAAC;SACJ;KACF;IAEO,gBAAgB,CAAC,IAAqB;QAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,CAAC;KACvG;IAEO,oBAAoB,CAAC,OAAe;QAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;YACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7C;KACF;IAEO,aAAa,CAAC,IAA6B;QACjD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACnB;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;YAChC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;YACvC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC7B;KACF;IAEO,gBAAgB;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY;YAChE,IAAI,YAAY,YAAY,aAAa,EAAE;gBACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;aACjD;SACF,CAAC,CAAC;KACJ;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB;aAC1C,2BAA2B,EAAE;aAC7B,SAAS,CAAC,CAAC,IAA6B,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3E;;;YA7EF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,2mBAA6C;aAC9C;;;YApFsC,gBAAgB;YAC9C,QAAQ;YAUR,uBAAuB;YATR,MAAM;;;ACK9B;;;;;;;MAWa,wBAAwB;IAKnC,YAAoB,gBAAyC;QAAzC,qBAAgB,GAAhB,gBAAgB,CAAyB;KAAI;IAEjE,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;KACtC;IAED,QAAQ;;QAEN,IAAI,CAAC,8BAA8B,EAAE,CAAC;KACvC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,EAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;YACrC,KAAK,CAAC,cAAc,EAAE,CAAC;;YAGvB,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;SACtE;KACF;IAEO,YAAY,CAAC,IAA6B;QAChD,IAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;KACzE;IAEO,eAAe,CAAC,IAAI;QAC1B,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,KAAK,cAAc,EAAE;YACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAChC;KACF;IAEO,8BAA8B;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,EAAE,CAAC,SAAS,CAAC,IAAI;YAC1F,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAC5B,CAAC,CAAC;KACJ;;;YA3CF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,i/BAAkD;aACnD;;;YAZQ,uBAAuB;;;+BAc7B,KAAK,SAAC,sBAAsB;;;ACT/B;;;;;MAWa,iBAAiB;;;YAN7B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAC;gBACrE,YAAY,EAAE,CAAC,oBAAoB,EAAE,wBAAwB,CAAC;gBAC9D,OAAO,EAAE,CAAC,oBAAoB,CAAC;gBAC/B,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;MCXY,uBAAuB;IAWlC,YAAY,gBAAkC,EAAU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;KAAI;IAE1E,KAAK;QACH,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO;SACR;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;KACF;IAEO,OAAO,CAAC,GAAW;QACzB,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,gBAAgB,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,IAAI,GAAG,EAAE;YACP,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACpC;KACF;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,6LAAgD;aACjD;;;YARuC,gBAAgB;YAC/C,MAAM;;;qBASZ,KAAK,SAAC,UAAU;mBAEhB,KAAK,SAAC,QAAQ;oBAEd,KAAK,SAAC,SAAS;mBAEf,KAAK,SAAC,QAAQ;sBAEd,KAAK,SAAC,gBAAgB;;;MCVZ,4BAA4B;IAGvC,iBAAiB;QACf,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;YAC/C,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;SAC3D;KACF;;;YAXF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,6RAAsD;aACvD;;;0BAEE,KAAK,SAAC,gBAAgB;;;MCDZ,wBAAwB;IAGnC,IAA6B,WAAW,CAAC,OAAkC;QACzE,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,qCAAU,MAAM,KAAE,SAAS,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,IAAG,CAAC,CAAC;KAC/F;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;YAbF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,kcAAiD;aAClD;;;0BAIE,KAAK,SAAC,gBAAgB;;;MCIZ,qBAAqB;;;YALjC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC;gBACrE,YAAY,EAAE,CAAC,uBAAuB,EAAE,4BAA4B,EAAE,wBAAwB,CAAC;gBAC/F,OAAO,EAAE,CAAC,wBAAwB,CAAC;aACpC;;;ACHM,MAAM,uBAAuB,GAAG;IACrC,EAAE,EAAoB;QACpB,WAAW,EAAE,cAAc;KAC5B;IACD,EAAE,EAAoB;QACpB,WAAW,EAAE,cAAc;KAC5B;IACD,EAAE,EAAoB;QACpB,WAAW,EAAE,cAAc;KAC5B;IACD,EAAE,EAAoB;QACpB,WAAW,EAAE,cAAc;KAC5B;CACF,CAAC;AAEF;;;;;;;;;;;MAYsB,qBAAqB;IAoJzC,YAAY,eAAkC;QAlHtC,iBAAY,GAA8B,EAAE,CAAC;QAC7C,WAAM,GAAwB,EAAE,CAAC;QAIjC,YAAO,GAAY,KAAK,CAAC;QACzB,aAAQ,GAAW,eAAe,CAAC;QA6GzC,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;IArGD,IAA6B,WAAW,CAAC,KAAgC;QACvE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACvD;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;IASD,IAAsB,KAAK,CAAC,KAA0B;QACpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;KACjD;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4BD,IAAyB,QAAQ,CAAC,KAAuB;QACvD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,uBAAuB,CAAC,eAAe,CAAC,GACxC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACtC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzD;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACjE;;;;;;;;IASD,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;KACF;IACD,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWD,IAAuB,MAAM,CAAC,KAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACxC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;YAnJF,SAAS;;;YAlCD,iBAAiB;;;mBAgEvB,KAAK,SAAC,QAAQ;0BAoBd,KAAK,SAAC,gBAAgB;oBAetB,KAAK,SAAC,SAAS;uBAkCf,KAAK,SAAC,YAAY;mBAsBlB,KAAK,SAAC,QAAQ;qBAoBd,KAAK,SAAC,UAAU;;;MCxKN,qBAAqB;IAJlC;QAaqB,UAAK,GAA+B,IAAI,YAAY,EAAgB,CAAC;KAazF;IAXC,IAAI,IAAI;QACN,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,GAAG,cAAc,CAAC;KACpE;IAED,SAAS,CAAC,KAAc,EAAE,IAAa;QACrC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;;;YAzBF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,qiBAA8C;aAC/C;;;qBAEE,KAAK,SAAC,UAAU;wBAEhB,KAAK,SAAC,aAAa;oBAEnB,KAAK,SAAC,SAAS;mBAEf,KAAK,SAAC,QAAQ;oBAEd,MAAM,SAAC,SAAS;;;MCPN,sBAAsB;IAWjC,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;KAAI;IAEtC,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;KACtC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAEO,oBAAoB,CAAC,SAAiB;QAC5C,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;QAE9B,OAAO,OAAO,IAAI,CAAC,EAAE;YACnB,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;YAE/D,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,MAAM;aACP;YACD,OAAO,EAAE,CAAC;SACX;KACF;IAEO,4BAA4B;QAClC,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEvF,OAAO,eAAe,GAAG,IAAI,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;KAC5F;IAEO,gBAAgB;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG;YACvD,IAAI,GAAG,YAAY,aAAa,IAAI,GAAG,YAAY,gBAAgB,EAAE;gBACnE,MAAM,SAAS,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACtD,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;aACtC;SACF,CAAC,CAAC;KACJ;;;YArDF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,qdAA+C;aAChD;;;YAVyC,MAAM;;;mCAY7C,SAAS,SAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;6BAEpE,YAAY,SAAC,qBAAqB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;oBAExD,KAAK,SAAC,SAAS;;;ACQlB,MAAM,uBAAuB,GAAG,EAAE,CAAC;AACnC,MAAM,iBAAiB,GAAG,GAAG,CAAC;AAC9B,MAAM,kBAAkB,GAAG,eAAe,iBAAiB,KAAK,CAAC;AACjE,MAAM,cAAc,GAAG,YAAY,CAAC;AAEpC;;;MAOa,iBAAkB,SAAQ,qBAAqB;IA2C1D,YACE,iBAAoC,EAC5B,QAAmB,EACnB,OAAyB,EACzB,cAAiC,EACjC,iBAAsC;QAE9C,KAAK,CAAC,iBAAiB,CAAC,CAAC;QALjB,aAAQ,GAAR,QAAQ,CAAW;QACnB,YAAO,GAAP,OAAO,CAAkB;QACzB,mBAAc,GAAd,cAAc,CAAmB;QACjC,sBAAiB,GAAjB,iBAAiB,CAAqB;QA1ChD,wBAAmB,GAAY,KAAK,CAAC;QAM7B,uBAAkB,GAAY,KAAK,CAAC;QACpC,OAAE,GAAG,IAAI,EAAE,CAAC;QAEZ,WAAM,GAAW,CAAC,CAAC;QAInB,uBAAkB,GAAG,EAAE,CAAC;QAyNxB,uBAAkB,GAAG,OAAO;YAClC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SACpF,CAAC;QA3LA,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC5G;IA3BD,IAAI,+BAA+B;QACjC,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;KAC1B;IAED,IAAI,gCAAgC;QAClC,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;KAC/C;IAED,IAAgC,aAAa,CAAC,IAAqB;QACjE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAE3B,IAAI,CAAC,uBAAuB,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,EAAE,KAAI,IAAI,CAAC,uBAAuB,CAAC;KACzE;IAED,IAAY,gBAAgB;QAC1B,OAAO,MAAM,CAAC,UAAU,GAAG,iBAAiB,CAAC;KAC9C;IAaD,QAAQ;;;;;QAKN,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ;;YAC9E,MAAM,2BAA2B,GAC/B,CAAA,MAAA,IAAI,CAAC,kBAAkB,0CAAE,MAAM,MAAK,CAAC,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;YAErF,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,kBAAkB,IAAI,2BAA2B,EAAE;gBAC3G,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;gBAEhC,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG;oBAC3B,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;oBACvE,GAAG,QAAQ;iBACZ,CAAC;aACH;YAED,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,SAAS,CAAC,aAAa;;;;YAI1G,IAAI,CAAC,eAAe;gBAClB,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,uBAAuB,KAAK,aAAa,GAAG,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YAE5G,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAEpC,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC5C,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACzD;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,iBAAiB,CAAC,uBAAuB;aAC9E,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAChB,SAAS,CAAC,OAAO;YAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,KAAK,OAAO,CAAC,EAAE,GAAG,SAAS,GAAG,OAAO,CAAC;YAEzF,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;YAEpC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF,CAAC,CAAC;KACN;IAED,eAAe;QACb,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;IAED,WAAW;;QACT,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACzD;QAED,MAAA,IAAI,CAAC,uBAAuB,0CAAE,WAAW,EAAE,CAAC;QAC5C,MAAA,IAAI,CAAC,2BAA2B,0CAAE,WAAW,EAAE,CAAC;QAChD,MAAA,IAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAC;KACvC;IAED,aAAa,CAAC,WAAmB;QAC/B,WAAW,KAAK,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAEpE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;IAES,gBAAgB;QACxB,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,SAAS,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;SACrC;KACF;IAEO,mBAAmB;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAC3C,CAAC,QAAa,EAAE,OAAY,KAAK,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,WAAW,EAC7E,CAAC,CACF,CAAC;KACH;IAEO,OAAO,CAAC,MAAc;QAC5B,MAAM,SAAS,GAAqB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;QAE1E,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QACpF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAEO,wBAAwB,CAAC,MAAc;QAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,cAAc,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACrH;IAEO,qBAAqB,CAAC,gBAAqB,EAAE,WAAgC,EAAE,KAAa;QAClG,IAAI,gBAAgB,EAAE;YACpB,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7G;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;SACvF;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAEO,uBAAuB;QAC7B,IAAI,gBAAwB,CAAC;QAE7B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU;YAC7C,MAAM,gBAAgB,GAAG,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YAC7D,MAAM,eAAe,GAAG,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC;YAE7D,IAAI,gBAAgB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACnC,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,GAAG,eAAe,CAAC,CAAC;gBAClF,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CAAC;QACH,OAAO,gBAAgB,CAAC;KACzB;IAEO,wBAAwB,CAAC,cAAsB;QACrD,IAAI,gBAAwB,CAAC;QAE7B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU;YAC7C,MAAM,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC;YACvD,MAAM,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC,WAAW,GAAG,UAAU,CAAC;YAExE,IAAI,cAAc,GAAG,aAAa,EAAE;gBAClC,gBAAgB,GAAG,UAAU,CAAC;gBAC9B,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CAAC;QACH,OAAO,gBAAgB,CAAC;KACzB;IAEO,sBAAsB;QAC5B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,uBAAuB,CAAC;QAE1G,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;QAEpC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC3B;KACF;IAEO,cAAc;QACpB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAExD,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SACzE;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KACtD;IAEO,gBAAgB;QACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,WAAW,CAAC;KAC1D;IAEO,YAAY;QAClB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE7C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;KACF;IAEO,aAAa;QACnB,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9E,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;KAC1C;IAMO,eAAe;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACjB;IAEO,iBAAiB,CAAC,gBAAwB;QAChD,IAAI,IAAI,CAAC,MAAM,IAAI,gBAAgB,EAAE;YACnC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;YAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;KACF;;;YA7PF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,w4BAAyC;aAC1C;;;YApBQ,iBAAiB;YATxB,SAAS;YAGO,gBAAgB;YARhC,iBAAiB;YAeV,mBAAmB;;;iCAqBzB,SAAS,SAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;0BAEpE,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BA8BlD,SAAS,SAAC,eAAe;;;MC1Df,mBAAmB;;;YAL/B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,qBAAqB,EAAE,sBAAsB,CAAC;gBAC7D,OAAO,EAAE,CAAC,sBAAsB,CAAC;aAClC;;;MCLY,qBAAqB;;;YAJjC,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,8HAA8C;aAC/C;;;mBAEE,KAAK,SAAC,QAAQ;;;MCDJ,+BAA+B;IAJ5C;QASqB,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;KACvE;;;YAVA,SAAS,SAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,kcAAyD;aAC1D;;;0BAEE,KAAK,SAAC,gBAAgB;2BAEtB,KAAK,SAAC,iBAAiB;oBAEvB,MAAM,SAAC,SAAS;;;MCLN,mCAAmC;IAJhD;QASqB,UAAK,GAAsB,IAAI,YAAY,EAAO,CAAC;KACvE;;;YAVA,SAAS,SAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,oRAA8D;aAC/D;;;uBAEE,KAAK,SAAC,YAAY;mBAElB,KAAK,SAAC,QAAQ;oBAEd,MAAM,SAAC,SAAS;;;MCCN,4BAA4B;;;YALxC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;gBACrC,YAAY,EAAE,CAAC,+BAA+B,EAAE,mCAAmC,CAAC;gBACpF,OAAO,EAAE,CAAC,+BAA+B,CAAC;aAC3C;;;ACAD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA2Ca,cAAc;;;YAZ1B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,qBAAqB;oBACrB,mBAAmB;oBACnB,4BAA4B;oBAC5B,YAAY;oBACZ,YAAY;iBACb;gBACD,YAAY,EAAE,CAAC,iBAAiB,EAAE,qBAAqB,CAAC;gBACxD,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;;;ACrDD;;;;;;;MAOa,0BAA0B;;;ACHvC;;;;;MASa,sBAAuB,SAAQ,0BAA0B;IAKpE,YAAmB,QAAmB;QACpC,KAAK,EAAE,CAAC;QADS,aAAQ,GAAR,QAAQ,CAAW;QAJtC,mBAAc,GAAW,CAAC,CAAC;QAC3B,WAAM,GAAW,KAAK,CAAC;QACvB,cAAS,GAAW,MAAM,CAAC;QAIzB,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,eAAe;QACb,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,qBAAqB;QACnB,UAAU,CAAC;YACT,MAAM,iBAAiB,GAAgB,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;YAEpF,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;YACzC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;SACzB,CAAC,CAAC;KACJ;IAED,gBAAgB,CAAC,YAAyB;QACxC,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,MAAM,gBAAgB,GAAG,YAAY,GAAG,YAAY,CAAC,SAAS,GAAG,YAAY,CAAC,YAAY,GAAG,CAAC,CAAC;QAC/F,MAAM,SAAS,GAAG,UAAU,GAAG,gBAAgB,CAAC;QAEhD,IAAI,CAAC,MAAM,GAAG,GAAG,SAAS,IAAI,CAAC;KAChC;IAEO,mBAAmB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE;YAC7D,IAAI,CAAC,qBAAqB,EAAE,CAAC;SAC9B,CAAC,CAAC;KACJ;IAEO,eAAe;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;;;YA/CF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,sLAA+C;aAChD;;;YAZ6C,SAAS;;;ACUhD,MAAM,4BAA4B,GAAG;IAC1C,EAAE,EAAyB;QACzB,YAAY,EAAE,eAAe;KAC9B;IACD,EAAE,EAAyB;QACzB,YAAY,EAAE,gBAAgB;KAC/B;IACD,EAAE,EAAyB;QACzB,YAAY,EAAE,cAAc;KAC7B;IACD,EAAE,EAAyB;QACzB,YAAY,EAAE,iBAAiB;KAChC;CACF,CAAC;AAEF;;;;;MAMsB,0BAA0B;IA0F9C,YAAY,eAAkC;QApF9C,mBAAc,GAAwB,EAAE,CAAC;QAIjC,aAAQ,GAAyB,EAAE,CAAC;QAiF1C,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;IAvED,IAAwB,OAAO,CAAC,OAA4B;QAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCD,IAAyB,QAAQ,CAAC,KAA4B;QAC5D,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,4BAA4B,CAAC,eAAe,CAAC,GAC7C,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC3C,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9D;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,4BAA4B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtE;;IAGD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC9D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YAzFF,SAAS;;;YA5BD,iBAAiB;;;4BA8BvB,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBAGlD,KAAK,SAAC,cAAc;sBAiBpB,KAAK,SAAC,WAAW;uBA2CjB,KAAK,SAAC,YAAY;oBAiBlB,KAAK,SAAC,SAAS;;;ACtGlB;;;;;;;;;;;;;;;;;;;;;MAyBa,sBAAuB,SAAQ,0BAA0B;IAOpE,YACE,OAAyB,EACzB,eAAkC,EAC1B,QAAmB,EACnB,MAAc;QAEtB,KAAK,CAAC,eAAe,CAAC,CAAC;QAHf,aAAQ,GAAR,QAAQ,CAAW;QACnB,WAAM,GAAN,MAAM,CAAQ;QAVxB,wBAAmB,GAAW,CAAC,CAAC;QAIxB,mBAAc,GAAW,GAAG,CAAC;KASpC;IAEM,kBAAkB;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAY;YACpD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ;IAED,WAAW,CAAC,OAA6C;QACvD,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,gBAAgB,CAAC,MAAW;QAC1B,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;KAC1F;IAED,UAAU,CAAC,IAAkB;QAC3B,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1F;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;KACF;IAED,aAAa;QACX,OAAO,CAAC,EACN,IAAI,CAAC,KAAK;aACT,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;aAClD,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAClD,CAAC;KACH;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,EAAE;YACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;SAChF;KACF;IAEO,QAAQ,CAAC,KAAY;QAC3B,MAAM,KAAK,GAAI,KAAK,CAAC,MAAiB,CAAC,UAAU,CAAC;QAElD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAEO,WAAW;QACjB,IAAI,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC9B;KACF;;;YA9EF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,ygDAA+C;aAChD;;;YAlCyE,gBAAgB;YAGjF,iBAAiB;YAHuB,SAAS;YACjD,MAAM;;;ACQR,MAAM,2BAA2B,GAAG;IACzC,EAAE,EAAwB;QACxB,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,QAAQ;KACjB;IACD,EAAE,EAAwB;QACxB,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,UAAU;KACnB;IACD,EAAE,EAAwB;QACxB,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,QAAQ;QACd,MAAM,EAAE,SAAS;KAClB;IACD,EAAE,EAAwB;QACxB,IAAI,EAAE,aAAa;QACnB,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,UAAU;KACnB;CACF,CAAC;AAEF;;;;;;MAOa,yBAAyB;IA2GpC,YAAY,eAAkC;;;;;;;;;;;QA3F5B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAY1B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAYxB,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAoE9C,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA3BD,IAAyB,QAAQ,CAAC,KAA2B;QAC3D,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,2BAA2B,CAAC,eAAe,CAAC,GAC5C,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,GAC1C,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC7D;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,2BAA2B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrE;;IAGD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC9D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YA1GF,SAAS;;;YApCD,iBAAiB;;;4BAsCvB,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBAGlD,KAAK,SAAC,cAAc;mBAYpB,MAAM,SAAC,QAAQ;mBAYf,MAAM,SAAC,QAAQ;qBAYf,MAAM,SAAC,UAAU;uBA0CjB,KAAK,SAAC,YAAY;oBAgBlB,KAAK,SAAC,SAAS;;;ACrIlB;;;;;;;;;;;;;;;;;;;;MAwBa,qBAAsB,SAAQ,yBAAyB;IAClE,YAAY;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAClF;IAED,SAAS,CAAC,QAAgB;QACxB,IAAI,QAAQ,KAAK,MAAM,EAAE;YACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,gBAAgB,CAAC;SACtD;aAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;SACtD;aAAM;YACL,OAAO,EAAE,CAAC;SACX;KACF;IAED,iBAAiB,CAAC,QAAgB;QAChC,IAAI,QAAQ,KAAK,MAAM,EAAE;YACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,oBAAoB,CAAC;SACrF;aAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;SACjF;aAAM;YACL,OAAO,EAAE,CAAC;SACX;KACF;IAED,QAAQ,CAAC,KAAa;QACpB,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;KACvC;IAED,aAAa;QACX,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;KACnG;;;YAnCF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,4oCAA8C;aAC/C;;;AClBM,MAAM,yBAAyB,GAAG;IACvC,EAAE,EAAsB;QACtB,MAAM,EAAE,QAAQ;QAChB,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,cAAc;KACxB;IACD,EAAE,EAAsB;QACtB,MAAM,EAAE,UAAU;QAClB,IAAI,EAAE,SAAS;QACf,OAAO,EAAE,iBAAiB;KAC3B;IACD,EAAE,EAAsB;QACtB,MAAM,EAAE,UAAU;QAClB,IAAI,EAAE,QAAQ;QACd,OAAO,EAAE,eAAe;KACzB;IACD,EAAE,EAAsB;QACtB,MAAM,EAAE,UAAU;QAClB,IAAI,EAAE,WAAW;QACjB,OAAO,EAAE,mBAAmB;KAC7B;CACF,CAAC;AAEF;;;;;;;;;;MAWa,uBAAuB;IA8GlC,YAAY,eAAkC;;;;;;;;;;;QA3F1B,WAAM,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAY9B,SAAI,GAAG,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAYtB,YAAO,GAAG,IAAI,YAAY,EAAE,CAAC;QAoEjD,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA3BD,IAAyB,QAAQ,CAAC,KAAyB;QACzD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,yBAAyB,CAAC,eAAe,CAAC,GAC1C,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACxC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3D;KACF;IACD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnE;;IAGD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC9D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YA7GF,SAAS;;;YAvCD,iBAAiB;;;4BAyCvB,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBAGlD,KAAK,SAAC,cAAc;4BAGpB,KAAK,SAAC,kBAAkB;qBAYxB,MAAM,SAAC,UAAU;mBAYjB,MAAM,SAAC,QAAQ;sBAYf,MAAM,SAAC,YAAY;uBA0CnB,KAAK,SAAC,YAAY;oBAgBlB,KAAK,SAAC,SAAS;;;AC5IlB;;;;;;;;;;;;;;;;;;;;MAwBa,mBAAoB,SAAQ,uBAAuB;IAC9D,OAAO,CAAC,IAAY;QAClB,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,eAAe,GAAG,EAAE,CAAC;SAC9D;QAED,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC;SAC5D;QAED,OAAO,EAAE,CAAC;KACX;IAED,OAAO,CAAC,IAAY;QAClB,MAAM,qBAAqB,GAAG,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAClF,MAAM,sBAAsB,GAAG,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAErF,OAAO,qBAAqB,IAAI,sBAAsB,GAAG,SAAS,GAAG,SAAS,CAAC;KAChF;IAED,YAAY;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACrF;IAED,aAAa;QACX,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;KACnG;IAED,QAAQ,CAAC,KAAa;QACpB,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;KACvC;IAEO,eAAe,CAAC,MAAc;QACpC,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAE5C,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,OAAO,CAAC,aAAa,CAAC;SACvB;QAED,IAAI,MAAM,KAAK,QAAQ,EAAE;YACvB,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAElD,OAAO,CAAC,gBAAgB,IAAI,CAAC,aAAa,CAAC;SAC5C;QAED,OAAO,KAAK,CAAC;KACd;;;YAlDF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,ytCAA4C;aAC7C;;;ACvBD;;;;;;;;MASa,yBAAyB;;IAQpC,IAA2B,UAAU,CAAC,KAAmB;QACvD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC1B;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;YAdF,SAAS;;;oBAGP,KAAK,SAAC,SAAS;yBAMf,KAAK,SAAC,cAAc;;;ACjBvB;;;;MAQa,qBAAsB,SAAQ,yBAAyB;;;YAJnE,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,6mBAA8C;aAC/C;;;ACCM,MAAM,yBAAyB,GAAG;IACvC,EAAE,EAAsB;QACtB,YAAY,EAAE,eAAe;KAC9B;IACD,EAAE,EAAsB;QACtB,YAAY,EAAE,gBAAgB;KAC/B;IACD,EAAE,EAAsB;QACtB,YAAY,EAAE,cAAc;KAC7B;IACD,EAAE,EAAsB;QACtB,YAAY,EAAE,iBAAiB;KAChC;CACF,CAAC;AAEF;;;;;;;;;;;;;MAcsB,uBAAuB;IA4H3C,YAAY,eAAkC;QAzG9C,mBAAc,GAAwB,EAAE,CAAC;QAKjC,aAAQ,GAAyB,EAAE,CAAC;QAqG1C,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,gBAAgB,EAAE,CAAC;KACpD;;;;;;;;IA1FD,IAAwB,OAAO,CAAC,OAA4B;QAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;QACtD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;IASD,IAAiC,eAAe,CAAC,KAAwB;QACvE,IAAI,CAAC,KAAK,EAAE;YACV,KAAK,GAAQ,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;KAC/B;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC;KAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmCD,IAAyB,QAAQ,CAAC,KAAyB;QACzD,IAAI,KAAK,YAAY,MAAM,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;YACxD,IAAI,CAAC,SAAS,iDACT,yBAAyB,CAAC,eAAe,CAAC,GAC1C,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,GACxC,KAAK,CACT,CAAC;SACH;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3D;KACF;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,IAAI,yBAAyB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnE;;IAGD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,CAAC;KAC9D;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YA3HF,SAAS;;;YArCD,iBAAiB;;;4BAuCvB,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;yBASlD,KAAK,SAAC,cAAc;qBAOpB,KAAK,SAAC,UAAU;sBAmBhB,KAAK,SAAC,WAAW;8BAiBjB,KAAK,SAAC,oBAAoB;uBA6C1B,KAAK,SAAC,YAAY;oBAiBlB,KAAK,SAAC,SAAS;;;ACnIlB;;;;;;;;;;;;;;;;;;;;;MAyBa,mBACX,SAAQ,uBAAuB;;IAgB/B,YACE,OAAyB,EACzB,eAAkC,EAC3B,QAAmB,EAClB,MAAc,EACd,cAAiC;QAEzC,KAAK,CAAC,eAAe,CAAC,CAAC;QAJhB,aAAQ,GAAR,QAAQ,CAAW;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAmB;QAb3C,wBAAmB,GAAW,CAAC,CAAC;QAEhC,iBAAY,GAAG,YAAY,CAAC;QAEpB,kBAAa,GAAG,IAAI,CAAC;QACrB,mBAAc,GAAW,GAAG,CAAC;QAWnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;KACtD;IAED,kBAAkB;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,WAAW,CAAC,OAA6C;QACvD,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,WAAW;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,gBAAgB,CAAC,MAAW;QAC1B,OAAO,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;KAC1F;IAED,UAAU,CAAC,IAAkB;QAC3B,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1F;aAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;KACF;IAED,aAAa;QACX,OAAO,CAAC,EACN,IAAI,CAAC,KAAK;aACT,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;aAClD,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAClD,CAAC;KACH;IAED,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YAChB,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,CAAC;KACzD;IAED,eAAe,CAAC,KAAa;;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,cAAc,IAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACrE,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,cAAc,IAAG,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACrE,IAAI,MAAA,IAAI,CAAC,MAAM,0CAAE,cAAc,EAAE;YAC/B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,SAAS,OAAO,UAAU,OAAO,UAAU,KAAK,UAAU,KAAK,EAAE,CAAC;KAC1E;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,IAAI,CAAC,mBAAmB,EAAE;YACzD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,CAAC;SAChF;KACF;IAED,gBAAgB,CAAC,KAAa;QAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;;;;IAID,gBAAgB;QACd,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAG,IAAI,CAAC;KAC7C;IAED,UAAU,CAAC,GAAG;QACZ,IAAI,GAAG,KAAK,EAAE,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;SACjC;KACF;;IAGD,uBAAuB,CAAC,WAAW;QACjC,IACE,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa;aACvD,WAAW,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,EACjD;YACA,IAAI,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YACvD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC1C;KACF;IAED,kBAAkB,CAAC,UAAyC;QAC1D,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC/B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACzC;KACF;IAED,sBAAsB,CAAC,kBAAuC;QAC5D,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE;YAClC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;SACpD;KACF;IAEO,uBAAuB;QAC7B,MAAM,OAAO,GAAG;YACd,EAAE,EAAE;gBACF,cAAc,EAAE,gBAAgB;aACjC;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,iBAAiB;aAClC;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,mBAAmB;aACpC;YACD,EAAE,EAAE;gBACF,cAAc,EAAE,cAAc;aAC/B;SACF,CAAC;QAEF,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC;KAC9C;IAEO,mBAAmB;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,KAAiB;YAC/E,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ;IAEO,eAAe;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAEO,QAAQ,CAAC,KAAY;QAC3B,MAAM,KAAK,GAAI,KAAK,CAAC,MAAiB,CAAC,UAAU,CAAC;QAElD,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,EAAE;YAC/B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAEO,WAAW;QACjB,IAAI,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC9B;KACF;;;YAvLF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,0zHAA4C;aAC7C;;;YAxCC,gBAAgB;YAOT,iBAAiB;YAVxB,SAAS;YAOF,MAAM;YAHb,iBAAiB;;;0BA2ChB,SAAS,SAAC,aAAa;4BACvB,SAAS,SAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;AClDrD;;;;;;;;;;;;;;;MAgBa,wBAAwB;IADrC;;;;;;;;;;;;QA2ByC,cAAS,GAAa,KAAK,CAAC;;;;;;;;;;QAW7B,aAAQ,GAAa,KAAK,CAAC;;QAG1D,WAAM,GAAG,IAAI,CAAC;QAEb,UAAK,GAAG,IAAI,CAAC;KA6EtB;;;;;;;;;;;;;;;;;;;IAzDC,IAAqB,IAAI,CAAC,KAAa;QACrC,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;KACvD;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;;;;;;;;;IAoBM,IAAI;;QAET,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;;;;;;;;;;;;;;;;IAoBM,KAAK;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;KACpB;;;YAvHF,SAAS;;;oBAOP,KAAK,SAAC,SAAS;uBAOf,KAAK,SAAC,YAAY;wBAalB,KAAK,SAAC,cAAc;uBAWpB,KAAK,SAAC,aAAa;mBAyBnB,KAAK,SAAC,QAAQ;;AApCwB;IAAf,YAAY,EAAE;2DAA6B;AAW7B;IAAf,YAAY,EAAE;0DAA4B;;AC/CnE;;;;;;;;;;;;;;;;;;;;MAyCa,oBAAqB,SAAQ,wBAAwB;IAqBhE,YAAoB,sBAA8C;QAChE,KAAK,EAAE,CAAC;QADU,2BAAsB,GAAtB,sBAAsB,CAAwB;QAjB1D,OAAE,GAAW,IAAI,EAAE,CAAC;QACpB,qBAAgB,GAAG,IAAI,aAAa,EAAQ,CAAC;KAkBpD;IAbD,IAAoD,WAAW,CAAC,WAAuB;QACrF,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAC9B;KACF;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;IAMM,IAAI;QACT,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC5C,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3F;IAEM,KAAK;QACV,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;QAChD,KAAK,CAAC,KAAK,EAAE,CAAC;QAEd,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAC5B;IAEM,UAAU,CAAC,KAAiB;QACjC,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YAC3E,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAEO,WAAW;QACjB,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;QAEjB,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC3D;IAEO,SAAS;;QAEf,IAAI,CAAC,UAAU,GAAG,CAAC,KAAY;YAC7B,IACE,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;gBACtD,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,EAAE,EAC3G;gBACA,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAC3B;SACF,CAAC;QAEF,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;aAAM;YACL,MAAM,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACtE,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YAC9D,OAAO,CAAC,KAAK,EAAE,CAAC;SACjB;KACF;IAEO,gBAAgB;QACtB,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;KAC/G;IAEO,oBAAoB;QAC1B,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;KAClC;;;YAtGF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,g9BAA6C;gBAC7C,SAAS,EAAE,EAAE;gBACb,UAAU,EAAE;oBACV,OAAO,CAAC,MAAM,EAAE;wBACd,UAAU,CAAC,QAAQ,EAAE;4BACnB,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;4BACrB,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;yBAClF,CAAC;wBACF,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;qBACxG,CAAC;oBACF,OAAO,CAAC,OAAO,EAAE;wBACf,UAAU,CAAC,QAAQ,EAAE;4BACnB,KAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;4BACxC,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,EAAE,SAAS,EAAE,MAAM,EAAE,CAAC,CAAC;yBAC3D,CAAC;wBACF,UAAU,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC;qBACnF,CAAC;iBACH;aACF;;;YA3CQ,sBAAsB;;;0BAsD5B,SAAS,SAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;AC7DhD;;;;;;;;;;;;;;;;;;;;MAoBa,mBAAmB;;;AChBhC;;;;;MASa,eAAgB,SAAQ,mBAAmB;;;YAJvD,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,iFAAuC;aACxC;;;ACSD;;;;;MAoCa,YAAY;;;YA/BxB,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,YAAY;oBACZ,kBAAkB;oBAClB,cAAc;oBACd,uBAAuB;oBACvB,gBAAgB;oBAChB,aAAa;oBACb,gBAAgB;oBAChB,aAAa;iBACd;gBACD,YAAY,EAAE;oBACZ,eAAe;oBACf,sBAAsB;oBACtB,sBAAsB;oBACtB,qBAAqB;oBACrB,mBAAmB;oBACnB,qBAAqB;oBACrB,mBAAmB;oBACnB,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,sBAAsB;oBACtB,qBAAqB;oBACrB,mBAAmB;oBACnB,mBAAmB;oBACnB,oBAAoB;iBACrB;aACF;;;ACtDD;;;;;;;MAWa,uBAAuB;IAJpC;;QAYqB,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;KACpD;;;YAbA,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,gUAAgD;aACjD;;;gCAGE,KAAK,SAAC,uBAAuB;oBAG7B,KAAK,SAAC,SAAS;oBAGf,MAAM,SAAC,SAAS;;;ACdnB,MAAM,sBAAsB,GAAG,IAAI,CAAC;AAEpC;;;;;;;;;;;MAYsB,oBAAoB;IAD1C;;;;;;;;;;QAW0C,eAAU,GAAY,KAAK,CAAC;QAE5D,cAAS,GAAW,sBAAsB,CAAC;KA6EpD;;;;;;;;;IAjEC,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAa;QAC7C,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;KACvE;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;;;;;;;;;;;IAsBD,IAAuB,MAAM,CAAC,KAAwC;QACpE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,EAAE;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;YAlFF,SAAS;;;yBAWP,KAAK,SAAC,eAAe;qBAcrB,KAAK,SAAC,UAAU;uBAiBhB,KAAK,SAAC,YAAY;qBA6BlB,KAAK,SAAC,UAAU;;AA5DuB;IAAf,YAAY,EAAE;wDAA6B;;AC7BtE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ca,+BAA+B;;IAE1C,YAAmB,WAA6B;QAA7B,gBAAW,GAAX,WAAW,CAAkB;KAAI;;;YALrD,SAAS,SAAC;gBACT,QAAQ,EAAE,4BAA4B;aACvC;;;YA/CmB,WAAW;;;ACM/B;;;;;;;MAWa,oBAAoB;IAJjC;QA4BE,eAAU,GAAQ,UAAU,EAAE,CAAC;KAShC;IAPC,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE;YAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,cAAc,GAAG,cAAc,CAAC;SACvE;QAED,OAAO,QAAQ,CAAC;KACjB;;;YApCF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,02DAA6C;aAC9C;;;0BAEE,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;qBAGvC,KAAK,SAAC,UAAU;kBAGhB,KAAK,SAAC,OAAO;mBAGb,KAAK,SAAC,QAAQ;oBAGd,KAAK,SAAC,SAAS;0BAGf,KAAK,SAAC,gBAAgB;uBAGtB,KAAK,SAAC,YAAY;mBAGlB,KAAK,SAAC,QAAQ;;;ACdjB,MAAM,oBAAoB,GAAG,GAAG,CAAC;AACjC,MAAM,kBAAkB,GAAG,IAAI,CAAC;AAChC,MAAM,gBAAgB,GAAG,GAAG,CAAC;AAC7B,MAAM,aAAa,GAAG,YAAY,CAAC;AAEnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAiCa,gBAAiB,SAAQ,oBAAoB;IAmCxD,YAAoB,OAAyB;QAC3C,KAAK,EAAE,CAAC;QADU,YAAO,GAAP,OAAO,CAAkB;QA3B7C,sBAAiB,GAAG,CAAC,CAAC;QAEtB,eAAU,GAA6B,EAAE,CAAC;QAGlC,aAAQ,GAAY,KAAK,CAAC;QAG1B,YAAO,GAAG,IAAI,OAAO,EAAO,CAAC;KAqBpC;IAlBD,IAAY,WAAW;QACrB,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;KACtG;IAED,IAAY,YAAY;QACtB,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC;KACnC;IAED,IAAY,MAAM;QAChB,OAAO,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC;KACrD;IAED,IAAI,SAAS;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;KAC9C;IAM8B,QAAQ;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;KACrB;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC;YACvE,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SACvC,CAAC,CAAC;KACJ;IAED,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;YACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YAErB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;SACF;KACF;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAClC;KACF;IAED,WAAW;;QACT,MAAA,IAAI,CAAC,kBAAkB,0CAAE,WAAW,EAAE,CAAC;KACxC;;;;;;;;;;;;IAaD,oBAAoB;QAClB,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,IAAI,CAAC,QAAQ,GAAG,kBAAkB,EAAE;YACtC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;IAED,WAAW;QACT,IAAI,IAAI,CAAC,QAAQ,GAAG,kBAAkB,EAAE;YACtC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,IAAI,EAAE,CAAC;KACb;;;;;;;;;;;;IAaD,IAAI;QACF,IAAI,IAAI,CAAC,iBAAiB,GAAG,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACzD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChB,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;;;;;;;;;;;;IAYD,QAAQ;QACN,IAAI,IAAI,CAAC,iBAAiB,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YACpD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACxG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC3B;IAED,eAAe;QACb,IAAI,IAAI,CAAC,QAAQ,GAAG,kBAAkB,EAAE;YACtC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC;KACjB;IAED,cAAc,CAAC,MAAc;QAC3B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACxB;IAES,cAAc;QACtB,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACjC;IAES,aAAa,CAAC,MAAyC;QAC/D,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;SACtG;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAES,UAAU;QAClB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjC,IAAI,IAAI,CAAC,QAAQ,GAAG,kBAAkB,EAAE;YACtC,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;QAED,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;KAC5B;IAES,aAAa;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,IAAI,CAAC,WAAW;YACd,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW;kBAC9B,WAAW,CAAC;oBACV,IAAI,CAAC,IAAI,EAAE,CAAC;iBACb,EAAE,IAAI,CAAC,QAAQ,CAAC;kBACjB,SAAS,CAAC;KACjB;IAEO,OAAO,CAAC,MAAc;QAC5B,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,MAAM,SAAS,GAAqB,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;YAE1E,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACpB;KACF;IAEO,wBAAwB,CAAC,MAAc;QAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,eAAe,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACpH;IAEO,sBAAsB,CAAC,MAAkB;QAC/C,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;KAC/B;IAEO,qBAAqB,CAAC,MAAyC;QACrE,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC;QAErE,IAAI,aAAa,EAAE;YACjB,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;SAC1E;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,CAAC,GAAwB,MAAO,CAAC,CAAC;SACrD;KACF;IAEO,gBAAgB,CAAC,MAAc;QACrC,IAAI,CAAC,MAAM,IAAI,MAAM,IAAI,gBAAgB,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;YAC5E,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,oBAAoB,IAAI,CAAC;YACpE,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAC9B;KACF;IAEO,SAAS,CAAC,MAAc;QAC9B,IAAI,MAAM,IAAI,MAAM,GAAG,gBAAgB,EAAE;YACvC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC;YACtD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;SAC/B;KACF;IAEO,iBAAiB;QACvB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;SACxG;KACF;;;YArPF,SAAS,SAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,mrCAAwC;aACzC;;;YA/CiB,gBAAgB;;;mCAiD/B,YAAY,SAAC,+BAA+B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;oBAG9D,SAAS,SAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;4BAEnC,YAAY,SAAC,oBAAoB;uBAiCjC,YAAY,SAAC,eAAe;;;ACpG/B;;;;;;;MAWa,uBAAuB;IAJpC;;QASqB,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;KACpD;;;YAVA,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,iOAAgD;aACjD;;;sBAGE,KAAK,SAAC,WAAW;oBAGjB,MAAM,SAAC,SAAS;;;ACNnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA4Ca,aAAa;;;YAbzB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,iBAAiB,CAAC;gBACxD,YAAY,EAAE;oBACZ,uBAAuB;oBACvB,gBAAgB;oBAChB,uBAAuB;oBACvB,+BAA+B;oBAC/B,oBAAoB;iBACrB;gBACD,OAAO,EAAE,CAAC,gBAAgB,EAAE,+BAA+B,CAAC;gBAC5D,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;ACvDD;;;;;;;;;IASY;AAAZ,WAAY,eAAe;;IAEzB,oCAAiB,CAAA;;IAGjB,sCAAmB,CAAA;;IAGnB,wCAAqB,CAAA;;IAGrB,gCAAa,CAAA;;IAGb,kCAAe,CAAA;AACjB,CAAC,EAfW,eAAe,KAAf,eAAe;;ACF3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyCa,eAAe;IA+C1B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;;QAf1C,OAAE,GAAY,IAAI,EAAE,CAAC;QAEb,YAAO,GAAqB,eAAe,CAAC,QAAQ,CAAC;KAaf;;IAV9C,IAAuB,MAAM,CAAC,MAAuB;QACnD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAClC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAID,kBAAkB;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAClC;IAES,yBAAyB;QACjC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO;YACzC,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,KAAK,GAAG,EAAE,GAAG,MAAM,CAAC;KACjG;;;YA5DF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,yCAAqC;aACtC;;;YA/CqC,UAAU;;;gCAwE7C,KAAK,SAAC,wBAAwB;oBAK9B,KAAK,SAAC,SAAS;qBAQf,KAAK,SAAC,UAAU;;;ACjFnB,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;AAE3B;;;;;;;MAWa,wBAAwB;IAanC,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,CAAC;KAC/C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,OAAO,CAAC;KAChD;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,QAAQ,CAAC;KACjD;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,IAAI,CAAC;KAC7C;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,KAAK,CAAC;KAC9C;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,IAAI,IAAI,eAAe,CAAC;KACrC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,IAAI,IAAI,gBAAgB,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;KAC3D;;;YA3CF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,4sBAAiD;aAClD;;;sBAGE,KAAK,SAAC,WAAW;oBAGjB,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;qBAGd,KAAK,SAAC,UAAU;;;AC7BnB;;;;;;;;;;IAUY;AAAZ,WAAY,oBAAoB;;IAE9B,iDAAyB,CAAA;;IAGzB,6CAAqB,CAAA;AACvB,CAAC,EANW,oBAAoB,KAApB,oBAAoB;;ACDhC,MAAM,2BAA2B,GAAG,oBAAoB,CAAC,UAAU,CAAC;AAEpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0Ca,sBAAsB;IADnC;;QAgC2B,iBAAY,GAAG,IAAI,YAAY,EAA4B,CAAC;QAE7E,iBAAY,GAA0B,2BAA2B,CAAC;QAClE,gBAAW,GAAa,IAAI,CAAC;QAC7B,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAyB,EAAE,CAAC;KAoF3C;;;;;;;;;;;;IAvEC,IAA4B,WAAW,CAAC,KAA2B;QACjE,IAAI,CAAC,YAAY,GAAS,MAAO,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;cAC1E,KAAK;cACL,2BAA2B,CAAC;KACjC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;;;;;;;;;;;IAcD,IAAqB,IAAI,CAAC,IAAY;QACpC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;SAC7D;KACF;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;;IAYD,IAAsB,KAAK,CAAC,KAA2B;QACrD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACf;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;;;IAaD,IAA2B,UAAU,CAAC,UAAmB;QACvD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;KACjD;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;YAxHF,SAAS;;;wBAcP,KAAK,SAAC,cAAc;uBAepB,KAAK,SAAC,aAAa;2BAGnB,MAAM,SAAC,eAAe;0BAkBtB,KAAK,SAAC,eAAe;mBAsBrB,KAAK,SAAC,QAAQ;oBAqBd,KAAK,SAAC,SAAS;yBAqBf,KAAK,SAAC,cAAc;;;AC5JvB;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,kBAAmB,SAAQ,sBAAsB;IAiB5D,YAAoB,cAAiC;QACnD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAmB;KAEpD;IAdD,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACtB;IAED,IAAI,QAAQ;QACV,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC;KACxD;IAED,IAAI,UAAU;QACZ,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC9B;IAMD,kBAAkB;QAChB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SAChD,CAAC,CAAC;KACJ;;;;;;;;IASD,MAAM,CAAC,KAAa;QAClB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACrC,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC9B;;;;;;IAOD,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACrC,MAAM,cAAc,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;KAC5C;;;;;;IAOD,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC3E,MAAM,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;QAElC,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KACtC;;;;;;IAOD,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC3E,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,CAAC;QACpC,MAAM,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;QAE1C,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;KAC9C;IAED,UAAU,CAAC,SAAiB,EAAE,IAAsB;QAClD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;aAC1B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,eAAe;YACxB,IAAI,eAAe,EAAE;gBACnB,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC;gBAEzF,IAAI,IAAI,CAAC,UAAU,IAAI,eAAe,EAAE;oBACtC,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;oBACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9B;qBAAM,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,SAAS,KAAK,IAAI,CAAC,gBAAgB,EAAE;;oBAElE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;iBACvC;aACF;SACF,CAAC,CAAC;KACN;IAED,YAAY,CAAC,IAAqB;QAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAE9B,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,SAAS,EAAE;gBACjB,SAAS,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC;aACzC;SACF,CAAC,CAAC;KACJ;IAED,SAAS,CAAC,IAAqB;QAC7B,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;IAEO,eAAe;QACrB,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,CAAC,CAAC;QAE5F,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,aAAa,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACxC;KACF;IAEO,aAAa,CAAC,aAAqB;QACzC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,UAAU;cACpC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC;cAClF,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,IAAI,CAAC,CAAC;QAEnG,OAAO,OAAO,gBAAgB,KAAK,SAAS,GAAG,EAAE,CAAC,gBAAgB,CAAC,GAAG,gBAAgB,CAAC;KACxF;IAEO,iBAAiB,CAAC,oBAAqC,EAAE;QAC/D,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE;YACxC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QAED,MAAM,iBAAiB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAEjF,MAAM,kBAAkB,GAAG,iBAAiB,YAAY,UAAU,GAAG,iBAAiB,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;QAE/G,OAAO,kBAAkB,CAAC,IAAI,CAC5B,GAAG,CAAC,mBAAmB;YACrB,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,2BAA2B,CAAC,mBAAmB,CAAC,CAAC;SAClF,CAAC,EACF,UAAU,CAAC,GAAG;YACZ,iBAAiB,CAAC,MAAM,GAAG,eAAe,CAAC,KAAK,CAAC;YAEjD,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC;SACxB,CAAC,CACH,CAAC;KACH;IAEO,kBAAkB,CAAC,SAAiB,EAAE,IAAqB;QACjE,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;gBAChC,IAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,CAAC;aAC5C;YAED,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;SACrC;KACF;IAEO,2BAA2B,CAAC,iBAA0B;QAC5D,OAAO,iBAAiB,GAAG,eAAe,CAAC,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC;KACzE;IAEO,gBAAgB,CAAC,OAA6B,EAAE;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAChC,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QAEnE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;KAC7B;IAEO,UAAU;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KAC/B;IAEO,YAAY,CAAC,SAAiB;QACpC,MAAM,sBAAsB,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAEhH,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,sBAAsB,EAAE,IAAI,SAAS,CAAC;KAC1E;IAEO,0BAA0B,CAAC,SAAiB;QAClD,IAAI,CAAC,UAAU,EAAE;aACd,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,IAAI,IAAI,KAAK,IAAI,SAAS,GAAG,CAAC,CAAC;aACvD,OAAO,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC9D;IAEO,eAAe,CAAC,IAAqB;QAC3C,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;KACtC;IAEO,oBAAoB,CAAC,WAA4B;QACvD,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAChE,MAAM,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;QAEhC,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACnC,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;SACnD;KACF;;;YAlOF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,u1BAA0C;aAC3C;;;YAvC0B,iBAAiB;;;sBAyCzC,eAAe,SAAC,eAAe;;;ACvClC;;;;;;;MAWa,uBAAuB;;;YAJnC,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,6EAAgD;aACjD;;;sBAGE,KAAK,SAAC,WAAW;;;ACRpB,MAAM,wBAAwB,GAAG,EAAE,CAAC;AACpC,MAAM,oBAAoB,GAAG,EAAE,CAAC;AAChC,MAAM,qBAAqB,GAAG;IAC5B,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;IACrB,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;IACrB,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE;CACvB,CAAC;AAEF;;;;;;;MAWa,sBAAsB;IAJnC;;QAeyB,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;;QAGxC,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;;QAGhC,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;QAE1C,aAAQ,mCACZ,qBAAqB,CAAC,eAAe,CAAC,GACtC,qBAAqB,CAAC,eAAe,EAAE,CAAC,EAC3C;QAIM,eAAU,GAAa,KAAK,CAAC;QAC7B,cAAS,GAAW,wBAAwB,CAAC;KAiFtD;;IA9EC,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;KAClG;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;IAGD,IAAuB,MAAM,CAAC,KAAsB;QAClD,IAAI,CAAC,OAAO,GAAI,KAAgB,GAAG,KAAK,GAAG,SAAS,CAAC;QAErD,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,MAAM,EAAE;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACvB;KACF;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAA2B,SAAS,CAAC,SAAkB;QACrD,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC;KAC/C;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;IAID,IAA0B,QAAQ,CAAC,KAAa;QAC9C,IAAI,CAAC,SAAS;YACZ,KAAK,IAAI,wBAAwB,IAAI,KAAK,IAAI,oBAAoB,GAAG,KAAK,GAAG,wBAAwB,CAAC;KACzG;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KAC1B;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,WAAW,KAAK,oBAAoB,CAAC,QAAQ,CAAC;KAC3D;IAED,IAAI,mBAAmB;QACrB,OAAO,IAAI,CAAC,qBAAqB,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;KACnE;IAED,cAAc,CAAC,MAAc;QAC3B,QAAQ,MAAM;YACZ,KAAK,eAAe,CAAC,MAAM;gBACzB,OAAO,yBAAyB,CAAC;YACnC,KAAK,eAAe,CAAC,QAAQ;gBAC3B,OAAO,0BAA0B,CAAC;YACpC,KAAK,eAAe,CAAC,IAAI;gBACvB,OAAO,yBAAyB,CAAC;YACnC,KAAK,eAAe,CAAC,KAAK;gBACxB,OAAO,uBAAuB,CAAC;YACjC;gBACE,OAAO,yBAAyB,CAAC;SACpC;KACF;IAED,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,QAAQ,EAAE;YAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;KACF;IAED,OAAO;QACL,IAAI,IAAI,CAAC,MAAM,KAAK,eAAe,CAAC,QAAQ,EAAE;YAC5C,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;KACF;;;YA/GF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,grCAA6C;aAC9C;;;4BAGE,KAAK,SAAC,kBAAkB;0BAGxB,KAAK,SAAC,eAAe;yBAGrB,KAAK,SAAC,eAAe;wBAGrB,MAAM,SAAC,aAAa;oBAGpB,MAAM,SAAC,SAAS;oBAGhB,MAAM,SAAC,SAAS;oBAahB,KAAK,SAAC,SAAS;qBASf,KAAK,SAAC,UAAU;wBAYhB,KAAK,SAAC,cAAc;uBAUpB,KAAK,SAAC,aAAa;;;AC9EtB;;;;MAea,eAAe;;;YAX3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE;oBACZ,eAAe;oBACf,wBAAwB;oBACxB,kBAAkB;oBAClB,uBAAuB;oBACvB,sBAAsB;iBACvB;gBACD,OAAO,EAAE,CAAC,eAAe,EAAE,kBAAkB,CAAC;aAC/C;;;ACnBD;;;;;;;MAWa,oBAAoB;IA+C/B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;;QAjCnB,cAAS,GAAG,IAAI,YAAY,EAAE,CAAC;;QAG5B,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;;QAGxC,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;KA2BA;;IArB9C,IAAuB,MAAM,CAAC,KAAc;QAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;IAGD,IAAqB,IAAI,CAAC,KAAc;QACtC,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAErC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAID,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,MAAM,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;YACtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B;KACF;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC1B;KACF;IAEO,aAAa;QACnB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;KACF;IAEO,gBAAgB;QACtB,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;KACvE;;;YAzEF,SAAS,SAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,6YAA6C;aAC9C;;;YAdmB,UAAU;;;uBAiB3B,KAAK,SAAC,YAAY;iBAGlB,KAAK,SAAC,MAAM;oBAGZ,KAAK,SAAC,SAAS;oBAGf,KAAK,SAAC,SAAS;wBAGf,MAAM,SAAC,aAAa;0BAGpB,MAAM,SAAC,gBAAgB;oBAGvB,MAAM,SAAC,SAAS;qBAMhB,KAAK,SAAC,UAAU;mBAWhB,KAAK,SAAC,QAAQ;;;AChDjB;;;;;;;;;;MAWsB,kBAAkB;IADxC;;QAMqB,UAAK,GAAG,IAAI,YAAY,EAAE,CAAC;;QAG9C,OAAE,GAAY,IAAI,EAAE,CAAC;QAEb,YAAO,GAAa,KAAK,CAAC;QAC1B,cAAS,GAAa,KAAK,CAAC;QAC5B,UAAK,GAAa,KAAK,CAAC;KAyDjC;;;;;;;;;;;;IA5CC,IAAuB,MAAM,CAAC,MAAe;QAC3C,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,QAAiB;QACjD,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAC7C;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAqB,IAAI,CAAC,IAAa;QACrC,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;YAnEF,SAAS;;;oBAGP,KAAK,SAAC,SAAS;oBAGf,MAAM,SAAC,SAAS;qBAoBhB,KAAK,SAAC,UAAU;uBAkBhB,KAAK,SAAC,YAAY;mBAiBlB,KAAK,SAAC,QAAQ;;;ACvEjB;;;MAOa,cAAe,SAAQ,kBAAkB;IACpD,YAAoB,UAAsB;QACxC,KAAK,EAAE,CAAC;QADU,eAAU,GAAV,UAAU,CAAY;KAEzC;IAED,kBAAkB;QAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAES,kBAAkB;QAC1B,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC;KACzE;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,yCAAsC;aACvC;;;YAVqC,UAAU;;;ACKhD;;;;;;;;MAYa,sBAAsB;IAJnC;;QAemB,SAAI,GAA0B,EAAE,CAAC;;QAG3B,cAAS,GAAG,IAAI,YAAY,EAAO,CAAC;;QAGjC,gBAAW,GAAG,IAAI,YAAY,EAAO,CAAC;;QAG7C,UAAK,GAAG,IAAI,YAAY,EAAO,CAAC;KASpD;IAPC,iBAAiB;QACf,OAAO,IAAI,CAAC,KAAK,GAAG,8BAA8B,GAAG,2BAA2B,CAAC;KAClF;IAED,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;KACpE;;;YAhCF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,mlCAA+C;aAChD;;;sBAEE,SAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BACrC,SAAS,SAAC,SAAS,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;oBAGvD,KAAK,SAAC,SAAS;oBAGf,KAAK,SAAC,SAAS;mBAGf,KAAK,SAAC,QAAQ;wBAGd,MAAM,SAAC,aAAa;0BAGpB,MAAM,SAAC,gBAAgB;oBAGvB,MAAM,SAAC,SAAS;;;ACjCnB;;;;;;;;;;;;;;;;;;;;MAqBa,mBAAmB;IADhC;QAEU,WAAM,GAAa,KAAK,CAAC;KAkBlC;;;;;;;;;;IAPC,IAAsB,KAAK,CAAC,KAAc;QACxC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACvC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YAnBF,SAAS;;;oBAaP,KAAK,SAAC,SAAS;;;AC7BlB,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAEhC;;;;;;;;;;;;;;;;;;;;;;;;;MA6Ba,eAAgB,SAAQ,mBAAmB;IAUtD,YAAoB,cAAiC;QACnD,KAAK,EAAE,CAAC;QADU,mBAAc,GAAd,cAAc,CAAmB;QAJrD,oBAAe,GAAG,qBAAqB,CAAC;KAMvC;IAED,IAAI,cAAc;QAChB,OAAO,QAAQ,EAAE,CAAC;KACnB;IAED,IAAI,iBAAiB;QACnB,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;KAC/E;;IAGD,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,KAAK,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;KACnF;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3C;IAED,YAAY;QACV,MAAM,sBAAsB,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC;QAElH,IAAI,sBAAsB,EAAE;YAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SAClC;KACF;IAED,YAAY,CAAC,GAAG;QACd,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,IAAI,UAAU,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;QAE3F,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;KACtG;;IAGD,WAAW,CAAC,GAAG;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC;QAE/F,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;IAGD,gBAAgB,CAAC,GAAmB;QAClC,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;YAEnB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;SACrC;KACF;;IAGD,WAAW,CAAC,GAAmB;QAC7B,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAElB,IAAI,GAAG,CAAC,KAAK,EAAE;YACb,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACrB;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;IAED,SAAS,CAAC,EAAE,EAAE,GAAmB;QAC/B,OAAO,GAAG,CAAC,EAAE,CAAC;KACf;;IAGO,iBAAiB;QACvB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;;IAGO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ;YACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;gBACxC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,OAAO,IAAI,CAAC;aACb;SACF,CAAC,CAAC;KACJ;;IAGO,aAAa;QACnB,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,KAAK,CAAC;YAEtC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;SACrC;KACF;;;YAhHF,SAAS,SAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,6yCAAuC;aACxC;;;YAtCQ,iBAAiB;;;mBAyCvB,eAAe,SAAC,cAAc;0BAE9B,SAAS,SAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACjC5C;;;;MASa,YAAY;;;YALxB,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;gBACxC,YAAY,EAAE,CAAC,oBAAoB,EAAE,cAAc,EAAE,sBAAsB,EAAE,eAAe,CAAC;gBAC7F,OAAO,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;aAC3C;;;ACZD,MAAM,2BAA2B,GAAG,cAAc,CAAC;AAEnD;;;;;;;;;MAaa,yBAAyB;IAJtC;QAQU,iBAAY,GAAgC,2BAA2B,CAAC;KAUjF;;IAPC,IAA6B,WAAW,CAAC,IAAgC;QACvE,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,YAAY,WAAW,GAAG,IAAI,GAAG,2BAA2B,CAAC;KAClH;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;YAjBF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,sTAAkD;aACnD;;;sBAGE,KAAK,SAAC,WAAW;0BAKjB,KAAK,SAAC,gBAAgB;;;ACrBzB;;;;;MAMa,sBAAsB;IADnC;;QAiDgC,qBAAgB,GAAa,IAAI,CAAC;KAkCjE;;;;;;;;IAXC,IAAoC,kBAAkB,CAAC,KAAa;QAClE,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACnD;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;IAED,IAAI,aAAa;QACf,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC;KAChD;;;YAlFF,SAAS;;;sBASP,KAAK,SAAC,WAAW;0BA+BjB,KAAK,SAAC,gBAAgB;sBAGtB,KAAK,SAAC,WAAW;6BAGjB,KAAK,SAAC,mBAAmB;+BAGzB,KAAK,SAAC,qBAAqB;oBAG3B,KAAK,SAAC,SAAS;kCASf,KAAK,SAAC,wBAAwB;iCAW9B,KAAK,SAAC,uBAAuB;;;AC/EhC;;;;;;;;;;;;;;;;;;;;MAwBa,kBAAmB,SAAQ,sBAAsB;IAC5D,YAAoB,YAAmB,EAAE,OAAyB;QAChE,KAAK,EAAE,CAAC;QADU,iBAAY,GAAZ,YAAY,CAAO;KAEtC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3B;IAEO,QAAQ,CAAC,QAAgB;QAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KACtC;;;YAfF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,4sBAA0C;aAC3C;;;YA3BQ,KAAK;YADc,gBAAgB;;;ACM5C;;;;;;;;;;;;;MAkBa,8BAA8B;IAL3C;QASU,wBAAmB,GAAY,CAAC,CAAC;KAU1C;;IAPC,IAAoC,kBAAkB,CAAC,KAAa;QAClE,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;KAChE;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;KACjC;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,kaAAuD;gBACvD,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;kCAGE,KAAK,SAAC,wBAAwB;iCAK9B,KAAK,SAAC,uBAAuB;;;ACxBhC;;;;;;;;;MAca,yBAAyB;IAOpC,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;KACvD;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,8xBAAkD;gBAClD,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;sBAGE,KAAK,SAAC,WAAW;6BAGjB,KAAK,SAAC,mBAAmB;;;ACf5B;;;;;;MAkBa,eAAe;;;YAZ3B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,CAAC;gBACpE,YAAY,EAAE;oBACZ,yBAAyB;oBACzB,kBAAkB;oBAClB,8BAA8B;oBAC9B,yBAAyB;iBAC1B;gBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;gBAC7B,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;aACZ;;;ACtBD,MAAM,kBAAkB,GAAG,CAAC,CAAC;AAE7B;;;;;;;;;;;;;MAca,uBAAuB;IADpC;;;;;;;;;;QAWyB,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;;;;;;;;;;QAWhD,aAAQ,GAAG,IAAI,YAAY,EAAkB,CAAC;;;;;;;;;;QAW9C,aAAQ,GAAG,IAAI,YAAY,EAAkB,CAAC;;;;;;;;;;QAW5C,eAAU,GAAG,IAAI,YAAY,EAAkB,CAAC;QAEhE,WAAM,GAA0B,EAAE,CAAC;QACnC,gBAAW,GAAY,KAAK,CAAC;KAkKtC;;;;IA7JC,IAAsB,KAAK,CAAC,KAA4B;QACtD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;KAC1E;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;;;;;;;;IAWD,IAA2B,UAAU,CAAC,KAAc;QAClD,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5C;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAES,YAAY,CAAC,YAA4B;QACjD,MAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,GAAG,UAAU,GAAG,WAAW,CAAC;QAE/D,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,mBAAM,YAAY,EAAG,CAAC;KACvC;IAES,YAAY,CAAC,YAA4B;QACjD,MAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,GAAG,UAAU,GAAG,YAAY,CAAC;QAEhE,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;QAEvC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,mBAAM,YAAY,EAAG,CAAC;KACvC;IAEO,oBAAoB,CAAC,SAAyB,EAAE,UAA0B;QAChF,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YACxB,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC1B;QAED,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACrC;;;;;;IAOO,OAAO,CAAC,KAA4B,EAAE,SAAyB,EAAE,UAA2B;QAClG,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC7C,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YACjD,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;YAEtC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACxB;aAAM;YACL,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACvB;KACF;IAEO,cAAc,CAAC,KAA4B,EAAE,UAAmB;QACtE,KAAK,CAAC,OAAO,CAAC,IAAI;YAChB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;aAChD;YAED,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B,CAAC,CAAC;KACJ;IAEO,oBAAoB,CAAC,IAAoB;QAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvD;;;;;IAMO,iBAAiB,CAAC,QAA+B,EAAE;QACzD,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;QAEjC,MAAM,kBAAkB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;QAEtE,IAAI,WAAW,IAAI,WAAW,KAAK,kBAAkB,EAAE;YACrD,OAAO,IAAI,CAAC;SACb;QAED,MAAM,qBAAqB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,MAAM,CAAC;QAEnG,IAAI,qBAAqB,EAAE;YACzB,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;;IAGO,gBAAgB,CAAC,SAAyB,EAAE,UAA0B;QAC5E,IAAI,SAAS,CAAC,QAAQ,EAAE;YACtB,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC5B;KACF;IAEO,kBAAkB,CACxB,QAA+B,EAAE,EACjC,QAAgB,CAAC,EACjB,UAA2B,EAC3B,QAAQ,GAAG,EAAE;QAEb,KAAK,CAAC,OAAO,CAAC,IAAI;YAChB,MAAM,EAAE,QAAQ,KAAqB,IAAI,EAApB,WAAW,UAAK,IAAI,EAAnC,YAA4B,CAAO,CAAC;YAE1C,IAAI,KAAK,KAAK,kBAAkB,EAAE;gBAChC,OAAO;aACR;YAED,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;;gBAE3B,IAAI,WAAW,CAAC,QAAQ,EAAE;oBACxB,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACrD;gBAED,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;gBACxD,EAAE,KAAK,CAAC;aACT;YAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;SACjD,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;KACjB;IAEO,0BAA0B,CAAC,QAA+B,EAAE,EAAE,UAA2B,EAAE,QAAQ,GAAG,EAAE;QAC9G,KAAK,CAAC,OAAO,CAAC,IAAI;YAChB,MAAM,EAAE,QAAQ,KAAqB,IAAI,EAApB,WAAW,UAAK,IAAI,EAAnC,YAA4B,CAAO,CAAC;YAE1C,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBAC3B,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;aACxD;YAED,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;SACjD,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;KACjB;IAEO,mBAAmB,CAAC,YAA4B;QACtD,IAAI,YAAY,CAAC,QAAQ,EAAE;YACzB,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;SACnE;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC3D;;;YAhNF,SAAS;;;wBAWP,MAAM,SAAC,aAAa;uBAWpB,MAAM,SAAC,YAAY;uBAWnB,MAAM,SAAC,YAAY;yBAWnB,MAAM,SAAC,cAAc;oBAQrB,KAAK,SAAC,SAAS;yBAiBf,KAAK,SAAC,cAAc;;;MCnFV,iBAAiB;IAD9B;QAEU,kBAAa,GAAG,IAAI,OAAO,EAAkB,CAAC;QAC9C,kBAAa,GAAG,IAAI,OAAO,EAAkB,CAAC;KAiBvD;IAfC,iBAAiB,CAAC,YAA4B;QAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9C;IAED,iBAAiB,CAAC,YAA4B;QAC5C,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC9C;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;;;YAnBF,UAAU;;;ACAX;;;;;;;;;;;;;;;;;;;;;;;;;MA+Ba,mBAAoB,SAAQ,uBAAuB;IAK9D,YAAoB,eAAkC;QACpD,KAAK,EAAE,CAAC;QADU,oBAAe,GAAf,eAAe,CAAmB;KAErD;IAND,IAAI,QAAQ;QACV,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC5C;IAMD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,YAA4B;YACrE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,YAA4B;YACrE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACjC,CAAC,CAAC;KACJ;IAED,eAAe,CAAC,KAAa;QAC3B,OAAO,KAAK,CAAC;KACd;;;YA3BF,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,uSAA4C;gBAC5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,SAAS,EAAE,CAAC,iBAAiB,CAAC;aAC/B;;;YAhCQ,iBAAiB;;;MC8Bb,uBAAuB;IASlC,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;KAAI;IAJ1D,IAAI,WAAW;QACb,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC5D;IAID,OAAO,CAAC,KAAiB;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,CAAC,eAAe,CAAC,iBAAiB,mBAAM,IAAI,CAAC,IAAI,EAAG,CAAC;KAC1D;IAED,QAAQ,CAAC,YAA4B;QACnC,IAAI,CAAC,eAAe,CAAC,iBAAiB,mBAAM,YAAY,EAAG,CAAC;KAC7D;IAED,eAAe,CAAC,KAAa;QAC3B,OAAO,KAAK,CAAC;KACd;;;YAtDF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,wmBAAiD;gBACjD,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,UAAU,EAAE;oBACV,OAAO,CAAC,YAAY,EAAE;wBACpB,KAAK,CACH,WAAW,EACX,KAAK,CAAC;4BACJ,YAAY,EAAE,QAAQ;4BACtB,UAAU,EAAE,QAAQ;4BACpB,OAAO,EAAE,CAAC;4BACV,MAAM,EAAE,GAAG;yBACZ,CAAC,CACH;wBACD,UAAU,CAAC,uBAAuB,EAAE;4BAClC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;4BACtB,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;4BACnC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;yBACnC,CAAC;wBACF,UAAU,CAAC,uBAAuB,EAAE;4BAClC,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;4BACtB,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;4BACnC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;yBACrC,CAAC;qBACH,CAAC;iBACH;aACF;;;YA7BQ,iBAAiB;;;mBA+BvB,KAAK,SAAC,QAAQ;yBAEd,KAAK,SAAC,cAAc;;;MC5BV,6BAA6B;IAL1C;QAUyB,eAAU,GAAY,KAAK,CAAC;QAE7B,aAAQ,GAAG,IAAI,YAAY,EAAc,CAAC;QAE1C,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;KAK1D;IAHC,IAAI,WAAW;QACb,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KAC5D;;;YAlBF,SAAS,SAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,qgCAAwD;gBACxD,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAChD;;;4BAEE,SAAS,SAAC,eAAe;mBAEzB,KAAK,SAAC,QAAQ;yBAEd,KAAK,SAAC,cAAc;uBAEpB,MAAM,SAAC,YAAY;uBAEnB,MAAM,SAAC,YAAY;;;ACPtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAoCa,gBAAgB;;;YAL5B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,mBAAmB,EAAE,uBAAuB,EAAE,6BAA6B,CAAC;gBAC3F,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,iBAAiB,EAAE,aAAa,CAAC;aACvE;;;AC1CD;;;;;;;;;;;;;MAcsB,qBAAqB;IAD3C;;;;;;;;QAYqB,UAAK,GAA6B,IAAI,YAAY,EAAc,CAAC;;;;;;;;QAS3D,eAAU,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QASrD,kBAAa,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;;QASzD,oBAAe,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;QAQtE,YAAO,GAAsB,IAAI,YAAY,EAAO,CAAC;;;;;;;QAQhD,gBAAW,GAAsB,IAAI,YAAY,EAAO,CAAC;QAEnF,oBAAe,GAAY,MAAM,CAAC;QAG1B,cAAS,GAAa,KAAK,CAAC;QAG5B,cAAS,GAAa,KAAK,CAAC;QAC5B,aAAQ,GAAa,KAAK,CAAC;KAoJpC;;;;;;;;;;;IAtIC,IAA2B,UAAU,CAAC,KAAa;QACjD,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;KAC3E;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;;;;;;;;;IAWD,IAAyB,QAAQ,CAAC,KAAc;QAC9C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACrC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;;IAYD,IAAuB,MAAM,CAAC,KAAa;QACzC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAM,KAAK,EAAE,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;IASD,IAAqB,IAAI,CAAC,KAAa;QACrC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;;;IAWD,IAA0B,QAAQ,CAAC,KAAc;QAC/C,IAAI,CAAC,SAAS,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;;;;;;;;;;IAWD,IAAwB,OAAO,CAAC,KAAc;QAC5C,IAAI,CAAC,QAAQ,GAAQ,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;KACpE;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;;;;;IAWD,IAA8B,YAAY,CAAC,KAAa;QACtD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;;;;;;;;IAWD,IAAsB,KAAK,CAAC,KAAa;QACvC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;;;YAjNF,SAAS;;;6BAGP,KAAK,SAAC,mBAAmB;oBASzB,MAAM,SAAC,SAAS;yBAShB,MAAM,SAAC,eAAe;4BAStB,MAAM,SAAC,kBAAkB;8BASzB,MAAM,SAAC,oBAAoB;sBAQ3B,MAAM,SAAC,WAAW;0BAQlB,MAAM,SAAC,gBAAgB;yBAuBvB,KAAK,SAAC,cAAc;uBAiBpB,KAAK,SAAC,YAAY;qBAoBlB,KAAK,SAAC,UAAU;mBAgBhB,KAAK,SAAC,QAAQ;uBAkBd,KAAK,SAAC,aAAa;sBAkBnB,KAAK,SAAC,WAAW;2BAiBjB,KAAK,SAAC,iBAAiB;oBAkBvB,KAAK,SAAC,SAAS;;;ACvNlB;;;;;;;;;;;;;;;;;;;;;;;;;;MA8Ba,iBAAkB,SAAQ,qBAAqB;IAK1D,YAAY,OAAyB;QACnC,KAAK,EAAE,CAAC;KACT;IAND,IAAI,eAAe;QACjB,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxC;IAMD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC7B;IAED,qBAAqB;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACnE;IAED,OAAO,CAAC,KAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxB;KACF;IAED,QAAQ,CAAC,KAAiB;QACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;SAClC;KACF;IAED,gBAAgB,CAAC,KAAiB;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;KACF;IAED,kBAAkB,CAAC,KAAiB;QAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;SAC7B;KACF;IAED,cAAc,CAAC,KAAiB;QAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;KACF;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,MAAM,EAAE;YACV,IAAI,UAAU,GAAG,MAAM,CAAC;YACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;YACxE,MAAM,YAAY,GAAG,CAAC,CAAC;YACvB,MAAM,YAAY,GAAG,EAAE,CAAC;YACxB,MAAM,aAAa,GAAG,EAAE,CAAC;YACzB,MAAM,YAAY,GAAG,CAAC,CAAC;YACvB,MAAM,WAAW,GAAG,EAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,UAAU,IAAI,YAAY,CAAC;aAC5B;YAED,IAAI,gBAAgB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBACnC,UAAU,IAAI,aAAa,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,UAAU,IAAI,WAAW,CAAC;aAC3B;YAED,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,UAAU,IAAI,YAAY,GAAG,YAAY,CAAC;aAC3C;YAED,IAAI,CAAC,eAAe,GAAG,GAAG,UAAU,IAAI,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;SAC/B;KACF;IAED,aAAa,CAAC,KAAiB;QAC7B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACrB;KACF;;;YA5FF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,+6DAAyC;aAC1C;;;YAjC2B,gBAAgB;;;ACM5C;;;;;MAUa,cAAc;;;YAL1B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,CAAC;gBAC1C,OAAO,EAAE,CAAC,iBAAiB,CAAC;gBAC5B,YAAY,EAAE,CAAC,iBAAiB,CAAC;aAClC;;;MCwGY,kBAAkB;;;YAhF9B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,iBAAiB;oBACjB,cAAc;oBACd,kBAAkB;oBAClB,cAAc;oBACd,mBAAmB;oBACnB,gBAAgB;oBAChB,aAAa;oBACb,iBAAiB;oBACjB,uBAAuB;oBACvB,kBAAkB;oBAClB,eAAe;oBACf,gBAAgB;oBAChB,eAAe;oBACf,aAAa;oBACb,aAAa;oBACb,YAAY;oBACZ,YAAY;oBACZ,YAAY;oBACZ,gBAAgB;oBAChB,eAAe;oBACf,YAAY;oBACZ,iBAAiB;oBACjB,aAAa;oBACb,cAAc;oBACd,YAAY;oBACZ,eAAe;oBACf,aAAa;oBACb,gBAAgB;oBAChB,aAAa;oBACb,eAAe;oBACf,aAAa;oBACb,YAAY;oBACZ,WAAW;oBACX,eAAe;oBACf,gBAAgB;oBAChB,cAAc;iBACf;gBACD,OAAO,EAAE;oBACP,iBAAiB;oBACjB,cAAc;oBACd,kBAAkB;oBAClB,cAAc;oBACd,mBAAmB;oBACnB,gBAAgB;oBAChB,aAAa;oBACb,iBAAiB;oBACjB,uBAAuB;oBACvB,kBAAkB;oBAClB,eAAe;oBACf,gBAAgB;oBAChB,eAAe;oBACf,aAAa;oBACb,aAAa;oBACb,YAAY;oBACZ,YAAY;oBACZ,YAAY;oBACZ,gBAAgB;oBAChB,eAAe;oBACf,YAAY;oBACZ,iBAAiB;oBACjB,aAAa;oBACb,cAAc;oBACd,YAAY;oBACZ,eAAe;oBACf,aAAa;oBACb,gBAAgB;oBAChB,aAAa;oBACb,eAAe;oBACf,aAAa;oBACb,YAAY;oBACZ,WAAW;oBACX,eAAe;oBACf,gBAAgB;oBAChB,cAAc;iBACf;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;MC3GY,kBAAkB;;;YAP9B,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,eAAe,CAAC;gBAC1B,OAAO,EAAE,CAAC,eAAe,CAAC;gBAC1B,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;MCDY,cAAc;;;YAP1B,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;ACRM,MAAM,sCAAsC,GAAG;IACpD,EAAE,EAAO;QACP,WAAW,EAAE,OAAO;QACpB,OAAO,EAAE,SAAS;QAClB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,SAAS;QAClB,WAAW,EAAE,aAAa;QAC1B,OAAO,EAAE,SAAS;KACnB;IACD,EAAE,EAAO;QACP,WAAW,EAAE,QAAQ;QACrB,OAAO,EAAE,UAAU;QACnB,MAAM,EAAE,SAAS;QACjB,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,aAAa;QAC1B,OAAO,EAAE,OAAO;KACjB;IACD,EAAE,EAAO;QACP,WAAW,EAAE,QAAQ;QACrB,OAAO,EAAE,UAAU;QACnB,MAAM,EAAE,SAAS;QACjB,KAAK,EAAE,MAAM;QACb,OAAO,EAAE,OAAO;QAChB,WAAW,EAAE,YAAY;QACzB,OAAO,EAAE,SAAS;KACnB;IACD,EAAE,EAAO;QACP,WAAW,EAAE,WAAW;QACxB,OAAO,EAAE,QAAQ;QACjB,MAAM,EAAE,QAAQ;QAChB,KAAK,EAAE,QAAQ;QACf,OAAO,EAAE,gBAAgB;QACzB,WAAW,EAAE,YAAY;QACzB,OAAO,EAAE,OAAO;KACjB;CACF;;AC5BM,MAAM,MAAM,GAAG,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;AAEhG;;;;;;;MAWa,gCAAgC;IAgB3C,YAAoB,eAAkC;QAAlC,oBAAe,GAAf,eAAe,CAAmB;QAbtD,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QACjC,YAAO,GAAmC,EAAE,CAAC;QAGrC,aAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;QACnD,aAAQ,GAAG,sCAAsC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QAGzE,kBAAa,GAAkB;YAC7B,MAAM,EAAE,MAAM,IAAI,CAAC,KAAK,EAAE;YAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;SACjC,CAAC;KAEwD;IAE1D,IAAI,MAAM,CAAC,OAAuC;QAChD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;SACnD;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC7C;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;IAED,qBAAqB,CAAC,MAAM;QAC1B,OAAO,MAAM,CAAC,WAAW;cACrB,MAAM,CAAC,WAAW;cAClB,MAAM,CAAC,IAAI;kBACX,GAAG,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC,OAAO,EAAE;kBACpC,MAAM,CAAC,OAAO,CAAC;KACpB;IAED,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACnB;IAED,SAAS,CAAC,IAAY;QACpB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;IAED,SAAS,CAAC,IAAY;QACpB,OAAO,sCAAsC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;KAC5E;IAEO,cAAc,CAAC,UAA0C,EAAE,MAA+B;QAChG,OAAO,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC;KAC/F;IAEO,wBAAwB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,WAAW,EAA2B;QAC7G,OAAO,WAAW;cACd,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,WAAW,EAAE;cACrD,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;KAC9C;IAEO,oBAAoB,CAAC,OAAuC;QAClE,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,KAAK,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;KAC5F;IAEO,WAAW,CAAC,OAAuC;QACzD,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC;cACrB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,GAAG;cAC9C,OAAO,CAAC,MAAM,KAAK,CAAC;kBACpB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;kBACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;KAC1B;;;YA3EF,SAAS,SAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,imCAA0D;aAC3D;;;YAdQ,iBAAiB;;;oBAgBvB,SAAS,SAAC,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;ACvBxC,MAAM,yBAAyB,GAAG;IACvC,EAAE,EAAO;QACP,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,UAAU;QACnB,iBAAiB,EAAE,+BAA+B;KACnD;IACD,EAAE,EAAO;QACP,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,SAAS;QAClB,iBAAiB,EAAE,0BAA0B;KAC9C;IACD,EAAE,EAAO;QACP,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,UAAU;QACnB,iBAAiB,EAAE,kCAAkC;KACtD;IACD,EAAE,EAAO;QACP,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,QAAQ;QACjB,iBAAiB,EAAE,oBAAoB;KACxC;CACF;;ACFD,MAAM,qBAAqB,GAAG,eAAe,CAAC;AAC9C,MAAM,uBAAuB,GAAG,iBAAiB,CAAC;AAElD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+HsB,4BAA4B;IAOhD,YACU,iBAA6C,EAC7C,YAAiB,EACjB,eAAkC;QAFlC,sBAAiB,GAAjB,iBAAiB,CAA4B;QAC7C,iBAAY,GAAZ,YAAY,CAAK;QACjB,oBAAe,GAAf,eAAe,CAAmB;QAT5C,sBAAiB,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QAEnE,aAAQ,GAAG,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAEtE,mCAA8B,GAAmD,SAAS,CAAC;KAM/F;IAEJ,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAErC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;QAEzG,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CACD,CAAC,QAAwB;YACvB,IAAI,QAAQ,YAAY,YAAY,EAAE;gBACpC,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;aAC9C;SACF,EACD,CAAC,KAAwB;YACvB,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;SAChD,CACF,CACF,CAAC;KACH;IAED,eAAe,CAAC,QAA2B,EAAE,OAAyB;QACpE,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAE1D,IAAI,CAAC,iBAAiB,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE;YAClE,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC;YAEzC,IAAI,QAAQ,YAAY,KAAK,EAAE;gBAC7B,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAgC;oBAChD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;iBAChC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;aACjC;SACF;KACF;IAED,oBAAoB,CAAC,QAA2B,EAAE,OAAyB;QACzE,MAAM,aAAa,GACjB,QAAQ,CAAC,MAAM,KAAK,CAAC;cACjB,QAAQ,CAAC,KAAK;cACd,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,eAAe,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC;QAE/F,MAAM,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1D,MAAM,uBAAuB,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEhE,IAAI,aAAa,IAAI,aAAa,CAAC,OAAO,IAAI,CAAC,eAAe,IAAI,CAAC,iBAAiB,EAAE;YACpF,IAAI,CAAC,gBAAgB,iCAChB,aAAa,KAChB,IAAI,EAAE,uBAAuB,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,IAAI,GAAG,OAAO,IACzF,CAAC;SACJ;KACF;IAEO,6BAA6B,CAAC,OAAyB;QAC7D,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;QAE9F,OAAO,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KACnC;IAEO,WAAW,CAAC,eAAwC;QAC1D,MAAM,OAAO,GAAG,eAAe,CAAC,OAAO,GAAG,CAAC,eAAe,EAAE,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAE5G,IAAI,CAAC,8BAA8B,GAAG,IAAI,CAAC,iBAAiB,CAAC,4BAA4B,CACvF,gCAAgC,CACjC,CAAC;QACF,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;QAC9D,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QACzF,IAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACrD;IAEO,YAAY;QAClB,IAAI,IAAI,CAAC,8BAA8B,EAAE;YACvC,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;YAC1F,IAAI,CAAC,8BAA8B,GAAG,SAAS,CAAC;SACjD;KACF;IAEO,UAAU,CAAC,eAAwC;QACzD,MAAM,oBAAoB,GAAG,eAAe,CAAC,OAAO,CAAC;QAErD,OAAO,eAAe,IAAI,oBAAoB,CAAC;KAChD;IAEO,eAAe,CAAC,OAAyB;QAC/C,MAAM,YAAY,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAE3E,OAAO,YAAY,IAAI,YAAY,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,KAAK,MAAM,CAAC;KAC/E;IAEO,iBAAiB,CAAC,OAAyB;QACjD,MAAM,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAE/E,OAAO,cAAc,IAAI,cAAc,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,KAAK,MAAM,CAAC;KACnF;IAEO,aAAa,CAAC,OAAyB;QAC7C,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;KACnG;IAEO,gBAAgB,CAAC,QAAa;QACpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC9B,OAAO;SACR;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAC;QAExG,MAAM,kBAAkB,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;QAErE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;YAClC,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,WAAW,EAAE,kBAAkB,CAAC,KAAK;YACrC,MAAM,EAAE,kBAAkB,CAAC,MAAM;SAClC,CAAC,CAAC;KACJ;IAEO,mBAAmB,CAAC,eAAoB;QAC9C,OAAO;YACL,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE;gBACxC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;aACnC;SACF,CAAC;KACH;IAEO,0BAA0B,CAAC,eAAoB;QACrD,IAAI,kBAAkB,CAAC;QACvB,IAAI,iBAAiB,CAAC;QAEtB,IAAI,eAAe,CAAC,OAAO,IAAI,EAAE,eAAe,CAAC,eAAe,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE;YAC5F,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACvC,kBAAkB,GAAG,IAAI,CAAC,uBAAuB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SAC5E;aAAM,IAAI,eAAe,CAAC,eAAe,IAAI,eAAe,CAAC,OAAO,EAAE;YACrE,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAC1C,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;SAChE;QACD,OAAO,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC;KACjE;IAEO,uBAAuB,CAAC,OAAe;QAC7C,OAAO;YACL,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAChC,CAAC;KACH;;;ACvSH;;;;;;;;;MAUa,wBAAyB,SAAQ,4BAA4B;IACxE,YACE,YAAmC,EACnC,iBAA6C,EAC7C,eAAkC;QAElC,KAAK,CAAC,iBAAiB,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;KACzD;;;YARF,UAAU;;;YAbF,qBAAqB;YADrB,0BAA0B;YAF1B,iBAAiB;;;MCyBb,uBAAuB;;;YAbnC,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,aAAa,EAAE,oBAAoB,EAAE,WAAW,CAAC;gBAC5F,YAAY,EAAE,CAAC,gCAAgC,CAAC;gBAChD,SAAS,EAAE;oBACT,wBAAwB;oBACxB,qBAAqB;oBACrB;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,wBAAwB;wBAClC,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;ACrBD;;;;;;MAOa,2BAA2B;IADxC;QAEE,uBAAkB,GAAoB,IAAI,OAAO,EAAU,CAAC;KAS7D;IAPC,qBAAqB;QACnB,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KAC/C;IAED,IAAI,CAAC,QAAgB,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACrC;;;YAVF,UAAU;;;ACAX,MAAM,sBAAsB,GAAG,gCAAgC,CAAC;AAChE,MAAM,UAAU,GAAG,kBAAkB,CAAC;AAEtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAsFa,+BAA+B;IAM1C,YACU,kBAA+C,EAC/C,mBAA+C;QAD/C,uBAAkB,GAAlB,kBAAkB,CAA6B;QAC/C,wBAAmB,GAAnB,mBAAmB,CAA4B;QAPjD,4BAAuB,GAA4C,SAAS,CAAC;QAE7E,oBAAe,GAAW,CAAC,CAAC;QAC5B,oBAAe,GAAW,CAAC,CAAC;KAKhC;IAEJ,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;QAErC,OAAO,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,sBAAsB,EAAE,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC;QAE7F,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAEjD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,QAAQ,CAAC;YACP,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YAClD,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;SACnD,CAAC,CACH,CAAC;KACH;IAED,uBAAuB;QACrB,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;KACxD;IAEO,YAAY;QAClB,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE;YACjC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,CAAC;YAChH,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YACxD,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;SACtE;KACF;IAEO,cAAc;QACpB,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAChC,IAAI,CAAC,mBAAmB,CAAC,6BAA6B,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;YACrF,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;SAC1C;KACF;IAEO,8BAA8B,CAAC,aAA4B,EAAE,OAAyB;QAC5F,IAAI,cAAc,GAAG,KAAK,CAAC;QAE3B,aAAa,CAAC,OAAO,CAAC,WAAW;YAC/B,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;gBACpC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBACpC,cAAc,GAAG,IAAI,CAAC;aACvB;SACF,CAAC,CAAC;QAEH,OAAO,cAAc,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;KAC/E;IAEO,uBAAuB,CAAC,WAAoB,EAAE,OAAyB;QAC7E,MAAM,iCAAiC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtF,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QAEhE,IAAI,iCAAiC,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;YACxF,OAAO;SACR;QAED,IAAI,CAAC,eAAe,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACpD;IAEO,uBAAuB,CAAC,WAAoB,EAAE,OAAyB;QAC7E,MAAM,4BAA4B,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAErE,IAAI,4BAA4B,EAAE;YAChC,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEpD,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;gBACpD,OAAO;aACR;YAED,IAAI,CAAC,eAAe,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;SACxE;KACF;;;;YAvFF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YA1FQ,2BAA2B;YAF3B,0BAA0B;;;MCgBtB,mBAAmB;;;YAb/B,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,eAAe,CAAC;gBAC1B,SAAS,EAAE;oBACT,2BAA2B;oBAC3B,+BAA+B;oBAC/B,0BAA0B;oBAC1B;wBACE,OAAO,EAAE,iBAAiB;wBAC1B,QAAQ,EAAE,+BAA+B;wBACzC,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;;;MCTY,oBAAoB;;;YAPhC,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;gBACvD,OAAO,EAAE,CAAC,uBAAuB,EAAE,mBAAmB,CAAC;gBACvD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;MCAY,aAAa;;;YAPzB,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,EAAE;aACd;;;MCqBY,QAAQ;;;YArBpB,QAAQ,SAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,kBAAkB;oBAClB,kBAAkB;oBAClB,cAAc;oBACd,oBAAoB;oBACpB,aAAa;oBACb,gBAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,kBAAkB;oBAClB,kBAAkB;oBAClB,oBAAoB;oBACpB,cAAc;oBACd,aAAa;oBACb,gBAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,qBAAqB,CAAC;gBAClC,SAAS,EAAE,EAAE;aACd;;;MC1BY,WAAW,GAAG,IAAI,cAAc,CAAe,aAAa;;ACQzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyIa,iBAAiB;IAS5B,YAC+B,MAAqB,EACtB,IAAiB,EACrC,eAAmC;QAFd,WAAM,GAAN,MAAM,CAAe;QACtB,SAAI,GAAJ,IAAI,CAAa;QACrC,oBAAe,GAAf,eAAe,CAAoB;QAXrC,YAAO,GAAQ,EAAE,CAAC;QAIlB,aAAQ,GAAY,KAAK,CAAC;QAE1B,oBAAe,GAAQ,EAAE,CAAC;QAOhC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACxB;;;;;;;;;;;;;;;;;;IAmBD,WAAW;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;KAC3C;IAED,WAAW,CAAC,UAA0B,EAAE;QACtC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9F,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC9E,MAAM,QAAQ,GAAkB,OAAO,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QAE/E,OAAO,IAAI,UAAU,CAAC,QAAQ;YAC5B,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;;gBAEjC,IAAI,CAAC,6BAA6B,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC3E;iBAAM;;gBAEL,IAAI,CAAC,8BAA8B,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;aAC5E;SACF,CAAC,CAAC;KACJ;;;;;;;;;IAUD,gBAAgB;QACd,OAAO,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;KAChD;;;;;;;;;;;;;;;;;;;;IAqBD,WAAW,CAAC,QAAgB,EAAE,SAAkB,KAAK;QACnD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACzB,OAAO;SACR;QAED,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAE3C,IAAI,MAAM,EAAE;YACV,iBAAiB,EAAE,CAAC;SACrB;KACF;IAEO,SAAS,CAAC,MAAoB;;QAEpC,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAEvE,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;YACvF,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;SACjF;;QAGD,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;YACtB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;;;YAIpC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACxB,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;oBACxC,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;wBACnD,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;wBAC9B,MAAM;qBACP;iBACF;aACF;SACF;KACF;;;;;;IAOO,6BAA6B,CACnC,QAAgB,EAChB,OAAe,EACf,QAAuB,EACvB,QAAa,EACb,eAAoB,EAAE,EACtB,sBAA8B,IAAI;;QAGlC,MAAM,cAAc,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC;QAE5E,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QAEvG,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YACtC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7B;;QAGD,IAAI,CAAC,+BAA+B,CAClC,cAAc,EACd,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,mBAAmB,CACpB,CAAC;KACH;;;IAIO,+BAA+B,CACrC,QAAgB,EAChB,OAAe,EACf,QAAuB,EACvB,QAAa,EACb,YAAiB,EACjB,sBAA8B,IAAI;QAElC,MAAM,cAAc,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,QAAQ,CAAC;QAC5E,IAAI,eAAe,CAAC;;QAEpB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC/E,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE;gBACzC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;gBACvD,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;gBAC/D,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC7B;SACF;;QAGD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,cAAc,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,QAAQ;YAC7F,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;gBAChD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACpE,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;gBAC/D,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAC7B;;;YAID,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;gBACpD,IAAI,mBAAmB,KAAK,OAAO,EAAE;;oBAEnC,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;oBACrF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;oBACpD,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,6BAA6B,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;iBAClG;aACF;SACF,CAAC,CAAC;KACJ;;;IAIO,8BAA8B,CACpC,QAAgB,EAChB,OAAe,EACf,QAAuB,EACvB,QAAa,EACb,eAAoB,EAAE;QAEtB,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QACjG,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;YACtC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7B;;QAGD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;;YAEvB,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE;gBACpD,IAAI,QAAQ,KAAK,OAAO,EAAE;;oBAExB,YAAY,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;oBACrF,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;iBACzF;aACF;SACF;aAAM;;YAEL,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,QAAQ,KAAK,OAAO,EAAE;gBAChE,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;aACzF;;YAGD,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC5B,QAAQ,CAAC,QAAQ,EAAE,CAAC;SACrB;KACF;;IAGO,oBAAoB,CAAC,QAAgB,EAAE,OAAe,EAAE,QAAuB;QACrF,MAAM,YAAY,GAAQ,EAAE,CAAC;QAE7B,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;gBACnF,IAAI,WAAW,EAAE;oBACf,YAAY,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;iBACrC;aACF;SACF;QACD,OAAO,YAAY,CAAC;KACrB;;IAGO,eAAe,CAAC,QAAgB,EAAE,OAAe,EAAE,QAAuB;QAChF,IAAI,YAAY,GAAQ,EAAE,CAAC;QAE3B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YAC7D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YAEhD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;;gBAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAC5B,IAAI,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;wBACnC,YAAY,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;qBAC1C;iBACF;aACF;iBAAM;;gBAEL,YAAY,qBAAQ,OAAO,CAAE,CAAC;aAC/B;SACF;QACD,OAAO,YAAY,CAAC;KACrB;;IAGO,kBAAkB,CAAC,QAAgB,EAAE,OAAe,EAAE,IAAS;QACrE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACvC,YAAY,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aAC/E;SACF;KACF;;IAGO,UAAU,CAAC,QAAgB;;QAEjC,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC3C,MAAM,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;;YAEzC,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAClD,MAAM,eAAe,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACjD,IAAI,QAAQ,KAAK,KAAK,EAAE;oBACtB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC;iBACjD;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;iBACxD;aACF;SACF;KACF;;IAGO,aAAa,CAAC,QAAgB,EAAE,OAAe,EAAE,IAAS;QAChE,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QAElC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC;SAC5C;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;YACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SACtC;;QAGD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KAC3F;IAEO,cAAc,CAAC,GAAW,EAAE,QAAgB,EAAE,QAAuB;QAC3E,IAAI,KAAK,GAAG,YAAY,GAAG,QAAQ,CAAC;QACpC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,KAAK,IAAI,YAAY,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;SACzC;;QAGD,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAE7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,CAAC,CAAC;KACxC;;IAGO,qBAAqB,CAAC,QAAgB,EAAE,OAAe,EAAE,QAAuB,EAAE,YAAiB;QACzG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE;gBAC1B,YAAY,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;aACjC;SACF;QACD,OAAO,YAAY,CAAC;KACrB;;IAGO,WAAW,CAAC,GAAW;QAC7B,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;KAChC;;IAGO,WAAW,CAAC,YAAiB,EAAE,GAAQ;QAC7C,uCAAY,GAAG,GAAK,YAAY,EAAG;KACpC;;;4CAvVE,MAAM,SAAC,WAAW;YA/Jd,UAAU,uBAgKd,MAAM,SAAC,UAAU;YA1Jb,iBAAiB;;;ACE1B;;;MAKa,aAAc,SAAQ,iBAAiB;;;;YADnD,UAAU,SAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;AAGlC;SACgB,mBAAmB,CAAC,MAAoB,EAAE,IAAgB,EAAE,eAAkC;IAC5G,OAAO,IAAI,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;AAC1D;;ACRA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAmJa,YAAY;IACvB,OAAO,MAAM,CAAC,MAAoB;QAChC,OAAO;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,WAAW;oBACpB,QAAQ,EAAE,MAAM;iBACjB;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,UAAU,EAAE,yBAAyB;oBACrC,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,CAAC,WAAW,EAAE,iBAAiB,CAAC;iBACvC;gBACD;oBACE,OAAO,EAAE,aAAa;oBACtB,UAAU,EAAE,mBAAmB;oBAC/B,IAAI,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,iBAAiB,CAAC;iBACnD;aACF;SACF,CAAC;KACH;;;YAzBF,QAAQ,SAAC;gBACR,OAAO,EAAE,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;aAC9C;;SA0Be,yBAAyB,CAAC,MAAoB,EAAE,eAAkC;;IAEhG,MAAM,kBAAkB,GAAG;QACzB,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC3B,eAAe,CAAC,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SAC7D;KACF,CAAC;IACF,OAAO,kBAAkB,CAAC;AAC5B;;AC9LA;;;;;;"}