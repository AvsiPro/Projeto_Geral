{"version":3,"file":"po-page-change-password-base.component.d.ts","sources":["po-page-change-password-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { PoModalAction } from '@po-ui/ng-components';\r\nimport { PoPageChangePasswordRecovery } from './interfaces/po-page-change-password-recovery.interface';\r\nimport { PoPageChangePasswordRequirement } from './interfaces/po-page-change-password-requirement.interface';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.\r\n *\r\n * Apresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas\r\n * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.\r\n *\r\n * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando\r\n * definir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o\r\n * desenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\nexport declare abstract class PoPageChangePasswordBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caminho para a logomarca localizada na parte superior.\r\n     *\r\n     * > Caso seja indefinida o espaço se mantém preservado porém vazio.\r\n     */\r\n    logo?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caminho para a logomarca localizada no rodapé.\r\n     */\r\n    secondaryLogo?: string;\r\n    /**\r\n     * Token para solicitação de troca/recuperação de senha.\r\n     *\r\n     * > Esta propriedade será ignorada caso exista um token como parâmetro na URL inicial do template.\r\n     */\r\n    token?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * URL para a ação de retorno da página.\r\n     *\r\n     * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for\r\n     * falsa.\r\n     *\r\n     * @default `/`\r\n     */\r\n    urlBack: string;\r\n    /**\r\n     * Endpoint usado pelo template para realizar um POST. Quando preenchido, o método `p-submit` será ignorado e o componente adquirirá\r\n     * automatização para o processo de cadastro/troca de senha.\r\n     *\r\n     * ### Processo\r\n     * Ao digitar um valor válido nos campos de senha e pressionar **salvar**,\r\n     * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo os valores definidos pelo\r\n     * usuário.\r\n     *\r\n     * ```\r\n     * body {\r\n     *  token?: token,\r\n     *  oldPassword?: oldPassword,\r\n     *  newPassword: newPassword\r\n     * }\r\n     * ```\r\n     *\r\n     * O código de resposta HTTP de status esperado é `204`.\r\n     *\r\n     * Em caso de **sucesso**, será exibida a modal de confirmação de senha alterada.\r\n     *\r\n     * > O token será informado pela propriedade `p-token`do componente ou por um *query parameter* na URL do template.\r\n     *\r\n     * *Processo finalizado.*\r\n     *\r\n     * _______________\r\n     *\r\n     * #### Praticidade\r\n     * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,\r\n     * dispensa-se qualquer menção e/ou importação do componente `po-page-change-password` no restante da aplicação. O exemplo abaixo\r\n     * exemplifica a forma dinâmica com a qual o template de tela de troca de senha pode ser gerado ao navegar para rota `/change-password`, e\r\n     * também como ele se comunica com o serviço para efetuação do processo de troca de senha do usuário e solicitação de nova senha.\r\n     * Basta definir nas configurações de rota:\r\n     *\r\n     *\r\n     * ```\r\n     *   import { PoModalPasswordRecoveryType, PoPageChangePasswordComponent } from '@po-ui/ng-templates';\r\n     *\r\n     *   ...\r\n     *   const routes: Routes = [\r\n     *     {\r\n     *       path: 'change-password', component: PoPageChangePasswordComponent, data: {\r\n     *         serviceApi: 'https://po-ui.io/sample/api/new-password',\r\n     *         recovery: {\r\n     *           url: 'https://po-ui.io/sample/api/users',\r\n     *           type: PoModalPasswordRecoveryType.All,\r\n     *           contactMail: 'dev.po@po-ui.com',\r\n     *           phoneMask: '9-999-999-9999'\r\n     *         }\r\n     *       }\r\n     *     }\r\n     *     ...\r\n     *   ];\r\n     *\r\n     *   @NgModule({\r\n     *     imports: [RouterModule.forRoot(routes)],\r\n     *     exports: [RouterModule]\r\n     *   })\r\n     *   export class AppRoutingModule { }\r\n     * ```\r\n     *\r\n     *\r\n     * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de troca de senha. E `recovery` é a interface\r\n     * `PoPageChangePasswordRecovery` responsável pelas especificações contidas na modal de recuperação de senha.\r\n     *\r\n     * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n     *\r\n     */\r\n    urlNewPassword?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Função executada ao submeter o form pelo botão salvar.\r\n     *\r\n     * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo\r\n     * método `openConfirmation`. Exemplo:\r\n     *\r\n     * ```\r\n     * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;\r\n     *\r\n     * onSubmit() {\r\n     *  this.changePassword.openConfirmation();\r\n     * }\r\n     *\r\n     * ```\r\n     * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.\r\n     */\r\n    submit: EventEmitter<any>;\r\n    confirmPassword: string;\r\n    currentPassword: string;\r\n    modalAction: PoModalAction;\r\n    newPassword: string;\r\n    recoveryUrlType: string;\r\n    showRequirements: boolean;\r\n    protected validatorChange: any;\r\n    private _hideCurrentPassword;\r\n    private _recovery;\r\n    private _requirements;\r\n    private _urlHome;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Esconde o campo `Senha atual` para que o template seja para criação de senha.\r\n     *\r\n     * @default `false`\r\n     */\r\n    set hideCurrentPassword(value: boolean);\r\n    get hideCurrentPassword(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * URL para a ação do link `Esqueceu a senha`.\r\n     *\r\n     * A propriedade aceita os seguintes tipos:\r\n     *\r\n     * - **String**: informe uma url externa ou uma rota válida;\r\n     * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:\r\n     * ```\r\n     * <po-page-change-password>\r\n     *      [recovery]=\"this.myFunc.bind(this)\";\r\n     * </po-page-change-password>\r\n     * ```\r\n     *\r\n     * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.\r\n     *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,\r\n     *   **email** para contato e **máscara** do campo de telefone.\r\n     *\r\n     * > Caso não tenha valor o link `Esqueceu a senha` desaparece.\r\n     */\r\n    set recovery(value: string | Function | PoPageChangePasswordRecovery);\r\n    get recovery(): string | Function | PoPageChangePasswordRecovery;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Lista de regras para criação e alteração de senha.\r\n     */\r\n    set requirements(value: Array<PoPageChangePasswordRequirement>);\r\n    get requirements(): Array<PoPageChangePasswordRequirement>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método\r\n     * `openConfirmation`.\r\n     *\r\n     * @default `/`\r\n     */\r\n    set urlHome(value: string);\r\n    get urlHome(): string;\r\n    abstract navigateTo(url: string): void;\r\n}\r\n"]}