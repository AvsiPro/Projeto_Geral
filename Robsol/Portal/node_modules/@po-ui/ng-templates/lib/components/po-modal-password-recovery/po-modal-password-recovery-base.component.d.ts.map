{"version":3,"file":"po-modal-password-recovery-base.component.d.ts","sources":["po-modal-password-recovery-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { PoLanguageService } from '@po-ui/ng-components';\r\nimport { PoModalPasswordRecoveryType } from './enums/po-modal-password-recovery-type.enum';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-modal-password-recovery` é utilizado como template para solicitação de troca de senha.\r\n *\r\n * É composto por uma modal que possui três telas, cada uma com as seguintes características:\r\n *\r\n * - A primeira possui campos para preenchimento de email ou número de telefone;\r\n * - Tela com campo para preenchimento de código SMS enviado para o número de telefone enviado;\r\n * - A terceira se trata de uma confirmação de envio de link para a caixa de email do usuário.\r\n *\r\n *\r\n * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo\r\n * para recuperação de senha, bastando definir uma url para requisição dos recursos.\r\n * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.\r\n * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.\r\n *\r\n *\r\n * Para a modal de digitação de código SMS, é possível definir uma mensagem de erro\r\n * customizada com a propriedade `p-code-error` e há um link para\r\n * reenvio de código por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuário e a quantidade\r\n * de vezes em que o usuário fez a solicitação de reenvio.\r\n *\r\n * > É indicada a utilização da tela de digitação para envio de código SMS apenas\r\n * se a opção por envio SMS for disponibilizada para o usuário.\r\n *\r\n *\r\n * A modal de confirmação contém uma ação de reenvio e o evento `p-submit`\r\n * é quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.\r\n *\r\n * > A tela de confirmação é indicada para quando o usuário solicitar a troca através do email.\r\n *\r\n * > Os textos das modals são pré-definidos, imutáveis e são traduzidos de acordo com o idioma do *browser* (pt, en e es)\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n */\r\nexport declare abstract class PoModalPasswordRecoveryBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Definição de mensagem de erro customizada para quando o usuário passar um código SMS inválido ou errado.\r\n     */\r\n    codeError: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Endpoint usado pelo template para requisição do recurso. Quando preenchido,\r\n     * o métodos `p-submit` e `p-submit-code` serão ignorados e o componente adquirirá automatização\r\n     * para o processo de solicitação de troca de senha.\r\n     *\r\n     * ### Processos\r\n     * Ao digitar um valor válido no campo de email/telefone e pressionar **enviar**,\r\n     * o componente fará uma requisição `POST` na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário.\r\n     *\r\n     * ```\r\n     * body {\r\n     *  email: email,\r\n     *  retry?: retry\r\n     * }\r\n     * ```\r\n     *\r\n     *\r\n     * #### Recuperação por email\r\n     * Para a recuperação de senha por **email**, o código de resposta HTTP de status esperado é `204`.\r\n     *\r\n     * Em caso de **sucesso**, será exibida a modal de confirmação de e-mail para o usuário.\r\n     *\r\n     *\r\n     * > A ação **Reenviar** na tela de confirmação efetua uma nova requisição\r\n     * passando-se o objeto com incremento para o valor da propriedade **retry**.\r\n     *\r\n     * *Processo finalizado.*\r\n     *\r\n     *\r\n     * #### Recuperação por SMS\r\n     * Se a opção de recuperação for por **SMS**, o código de status de sucesso deve ser `200`.\r\n     * Em caso de **sucesso**, abre-se a modal de digitação de código SMS e a resposta\r\n     * desta requisição deve retornar uma definição de dados abaixo:\r\n     *\r\n     * ```\r\n     * 200:\r\n     *  {\r\n     *    hash: hash,\r\n     *    urlValidationCode?: url\r\n     *  }\r\n     * ```\r\n     *\r\n     *\r\n     * - O **hash** será o código de validação da solicitação do SMS para ser enviado juntamente com o código de verificação do SMS;\r\n     * - **urlValidationCode** é a url usada para validação do código enviado por SMS.\r\n     *\r\n     *\r\n     * > Caso não seja passado urlValidationCode, o endpoint usado para validação do código será `<p-url-recovery>/validation`.\r\n     *\r\n     *\r\n     * #### Validação do código SMS\r\n     * Ao digitar um valor válido no campo de código SMS e pressionar **continuar**, o componente fará uma requisição `POST` contendo:\r\n     *\r\n     * ```\r\n     * POST /<p-url-recovery>/validation OU /<urlValidationCode>\r\n     * Body {\r\n     *  hash: hash,\r\n     *  code: code\r\n     * }\r\n     * ```\r\n     *\r\n     *\r\n     * O código de resposta HTTP de status esperado é `200`.\r\n     *\r\n     * Em caso de **erro** na validação do código SMS, a modal se mantém com o campo para digitação\r\n     * de código SMS\r\n     *\r\n     *\r\n     * > Pode-se atribuir a mensagem de erro (message) para o atributo `p-code-error` conforme retorno abaixo:\r\n     *\r\n     * ```\r\n     * 400\r\n     *  {\r\n     *    error {\r\n     *      message: 'Error Message'\r\n     *    }\r\n     *  }\r\n     * ```\r\n     *\r\n     *\r\n     * Em caso de **sucesso**, espera-se a resposta desta requisição retornando a seguinte definição:\r\n     *\r\n     * ```\r\n     * 200:\r\n     *  {\r\n     *    token: token,\r\n     *    urlChangePassword?: url\r\n     *  }\r\n     * ```\r\n     *\r\n     *\r\n     * - **token**: Token de alteração de senha;\r\n     * - **urlChangePassword**: url para o formulário de alteração de senha.\r\n     *\r\n     *\r\n     * O componente está configurado para redirecionar para a url estabelecida em `urlChangePassword`.\r\n     *\r\n     * > Caso não seja passado valor para urlChangePassword,\r\n     * a url usada para validação será a `<p-url-recovery>/changePassword?token=<token>`.\r\n     *\r\n     * *Processo finalizado.*\r\n     */\r\n    urlRecovery?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ação contendo como parâmetro o código enviado por SMS e digitado pelo usuário.\r\n     *\r\n     * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n     */\r\n    codeSubmit: EventEmitter<any>;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Ação contendo o email como parâmetro e que é executada quando o usuário clica sobres os botões de 'enviar' e 'reenviar' e-mail.\r\n     *\r\n     * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.\r\n     */\r\n    submit: EventEmitter<any>;\r\n    email: string;\r\n    maxLength: number;\r\n    minLength: number;\r\n    modalPasswordRecoveryTypeAll: boolean;\r\n    phone: string;\r\n    smsCode: string;\r\n    smsCodeErrorMessage: string;\r\n    literals: {\r\n        cancelButton: string;\r\n        closeButton: string;\r\n        continueButton: string;\r\n        email: string;\r\n        emailErrorMessagePhrase: string;\r\n        emailSentConfirmationPhrase: string;\r\n        emailSentTitle: string;\r\n        forgotPasswordTitle: string;\r\n        insertCode: string;\r\n        insertEmail: string;\r\n        insertPhone: string;\r\n        phoneErrorMessagePhrase: string;\r\n        prepositionIn: string;\r\n        prepositionOr: string;\r\n        recoveryPasswordPhrase: string;\r\n        resendEmailButton: string;\r\n        resendSmsCodePhrase: string;\r\n        sendAgain: string;\r\n        sendAgainPhrase: string;\r\n        sendButton: string;\r\n        sms: string;\r\n        smsCode: string;\r\n        smsCodeErrorMessagePhrase: string;\r\n        sentSmsCodePhrase: string;\r\n        supportContact: string;\r\n        telephone: string;\r\n        typeCodeTitle: string;\r\n    };\r\n    private _contactEmail;\r\n    private _phoneMask;\r\n    private _type;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Definição do e-mail que é exibido na mensagem para contato de suporte.\r\n     */\r\n    set contactEmail(value: string);\r\n    get contactEmail(): string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Definição da mascara do campo de telefone.\r\n     *\r\n     * @default `(99) 99999-9999`\r\n     */\r\n    set phoneMask(value: string);\r\n    get phoneMask(): string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define o tipo de recuperação de senha que será exibido.\r\n     *\r\n     * @default `PoModalPasswordRecoveryType.Email`\r\n     *\r\n     */\r\n    set type(value: PoModalPasswordRecoveryType);\r\n    get type(): PoModalPasswordRecoveryType;\r\n    constructor(languageService: PoLanguageService);\r\n    private concatenateSMSErrorMessage;\r\n    /**\r\n     * Acão para conclusão de processo e fechamento da modal. Indica-se sua utilização\r\n     * para após o envio e validação do código SMS enviado pelo usuário.\r\n     *\r\n     * > Nas modals em que há a ação de 'cancelar' dispensa-se o uso desta ação pois o componente já trata o fechamento da modal.\r\n     */\r\n    abstract completed(): void;\r\n    /**\r\n     * Abre a modal de preenchimento de email ou número de telefone para solicitação de troca de senha.\r\n     */\r\n    abstract open(): void;\r\n    /**\r\n     * Abre a modal de confirmação de envio de email.\r\n     */\r\n    abstract openConfirmation(): void;\r\n    /**\r\n     * Abre a modal de preenchimento do código SMS enviado ao usuário.\r\n     */\r\n    abstract openSmsCode(): void;\r\n}\r\n"]}