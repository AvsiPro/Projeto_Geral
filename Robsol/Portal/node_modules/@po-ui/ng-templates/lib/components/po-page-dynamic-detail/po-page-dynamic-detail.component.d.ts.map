{"version":3,"file":"po-page-dynamic-detail.component.d.ts","sources":["po-page-dynamic-detail.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PoBreadcrumb, PoDialogService, PoLanguageService, PoNotificationService, PoPageAction } from '@po-ui/ng-components';\r\nimport { PoPageDynamicDetailActions } from './interfaces/po-page-dynamic-detail-actions.interface';\r\nimport { PoPageDynamicDetailField } from './interfaces/po-page-dynamic-detail-field.interface';\r\nimport { PoPageDynamicService } from '../../services/po-page-dynamic/po-page-dynamic.service';\r\nimport { PoPageDynamicDetailActionsService } from './po-page-dynamic-detail-actions.service';\r\nimport { PoPageDynamicDetailOptions } from './interfaces/po-page-dynamic-detail-options.interface';\r\nimport { PoPageCustomizationService } from './../../services/po-page-customization/po-page-customization.service';\r\nexport declare const poPageDynamicDetailLiteralsDefault: {\r\n    en: {\r\n        pageActionEdit: string;\r\n        pageActionRemove: string;\r\n        pageActionBack: string;\r\n        confirmRemoveTitle: string;\r\n        confirmRemoveMessage: string;\r\n        removeNotificationSuccess: string;\r\n        registerNotFound: string;\r\n    };\r\n    es: {\r\n        pageActionEdit: string;\r\n        pageActionRemove: string;\r\n        pageActionBack: string;\r\n        confirmRemoveTitle: string;\r\n        confirmRemoveMessage: string;\r\n        removeNotificationSuccess: string;\r\n        registerNotFound: string;\r\n    };\r\n    pt: {\r\n        pageActionEdit: string;\r\n        pageActionRemove: string;\r\n        pageActionBack: string;\r\n        confirmRemoveTitle: string;\r\n        confirmRemoveMessage: string;\r\n        removeNotificationSuccess: string;\r\n        registerNotFound: string;\r\n    };\r\n    ru: {\r\n        pageActionEdit: string;\r\n        pageActionRemove: string;\r\n        pageActionBack: string;\r\n        confirmRemoveTitle: string;\r\n        confirmRemoveMessage: string;\r\n        removeNotificationSuccess: string;\r\n        registerNotFound: string;\r\n    };\r\n};\r\n/**\r\n * @description\r\n *\r\n * O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,\r\n * o mesmo também suporta metadados conforme especificado na documentação.\r\n *\r\n *\r\n * ### Utilização via rota\r\n *\r\n * Ao utilizar as rotas para carregar o template, o `page-dynamic-detail` disponibiliza propriedades para\r\n * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:\r\n *\r\n * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi\r\n * e depois irá buscar da rota definida na propriedade serviceLoadApi.\r\n *\r\n * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,\r\n * se o cache não existe será disparado uma notificação.\r\n *\r\n * ```\r\n * {\r\n *   path: 'people/:id',\r\n *   component: PoPageDynamicDetailComponent,\r\n *   data: {\r\n *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados\r\n *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados\r\n *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o\r\n * tipo do metadado esperado e a versão cacheada pelo browser.\r\n *\r\n * O formato esperado na resposta da requisição está especificado na interface\r\n * [PoPageDynamicDetailMetadata](/documentation/po-page-dynamic-detail#po-page-dynamic-detail-metadata). Por exemplo:\r\n *\r\n * ```\r\n *  {\r\n *   version: 1,\r\n *   title: 'Person Detail',\r\n *   fields: [\r\n *     { property: 'id', key: true, disabled: true },\r\n *     { property: 'status' },\r\n *     { property: 'name' },\r\n *     { property: 'nickname' },\r\n *     { property: 'birthdate', label: 'Birth date' },\r\n *     { property: 'genre' },\r\n *     { property: 'city' },\r\n *     { property: 'country' }\r\n *   ]\r\n * }\r\n * ```\r\n *\r\n * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:\r\n * ```\r\n * GET {end-point}/metadata?type=detail&version={version}\r\n * ```\r\n *\r\n * @example\r\n *\r\n * <example name=\"po-page-dynamic-detail-user\" title=\"PO Page Dynamic Detail User\">\r\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.html\"> </file>\r\n *  <file name=\"sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.ts\"> </file>\r\n * </example>\r\n */\r\nexport declare class PoPageDynamicDetailComponent implements OnInit, OnDestroy {\r\n    private router;\r\n    private activatedRoute;\r\n    private poNotification;\r\n    private poDialogService;\r\n    private poPageDynamicService;\r\n    private poPageDynamicDetailActionsService;\r\n    private poPageCustomizationService;\r\n    /** Objeto com propriedades do breadcrumb. */\r\n    breadcrumb?: PoBreadcrumb;\r\n    /**\r\n     * Função ou serviço que será executado na inicialização do componente.\r\n     *\r\n     * A propriedade aceita os seguintes tipos:\r\n     * - `string`: *Endpoint* usado pelo componente para requisição via `POST`.\r\n     * - `function`: Método que será executado.\r\n     *\r\n     * O retorno desta função deve ser do tipo `PoPageDynamicDetailOptions`,\r\n     * onde o usuário poderá customizar novos campos, breadcrumb, title e actions\r\n     *\r\n     * Por exemplo:\r\n     *\r\n     * ```\r\n     * getPageOptions(): PoPageDynamicDetailOptions {\r\n     * return {\r\n     *   actions:\r\n     *     { new: 'new', edit: 'edit/:id', remove: true },\r\n     *   fields: [\r\n     *     { property: 'idCard', gridColumns: 6 }\r\n     *   ]\r\n     * };\r\n     * }\r\n     *\r\n     * ```\r\n     * Para referenciar a sua função utilize a propriedade `bind`, por exemplo:\r\n     * ```\r\n     *  [p-load]=\"onLoadOptions.bind(this)\"\r\n     * ```\r\n     */\r\n    onLoad: string | (() => PoPageDynamicDetailOptions);\r\n    /** Título da página. */\r\n    title: string;\r\n    /**\r\n     * @description\r\n     *\r\n     * Endpoint usado pelo template para requisição do recurso que serão exibido.\r\n     *\r\n     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\r\n     * setados como `key: true`.\r\n     *\r\n     * > `DELETE {end-point}/{keys}`\r\n     *\r\n     * ```\r\n     *  <po-page-dynamic-detail\r\n     *    [p-actions]=\"{ remove: '/' }\"\r\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n     *    p-service=\"/api/po-samples/v1/people\"\r\n     *    ...>\r\n     *  </po-page-dynamic-detail>\r\n     * ```\r\n     *\r\n     * Resquisição disparada, onde a propriedade `id` é igual a 2:\r\n     *\r\n     * ```\r\n     *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n     *  Host: localhost:4000\r\n     *  Connection: keep-alive\r\n     *  Accept: application/json, text/plain\r\n     *  ...\r\n     * ```\r\n     *\r\n     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\r\n     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\r\n     * >\r\n     * > `GET {end-point}/metadata?type=detail&version={version}`\r\n     */\r\n    serviceApi: string;\r\n    literals: any;\r\n    model: any;\r\n    private subscriptions;\r\n    private _actions;\r\n    private _autoRouter;\r\n    private _duplicates;\r\n    private _fields;\r\n    private _keys;\r\n    private _pageActions;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Define as ações da página de acordo com a interface `PoPageDynamicDetailActions`.\r\n     */\r\n    set actions(value: PoPageDynamicDetailActions);\r\n    get actions(): PoPageDynamicDetailActions;\r\n    /**\r\n     * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.\r\n     *\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações\r\n     * estejam definidas nas ações.\r\n     *\r\n     * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.\r\n     *\r\n     * @default false\r\n     */\r\n    set autoRouter(value: boolean);\r\n    get autoRouter(): boolean;\r\n    /** Lista dos campos exibidos na página. */\r\n    set fields(value: Array<PoPageDynamicDetailField>);\r\n    get fields(): Array<PoPageDynamicDetailField>;\r\n    constructor(router: Router, activatedRoute: ActivatedRoute, poNotification: PoNotificationService, poDialogService: PoDialogService, poPageDynamicService: PoPageDynamicService, poPageDynamicDetailActionsService: PoPageDynamicDetailActionsService, poPageCustomizationService: PoPageCustomizationService, languageService: PoLanguageService);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    get duplicates(): any[];\r\n    get keys(): any[];\r\n    get pageActions(): PoPageAction[];\r\n    private remove;\r\n    private confirmRemove;\r\n    private executeRemove;\r\n    private formatUniqueKey;\r\n    private goBack;\r\n    private executeBackAction;\r\n    private loadData;\r\n    private setUndefinedToModelAndActions;\r\n    private getMetadata;\r\n    private navigateTo;\r\n    private openEdit;\r\n    private executeEditAction;\r\n    private openEditUrl;\r\n    private resolveUrl;\r\n    private getPageActions;\r\n    private getKeysByFields;\r\n    private getDuplicatesByFields;\r\n    private isObject;\r\n    private loadDataFromAPI;\r\n    private loadOptionsOnInitialize;\r\n    private getPoDynamicPageOptions;\r\n}\r\n"]}