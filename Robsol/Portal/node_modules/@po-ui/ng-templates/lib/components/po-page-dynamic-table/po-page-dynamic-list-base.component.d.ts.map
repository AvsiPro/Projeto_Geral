{"version":3,"file":"po-page-dynamic-list-base.component.d.ts","sources":["po-page-dynamic-list-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { PoBreadcrumb } from '@po-ui/ng-components';\r\nimport { PoPageDynamicTableFilters } from './interfaces/po-page-dynamic-table-filters.interface';\r\nexport declare class PoPageDynamicListBaseComponent {\r\n    /** Objeto com propriedades do breadcrumb. */\r\n    breadcrumb?: PoBreadcrumb;\r\n    /** Endpoint da API dos recursos que serão exibidos. */\r\n    /**\r\n     * @description\r\n     *\r\n     * Endpoint usado pelo template para requisição dos recursos que serão exibidos.\r\n     *\r\n     * Ao realizar requisições de busca, podem ser enviados os parâmetros (caso possuam valor): `page`, `pageSize`, `search` e `order`.\r\n     *\r\n     * Caso a coluna estiver ordenada descendentemente será enviada da seguinte forma: `-name`, se for ordenada\r\n     * ascendentemente será enviada apenas com o nome da coluna, por exemplo: `name`.\r\n     *\r\n     * Exemplo de uma requisição de busca:\r\n     *\r\n     * > `GET {end-point}/{resource}?page=1&pageSize=10&search=components&order=-name`\r\n     *\r\n     * Caso a ação `remove` estiver configurada, será feito uma requisição de exclusão nesse mesmo endpoint passando os campos\r\n     * setados como `key: true`.\r\n     *\r\n     * > `DELETE {end-point}/{keys}`\r\n     *\r\n     * ```\r\n     *  <po-page-dynamic-table\r\n     *    [p-actions]=\"{ remove: true }\"\r\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n     *    p-service=\"/api/po-samples/v1/people\"\r\n     *    ...>\r\n     *  </po-page-dynamic-table>\r\n     * ```\r\n     *\r\n     * Resquisição disparada, onde a propriedade `id` é igual a 2:\r\n     *\r\n     * ```\r\n     *  DELETE /api/po-samples/v1/people/2 HTTP/1.1\r\n     *  Host: localhost:4000\r\n     *  Connection: keep-alive\r\n     *  Accept: application/json, text/plain\r\n     *  ...\r\n     * ```\r\n     *\r\n     * Para a ação `removeAll`, será feito uma requisição de exclusão em lote para esse mesmo endpoint passando, uma lista\r\n     * de objetos com os campos setados como `key: true` via `payload`.\r\n     *\r\n     * > `DELETE {end-point}`\r\n     *\r\n     * > `Payload: [ {key}, {key} ... {key} ]`\r\n     *\r\n     * ```\r\n     *  <po-page-dynamic-table\r\n     *    [p-actions]=\"{ removeAll: true }\"\r\n     *    [p-fields]=\"[ { property: 'id', key: true } ]\"\r\n     *    p-service=\"/api/po-samples/v1/people\"\r\n     *    ...>\r\n     *  </po-page-dynamic-table>\r\n     * ```\r\n     *\r\n     * Resquisição disparada, onde foram selecionados 3 itens para serem removidos:\r\n     *\r\n     * ```\r\n     *  DELETE /api/po-samples/v1/people HTTP/1.1\r\n     *  Host: localhost:4000\r\n     *  Connection: keep-alive\r\n     *  Accept: application/json, text/plain\r\n     *  ...\r\n     * ```\r\n     *\r\n     * Request payload:\r\n     *\r\n     * ```\r\n     * [{\"id\":2},{\"id\":4},{\"id\":5}]\r\n     * ```\r\n     *\r\n     * > Caso esteja usando metadados com o template, será disparado uma requisição na inicialização do template para buscar\r\n     * > os metadados da página passando o tipo do metadado esperado e a versão cacheada pelo browser.\r\n     * >\r\n     * > `GET {end-point}/metadata?type=list&version={version}`\r\n     */\r\n    serviceApi: string;\r\n    /** Título da página. */\r\n    title: string;\r\n    private _autoRouter;\r\n    private _columns;\r\n    private _duplicates;\r\n    private _fields;\r\n    private _filters;\r\n    private _keys;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`\r\n     *\r\n     * As rotas criadas serão baseadas na propriedade `p-actions`.\r\n     *\r\n     * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.\r\n     *\r\n     * @default false\r\n     */\r\n    set autoRouter(value: boolean);\r\n    get autoRouter(): boolean;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Lista dos campos usados na tabela e busca avançada.\r\n     *\r\n     *\r\n     * > Caso não seja definido fields a tabela assumirá o comportamento padrão.\r\n     */\r\n    set fields(fields: Array<PoPageDynamicTableFilters>);\r\n    get fields(): Array<PoPageDynamicTableFilters>;\r\n    set columns(value: any[]);\r\n    get columns(): any[];\r\n    set duplicates(value: Array<string>);\r\n    get duplicates(): Array<string>;\r\n    set filters(value: Array<PoPageDynamicTableFilters>);\r\n    get filters(): Array<PoPageDynamicTableFilters>;\r\n    set keys(value: Array<string>);\r\n    get keys(): Array<string>;\r\n    private setFieldsProperties;\r\n}\r\n"]}