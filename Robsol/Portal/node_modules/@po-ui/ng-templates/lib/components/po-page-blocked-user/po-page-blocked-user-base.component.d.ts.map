{"version":3,"file":"po-page-blocked-user-base.component.d.ts","sources":["po-page-blocked-user-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';\r\nimport { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';\r\n/**\r\n * @description\r\n *\r\n * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.\r\n * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.\r\n *\r\n * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.\r\n * Os textos das telas são pré-definidos e imutáveis, porém,\r\n * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.\r\n *\r\n * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.\r\n *\r\n * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite\r\n * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:\r\n * ```\r\n *   \"assets\": [\r\n *     \"src/assets\",\r\n *     \"src/favicon.ico\",\r\n *     {\r\n *       \"glob\": \"**\\/*\",\r\n *       \"input\": \"node_modules/@po-ui/style/images\",\r\n *       \"output\": \"assets/images\"\r\n *     }\r\n *   ]\r\n * ```\r\n *\r\n * _______________\r\n *\r\n * #### Praticidade\r\n * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,\r\n * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica\r\n * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:\r\n *\r\n *\r\n * ```\r\n *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';\r\n *\r\n *   ...\r\n *   const routes: Routes = [\r\n *     {\r\n *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {\r\n *         contactEmail: 'dev.po@po-ui.com',\r\n *         contactPhone: '0800 1234 000',\r\n *         reason: PoPageBlockedUserReason.ExpiredPassword,\r\n *         urlBack: '/home'\r\n *       }\r\n *     }\r\n *     ...\r\n *   ];\r\n *\r\n *   @NgModule({\r\n *     imports: [RouterModule.forRoot(routes)],\r\n *     exports: [RouterModule]\r\n *   })\r\n *   export class AppRoutingModule { }\r\n * ```\r\n *\r\n * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.\r\n *\r\n */\r\nexport declare class PoPageBlockedUserBaseComponent {\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir\r\n     * tanto rotas internas quanto externas.\r\n     */\r\n    contactEmail: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.\r\n     *\r\n     * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.\r\n     */\r\n    contactPhone: string;\r\n    /** Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão do PO UI. */\r\n    logo?: string;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Caminho para a logomarca localizada no rodapé.\r\n     */\r\n    secondaryLogo?: string;\r\n    private _params;\r\n    private _reason;\r\n    private _urlBack;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Designação de valores usados para a customização da mensagem de bloqueio.\r\n     * Confira abaixo os valores pré-definidos.\r\n     *\r\n     * ```\r\n     *  const customLiterals: PoPageBlockedUserReasonParams = {\r\n     *    attempts: 5,\r\n     *    days: 90,\r\n     *    hours: 24\r\n     *  };\r\n     * ```\r\n     *\r\n     * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.\r\n     *\r\n     * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.\r\n     *\r\n     */\r\n    set params(value: PoPageBlockedUserReasonParams);\r\n    get params(): PoPageBlockedUserReasonParams;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.\r\n     *\r\n     * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.\r\n     *\r\n     * @default `PoPageBlockedUserReason.None`\r\n     */\r\n    set reason(value: PoPageBlockedUserReason);\r\n    get reason(): PoPageBlockedUserReason;\r\n    /**\r\n     * @optional\r\n     *\r\n     * @description\r\n     *\r\n     * URL para a ação de retorno da página.\r\n     *\r\n     * @default `/`\r\n     */\r\n    set urlBack(url: string);\r\n    get urlBack(): string;\r\n}\r\n"]}