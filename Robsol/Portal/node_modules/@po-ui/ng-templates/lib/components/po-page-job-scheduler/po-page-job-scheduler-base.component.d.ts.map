{"version":3,"file":"po-page-job-scheduler-base.component.d.ts","sources":["po-page-job-scheduler-base.component.d.ts"],"names":[],"mappingssourcesContent":["import { AbstractControl } from '@angular/forms';\r\nimport { OnDestroy } from '@angular/core';\r\nimport { PoBreadcrumb, PoDynamicFormField } from '@po-ui/ng-components';\r\nimport { PoJobSchedulerInternal } from './interfaces/po-job-scheduler-internal.interface';\r\nimport { PoPageJobSchedulerService } from './po-page-job-scheduler.service';\r\n/**\r\n * @description\r\n *\r\n * O `po-page-job-scheduler` é uma página para criação e atualização de agendamentos da execução de processos (Job Scheduler),\r\n * como por exemplo: a geração da folha de pagamento dos funcionários.\r\n *\r\n * Para utilizar esta página, basta informar o serviço (endpoint) para consumo,\r\n * sem a necessidade de criar componentes e tratamentos dos dados.\r\n *\r\n * Veja mais sobre os padrões utilizados nas requisições no [Guia de implementação de APIs](guides/api).\r\n */\r\nexport declare class PoPageJobSchedulerBaseComponent implements OnDestroy {\r\n    protected poPageJobSchedulerService: PoPageJobSchedulerService;\r\n    /** Objeto com as propriedades do breadcrumb. */\r\n    breadcrumb?: PoBreadcrumb;\r\n    /**\r\n     * Endpoint usado pelo componente para busca dos processos e parâmetros que serão utilizados para criação e edição dos agendamentos.\r\n     *\r\n     * #### Processos\r\n     *\r\n     * Os processos são as tarefas que estarão disponíveis para o usuário poder fazer os agendamentos.\r\n     * Ao inicializar o componente, será feito uma requisição `GET` para o endpoint `{service-api}/processes`, para buscar\r\n     * essa lista de processos.\r\n     *\r\n     * Este endpoint `{service-api}/processes` deve retornar uma lista de objetos que seguem a definição de dados abaixo:\r\n     *\r\n     * ```\r\n     * GET {service-api}/processes\r\n     * ```\r\n     *\r\n     * ```\r\n     * {\r\n     *   items: [\r\n     *     { \"processID\": \"ac4f\", \"description\": \"Gerar folha de pagamento\" },\r\n     *     { \"processID\": \"df6l\", \"description\": \"Relatório de imposto a recolher\" },\r\n     *     { \"processID\": \"dk3p\", \"description\": \"Títulos em aberto\" },\r\n     *   ]\r\n     * }\r\n     * ```\r\n     *\r\n     * Desta forma será renderizado um componente para selecionar o processo e/ou filtrá-los.\r\n     *\r\n     * Para realizar o filtro de busca do processo, será feita uma requisição enviando o conteúdo digitado na busca através do\r\n     * parâmetro `search`. Da seguinte forma:\r\n     *\r\n     * ```\r\n     * GET {service-api}/processes?search=relatorio\r\n     * ```\r\n     *\r\n     * > Veja mais sobre paginação e filtros no [Guia de implementação de APIs](guides/api).\r\n     * Caso seja informada a propriedade `p-parameters` não serão realizadas as requisições de processos e nem de parametros automaticamente.\r\n     *\r\n     * Também é possível fazer um agendamento de um processo específico, sem que seja necessário um endpoint para busca desses\r\n     * processos. Então, caso o endpoint `{service-api}/processes` não seja válido, será apresentado um campo de entrada de\r\n     * texto para o usuário informar diretamente\r\n     * o **identificador do processo - `processID`** e ao salvar será enviado um `POST` para o endpoint difinido `serviceApi` conforme abaixo:\r\n     *\r\n     * ```\r\n     * POST {service-api}\r\n     * ```\r\n     *\r\n     * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n     *\r\n     * ```\r\n     * {\r\n     *   \"daily\": { \"hour\": 10, \"minute\": 12 },\r\n     *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n     *   \"recurrent\": true,\r\n     *   \"processID\": \"ac0405\"\r\n     *   ...\r\n     * }\r\n     * ```\r\n     *\r\n     * Caso seja necessário informar parâmetros e adicionar configurações no processo selecionado, será realizado um `GET`\r\n     * como exemplificado abaixo. Os parâmetros devem retornar uma lista de objetos que seguem a interface\r\n     * [PoDynamicFormField](/documentation/po-dynamic-form). Porém, caso utilizar a propriedade `p-parameters` o componente não\r\n     * realizará a busca automática e o campo de processos não será exibido.\r\n     *\r\n     * ```\r\n     * GET {service-api}/processes/:id/parameters\r\n     * ...\r\n     * {\r\n     *   items: [\r\n     *     { \"property\": \"vencimento\", type: \"date\" },\r\n     *     { \"property\": \"imposto-retido\", \"label\": \"Imposto Retido\", type: \"boolean\" }\r\n     *   ]\r\n     * }\r\n     * ```\r\n     *\r\n     * #### Salvar e Atualizar\r\n     *\r\n     * Para salvar o agendamento, será feita uma requisição de criação, passando os valores preenchidos pelo usuário via *payload*.\r\n     * Abaixo uma requisição `POST` disparada, onde as propriedades do *Job Scheduler* foram preenchidas:\r\n     *\r\n     * ```\r\n     *  POST {service-api}\r\n     * ```\r\n     *\r\n     * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n     *\r\n     * ```\r\n     * {\r\n     *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n     *   \"recurrent\": true,\r\n     *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\r\n     *   \"processID\": \"ac0405\",\r\n     *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\r\n     * }\r\n     * ```\r\n     *\r\n     * Caso queira que o componente carregue um agendamento já existente, deve ser incluído um parâmetro na rota chamado `id`.\r\n     *\r\n     * Exemplo de configuração de rota:\r\n     *\r\n     * ```\r\n     *  RouterModule.forRoot([\r\n     *    ...\r\n     *    { path: 'edit/:id', component: ExampleJobSchedulerComponent },\r\n     *    ...\r\n     *  ],\r\n     * ```\r\n     *\r\n     * Baseado nisso, na inicialização do template será disparado uma requisição para buscar o recurso que será editado.\r\n     *\r\n     * ```\r\n     * GET {service-api}/{id}\r\n     * ```\r\n     *\r\n     * Ao atualizar o agendamento, será disparado um `PUT` com os dados preenchidos.\r\n     * Veja abaixo uma requisição `PUT` disparada, onde a propriedade *recurrent* e *daily* foram atualizadas:\r\n     *\r\n     * ```\r\n     *  PUT {service-api}/{id}\r\n     * ```\r\n     *\r\n     * *Request payload* - estrutura de dados enviada no corpo da requisição conforme interface `PoJobScheduler`:\r\n     *\r\n     * ```\r\n     * {\r\n     *   \"firstExecution\": \"2018-12-07T00:00:01-00:00\",\r\n     *   \"recurrent\": true,\r\n     *   \"processID\": \"ac0405\",\r\n     *   \"monthly\": { \"day\": 1, \"hour\": 10, \"minute\": 0 },\r\n     *   \"processID\": \"ac0405\",\r\n     *   \"rangeExecutions: { \"frequency\": { \"type\": \"hour\", \"value\": 2 }, \"rangeLimit\": { \"hour\": 18, \"minute\": 0, \"day\": 20 } }\r\n     * }\r\n     * ```\r\n     */\r\n    serviceApi: string;\r\n    /** Título da página. */\r\n    title: string;\r\n    /**\r\n     * Parâmetros que serão utilizados para criação e edição dos agendamentos.\r\n     *\r\n     * Ao utilizar esta propriedade, o componente não buscará automaticamente os parâmetros da API e o campo para preenchimento do processo não será exibido.\r\n     *\r\n     */\r\n    parameters: Array<PoDynamicFormField>;\r\n    set value(value: any);\r\n    model: PoJobSchedulerInternal;\r\n    private _subscription;\r\n    constructor(poPageJobSchedulerService: PoPageJobSchedulerService);\r\n    ngOnDestroy(): void;\r\n    protected loadData(id: string | number): void;\r\n    protected markAsDirtyInvalidControls(controls: {\r\n        [key: string]: AbstractControl;\r\n    }): void;\r\n}\r\n"]}