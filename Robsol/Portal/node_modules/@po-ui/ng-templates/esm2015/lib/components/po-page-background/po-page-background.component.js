import { Component, EventEmitter, Input, Output } from '@angular/core';
import { PoLanguageService, poLanguageDefault } from '@po-ui/ng-components';
import { convertToBoolean, isTypeof } from './../../utils/util';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates
 * de `po-page-login` e demais templates de login.
 */
export class PoPageBackgroundComponent {
    constructor(poLanguageService) {
        this.poLanguageService = poLanguageService;
        /**
         * @optional
         *
         * @description
         *
         * Evento disparado ao selecionar alguma opção no seletor de idiomas.
         * Para este evento será passado como parâmetro o valor de idioma selecionado.
         */
        this.selectedLanguage = new EventEmitter();
        this._showSelectLanguage = false;
    }
    /** Lista de idiomas para o combo box */
    set languagesList(value) {
        this._languagesList = value;
        this.setLanguageOptions();
    }
    get languagesList() {
        var _a;
        if ((_a = this._languagesList) === null || _a === void 0 ? void 0 : _a.length) {
            return this._languagesList;
        }
        return poLanguageDefault;
    }
    /** Caminho para a logomarca localizada na parte superior. */
    set logo(value) {
        this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    get logo() {
        return this._logo;
    }
    /**
     * @optional
     *
     * @description
     *
     * Caminho para a logomarca localizada no rodapé.
     */
    set secondaryLogo(value) {
        this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;
    }
    get secondaryLogo() {
        return this._secondaryLogo;
    }
    /** Define se o seletor de idiomas deve ser exibido. */
    set showSelectLanguage(showSelectLanguage) {
        this._showSelectLanguage = convertToBoolean(showSelectLanguage);
    }
    get showSelectLanguage() {
        return this._showSelectLanguage;
    }
    ngOnInit() {
        this.selectedLanguageOption = this.initialSelectLanguage || this.poLanguageService.getShortLanguage();
    }
    onChangeLanguage() {
        this.selectedLanguage.emit(this.selectedLanguageOption);
    }
    get selectLanguageOptions() {
        return this._selectLanguageOptions;
    }
    setLanguageOptions() {
        this._selectLanguageOptions = this.languagesList.map(language => ({
            label: language.description,
            value: language.language
        }));
    }
}
PoPageBackgroundComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-background',
                template: "<div class=\"po-page-login-container\">\r\n  <div class=\"po-page-login-panel\">\r\n    <img\r\n      *ngIf=\"logo\"\r\n      class=\"po-page-background-main-logo\"\r\n      [class.po-page-background-hide-logo]=\"hideLogo\"\r\n      alt=\"main-logo\"\r\n      [src]=\"logo\"\r\n    />\r\n\r\n    <div class=\"po-page-login-body\">\r\n      <div class=\"po-page-login-panel-content\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n    <div class=\"po-page-background-footer po-sm-12\">\r\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\r\n\r\n      <div class=\"po-page-background-footer-content\">\r\n        <div *ngIf=\"showSelectLanguage\" class=\"po-page-background-footer-select\">\r\n          <po-select\r\n            name=\"selectedLanguageOption\"\r\n            [(ngModel)]=\"selectedLanguageOption\"\r\n            [p-options]=\"selectLanguageOptions\"\r\n            (p-change)=\"onChangeLanguage()\"\r\n          >\r\n          </po-select>\r\n        </div>\r\n\r\n        <div\r\n          class=\"po-page-background-secondary-logo\"\r\n          [ngClass]=\"\r\n            showSelectLanguage\r\n              ? 'po-page-background-secondary-logo-right'\r\n              : 'po-page-background-secondary-logo-centered'\r\n          \"\r\n        >\r\n          <img\r\n            *ngIf=\"secondaryLogo\"\r\n            class=\"po-page-background-secondary-logo-image\"\r\n            alt=\"secondary-logo\"\r\n            [src]=\"secondaryLogo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"background\"\r\n    [ngClass]=\"background ? 'po-page-login-highlight-image' : 'po-page-login-highlight-image-off'\"\r\n    [style.background-image]=\"'url(' + background + ')'\"\r\n  >\r\n    <div class=\"po-page-login-highlight-text\">\r\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
            },] }
];
PoPageBackgroundComponent.ctorParameters = () => [
    { type: PoLanguageService }
];
PoPageBackgroundComponent.propDecorators = {
    background: [{ type: Input, args: ['p-background',] }],
    initialSelectLanguage: [{ type: Input, args: ['p-initial-language',] }],
    hideLogo: [{ type: Input, args: ['p-hide-logo',] }],
    highlightInfo: [{ type: Input, args: ['p-highlight-info',] }],
    selectedLanguage: [{ type: Output, args: ['p-selected-language',] }],
    languagesList: [{ type: Input, args: ['p-languages',] }],
    logo: [{ type: Input, args: ['p-logo',] }],
    secondaryLogo: [{ type: Input, args: ['p-secondary-logo',] }],
    showSelectLanguage: [{ type: Input, args: ['p-show-select-language',] }]
};
//# sourceMappingURL=data:application/json;base64,