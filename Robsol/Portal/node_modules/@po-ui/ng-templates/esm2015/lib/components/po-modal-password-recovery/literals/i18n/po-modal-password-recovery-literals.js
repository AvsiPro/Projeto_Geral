export const poModalPasswordRecoveryLiterals = {
    en: {
        cancelButton: 'Cancel',
        closeButton: 'Close',
        continueButton: 'Continue',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Invalid e-mail format',
        emailSentConfirmationPhrase: `We have sent the instructions and new password creation link to your e-mail.
    If you did not receive it after a few minutes, check your spam box or click Resend.`,
        emailSentTitle: 'E-mail sent',
        forgotPasswordTitle: 'Forgot your password?',
        insertCode: 'Type the code',
        insertEmail: 'Enter your e-mail',
        insertPhone: 'Enter your mobile number',
        phoneErrorMessagePhrase: 'Invalid phone number',
        prepositionIn: 'in',
        prepositionOr: 'or',
        recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',
        resendEmailButton: 'Resend',
        resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',
        sendAgainPhrase: 'If the code does not arrive within a few minutes',
        sendAgain: 'send again.',
        sendButton: 'Submit',
        sentSmsCodePhrase: 'We sent a code for your mobile phone.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',
        supportContact: 'If you do not have access to {0} contact support',
        telephone: 'telephone',
        typeCodeTitle: 'Enter sent code'
    },
    es: {
        cancelButton: 'Cancelar',
        closeButton: 'Cerrar',
        continueButton: 'Continuar',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Formato de correo electrónico no válido',
        emailSentConfirmationPhrase: `Enviamos las instrucciones y enlace de creación de nueva contraseña para su correo electrónico.
    Si no ha recibido después de unos minutos, compruebe su caja de spam o haga clic en Reenviar`,
        emailSentTitle: 'E-mail enviado',
        forgotPasswordTitle: 'Olvidaste tu contraseña?',
        insertCode: 'Introduzca el código',
        insertEmail: 'Introduce tu e-mail',
        insertPhone: 'Introduce tu número de celular',
        phoneErrorMessagePhrase: 'Número de teléfono no válido',
        prepositionIn: 'en',
        prepositionOr: 'u',
        recoveryPasswordPhrase: 'Para recuperar su contraseña vamos a enviar un {0} con instrucciones.',
        resendEmailButton: 'Reenviar',
        resendSmsCodePhrase: 'Si el código no llega dentro de unos minutos, vuelva a enviar.',
        sendAgain: 'envíe de nuevo.',
        sendAgainPhrase: 'Si el código no llega dentro de unos minutos',
        sendButton: 'Enviar',
        sentSmsCodePhrase: 'Enviamos un código para su celular.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Código no válido. Escriba de nuevo o póngase en contacto con el soporte',
        supportContact: 'Si no tiene acceso a {0} póngase en contacto con el soporte',
        telephone: 'teléfono',
        typeCodeTitle: 'Escribir código enviado'
    },
    pt: {
        cancelButton: 'Cancelar',
        closeButton: 'Fechar',
        continueButton: 'Continuar',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Formato de e-mail inválido',
        emailSentConfirmationPhrase: `Enviamos as instruções e link de criação de nova senha para o seu e-mail.
    Caso não tenha recebido após alguns minutos, verifique sua caixa de spam ou clique em Reenviar.`,
        emailSentTitle: 'E-mail enviado',
        forgotPasswordTitle: 'Esqueceu sua senha?',
        insertCode: 'Digite o código',
        insertEmail: 'Insira seu e-mail',
        insertPhone: 'Insira seu número de celular',
        phoneErrorMessagePhrase: 'Número de telefone inválido',
        prepositionIn: 'em',
        prepositionOr: 'ou',
        recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruções.',
        resendEmailButton: 'Reenviar',
        resendSmsCodePhrase: 'Se o código não chegar dentro de alguns minutos envie novamente',
        sendAgain: 'envie novamente.',
        sendAgainPhrase: 'Se o código não chegar dentro de alguns minutos',
        sendButton: 'Enviar',
        sentSmsCodePhrase: 'Enviamos um código para seu celular cadastrado.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Código inválido. Digite novamente ou contacte o suporte',
        supportContact: 'Se não tiver acesso ao {0} contacte o suporte',
        telephone: 'telefone',
        typeCodeTitle: 'Digitar código enviado'
    },
    ru: {
        cancelButton: 'отменить',
        closeButton: 'близко',
        continueButton: 'близко',
        email: 'по электронной почте',
        emailErrorMessagePhrase: 'Неверный формат электронной почты',
        emailSentConfirmationPhrase: `Мы отправили инструкции и новую ссылку для создания пароля для вашей электронной почты.
Если вы не получили его в течение нескольких минут, установите флажок Спам или нажмите Далее.`,
        emailSentTitle: 'Письмо отправлено',
        forgotPasswordTitle: 'Забыли пароль?',
        insertCode: 'Введите код',
        insertEmail: 'Введите адрес электронной почты',
        insertPhone: 'Введите номер вашего мобильного телефона',
        phoneErrorMessagePhrase: 'Неверный номер телефона',
        prepositionIn: 'в',
        prepositionOr: 'или',
        recoveryPasswordPhrase: 'Для восстановления вашего пароля мы вышлем {0} с инструкциями.',
        resendEmailButton: 'Отправить еще раз',
        resendSmsCodePhrase: 'Если код не приходит через несколько минут, попробуйте еще раз.',
        sendAgain: 'отправить снова.',
        sendAgainPhrase: 'Если код не приходит через несколько минут',
        sendButton: 'послать',
        sentSmsCodePhrase: 'Мы отправляем код на ваш зарегистрированный мобильный телефон.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Неверный код. Повторите или обратитесь в службу поддержки',
        supportContact: 'Если у вас нет доступа к {0}, обратитесь в службу поддержки',
        telephone: 'телефон',
        typeCodeTitle: 'Введите отправленный код'
    }
};
//# sourceMappingURL=data:application/json;base64,