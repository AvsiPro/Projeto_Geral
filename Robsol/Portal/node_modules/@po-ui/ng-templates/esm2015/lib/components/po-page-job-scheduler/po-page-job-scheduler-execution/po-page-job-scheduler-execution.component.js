import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { isTypeof } from '../../../utils/util';
import { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';
export class PoPageJobSchedulerExecutionComponent {
    constructor(poPageJobSchedulerService, poPageJobSchedulerLookup) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this.poPageJobSchedulerLookup = poPageJobSchedulerLookup;
        this.isEdit = false;
        this.literals = {};
        this.noParameters = true;
        this.changeProcess = new EventEmitter();
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.frequencyOptions = [];
        this.containsFrequency = false;
        this.frequency = 'hour';
        this._value = {};
    }
    set value(value) {
        this._value = value && isTypeof(value, 'object') ? value : {};
        this.containsFrequency = this._value.frequency && this._value.frequency.value ? true : false;
    }
    get value() {
        return this._value;
    }
    get startDateFirstExecution() {
        return this.isEdit ? undefined : this.minDateFirstExecution;
    }
    get hourLabel() {
        return this.containsFrequency ? this.literals.startTime : this.literals.time;
    }
    get dayLabel() {
        return this.containsFrequency ? this.literals.startDay : this.literals.day;
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.subscribeProcessIdValueChanges();
            if (this.value.periodicity) {
                this.frequencyOptions = this.frequencyOptions.map(frequencyOption => (Object.assign(Object.assign({}, frequencyOption), { disabled: frequencyOption.value === 'day' && this.value.periodicity !== 'monthly' })));
            }
        });
    }
    ngOnInit() {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        if (this.noParameters) {
            this.checkExistsProcessesAPI();
        }
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
        this.frequencyOptions = this.getFrequencyOptions();
    }
    onChangeContainsFrequency(containsFrequency) {
        if (containsFrequency) {
            this.value.frequency = { type: 'hour', value: null };
        }
        else {
            this.value.frequency = {};
        }
        this.value.rangeLimitHour = null;
        this.value.rangeLimitDay = null;
        this.value.dayOfMonth = null;
    }
    onChangePeriodicityOptions(periodicity) {
        this.frequencyOptions = this.frequencyOptions.map(frequencyOption => (Object.assign(Object.assign({}, frequencyOption), { disabled: frequencyOption.value === 'day' && periodicity !== 'monthly' })));
        this.value.frequency.type = null;
    }
    onChangeFrequencyOptions() {
        this.value.rangeLimitHour = null;
    }
    checkExistsProcessesAPI() {
        this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, error => {
            this.existProcessAPI = false;
        });
    }
    getPeriodicityOptions() {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    }
    getFrequencyOptions() {
        return [
            { label: this.literals.day, value: 'day' },
            { label: this.literals.hour, value: 'hour' },
            { label: this.literals.minute, value: 'minute' }
        ];
    }
    getWeekDays() {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    }
    subscribeProcessIdValueChanges() {
        var _a;
        (_a = this.form.controls['processID']) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(processId => {
            this.changeProcess.emit({ processId, existAPI: this.existProcessAPI });
        });
    }
}
PoPageJobSchedulerExecutionComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-page-job-scheduler-execution',
                template: "<form #formExecution=\"ngForm\">\r\n  <div class=\"po-row\">\r\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\r\n  </div>\r\n\r\n  <div class=\"po-row\">\r\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\r\n\r\n    <po-datepicker\r\n      class=\"po-md-4\"\r\n      name=\"firstExecution\"\r\n      [(ngModel)]=\"value.firstExecution\"\r\n      p-placeholder=\"dd/mm/aaaa\"\r\n      p-required\r\n      [p-disabled]=\"isEdit\"\r\n      [p-label]=\"literals.day\"\r\n      [p-min-date]=\"startDateFirstExecution\"\r\n    >\r\n    </po-datepicker>\r\n\r\n    <po-input\r\n      class=\"po-md-2\"\r\n      name=\"firstExecutionHour\"\r\n      [(ngModel)]=\"value.firstExecutionHour\"\r\n      p-mask=\"99:99\"\r\n      p-mask-format-model\r\n      p-placeholder=\"HH:mm\"\r\n      p-required\r\n      [p-disabled]=\"isEdit\"\r\n      [p-label]=\"literals.time\"\r\n      [p-pattern]=\"timePattern\"\r\n    >\r\n    </po-input>\r\n  </div>\r\n\r\n  <hr />\r\n\r\n  <div class=\"po-row\">\r\n    <po-radio-group\r\n      class=\"po-sm-12\"\r\n      name=\"periodicity\"\r\n      [(ngModel)]=\"value.periodicity\"\r\n      p-columns=\"4\"\r\n      p-required\r\n      [p-label]=\"literals.periodicity\"\r\n      [p-options]=\"periodicityOptions\"\r\n      (p-change)=\"onChangePeriodicityOptions($event)\"\r\n    >\r\n    </po-radio-group>\r\n\r\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\r\n      <div class=\"po-row\">\r\n        <po-switch\r\n          class=\"po-md-12\"\r\n          name=\"containsFrequency\"\r\n          [(ngModel)]=\"containsFrequency\"\r\n          [p-label]=\"literals.frequency\"\r\n          [p-label-off]=\"literals.no\"\r\n          [p-label-on]=\"literals.yes\"\r\n          (p-change)=\"onChangeContainsFrequency($event)\"\r\n        >\r\n        </po-switch>\r\n        <ng-container *ngIf=\"containsFrequency\">\r\n          <po-radio-group\r\n            class=\"po-md-10\"\r\n            name=\"frequencyType\"\r\n            p-required\r\n            [(ngModel)]=\"value.frequency.type\"\r\n            [p-columns]=\"3\"\r\n            [p-options]=\"frequencyOptions\"\r\n            (p-change)=\"onChangeFrequencyOptions()\"\r\n          >\r\n          </po-radio-group>\r\n\r\n          <po-number class=\"po-md-2\" name=\"frequencyValue\" p-required [(ngModel)]=\"value.frequency.value\"> </po-number>\r\n        </ng-container>\r\n      </div>\r\n\r\n      <div class=\"po-row\">\r\n        <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\r\n\r\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\r\n      </div>\r\n\r\n      <div class=\"po-row\">\r\n        <po-switch\r\n          class=\"po-md-3\"\r\n          name=\"recurrent\"\r\n          [(ngModel)]=\"value.recurrent\"\r\n          [p-label]=\"literals.recurrent\"\r\n          [p-label-off]=\"literals.no\"\r\n          [p-label-on]=\"literals.yes\"\r\n        >\r\n        </po-switch>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n\r\n  <ng-template #lookupProcessesID>\r\n    <po-lookup\r\n      *ngIf=\"noParameters\"\r\n      class=\"po-md-12\"\r\n      name=\"processID\"\r\n      [(ngModel)]=\"value.processID\"\r\n      p-field-label=\"description\"\r\n      p-field-value=\"processID\"\r\n      p-required\r\n      [p-disabled]=\"isEdit\"\r\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\r\n      [p-label]=\"literals.process\"\r\n      [p-placeholder]=\"literals.enterProcess\"\r\n    >\r\n    </po-lookup>\r\n  </ng-template>\r\n\r\n  <ng-template #inputProcessesID>\r\n    <po-input\r\n      class=\"po-md-12\"\r\n      name=\"processID\"\r\n      [(ngModel)]=\"value.processID\"\r\n      p-required\r\n      [p-disabled]=\"isEdit\"\r\n      [p-label]=\"literals.process\"\r\n      [p-placeholder]=\"literals.enterProcess\"\r\n    >\r\n    </po-input>\r\n  </ng-template>\r\n\r\n  <ng-template #dailyTemplate>\r\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #weeklyTemplate>\r\n    <div class=\"po-row\">\r\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\r\n    </div>\r\n\r\n    <po-checkbox-group\r\n      class=\"po-md-12\"\r\n      name=\"daysOfWeek\"\r\n      [(ngModel)]=\"value.daysOfWeek\"\r\n      p-columns=\"4\"\r\n      p-required\r\n      [p-label]=\"literals.weekDays\"\r\n      [p-options]=\"weekDays\"\r\n    >\r\n    </po-checkbox-group>\r\n  </ng-template>\r\n\r\n  <ng-template #monthlyTemplate>\r\n    <po-number\r\n      class=\"po-md-3\"\r\n      name=\"dayOfMonth\"\r\n      [(ngModel)]=\"value.dayOfMonth\"\r\n      p-required\r\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\r\n      [p-label]=\"dayLabel\"\r\n      [p-max]=\"31\"\r\n      [p-pattern]=\"dayPattern\"\r\n    >\r\n    </po-number>\r\n\r\n    <po-number\r\n      *ngIf=\"containsFrequency\"\r\n      class=\"po-md-3\"\r\n      name=\"rangeLimitDay\"\r\n      [(ngModel)]=\"value.rangeLimitDay\"\r\n      p-required\r\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\r\n      [p-label]=\"literals.endDay\"\r\n      [p-max]=\"31\"\r\n      [p-pattern]=\"dayPattern\"\r\n    >\r\n    </po-number>\r\n\r\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #inputHourTemplate>\r\n    <po-input\r\n      class=\"po-md-2\"\r\n      name=\"hour\"\r\n      [(ngModel)]=\"value.hour\"\r\n      p-mask=\"99:99\"\r\n      p-mask-format-model\r\n      p-placeholder=\"HH:mm\"\r\n      p-required\r\n      [p-label]=\"hourLabel\"\r\n      [p-pattern]=\"timePattern\"\r\n    >\r\n    </po-input>\r\n\r\n    <po-input\r\n      *ngIf=\"containsFrequency && value.frequency.type !== 'day'\"\r\n      class=\"po-md-2\"\r\n      name=\"rangeLimitHour\"\r\n      [(ngModel)]=\"value.rangeLimitHour\"\r\n      p-mask=\"99:99\"\r\n      p-mask-format-model\r\n      p-placeholder=\"HH:mm\"\r\n      p-required\r\n      [p-label]=\"literals.endTime\"\r\n      [p-pattern]=\"timePattern\"\r\n    >\r\n    </po-input>\r\n  </ng-template>\r\n</form>\r\n"
            },] }
];
PoPageJobSchedulerExecutionComponent.ctorParameters = () => [
    { type: PoPageJobSchedulerService },
    { type: PoPageJobSchedulerLookupService }
];
PoPageJobSchedulerExecutionComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['formExecution', { static: true },] }],
    dailyTemplate: [{ type: ViewChild, args: ['dailyTemplate', { static: true },] }],
    monthlyTemplate: [{ type: ViewChild, args: ['monthlyTemplate', { static: true },] }],
    weeklyTempalte: [{ type: ViewChild, args: ['weeklyTemplate', { static: true },] }],
    isEdit: [{ type: Input, args: ['p-is-edit',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    noParameters: [{ type: Input, args: ['p-no-parameters',] }],
    changeProcess: [{ type: Output, args: ['p-change-process',] }],
    value: [{ type: Input, args: ['p-value',] }]
};
//# sourceMappingURL=data:application/json;base64,